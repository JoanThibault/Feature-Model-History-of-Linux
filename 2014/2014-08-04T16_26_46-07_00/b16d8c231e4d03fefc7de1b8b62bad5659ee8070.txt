commit b16d8c231e4d03fefc7de1b8b62bad5659ee8070
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Tue Aug 5 00:12:19 2014 +0100

    x86/efi: Fix 3DNow optimization build failure in EFI stub
    
    Building a 32-bit kernel with CONFIG_X86_USE_3DNOW and CONFIG_EFI_STUB
    leads to the following build error,
    
      drivers/firmware/efi/libstub/lib.a(efi-stub-helper.o): In function `efi_relocate_kernel':
      efi-stub-helper.c:(.text+0xda5): undefined reference to `_mmx_memcpy'
    
    This is due to the fact that the EFI boot stub pulls in the 3DNow
    optimized versions of the memcpy() prototype from
    arch/x86/include/asm/string_32.h, even though the _mmx_memcpy()
    implementation isn't available in the EFI stub.
    
    For now, predicate CONFIG_EFI_STUB on !CONFIG_X86_USE_3DNOW. This is
    most definitely a temporary fix. A complete solution will involve
    selectively including kernel headers/symbols into the early-boot
    execution environment of the EFI boot stub, i.e. something analogous to
    the way that the _SETUP symbol is used.
    
    Previous attempts have been made to fix this kind of problem, though
    none seem to have ever been merged,
    
      http://lkml.kernel.org/r/20120329104822.GA17233@x1.osrc.amd.com
    
    Clearly, this problem has been around for a long time.
    
    Reported-by: Ingo Molnar <mingo@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    Link: http://lkml.kernel.org/r/1407193939-27813-1-git-send-email-matt@console-pimps.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index 801ed36c2e49..7ea8aaaab7fc 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -1536,7 +1536,7 @@ config EFI
 
 config EFI_STUB
        bool "EFI stub support"
-       depends on EFI
+       depends on EFI && !X86_USE_3DNOW
        ---help---
           This kernel feature allows a bzImage to be loaded directly
 	  by EFI firmware without the use of a bootloader.
