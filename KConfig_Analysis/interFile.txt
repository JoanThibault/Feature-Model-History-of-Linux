commit 76b043848fd22dbf7f8bf3a1452f8c70d557b860
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 11 21:46:25 2018 +0000

    x86/retpoline: Add initial retpoline support
    
    Enable the use of -mindirect-branch=thunk-extern in newer GCC, and provide
    the corresponding thunks. Provide assembler macros for invoking the thunks
    in the same way that GCC does, from native and inline assembler.
    
    This adds X86_FEATURE_RETPOLINE and sets it by default on all CPUs. In
    some circumstances, IBRS microcode features may be used instead, and the
    retpoline can be disabled.
    
    On AMD CPUs if lfence is serialising, the retpoline can be dramatically
    simplified to a simple "lfence; jmp *\reg". A future patch, after it has
    been verified that lfence really is serialising in all circumstances, can
    enable this by setting the X86_FEATURE_RETPOLINE_AMD feature bit in addition
    to X86_FEATURE_RETPOLINE.
    
    Do not align the retpoline in the altinstr section, because there is no
    guarantee that it stays aligned when it's copied over the oldinstr during
    alternative patching.
    
    [ Andi Kleen: Rename the macros, add CONFIG_RETPOLINE option, export thunks]
    [ tglx: Put actual function CALL/JMP in front of the macros, convert to
      	symbolic labels ]
    [ dwmw2: Convert back to numeric labels, merge objtool fixes ]
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-4-git-send-email-dwmw@amazon.co.uk

commit 61dc0f555b5c761cdafb0ba5bd41ecf22d68a4c4
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 7 22:48:01 2018 +0100

    x86/cpu: Implement CPU vulnerabilites sysfs functions
    
    Implement the CPU vulnerabilty show functions for meltdown, spectre_v1 and
    spectre_v2.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/20180107214913.177414879@linutronix.de

commit 7bbcbd3d1cdcbacd0f9f8dc4c98d550972f1ca30
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Dec 20 18:02:34 2017 +0100

    x86/Kconfig: Limit NR_CPUS on 32-bit to a sane amount
    
    The recent cpu_entry_area changes fail to compile on 32-bit when BIGSMP=y
    and NR_CPUS=512, because the fixmap area becomes too big.
    
    Limit the number of CPUs with BIGSMP to 64, which is already way to big for
    32-bit, but it's at least a working limitation.
    
    We performed a quick survey of 32-bit-only machines that might be affected
    by this change negatively, but found none.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 2aeb07365bcd489620f71390a7d2031cd4dfb83e
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Wed Nov 15 17:36:35 2017 -0800

    x86/mm/kasan: Don't use vmemmap_populate() to initialize shadow
    
    [ Note, this is a Git cherry-pick of the following commit:
    
        d17a1d97dc20: ("x86/mm/kasan: don't use vmemmap_populate() to initialize shadow")
    
      ... for easier x86 PTI code testing and back-porting. ]
    
    The KASAN shadow is currently mapped using vmemmap_populate() since that
    provides a semi-convenient way to map pages into init_top_pgt.  However,
    since that no longer zeroes the mapped pages, it is not suitable for
    KASAN, which requires zeroed shadow memory.
    
    Add kasan_populate_shadow() interface and use it instead of
    vmemmap_populate().  Besides, this allows us to take advantage of
    gigantic pages and use them to populate the shadow, which should save us
    some memory wasted on page tables and reduce TLB pressure.
    
    Link: http://lkml.kernel.org/r/20171103185147.2688-2-pasha.tatashin@oracle.com
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Steven Sistare <steven.sistare@oracle.com>
    Cc: Daniel Jordan <daniel.m.jordan@oracle.com>
    Cc: Bob Picco <bob.picco@oracle.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit b3d9a136815ca9284ade2a897a3b7d2b0084c33c
Merge: c7da092 e4880bc5
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Nov 7 10:53:06 2017 +0100

    Merge branch 'linus' into x86/asm, to pick up fixes and resolve conflicts
    
    Conflicts:
    	arch/x86/kernel/cpu/Makefile
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 75ec4eb3dc84ee78533bd59bbb71992187bd86fd
Merge: 19c5787 15670bf
Author: Ingo Molnar <mingo@kernel.org>
Date:   Mon Nov 6 09:49:28 2017 +0100

    Merge branch 'x86/mm' into x86/asm, to pick up pending changes
    
    Concentrate x86 MM and asm related changes into a single super-topic,
    in preparation for larger changes.
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit b24413180f5600bcb3bb70fbed5cf186b60864bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:07:57 2017 +0100

    License cleanup: add SPDX GPL-2.0 license identifier to files with no license
    
    Many source files in the tree are missing licensing information, which
    makes it harder for compliance tools to determine the correct license.
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.
    
    Update the files which contain no license information with the 'GPL-2.0'
    SPDX license identifier.  The SPDX identifier is a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.
    
    How this work was done:
    
    Patches were generated and checked against linux-4.14-rc6 for a subset of
    the use cases:
     - file had no licensing information it it.
     - file was a */uapi/* one with no licensing information in it,
     - file was a */uapi/* one with existing licensing information,
    
    Further patches will be generated in subsequent months to fix up cases
    where non-standard license headers were used, and references to license
    had to be inferred by heuristics based on keywords.
    
    The analysis to determine which SPDX License Identifier to be applied to
    a file was done in a spreadsheet of side by side results from of the
    output of two independent scanners (ScanCode & Windriver) producing SPDX
    tag:value files created by Philippe Ombredanne.  Philippe prepared the
    base worksheet, and did an initial spot review of a few 1000 files.
    
    The 4.13 kernel was the starting point of the analysis with 60,537 files
    assessed.  Kate Stewart did a file by file comparison of the scanner
    results in the spreadsheet to determine which SPDX license identifier(s)
    to be applied to the file. She confirmed any determination that was not
    immediately clear with lawyers working with the Linux Foundation.
    
    Criteria used to select files for SPDX license identifier tagging was:
     - Files considered eligible had to be source code files.
     - Make and config files were included as candidates if they contained >5
       lines of source
     - File already had some variant of a license header in it (even if <5
       lines).
    
    All documentation files were explicitly excluded.
    
    The following heuristics were used to determine which SPDX license
    identifiers to apply.
    
     - when both scanners couldn't find any license traces, file was
       considered to have no license information in it, and the top level
       COPYING file license applied.
    
       For non */uapi/* files that summary was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0                                              11139
    
       and resulted in the first patch in this series.
    
       If that file was a */uapi/* path one, it was "GPL-2.0 WITH
       Linux-syscall-note" otherwise it was "GPL-2.0".  Results of that was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0 WITH Linux-syscall-note                        930
    
       and resulted in the second patch in this series.
    
     - if a file had some form of licensing information in it, and was one
       of the */uapi/* ones, it was denoted with the Linux-syscall-note if
       any GPL family license was found in the file or had no licensing in
       it (per prior point).  Results summary:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|------
       GPL-2.0 WITH Linux-syscall-note                       270
       GPL-2.0+ WITH Linux-syscall-note                      169
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-2-Clause)    21
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause)    17
       LGPL-2.1+ WITH Linux-syscall-note                      15
       GPL-1.0+ WITH Linux-syscall-note                       14
       ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause)    5
       LGPL-2.0+ WITH Linux-syscall-note                       4
       LGPL-2.1 WITH Linux-syscall-note                        3
       ((GPL-2.0 WITH Linux-syscall-note) OR MIT)              3
       ((GPL-2.0 WITH Linux-syscall-note) AND MIT)             1
    
       and that resulted in the third patch in this series.
    
     - when the two scanners agreed on the detected license(s), that became
       the concluded license(s).
    
     - when there was disagreement between the two scanners (one detected a
       license but the other didn't, or they both detected different
       licenses) a manual inspection of the file occurred.
    
     - In most cases a manual inspection of the information in the file
       resulted in a clear resolution of the license that should apply (and
       which scanner probably needed to revisit its heuristics).
    
     - When it was not immediately clear, the license identifier was
       confirmed with lawyers working with the Linux Foundation.
    
     - If there was any question as to the appropriate license identifier,
       the file was flagged for further research and to be revisited later
       in time.
    
    In total, over 70 hours of logged manual review was done on the
    spreadsheet to determine the SPDX license identifiers to apply to the
    source files by Kate, Philippe, Thomas and, in some cases, confirmation
    by lawyers working with the Linux Foundation.
    
    Kate also obtained a third independent scan of the 4.13 code base from
    FOSSology, and compared selected files where the other two scanners
    disagreed against that SPDX file, to see if there was new insights.  The
    Windriver scanner is based on an older version of FOSSology in part, so
    they are related.
    
    Thomas did random spot checks in about 500 files from the spreadsheets
    for the uapi headers and agreed with SPDX license identifier in the
    files he inspected. For the non-uapi files Thomas did random spot checks
    in about 15000 files.
    
    In initial set of patches against 4.14-rc6, 3 files were found to have
    copy/paste license identifier errors, and have been fixed to reflect the
    correct identifier.
    
    Additionally Philippe spent 10 hours this week doing a detailed manual
    inspection and review of the 12,461 patched files from the initial patch
    version early this week with:
     - a full scancode scan run, collecting the matched texts, detected
       license ids and scores
     - reviewing anything where there was a license detected (about 500+
       files) to ensure that the applied SPDX license was correct
     - reviewing anything where there was no detection but the patch license
       was not GPL-2.0 WITH Linux-syscall-note to ensure that the applied
       SPDX license was correct
    
    This produced a worksheet with 20 files needing minor correction.  This
    worksheet was then exported into 3 different .csv files for the
    different types of files to be modified.
    
    These .csv files were then reviewed by Greg.  Thomas wrote a script to
    parse the csv files and add the proper SPDX tag to the file, in the
    format that the file expected.  This script was further refined by Greg
    based on the output to detect more types of files automatically and to
    distinguish between header and source .c files (which need different
    comment types.)  Finally Greg ran the script using the .csv files to
    generate the patches.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12a8cc7fcf54a8575f094be1e99032ec38aa045c
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Fri Sep 29 17:08:18 2017 +0300

    x86/kasan: Use the same shadow offset for 4- and 5-level paging
    
    We are going to support boot-time switching between 4- and 5-level
    paging. For KASAN it means we cannot have different KASAN_SHADOW_OFFSET
    for different paging modes: the constant is passed to gcc to generate
    code and cannot be changed at runtime.
    
    This patch changes KASAN code to use 0xdffffc0000000000 as shadow offset
    for both 4- and 5-level paging.
    
    For 5-level paging it means that shadow memory region is not aligned to
    PGD boundary anymore and we have to handle unaligned parts of the region
    properly.
    
    In addition, we have to exclude paravirt code from KASAN instrumentation
    as we now use set_pgd() before KASAN is fully ready.
    
    [kirill.shutemov@linux.intel.com: clenaup, changelog message]
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20170929140821.37654-4-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 11af847446ed0d131cf24d16a7ef3d5ea7a49554
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Fri Oct 13 15:02:00 2017 -0500

    x86/unwind: Rename unwinder config options to 'CONFIG_UNWINDER_*'
    
    Rename the unwinder config options from:
    
      CONFIG_ORC_UNWINDER
      CONFIG_FRAME_POINTER_UNWINDER
      CONFIG_GUESS_UNWINDER
    
    to:
    
      CONFIG_UNWINDER_ORC
      CONFIG_UNWINDER_FRAME_POINTER
      CONFIG_UNWINDER_GUESS
    
    ... in order to give them a more logical config namespace.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/73972fc7e2762e91912c6b9584582703d6f1b8cc.1507924831.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 89fd915c402113528750353ad6de9ea68a787e5c
Merge: 66c9457 04c3c98
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 11 13:10:57 2017 -0700

    Merge tag 'libnvdimm-for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm
    
    Pull libnvdimm from Dan Williams:
     "A rework of media error handling in the BTT driver and other updates.
      It has appeared in a few -next releases and collected some late-
      breaking build-error and warning fixups as a result.
    
      Summary:
    
       - Media error handling support in the Block Translation Table (BTT)
         driver is reworked to address sleeping-while-atomic locking and
         memory-allocation-context conflicts.
    
       - The dax_device lookup overhead for xfs and ext4 is moved out of the
         iomap hot-path to a mount-time lookup.
    
       - A new 'ecc_unit_size' sysfs attribute is added to advertise the
         read-modify-write boundary property of a persistent memory range.
    
       - Preparatory fix-ups for arm and powerpc pmem support are included
         along with other miscellaneous fixes"
    
    * tag 'libnvdimm-for-4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm: (26 commits)
      libnvdimm, btt: fix format string warnings
      libnvdimm, btt: clean up warning and error messages
      ext4: fix null pointer dereference on sbi
      libnvdimm, nfit: move the check on nd_reserved2 to the endpoint
      dax: fix FS_DAX=n BLOCK=y compilation
      libnvdimm: fix integer overflow static analysis warning
      libnvdimm, nd_blk: remove mmio_flush_range()
      libnvdimm, btt: rework error clearing
      libnvdimm: fix potential deadlock while clearing errors
      libnvdimm, btt: cache sector_size in arena_info
      libnvdimm, btt: ensure that flags were also unchanged during a map_read
      libnvdimm, btt: refactor map entry operations with macros
      libnvdimm, btt: fix a missed NVDIMM_IO_ATOMIC case in the write path
      libnvdimm, nfit: export an 'ecc_unit_size' sysfs attribute
      ext4: perform dax_device lookup at mount
      ext2: perform dax_device lookup at mount
      xfs: perform dax_device lookup at mount
      dax: introduce a fs_dax_get_by_bdev() helper
      libnvdimm, btt: check memory allocation failure
      libnvdimm, label: fix index block size calculation
      ...

commit 3072e413e305e353cd4654f8a57d953b66e85bf3
Author: Michal Hocko <mhocko@suse.com>
Date:   Fri Sep 8 16:11:39 2017 -0700

    mm/memory_hotplug: introduce add_pages
    
    There are new users of memory hotplug emerging.  Some of them require
    different subset of arch_add_memory.  There are some which only require
    allocation of struct pages without mapping those pages to the kernel
    address space.  We currently have __add_pages for that purpose.  But this
    is rather lowlevel and not very suitable for the code outside of the
    memory hotplug.  E.g.  x86_64 wants to update max_pfn which should be done
    by the caller.  Introduce add_pages() which should care about those
    details if they are needed.  Each architecture should define its
    implementation and select CONFIG_ARCH_HAS_ADD_PAGES.  All others use the
    currently existing __add_pages.
    
    Link: http://lkml.kernel.org/r/20170817000548.32038-7-jglisse@redhat.com
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Jérôme Glisse <jglisse@redhat.com>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Cc: Aneesh Kumar <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: David Nellans <dnellans@nvidia.com>
    Cc: Evgeny Baskakov <ebaskakov@nvidia.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Mark Hairgrove <mhairgrove@nvidia.com>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Cc: Sherry Cheung <SCheung@nvidia.com>
    Cc: Subhash Gutti <sgutti@nvidia.com>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Bob Liu <liubo95@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 9c670ea37947a82cb6d4df69139f7e46ed71a0ac
Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
Date:   Fri Sep 8 16:10:53 2017 -0700

    mm: thp: introduce CONFIG_ARCH_ENABLE_THP_MIGRATION
    
    Introduce CONFIG_ARCH_ENABLE_THP_MIGRATION to limit thp migration
    functionality to x86_64, which should be safer at the first step.
    
    Link: http://lkml.kernel.org/r/20170717193955.20207-5-zi.yan@sent.com
    Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Signed-off-by: Zi Yan <zi.yan@cs.rutgers.edu>
    Reviewed-by: Anshuman Khandual <khandual@linux.vnet.ibm.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: David Nellans <dnellans@nvidia.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit df3735c5b40fad8d0d28eb8ab065fe955b3347ee
Author: Rik van Riel <riel@redhat.com>
Date:   Wed Sep 6 16:25:11 2017 -0700

    x86,mpx: make mpx depend on x86-64 to free up VMA flag
    
    Patch series "mm,fork,security: introduce MADV_WIPEONFORK", v4.
    
    If a child process accesses memory that was MADV_WIPEONFORK, it will get
    zeroes.  The address ranges are still valid, they are just empty.
    
    If a child process accesses memory that was MADV_DONTFORK, it will get a
    segmentation fault, since those address ranges are no longer valid in
    the child after fork.
    
    Since MADV_DONTFORK also seems to be used to allow very large programs
    to fork in systems with strict memory overcommit restrictions, changing
    the semantics of MADV_DONTFORK might break existing programs.
    
    The use case is libraries that store or cache information, and want to
    know that they need to regenerate it in the child process after fork.
    
    Examples of this would be:
     - systemd/pulseaudio API checks (fail after fork) (replacing a getpid
       check, which is too slow without a PID cache)
     - PKCS#11 API reinitialization check (mandated by specification)
     - glibc's upcoming PRNG (reseed after fork)
     - OpenSSL PRNG (reseed after fork)
    
    The security benefits of a forking server having a re-inialized PRNG in
    every child process are pretty obvious.  However, due to libraries
    having all kinds of internal state, and programs getting compiled with
    many different versions of each library, it is unreasonable to expect
    calling programs to re-initialize everything manually after fork.
    
    A further complication is the proliferation of clone flags, programs
    bypassing glibc's functions to call clone directly, and programs calling
    unshare, causing the glibc pthread_atfork hook to not get called.
    
    It would be better to have the kernel take care of this automatically.
    
    The patchset also adds MADV_KEEPONFORK, to undo the effects of a prior
    MADV_WIPEONFORK.
    
    This is similar to the OpenBSD minherit syscall with MAP_INHERIT_ZERO:
    
        https://man.openbsd.org/minherit.2
    
    This patch (of 2):
    
    MPX only seems to be available on 64 bit CPUs, starting with Skylake and
    Goldmont.  Move VM_MPX into the 64 bit only portion of vma->vm_flags, in
    order to free up a VMA flag.
    
    Link: http://lkml.kernel.org/r/20170811212829.29186-2-riel@redhat.com
    Signed-off-by: Rik van Riel <riel@redhat.com>
    Acked-by: Dave Hansen <dave.hansen@intel.com>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Florian Weimer <fweimer@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Will Drewry <wad@chromium.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: "Kirill A. Shutemov" <kirill@shutemov.name>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Colm MacCártaigh <colm@allcosts.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit f57091767add2b79d76aac41b83b192d8ba1dce7
Merge: d725c7a d56593e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 4 13:56:37 2017 -0700

    Merge branch 'x86-cache-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 cache quality monitoring update from Thomas Gleixner:
     "This update provides a complete rewrite of the Cache Quality
      Monitoring (CQM) facility.
    
      The existing CQM support was duct taped into perf with a lot of issues
      and the attempts to fix those turned out to be incomplete and
      horrible.
    
      After lengthy discussions it was decided to integrate the CQM support
      into the Resource Director Technology (RDT) facility, which is the
      obvious choise as in hardware CQM is part of RDT. This allowed to add
      Memory Bandwidth Monitoring support on top.
    
      As a result the mechanisms for allocating cache/memory bandwidth and
      the corresponding monitoring mechanisms are integrated into a single
      management facility with a consistent user interface"
    
    * 'x86-cache-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (37 commits)
      x86/intel_rdt: Turn off most RDT features on Skylake
      x86/intel_rdt: Add command line options for resource director technology
      x86/intel_rdt: Move special case code for Haswell to a quirk function
      x86/intel_rdt: Remove redundant ternary operator on return
      x86/intel_rdt/cqm: Improve limbo list processing
      x86/intel_rdt/mbm: Fix MBM overflow handler during CPU hotplug
      x86/intel_rdt: Modify the intel_pqr_state for better performance
      x86/intel_rdt/cqm: Clear the default RMID during hotcpu
      x86/intel_rdt: Show bitmask of shareable resource with other executing units
      x86/intel_rdt/mbm: Handle counter overflow
      x86/intel_rdt/mbm: Add mbm counter initialization
      x86/intel_rdt/mbm: Basic counting of MBM events (total and local)
      x86/intel_rdt/cqm: Add CPU hotplug support
      x86/intel_rdt/cqm: Add sched_in support
      x86/intel_rdt: Introduce rdt_enable_key for scheduling
      x86/intel_rdt/cqm: Add mount,umount support
      x86/intel_rdt/cqm: Add rmdir support
      x86/intel_rdt: Separate the ctrl bits from rmdir
      x86/intel_rdt/cqm: Add mon_data
      x86/intel_rdt: Prepare for RDT monitor data support
      ...

commit b1b6f83ac938d176742c85757960dec2cf10e468
Merge: 5f82e71 9e52fc2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 4 12:21:28 2017 -0700

    Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 mm changes from Ingo Molnar:
     "PCID support, 5-level paging support, Secure Memory Encryption support
    
      The main changes in this cycle are support for three new, complex
      hardware features of x86 CPUs:
    
       - Add 5-level paging support, which is a new hardware feature on
         upcoming Intel CPUs allowing up to 128 PB of virtual address space
         and 4 PB of physical RAM space - a 512-fold increase over the old
         limits. (Supercomputers of the future forecasting hurricanes on an
         ever warming planet can certainly make good use of more RAM.)
    
         Many of the necessary changes went upstream in previous cycles,
         v4.14 is the first kernel that can enable 5-level paging.
    
         This feature is activated via CONFIG_X86_5LEVEL=y - disabled by
         default.
    
         (By Kirill A. Shutemov)
    
       - Add 'encrypted memory' support, which is a new hardware feature on
         upcoming AMD CPUs ('Secure Memory Encryption', SME) allowing system
         RAM to be encrypted and decrypted (mostly) transparently by the
         CPU, with a little help from the kernel to transition to/from
         encrypted RAM. Such RAM should be more secure against various
         attacks like RAM access via the memory bus and should make the
         radio signature of memory bus traffic harder to intercept (and
         decrypt) as well.
    
         This feature is activated via CONFIG_AMD_MEM_ENCRYPT=y - disabled
         by default.
    
         (By Tom Lendacky)
    
       - Enable PCID optimized TLB flushing on newer Intel CPUs: PCID is a
         hardware feature that attaches an address space tag to TLB entries
         and thus allows to skip TLB flushing in many cases, even if we
         switch mm's.
    
         (By Andy Lutomirski)
    
      All three of these features were in the works for a long time, and
      it's coincidence of the three independent development paths that they
      are all enabled in v4.14 at once"
    
    * 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (65 commits)
      x86/mm: Enable RCU based page table freeing (CONFIG_HAVE_RCU_TABLE_FREE=y)
      x86/mm: Use pr_cont() in dump_pagetable()
      x86/mm: Fix SME encryption stack ptr handling
      kvm/x86: Avoid clearing the C-bit in rsvd_bits()
      x86/CPU: Align CR3 defines
      x86/mm, mm/hwpoison: Clear PRESENT bit for kernel 1:1 mappings of poison pages
      acpi, x86/mm: Remove encryption mask from ACPI page protection type
      x86/mm, kexec: Fix memory corruption with SME on successive kexecs
      x86/mm/pkeys: Fix typo in Documentation/x86/protection-keys.txt
      x86/mm/dump_pagetables: Speed up page tables dump for CONFIG_KASAN=y
      x86/mm: Implement PCID based optimization: try to preserve old TLB entries using PCID
      x86: Enable 5-level paging support via CONFIG_X86_5LEVEL=y
      x86/mm: Allow userspace have mappings above 47-bit
      x86/mm: Prepare to expose larger address space to userspace
      x86/mpx: Do not allow MPX if we have mappings above 47-bit
      x86/mm: Rename tasksize_32bit/64bit to task_size_32bit/64bit()
      x86/xen: Redefine XEN_ELFNOTE_INIT_P2M using PUD_SIZE * PTRS_PER_PUD
      x86/mm/dump_pagetables: Fix printout of p4d level
      x86/mm/dump_pagetables: Generalize address normalization
      x86/boot: Fix memremap() related build failure
      ...

commit 5f82e71a001d14824a7728ad9e49f6aea420f161
Merge: 6c51e67 edc2988
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 4 11:52:29 2017 -0700

    Merge branch 'locking-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull locking updates from Ingo Molnar:
    
     - Add 'cross-release' support to lockdep, which allows APIs like
       completions, where it's not the 'owner' who releases the lock, to be
       tracked. It's all activated automatically under
       CONFIG_PROVE_LOCKING=y.
    
     - Clean up (restructure) the x86 atomics op implementation to be more
       readable, in preparation of KASAN annotations. (Dmitry Vyukov)
    
     - Fix static keys (Paolo Bonzini)
    
     - Add killable versions of down_read() et al (Kirill Tkhai)
    
     - Rework and fix jump_label locking (Marc Zyngier, Paolo Bonzini)
    
     - Rework (and fix) tlb_flush_pending() barriers (Peter Zijlstra)
    
     - Remove smp_mb__before_spinlock() and convert its usages, introduce
       smp_mb__after_spinlock() (Peter Zijlstra)
    
    * 'locking-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (56 commits)
      locking/lockdep/selftests: Fix mixed read-write ABBA tests
      sched/completion: Avoid unnecessary stack allocation for COMPLETION_INITIALIZER_ONSTACK()
      acpi/nfit: Fix COMPLETION_INITIALIZER_ONSTACK() abuse
      locking/pvqspinlock: Relax cmpxchg's to improve performance on some architectures
      smp: Avoid using two cache lines for struct call_single_data
      locking/lockdep: Untangle xhlock history save/restore from task independence
      locking/refcounts, x86/asm: Disable CONFIG_ARCH_HAS_REFCOUNT for the time being
      futex: Remove duplicated code and fix undefined behaviour
      Documentation/locking/atomic: Finish the document...
      locking/lockdep: Fix workqueue crossrelease annotation
      workqueue/lockdep: 'Fix' flush_work() annotation
      locking/lockdep/selftests: Add mixed read-write ABBA tests
      mm, locking/barriers: Clarify tlb_flush_pending() barriers
      locking/lockdep: Make CONFIG_LOCKDEP_CROSSRELEASE and CONFIG_LOCKDEP_COMPLETIONS truly non-interactive
      locking/lockdep: Explicitly initialize wq_barrier::done::map
      locking/lockdep: Rename CONFIG_LOCKDEP_COMPLETE to CONFIG_LOCKDEP_COMPLETIONS
      locking/lockdep: Reword title of LOCKDEP_CROSSRELEASE config
      locking/lockdep: Make CONFIG_LOCKDEP_CROSSRELEASE part of CONFIG_PROVE_LOCKING
      locking/refcounts, x86/asm: Implement fast refcount overflow protection
      locking/lockdep: Fix the rollback and overwrite detection logic in crossrelease
      ...

commit b0c79f49c343cda8954b3322984c32f258ca4ccb
Merge: f213a6c dd88a0a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 4 09:52:57 2017 -0700

    Merge branch 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 asm updates from Ingo Molnar:
    
     - Introduce the ORC unwinder, which can be enabled via
       CONFIG_ORC_UNWINDER=y.
    
       The ORC unwinder is a lightweight, Linux kernel specific debuginfo
       implementation, which aims to be DWARF done right for unwinding.
       Objtool is used to generate the ORC unwinder tables during build, so
       the data format is flexible and kernel internal: there's no
       dependency on debuginfo created by an external toolchain.
    
       The ORC unwinder is almost two orders of magnitude faster than the
       (out of tree) DWARF unwinder - which is important for perf call graph
       profiling. It is also significantly simpler and is coded defensively:
       there has not been a single ORC related kernel crash so far, even
       with early versions. (knock on wood!)
    
       But the main advantage is that enabling the ORC unwinder allows
       CONFIG_FRAME_POINTERS to be turned off - which speeds up the kernel
       measurably:
    
       With frame pointers disabled, GCC does not have to add frame pointer
       instrumentation code to every function in the kernel. The kernel's
       .text size decreases by about 3.2%, resulting in better cache
       utilization and fewer instructions executed, resulting in a broad
       kernel-wide speedup. Average speedup of system calls should be
       roughly in the 1-3% range - measurements by Mel Gorman [1] have shown
       a speedup of 5-10% for some function execution intense workloads.
    
       The main cost of the unwinder is that the unwinder data has to be
       stored in RAM: the memory cost is 2-4MB of RAM, depending on kernel
       config - which is a modest cost on modern x86 systems.
    
       Given how young the ORC unwinder code is it's not enabled by default
       - but given the performance advantages the plan is to eventually make
       it the default unwinder on x86.
    
       See Documentation/x86/orc-unwinder.txt for more details.
    
     - Remove lguest support: its intended role was that of a temporary
       proof of concept for virtualization, plus its removal will enable the
       reduction (removal) of the paravirt API as well, so Rusty agreed to
       its removal. (Juergen Gross)
    
     - Clean up and fix FSGS related functionality (Andy Lutomirski)
    
     - Clean up IO access APIs (Andy Shevchenko)
    
     - Enhance the symbol namespace (Jiri Slaby)
    
    * 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (47 commits)
      objtool: Handle GCC stack pointer adjustment bug
      x86/entry/64: Use ENTRY() instead of ALIGN+GLOBAL for stub32_clone()
      x86/fpu/math-emu: Add ENDPROC to functions
      x86/boot/64: Extract efi_pe_entry() from startup_64()
      x86/boot/32: Extract efi_pe_entry() from startup_32()
      x86/lguest: Remove lguest support
      x86/paravirt/xen: Remove xen_patch()
      objtool: Fix objtool fallthrough detection with function padding
      x86/xen/64: Fix the reported SS and CS in SYSCALL
      objtool: Track DRAP separately from callee-saved registers
      objtool: Fix validate_branch() return codes
      x86: Clarify/fix no-op barriers for text_poke_bp()
      x86/switch_to/64: Rewrite FS/GS switching yet again to fix AMD CPUs
      selftests/x86/fsgsbase: Test selectors 1, 2, and 3
      x86/fsgsbase/64: Report FSBASE and GSBASE correctly in core dumps
      x86/fsgsbase/64: Fully initialize FS and GS state in start_thread_common
      x86/asm: Fix UNWIND_HINT_REGS macro for older binutils
      x86/asm/32: Fix regs_get_register() on segment registers
      x86/xen/64: Rearrange the SYSCALL entries
      x86/asm/32: Remove a bunch of '& 0xffff' from pt_regs segment reads
      ...

commit 8f98ae0c9b90bb46097e4f28e81e9ae6148e5694
Merge: 58738c4 5e40559
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Aug 31 16:25:59 2017 -0700

    Merge branch 'for-4.14/fs' into libnvdimm-for-next

commit 5deb67f77a266010e2c10fb124b7516d0d258ce8
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Thu Aug 31 12:27:09 2017 +0100

    libnvdimm, nd_blk: remove mmio_flush_range()
    
    mmio_flush_range() suffers from a lack of clearly-defined semantics,
    and is somewhat ambiguous to port to other architectures where the
    scope of the writeback implied by "flush" and ordering might matter,
    but MMIO would tend to imply non-cacheable anyway. Per the rationale
    in 67a3e8fe9015 ("nd_blk: change aperture mapping from WC to WB"), the
    only existing use is actually to invalidate clean cache lines for
    ARCH_MEMREMAP_PMEM type mappings *without* writeback. Since the recent
    cleanup of the pmem API, that also now happens to be the exact purpose
    of arch_invalidate_pmem(), which would be a far more well-defined tool
    for the job.
    
    Rather than risk potentially inconsistent implementations of
    mmio_flush_range() for the sake of one callsite, streamline things by
    removing it entirely and instead move the ARCH_MEMREMAP_PMEM related
    definitions up to the libnvdimm level, so they can be shared by NFIT
    as well. This allows NFIT to be enabled for arm64.
    
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>

commit 9e52fc2b50de3a1c08b44f94c610fbe998c0031a
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Mon Aug 28 10:22:51 2017 +0200

    x86/mm: Enable RCU based page table freeing (CONFIG_HAVE_RCU_TABLE_FREE=y)
    
    There's a subtle bug in how some of the paravirt guest code handles
    page table freeing on x86:
    
    On x86 software page table walkers depend on the fact that remote TLB flush
    does an IPI: walk is performed lockless but with interrupts disabled and in
    case the page table is freed the freeing CPU will get blocked as remote TLB
    flush is required. On other architectures which don't require an IPI to do
    remote TLB flush we have an RCU-based mechanism (see
    include/asm-generic/tlb.h for more details).
    
    In virtualized environments we may want to override the ->flush_tlb_others
    callback in pv_mmu_ops and use a hypercall asking the hypervisor to do a
    remote TLB flush for us. This breaks the assumption about IPIs. Xen PV has
    been doing this for years and the upcoming remote TLB flush for Hyper-V will
    do it too.
    
    This is not safe, as software page table walkers may step on an already
    freed page.
    
    Fix the bug by enabling the RCU-based page table freeing mechanism,
    CONFIG_HAVE_RCU_TABLE_FREE=y.
    
    Testing with kernbench and mmap/munmap microbenchmarks, and neither showed
    any noticeable performance impact.
    
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Acked-by: Juergen Gross <jgross@suse.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Cooper <andrew.cooper3@citrix.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Jork Loeser <Jork.Loeser@microsoft.com>
    Cc: KY Srinivasan <kys@microsoft.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: xen-devel@lists.xenproject.org
    Link: http://lkml.kernel.org/r/20170828082251.5562-1-vkuznets@redhat.com
    [ Rewrote/fixed/clarified the changelog. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 7b3d61cc73a1abe4c2c7eaf00093b338c8b233b0
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Aug 29 13:10:35 2017 +0200

    locking/refcounts, x86/asm: Disable CONFIG_ARCH_HAS_REFCOUNT for the time being
    
    Mike Galbraith bisected a boot crash back to the following commit:
    
      7a46ec0e2f48 ("locking/refcounts, x86/asm: Implement fast refcount overflow protection")
    
    The crash/hang pattern is:
    
     > Symptom is a few splats as below, with box finally hanging.  Network
     > comes up, but neither ssh nor console login is possible.
     >
     >  ------------[ cut here ]------------
     >  WARNING: CPU: 4 PID: 0 at net/netlink/af_netlink.c:374 netlink_sock_destruct+0x82/0xa0
     >  ...
     >  __sk_destruct()
     >  rcu_process_callbacks()
     >  __do_softirq()
     >  irq_exit()
     >  smp_apic_timer_interrupt()
     >  apic_timer_interrupt()
    
    We are at -rc7 already, and the code has grown some dependencies, so
    instead of a plain revert disable the config temporarily, in the hope
    of getting real fixes.
    
    Reported-by: Mike Galbraith <efault@gmx.de>
    Tested-by: Mike Galbraith <efault@gmx.de>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Elena Reshetova <elena.reshetova@intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/tip-7a46ec0e2f4850407de5e1d19a44edee6efa58ec@git.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 413d63d71b222108d19703f3fd5cf9108652a730
Merge: d6c8103 90a6cd5
Author: Ingo Molnar <mingo@kernel.org>
Date:   Sat Aug 26 09:19:13 2017 +0200

    Merge branch 'linus' into x86/mm to pick up fixes and to fix conflicts
    
    Conflicts:
    	arch/x86/kernel/head64.c
    	arch/x86/mm/mmap.c
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 10c9850cb2ced2ce528e5b692c639974213a64ec
Merge: 0c23647 90a6cd5
Author: Ingo Molnar <mingo@kernel.org>
Date:   Fri Aug 25 11:04:51 2017 +0200

    Merge branch 'linus' into locking/core, to pick up fixes
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit ecda85e70277ef24e44a1f6bc00243cebd19f985
Author: Juergen Gross <jgross@suse.com>
Date:   Wed Aug 16 19:31:57 2017 +0200

    x86/lguest: Remove lguest support
    
    Lguest seems to be rather unused these days. It has seen only patches
    ensuring it still builds the last two years and its official state is
    "Odd Fixes".
    
    Remove it in order to be able to clean up the paravirt code.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Acked-by: Rusty Russell <rusty@rustcorp.com.au>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: boris.ostrovsky@oracle.com
    Cc: lguest@lists.ozlabs.org
    Cc: rusty@rustcorp.com.au
    Cc: xen-devel@lists.xenproject.org
    Link: http://lkml.kernel.org/r/20170816173157.8633-3-jgross@suse.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit e18a5ebc2d507f42ca724581a1039ba058fa12da
Merge: 58d4e45 7edaeb6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Aug 20 08:54:30 2017 -0700

    Merge branch 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull watchdog fix from Thomas Gleixner:
     "A fix for the hardlockup watchdog to prevent false positives with
      extreme Turbo-Modes which make the perf/NMI watchdog fire faster than
      the hrtimer which is used to verify.
    
      Slightly larger than the minimal fix, which just would increase the
      hrtimer frequency, but comes with extra overhead of more watchdog
      timer interrupts and thread wakeups for all users.
    
      With this change we restrict the overhead to the extreme Turbo-Mode
      systems"
    
    * 'core-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      kernel/watchdog: Prevent false positives with turbo modes

commit 92e5aae457787d0bc6b255200d2fb116edf69794
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Aug 18 15:15:51 2017 -0700

    kernel/watchdog: fix Kconfig constraints for perf hardlockup watchdog
    
    Commit 05a4a9527931 ("kernel/watchdog: split up config options") lost
    the perf-based hardlockup detector's dependency on PERF_EVENTS, which
    can result in broken builds with some powerpc configurations.
    
    Restore the dependency.  Add it in for x86 too, despite x86 always
    selecting PERF_EVENTS it seems reasonable to make the dependency
    explicit.
    
    Link: http://lkml.kernel.org/r/20170810114452.6673-1-npiggin@gmail.com
    Fixes: 05a4a9527931 ("kernel/watchdog: split up config options")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Acked-by: Don Zickus <dzickus@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 7edaeb6841dfb27e362288ab8466ebdc4972e867
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Aug 15 09:50:13 2017 +0200

    kernel/watchdog: Prevent false positives with turbo modes
    
    The hardlockup detector on x86 uses a performance counter based on unhalted
    CPU cycles and a periodic hrtimer. The hrtimer period is about 2/5 of the
    performance counter period, so the hrtimer should fire 2-3 times before the
    performance counter NMI fires. The NMI code checks whether the hrtimer
    fired since the last invocation. If not, it assumess a hard lockup.
    
    The calculation of those periods is based on the nominal CPU
    frequency. Turbo modes increase the CPU clock frequency and therefore
    shorten the period of the perf/NMI watchdog. With extreme Turbo-modes (3x
    nominal frequency) the perf/NMI period is shorter than the hrtimer period
    which leads to false positives.
    
    A simple fix would be to shorten the hrtimer period, but that comes with
    the side effect of more frequent hrtimer and softlockup thread wakeups,
    which is not desired.
    
    Implement a low pass filter, which checks the perf/NMI period against
    kernel time. If the perf/NMI fires before 4/5 of the watchdog period has
    elapsed then the event is ignored and postponed to the next perf/NMI.
    
    That solves the problem and avoids the overhead of shorter hrtimer periods
    and more frequent softlockup thread wakeups.
    
    Fixes: 58687acba592 ("lockup_detector: Combine nmi_watchdog and softlockup detector")
    Reported-and-tested-by: Kan Liang <Kan.liang@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: dzickus@redhat.com
    Cc: prarit@redhat.com
    Cc: ak@linux.intel.com
    Cc: babu.moger@oracle.com
    Cc: peterz@infradead.org
    Cc: eranian@google.com
    Cc: acme@redhat.com
    Cc: stable@vger.kernel.org
    Cc: atomlin@redhat.com
    Cc: akpm@linux-foundation.org
    Cc: torvalds@linux-foundation.org
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1708150931310.1886@nanos

commit 7a46ec0e2f4850407de5e1d19a44edee6efa58ec
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Aug 15 09:19:24 2017 -0700

    locking/refcounts, x86/asm: Implement fast refcount overflow protection
    
    This implements refcount_t overflow protection on x86 without a noticeable
    performance impact, though without the fuller checking of REFCOUNT_FULL.
    
    This is done by duplicating the existing atomic_t refcount implementation
    but with normally a single instruction added to detect if the refcount
    has gone negative (e.g. wrapped past INT_MAX or below zero). When detected,
    the handler saturates the refcount_t to INT_MIN / 2. With this overflow
    protection, the erroneous reference release that would follow a wrap back
    to zero is blocked from happening, avoiding the class of refcount-overflow
    use-after-free vulnerabilities entirely.
    
    Only the overflow case of refcounting can be perfectly protected, since
    it can be detected and stopped before the reference is freed and left to
    be abused by an attacker. There isn't a way to block early decrements,
    and while REFCOUNT_FULL stops increment-from-zero cases (which would
    be the state _after_ an early decrement and stops potential double-free
    conditions), this fast implementation does not, since it would require
    the more expensive cmpxchg loops. Since the overflow case is much more
    common (e.g. missing a "put" during an error path), this protection
    provides real-world protection. For example, the two public refcount
    overflow use-after-free exploits published in 2016 would have been
    rendered unexploitable:
    
      http://perception-point.io/2016/01/14/analysis-and-exploitation-of-a-linux-kernel-vulnerability-cve-2016-0728/
    
      http://cyseclabs.com/page?n=02012016
    
    This implementation does, however, notice an unchecked decrement to zero
    (i.e. caller used refcount_dec() instead of refcount_dec_and_test() and it
    resulted in a zero). Decrements under zero are noticed (since they will
    have resulted in a negative value), though this only indicates that a
    use-after-free may have already happened. Such notifications are likely
    avoidable by an attacker that has already exploited a use-after-free
    vulnerability, but it's better to have them reported than allow such
    conditions to remain universally silent.
    
    On first overflow detection, the refcount value is reset to INT_MIN / 2
    (which serves as a saturation value) and a report and stack trace are
    produced. When operations detect only negative value results (such as
    changing an already saturated value), saturation still happens but no
    notification is performed (since the value was already saturated).
    
    On the matter of races, since the entire range beyond INT_MAX but before
    0 is negative, every operation at INT_MIN / 2 will trap, leaving no
    overflow-only race condition.
    
    As for performance, this implementation adds a single "js" instruction
    to the regular execution flow of a copy of the standard atomic_t refcount
    operations. (The non-"and_test" refcount_dec() function, which is uncommon
    in regular refcount design patterns, has an additional "jz" instruction
    to detect reaching exactly zero.) Since this is a forward jump, it is by
    default the non-predicted path, which will be reinforced by dynamic branch
    prediction. The result is this protection having virtually no measurable
    change in performance over standard atomic_t operations. The error path,
    located in .text.unlikely, saves the refcount location and then uses UD0
    to fire a refcount exception handler, which resets the refcount, handles
    reporting, and returns to regular execution. This keeps the changes to
    .text size minimal, avoiding return jumps and open-coded calls to the
    error reporting routine.
    
    Example assembly comparison:
    
    refcount_inc() before:
    
      .text:
      ffffffff81546149:       f0 ff 45 f4             lock incl -0xc(%rbp)
    
    refcount_inc() after:
    
      .text:
      ffffffff81546149:       f0 ff 45 f4             lock incl -0xc(%rbp)
      ffffffff8154614d:       0f 88 80 d5 17 00       js     ffffffff816c36d3
      ...
      .text.unlikely:
      ffffffff816c36d3:       48 8d 4d f4             lea    -0xc(%rbp),%rcx
      ffffffff816c36d7:       0f ff                   (bad)
    
    These are the cycle counts comparing a loop of refcount_inc() from 1
    to INT_MAX and back down to 0 (via refcount_dec_and_test()), between
    unprotected refcount_t (atomic_t), fully protected REFCOUNT_FULL
    (refcount_t-full), and this overflow-protected refcount (refcount_t-fast):
    
      2147483646 refcount_inc()s and 2147483647 refcount_dec_and_test()s:
    		    cycles		protections
      atomic_t           82249267387	none
      refcount_t-fast    82211446892	overflow, untested dec-to-zero
      refcount_t-full   144814735193	overflow, untested dec-to-zero, inc-from-zero
    
    This code is a modified version of the x86 PAX_REFCOUNT atomic_t
    overflow defense from the last public patch of PaX/grsecurity, based
    on my understanding of the code. Changes or omissions from the original
    code are mine and don't reflect the original grsecurity/PaX code. Thanks
    to PaX Team for various suggestions for improvement for repurposing this
    code to be a refcount-only protection.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Elena Reshetova <elena.reshetova@intel.com>
    Cc: Eric Biggers <ebiggers3@gmail.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Hans Liljestrand <ishkamiel@gmail.com>
    Cc: James Bottomley <James.Bottomley@hansenpartnership.com>
    Cc: Jann Horn <jannh@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Serge E. Hallyn <serge@hallyn.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arozansk@redhat.com
    Cc: axboe@kernel.dk
    Cc: kernel-hardening@lists.openwall.com
    Cc: linux-arch <linux-arch@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20170815161924.GA133115@beast
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit f01d7d51f577b5dc0fa5919ab8a9228e2bf49f3e
Author: Vikas Shivappa <vikas.shivappa@linux.intel.com>
Date:   Tue Jul 25 14:14:22 2017 -0700

    x86/intel_rdt: Introduce a common compile option for RDT
    
    We currently have a CONFIG_RDT_A which is for RDT(Resource directory
    technology) allocation based resctrl filesystem interface. As a
    preparation to add support for RDT monitoring as well into the same
    resctrl filesystem, change the config option to be CONFIG_RDT which
    would include both RDT allocation and monitoring code.
    
    No functional change.
    
    Signed-off-by: Vikas Shivappa <vikas.shivappa@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: ravi.v.shankar@intel.com
    Cc: tony.luck@intel.com
    Cc: fenghua.yu@intel.com
    Cc: peterz@infradead.org
    Cc: eranian@google.com
    Cc: vikas.shivappa@intel.com
    Cc: ak@linux.intel.com
    Cc: davidcc@google.com
    Cc: reinette.chatre@intel.com
    Link: http://lkml.kernel.org/r/1501017287-28083-4-git-send-email-vikas.shivappa@linux.intel.com

commit 81d387190039c14edac8de2b3ec789beb899afd9
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Tue Jul 25 08:54:24 2017 -0500

    x86/kconfig: Consolidate unwinders into multiple choice selection
    
    There are three mutually exclusive unwinders.  Make that more obvious by
    combining them into a multiple-choice selection:
    
      CONFIG_FRAME_POINTER_UNWINDER
      CONFIG_ORC_UNWINDER
      CONFIG_GUESS_UNWINDER (if CONFIG_EXPERT=y)
    
    Frame pointers are still the default (for now).
    
    The old CONFIG_FRAME_POINTER option is still used in some
    arch-independent places, so keep it around, but make it
    invisible to the user on x86 - it's now selected by
    CONFIG_FRAME_POINTER_UNWINDER=y.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: live-patching@vger.kernel.org
    Link: http://lkml.kernel.org/r/20170725135424.zukjmgpz3plf5pmt@treble
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit ee9f8fce99640811b2b8e79d0d1dbe8bab69ba67
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Jul 24 18:36:57 2017 -0500

    x86/unwind: Add the ORC unwinder
    
    Add the new ORC unwinder which is enabled by CONFIG_ORC_UNWINDER=y.
    It plugs into the existing x86 unwinder framework.
    
    It relies on objtool to generate the needed .orc_unwind and
    .orc_unwind_ip sections.
    
    For more details on why ORC is used instead of DWARF, see
    Documentation/x86/orc-unwinder.txt - but the short version is
    that it's a simplified, fundamentally more robust debugninfo
    data structure, which also allows up to two orders of magnitude
    faster lookups than the DWARF unwinder - which matters to
    profiling workloads like perf.
    
    Thanks to Andy Lutomirski for the performance improvement ideas:
    splitting the ORC unwind table into two parallel arrays and creating a
    fast lookup table to search a subset of the unwind table.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: live-patching@vger.kernel.org
    Link: http://lkml.kernel.org/r/0a6cbfb40f8da99b7a45a1a8302dc6aef16ec812.1500938583.git.jpoimboe@redhat.com
    [ Extended the changelog. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 77ef56e4f0fbb350d93289aa025c7d605af012d4
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Mon Jul 17 01:59:54 2017 +0300

    x86: Enable 5-level paging support via CONFIG_X86_5LEVEL=y
    
    Most of things are in place and we can enable support for 5-level paging.
    
    The patch makes XEN_PV and XEN_PVH dependent on !X86_5LEVEL. Both are
    not ready to work with 5-level paging.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20170716225954.74185-9-kirill.shutemov@linux.intel.com
    [ Minor readability edits. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit f88a68facd9a15b94f8c195d9d2c0b30c76c595a
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Jul 17 16:10:09 2017 -0500

    x86/mm: Extend early_memremap() support with additional attrs
    
    Add early_memremap() support to be able to specify encrypted and
    decrypted mappings with and without write-protection. The use of
    write-protection is necessary when encrypting data "in place". The
    write-protect attribute is considered cacheable for loads, but not
    stores. This implies that the hardware will never give the core a
    dirty line with this memtype.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Larry Woodman <lwoodman@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Toshimitsu Kani <toshi.kani@hpe.com>
    Cc: kasan-dev@googlegroups.com
    Cc: kvm@vger.kernel.org
    Cc: linux-arch@vger.kernel.org
    Cc: linux-doc@vger.kernel.org
    Cc: linux-efi@vger.kernel.org
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/479b5832c30fae3efa7932e48f81794e86397229.1500319216.git.thomas.lendacky@amd.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 7744ccdbc16f0ac4adae21b3678af93775b3a386
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Jul 17 16:10:03 2017 -0500

    x86/mm: Add Secure Memory Encryption (SME) support
    
    Add support for Secure Memory Encryption (SME). This initial support
    provides a Kconfig entry to build the SME support into the kernel and
    defines the memory encryption mask that will be used in subsequent
    patches to mark pages as encrypted.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Larry Woodman <lwoodman@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Toshimitsu Kani <toshi.kani@hpe.com>
    Cc: kasan-dev@googlegroups.com
    Cc: kvm@vger.kernel.org
    Cc: linux-arch@vger.kernel.org
    Cc: linux-doc@vger.kernel.org
    Cc: linux-efi@vger.kernel.org
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/a6c34d16caaed3bc3e2d6f0987554275bd291554.1500319216.git.thomas.lendacky@amd.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 6974f0c4555e285ab217cee58b6e874f776ff409
Author: Daniel Micay <danielmicay@gmail.com>
Date:   Wed Jul 12 14:36:10 2017 -0700

    include/linux/string.h: add the option of fortified string.h functions
    
    This adds support for compiling with a rough equivalent to the glibc
    _FORTIFY_SOURCE=1 feature, providing compile-time and runtime buffer
    overflow checks for string.h functions when the compiler determines the
    size of the source or destination buffer at compile-time.  Unlike glibc,
    it covers buffer reads in addition to writes.
    
    GNU C __builtin_*_chk intrinsics are avoided because they would force a
    much more complex implementation.  They aren't designed to detect read
    overflows and offer no real benefit when using an implementation based
    on inline checks.  Inline checks don't add up to much code size and
    allow full use of the regular string intrinsics while avoiding the need
    for a bunch of _chk functions and per-arch assembly to avoid wrapper
    overhead.
    
    This detects various overflows at compile-time in various drivers and
    some non-x86 core kernel code.  There will likely be issues caught in
    regular use at runtime too.
    
    Future improvements left out of initial implementation for simplicity,
    as it's all quite optional and can be done incrementally:
    
    * Some of the fortified string functions (strncpy, strcat), don't yet
      place a limit on reads from the source based on __builtin_object_size of
      the source buffer.
    
    * Extending coverage to more string functions like strlcat.
    
    * It should be possible to optionally use __builtin_object_size(x, 1) for
      some functions (C strings) to detect intra-object overflows (like
      glibc's _FORTIFY_SOURCE=2), but for now this takes the conservative
      approach to avoid likely compatibility issues.
    
    * The compile-time checks should be made available via a separate config
      option which can be enabled by default (or always enabled) once enough
      time has passed to get the issues it catches fixed.
    
    Kees said:
     "This is great to have. While it was out-of-tree code, it would have
      blocked at least CVE-2016-3858 from being exploitable (improper size
      argument to strlcpy()). I've sent a number of fixes for
      out-of-bounds-reads that this detected upstream already"
    
    [arnd@arndb.de: x86: fix fortified memcpy]
      Link: http://lkml.kernel.org/r/20170627150047.660360-1-arnd@arndb.de
    [keescook@chromium.org: avoid panic() in favor of BUG()]
      Link: http://lkml.kernel.org/r/20170626235122.GA25261@beast
    [keescook@chromium.org: move from -mm, add ARCH_HAS_FORTIFY_SOURCE, tweak Kconfig help]
    Link: http://lkml.kernel.org/r/20170526095404.20439-1-danielmicay@gmail.com
    Link: http://lkml.kernel.org/r/1497903987-21002-8-git-send-email-keescook@chromium.org
    Signed-off-by: Daniel Micay <danielmicay@gmail.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Kees Cook <keescook@chromium.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Daniel Axtens <dja@axtens.net>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Chris Metcalf <cmetcalf@ezchip.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 05a4a95279311c3a4633b4277a5d21cfd616c6c7
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Jul 12 14:35:46 2017 -0700

    kernel/watchdog: split up config options
    
    Split SOFTLOCKUP_DETECTOR from LOCKUP_DETECTOR, and split
    HARDLOCKUP_DETECTOR_PERF from HARDLOCKUP_DETECTOR.
    
    LOCKUP_DETECTOR implies the general boot, sysctl, and programming
    interfaces for the lockup detectors.
    
    An architecture that wants to use a hard lockup detector must define
    HAVE_HARDLOCKUP_DETECTOR_PERF or HAVE_HARDLOCKUP_DETECTOR_ARCH.
    
    Alternatively an arch can define HAVE_NMI_WATCHDOG, which provides the
    minimum arch_touch_nmi_watchdog, and it otherwise does its own thing and
    does not implement the LOCKUP_DETECTOR interfaces.
    
    sparc is unusual in that it has started to implement some of the
    interfaces, but not fully yet.  It should probably be converted to a full
    HAVE_HARDLOCKUP_DETECTOR_ARCH.
    
    [npiggin@gmail.com: fix]
      Link: http://lkml.kernel.org/r/20170617223522.66c0ad88@roar.ozlabs.ibm.com
    Link: http://lkml.kernel.org/r/20170616065715.18390-4-npiggin@gmail.com
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Don Zickus <dzickus@redhat.com>
    Reviewed-by: Babu Moger <babu.moger@oracle.com>
    Tested-by: Babu Moger <babu.moger@oracle.com>	[sparc]
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit d691b7e7d1b5186eae62fd32adee65d3316bfdf6
Merge: b59eea5 1e0fc9d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 7 13:55:45 2017 -0700

    Merge tag 'powerpc-4.13-1' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux
    
    Pull powerpc updates from Michael Ellerman:
     "Highlights include:
    
       - Support for STRICT_KERNEL_RWX on 64-bit server CPUs.
    
       - Platform support for FSP2 (476fpe) board
    
       - Enable ZONE_DEVICE on 64-bit server CPUs.
    
       - Generic & powerpc spin loop primitives to optimise busy waiting
    
       - Convert VDSO update function to use new update_vsyscall() interface
    
       - Optimisations to hypercall/syscall/context-switch paths
    
       - Improvements to the CPU idle code on Power8 and Power9.
    
      As well as many other fixes and improvements.
    
      Thanks to: Akshay Adiga, Andrew Donnellan, Andrew Jeffery, Anshuman
      Khandual, Anton Blanchard, Balbir Singh, Benjamin Herrenschmidt,
      Christophe Leroy, Christophe Lombard, Colin Ian King, Dan Carpenter,
      Gautham R. Shenoy, Hari Bathini, Ian Munsie, Ivan Mikhaylov, Javier
      Martinez Canillas, Madhavan Srinivasan, Masahiro Yamada, Matt Brown,
      Michael Neuling, Michal Suchanek, Murilo Opsfelder Araujo, Naveen N.
      Rao, Nicholas Piggin, Oliver O'Halloran, Paul Mackerras, Pavel Machek,
      Russell Currey, Santosh Sivaraj, Stephen Rothwell, Thiago Jung
      Bauermann, Yang Li"
    
    * tag 'powerpc-4.13-1' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux: (158 commits)
      powerpc/Kconfig: Enable STRICT_KERNEL_RWX for some configs
      powerpc/mm/radix: Implement STRICT_RWX/mark_rodata_ro() for Radix
      powerpc/mm/hash: Implement mark_rodata_ro() for hash
      powerpc/vmlinux.lds: Align __init_begin to 16M
      powerpc/lib/code-patching: Use alternate map for patch_instruction()
      powerpc/xmon: Add patch_instruction() support for xmon
      powerpc/kprobes/optprobes: Use patch_instruction()
      powerpc/kprobes: Move kprobes over to patch_instruction()
      powerpc/mm/radix: Fix execute permissions for interrupt_vectors
      powerpc/pseries: Fix passing of pp0 in updatepp() and updateboltedpp()
      powerpc/64s: Blacklist rtas entry/exit from kprobes
      powerpc/64s: Blacklist functions invoked on a trap
      powerpc/64s: Un-blacklist system_call() from kprobes
      powerpc/64s: Move system_call() symbol to just after setting MSR_EE
      powerpc/64s: Blacklist system_call() and system_call_common() from kprobes
      powerpc/64s: Convert .L__replay_interrupt_return to a local label
      powerpc64/elfv1: Only dereference function descriptor for non-text symbols
      cxl: Export library to support IBM XSL
      powerpc/dts: Use #include "..." to include local DT
      powerpc/perf/hv-24x7: Aggregate result elements on POWER9 SMT8
      ...

commit b6ffe9ba46016f8351896ccee33bebcd0e5ea7c0
Merge: 9f45efb 9d92573
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 7 09:44:06 2017 -0700

    Merge tag 'libnvdimm-for-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm
    
    Pull libnvdimm updates from Dan Williams:
     "libnvdimm updates for the latest ACPI and UEFI specifications. This
      pull request also includes new 'struct dax_operations' enabling to
      undo the abuse of copy_user_nocache() for copy operations to pmem.
    
      The dax work originally missed 4.12 to address concerns raised by Al.
    
      Summary:
    
       - Introduce the _flushcache() family of memory copy helpers and use
         them for persistent memory write operations on x86. The
         _flushcache() semantic indicates that the cache is either bypassed
         for the copy operation (movnt) or any lines dirtied by the copy
         operation are written back (clwb, clflushopt, or clflush).
    
       - Extend dax_operations with ->copy_from_iter() and ->flush()
         operations. These operations and other infrastructure updates allow
         all persistent memory specific dax functionality to be pushed into
         libnvdimm and the pmem driver directly. It also allows dax-specific
         sysfs attributes to be linked to a host device, for example:
         /sys/block/pmem0/dax/write_cache
    
       - Add support for the new NVDIMM platform/firmware mechanisms
         introduced in ACPI 6.2 and UEFI 2.7. This support includes the v1.2
         namespace label format, extensions to the address-range-scrub
         command set, new error injection commands, and a new BTT
         (block-translation-table) layout. These updates support inter-OS
         and pre-OS compatibility.
    
       - Fix a longstanding memory corruption bug in nfit_test.
    
       - Make the pmem and nvdimm-region 'badblocks' sysfs files poll(2)
         capable.
    
       - Miscellaneous fixes and small updates across libnvdimm and the nfit
         driver.
    
      Acknowledgements that came after the branch was pushed: commit
      6aa734a2f38e ("libnvdimm, region, pmem: fix 'badblocks'
      sysfs_get_dirent() reference lifetime") was reviewed by Toshi Kani
      <toshi.kani@hpe.com>"
    
    * tag 'libnvdimm-for-4.13' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm: (42 commits)
      libnvdimm, namespace: record 'lbasize' for pmem namespaces
      acpi/nfit: Issue Start ARS to retrieve existing records
      libnvdimm: New ACPI 6.2 DSM functions
      acpi, nfit: Show bus_dsm_mask in sysfs
      libnvdimm, acpi, nfit: Add bus level dsm mask for pass thru.
      acpi, nfit: Enable DSM pass thru for root functions.
      libnvdimm: passthru functions clear to send
      libnvdimm, btt: convert some info messages to warn/err
      libnvdimm, region, pmem: fix 'badblocks' sysfs_get_dirent() reference lifetime
      libnvdimm: fix the clear-error check in nsio_rw_bytes
      libnvdimm, btt: fix btt_rw_page not returning errors
      acpi, nfit: quiet invalid block-aperture-region warnings
      libnvdimm, btt: BTT updates for UEFI 2.7 format
      acpi, nfit: constify *_attribute_group
      libnvdimm, pmem: disable dax flushing when pmem is fronting a volatile region
      libnvdimm, pmem, dax: export a cache control attribute
      dax: convert to bitmask for flags
      dax: remove default copy_from_iter fallback
      libnvdimm, nfit: enable support for volatile ranges
      libnvdimm, pmem: fix persistence warning
      ...

commit e1073d1e7920946ac4776a619cc40668b9e1401b
Author: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Date:   Thu Jul 6 15:39:17 2017 -0700

    mm/hugetlb: clean up ARCH_HAS_GIGANTIC_PAGE
    
    This moves the #ifdef in C code to a Kconfig dependency.  Also we move
    the gigantic_page_supported() function to be arch specific.
    
    This allows architectures to conditionally enable runtime allocation of
    gigantic huge page.  Architectures like ppc64 supports different
    gigantic huge page size (16G and 1G) based on the translation mode
    selected.  This provides an opportunity for ppc64 to enable runtime
    allocation only w.r.t 1G hugepage.
    
    No functional change in this patch.
    
    Link: http://lkml.kernel.org/r/1494995292-4443-1-git-send-email-aneesh.kumar@linux.vnet.ibm.com
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au> (powerpc)
    Cc: Anshuman Khandual <khandual@linux.vnet.ibm.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 38d8b4e6bdc872f07a3149309ab01719c96f3894
Author: Huang Ying <ying.huang@intel.com>
Date:   Thu Jul 6 15:37:18 2017 -0700

    mm, THP, swap: delay splitting THP during swap out
    
    Patch series "THP swap: Delay splitting THP during swapping out", v11.
    
    This patchset is to optimize the performance of Transparent Huge Page
    (THP) swap.
    
    Recently, the performance of the storage devices improved so fast that
    we cannot saturate the disk bandwidth with single logical CPU when do
    page swap out even on a high-end server machine.  Because the
    performance of the storage device improved faster than that of single
    logical CPU.  And it seems that the trend will not change in the near
    future.  On the other hand, the THP becomes more and more popular
    because of increased memory size.  So it becomes necessary to optimize
    THP swap performance.
    
    The advantages of the THP swap support include:
    
     - Batch the swap operations for the THP to reduce lock
       acquiring/releasing, including allocating/freeing the swap space,
       adding/deleting to/from the swap cache, and writing/reading the swap
       space, etc. This will help improve the performance of the THP swap.
    
     - The THP swap space read/write will be 2M sequential IO. It is
       particularly helpful for the swap read, which are usually 4k random
       IO. This will improve the performance of the THP swap too.
    
     - It will help the memory fragmentation, especially when the THP is
       heavily used by the applications. The 2M continuous pages will be
       free up after THP swapping out.
    
     - It will improve the THP utilization on the system with the swap
       turned on. Because the speed for khugepaged to collapse the normal
       pages into the THP is quite slow. After the THP is split during the
       swapping out, it will take quite long time for the normal pages to
       collapse back into the THP after being swapped in. The high THP
       utilization helps the efficiency of the page based memory management
       too.
    
    There are some concerns regarding THP swap in, mainly because possible
    enlarged read/write IO size (for swap in/out) may put more overhead on
    the storage device.  To deal with that, the THP swap in should be turned
    on only when necessary.  For example, it can be selected via
    "always/never/madvise" logic, to be turned on globally, turned off
    globally, or turned on only for VMA with MADV_HUGEPAGE, etc.
    
    This patchset is the first step for the THP swap support.  The plan is
    to delay splitting THP step by step, finally avoid splitting THP during
    the THP swapping out and swap out/in the THP as a whole.
    
    As the first step, in this patchset, the splitting huge page is delayed
    from almost the first step of swapping out to after allocating the swap
    space for the THP and adding the THP into the swap cache.  This will
    reduce lock acquiring/releasing for the locks used for the swap cache
    management.
    
    With the patchset, the swap out throughput improves 15.5% (from about
    3.73GB/s to about 4.31GB/s) in the vm-scalability swap-w-seq test case
    with 8 processes.  The test is done on a Xeon E5 v3 system.  The swap
    device used is a RAM simulated PMEM (persistent memory) device.  To test
    the sequential swapping out, the test case creates 8 processes, which
    sequentially allocate and write to the anonymous pages until the RAM and
    part of the swap device is used up.
    
    This patch (of 5):
    
    In this patch, splitting huge page is delayed from almost the first step
    of swapping out to after allocating the swap space for the THP
    (Transparent Huge Page) and adding the THP into the swap cache.  This
    will batch the corresponding operation, thus improve THP swap out
    throughput.
    
    This is the first step for the THP swap optimization.  The plan is to
    delay splitting the THP step by step and avoid splitting the THP
    finally.
    
    In this patch, one swap cluster is used to hold the contents of each THP
    swapped out.  So, the size of the swap cluster is changed to that of the
    THP (Transparent Huge Page) on x86_64 architecture (512).  For other
    architectures which want such THP swap optimization,
    ARCH_USES_THP_SWAP_CLUSTER needs to be selected in the Kconfig file for
    the architecture.  In effect, this will enlarge swap cluster size by 2
    times on x86_64.  Which may make it harder to find a free cluster when
    the swap space becomes fragmented.  So that, this may reduce the
    continuous swap space allocation and sequential write in theory.  The
    performance test in 0day shows no regressions caused by this.
    
    In the future of THP swap optimization, some information of the swapped
    out THP (such as compound map count) will be recorded in the
    swap_cluster_info data structure.
    
    The mem cgroup swap accounting functions are enhanced to support charge
    or uncharge a swap cluster backing a THP as a whole.
    
    The swap cluster allocate/free functions are added to allocate/free a
    swap cluster for a THP.  A fair simple algorithm is used for swap
    cluster allocation, that is, only the first swap device in priority list
    will be tried to allocate the swap cluster.  The function will fail if
    the trying is not successful, and the caller will fallback to allocate a
    single swap slot instead.  This works good enough for normal cases.  If
    the difference of the number of the free swap clusters among multiple
    swap devices is significant, it is possible that some THPs are split
    earlier than necessary.  For example, this could be caused by big size
    difference among multiple swap devices.
    
    The swap cache functions is enhanced to support add/delete THP to/from
    the swap cache as a set of (HPAGE_PMD_NR) sub-pages.  This may be
    enhanced in the future with multi-order radix tree.  But because we will
    split the THP soon during swapping out, that optimization doesn't make
    much sense for this first step.
    
    The THP splitting functions are enhanced to support to split THP in swap
    cache during swapping out.  The page lock will be held during allocating
    the swap cluster, adding the THP into the swap cache and splitting the
    THP.  So in the code path other than swapping out, if the THP need to be
    split, the PageSwapCache(THP) will be always false.
    
    The swap cluster is only available for SSD, so the THP swap optimization
    in this patchset has no effect for HDD.
    
    [ying.huang@intel.com: fix two issues in THP optimize patch]
      Link: http://lkml.kernel.org/r/87k25ed8zo.fsf@yhuang-dev.intel.com
    [hannes@cmpxchg.org: extensive cleanups and simplifications, reduce code size]
    Link: http://lkml.kernel.org/r/20170515112522.32457-2-ying.huang@intel.com
    Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Suggested-by: Andrew Morton <akpm@linux-foundation.org> [for config option]
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com> [for changes in huge_memory.c and huge_mm.h]
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Ebru Akagunduz <ebru.akagunduz@gmail.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Shaohua Li <shli@kernel.org>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Rik van Riel <riel@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 4422d80ed7d4bdb2d6e9fb890c66c3d9250ba694
Merge: 9a9594e 32288da
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jul 3 18:33:03 2017 -0700

    Merge branch 'ras-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull RAS updates from Thomas Gleixner:
     "The RAS updates for the 4.13 merge window:
    
       - Cleanup of the MCE injection facility (Borsilav Petkov)
    
       - Rework of the AMD/SMCA handling (Yazen Ghannam)
    
       - Enhancements for ACPI/APEI to handle new notitication types (Shiju
         Jose)
    
       - atomic_t to refcount_t conversion (Elena Reshetova)
    
       - A few fixes and enhancements all over the place"
    
    * 'ras-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      RAS/CEC: Check the correct variable in the debugfs error handling
      x86/mce: Always save severity in machine_check_poll()
      x86/MCE, xen/mcelog: Make /dev/mcelog registration messages more precise
      x86/mce: Update bootlog description to reflect behavior on AMD
      x86/mce: Don't disable MCA banks when offlining a CPU on AMD
      x86/mce/mce-inject: Preset the MCE injection struct
      x86/mce: Clean up include files
      x86/mce: Get rid of register_mce_write_callback()
      x86/mce: Merge mce_amd_inj into mce-inject
      x86/mce/AMD: Use saved threshold block info in interrupt handler
      x86/mce/AMD: Use msr_stat when clearing MCA_STATUS
      x86/mce/AMD: Carve out SMCA bank configuration
      x86/mce/AMD: Redo error logging from APIC LVT interrupt handlers
      x86/mce: Convert threshold_bank.cpus from atomic_t to refcount_t
      RAS: Make local function parse_ras_param() static
      ACPI/APEI: Handle GSIV and GPIO notification types

commit 8c073517a992124e385040c0da0df809abfa8f61
Merge: 03ffbcd df65c1b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jul 3 17:27:42 2017 -0700

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 PCI updates from Thomas Gleixner:
     "This update provides the seperation of x86 PCI accessors from the
      global PCI lock in the generic PCI config space accessors.
    
      The reasons for this are:
    
       - x86 has it's own PCI config lock for various reasons, so the
         accessors have to lock two locks nested.
    
       - The ECAM (mmconfig) access to the extended configuration space does
         not require locking. The existing generic locking causes a massive
         lock contention when accessing the extended config space of the
         Uncore facility for performance monitoring.
    
      The commit which switched the access to the primary config space over
      to ECAM mode has been removed from the branch, so the primary config
      space is still accessed with type1 accessors properly serialized by
      the x86 internal locking.
    
      Bjorn agreed on merging this through the x86 tree"
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/PCI: Select CONFIG_PCI_LOCKLESS_CONFIG
      PCI: Provide Kconfig option for lockless config space accessors
      x86/PCI/ce4100: Properly lock accessor functions
      x86/PCI: Abort if legacy init fails
      x86/PCI: Remove duplicate defines

commit 03ffbcdd7898c0b5299efeb9f18de927487ec1cf
Merge: 1b044f1 f9632de
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jul 3 16:50:31 2017 -0700

    Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull irq updates from Thomas Gleixner:
     "The irq department delivers:
    
       - Expand the generic infrastructure handling the irq migration on CPU
         hotplug and convert X86 over to it. (Thomas Gleixner)
    
         Aside of consolidating code this is a preparatory change for:
    
       - Finalizing the affinity management for multi-queue devices. The
         main change here is to shut down interrupts which are affine to a
         outgoing CPU and reenabling them when the CPU comes online again.
         That avoids moving interrupts pointlessly around and breaking and
         reestablishing affinities for no value. (Christoph Hellwig)
    
         Note: This contains also the BLOCK-MQ and NVME changes which depend
         on the rework of the irq core infrastructure. Jens acked them and
         agreed that they should go with the irq changes.
    
       - Consolidation of irq domain code (Marc Zyngier)
    
       - State tracking consolidation in the core code (Jeffy Chen)
    
       - Add debug infrastructure for hierarchical irq domains (Thomas
         Gleixner)
    
       - Infrastructure enhancement for managing generic interrupt chips via
         devmem (Bartosz Golaszewski)
    
       - Constification work all over the place (Tobias Klauser)
    
       - Two new interrupt controller drivers for MVEBU (Thomas Petazzoni)
    
       - The usual set of fixes, updates and enhancements all over the
         place"
    
    * 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (112 commits)
      irqchip/or1k-pic: Fix interrupt acknowledgement
      irqchip/irq-mvebu-gicp: Allocate enough memory for spi_bitmap
      irqchip/gic-v3: Fix out-of-bound access in gic_set_affinity
      nvme: Allocate queues for all possible CPUs
      blk-mq: Create hctx for each present CPU
      blk-mq: Include all present CPUs in the default queue mapping
      genirq: Avoid unnecessary low level irq function calls
      genirq: Set irq masked state when initializing irq_desc
      genirq/timings: Add infrastructure for estimating the next interrupt arrival time
      genirq/timings: Add infrastructure to track the interrupt timings
      genirq/debugfs: Remove pointless NULL pointer check
      irqchip/gic-v3-its: Don't assume GICv3 hardware supports 16bit INTID
      irqchip/gic-v3-its: Add ACPI NUMA node mapping
      irqchip/gic-v3-its-platform-msi: Make of_device_ids const
      irqchip/gic-v3-its: Make of_device_ids const
      irqchip/irq-mvebu-icu: Add new driver for Marvell ICU
      irqchip/irq-mvebu-gicp: Add new driver for Marvell GICP
      dt-bindings/interrupt-controller: Add DT binding for the Marvell ICU
      genirq/irqdomain: Remove auto-recursive hierarchy support
      irqchip/MSI: Use irq_domain_update_bus_token instead of an open coded access
      ...

commit 65f7d049788763969180c72ef98dab8bf0340c55
Author: Oliver O'Halloran <oohall@gmail.com>
Date:   Wed Jun 28 11:32:31 2017 +1000

    mm, x86: Add ARCH_HAS_ZONE_DEVICE to Kconfig
    
    Currently ZONE_DEVICE depends on X86_64 and this will get unwieldly as
    new architectures (and platforms) get ZONE_DEVICE support. Move to an
    arch selected Kconfig option to save us the trouble.
    
    Cc: linux-mm@kvack.org
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Oliver O'Halloran <oohall@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

commit df65c1bcd9b7b639177a5a15da1b8dc3bee4f5fa
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Mar 16 22:50:07 2017 +0100

    x86/PCI: Select CONFIG_PCI_LOCKLESS_CONFIG
    
    All x86 PCI configuration space accessors have either their own
    serialization or can operate completely lockless (ECAM).
    
    Disable the global lock in the generic PCI configuration space accessors.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Bjorn Helgaas <helgaas@kernel.org>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: linux-pci@vger.kernel.org
    Link: http://lkml.kernel.org/r/20170316215057.295079391@linutronix.de
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit c7d6c9dd871f42c4e0ce5563d2f684e78ea673cf
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 20 01:37:46 2017 +0200

    x86/apic: Implement effective irq mask update
    
    Add the effective irq mask update to the apic implementations and enable
    effective irq masks for x86.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Keith Busch <keith.busch@intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Link: http://lkml.kernel.org/r/20170619235446.878370703@linutronix.de

commit ad7a929fa4bb1143357aa83043a149d5c27c68fd
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 20 01:37:33 2017 +0200

    x86/irq: Use irq_migrate_all_off_this_cpu()
    
    The generic migration code supports all the required features
    already. Remove the x86 specific implementation and use the generic one.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Keith Busch <keith.busch@intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Link: http://lkml.kernel.org/r/20170619235445.851311033@linutronix.de

commit a4eb8b993554d374002663200bf5721f7f2ee259
Merge: 2617967 8d829b9
Author: Ingo Molnar <mingo@kernel.org>
Date:   Thu Jun 22 10:57:28 2017 +0200

    Merge branch 'linus' into x86/mm, to pick up fixes
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit bc8e80d56c1ecb35e65df392d7601d1427d14efe
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Jun 13 18:28:30 2017 +0200

    x86/mce: Merge mce_amd_inj into mce-inject
    
    Reuse mce_amd_inj's debugfs interface so that mce-inject can
    benefit from it too. The old functionality is still preserved under
    CONFIG_X86_MCELOG_LEGACY.
    
    Tested-by: Yazen Ghannam <yazen.ghannam@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Yazen Ghannam <yazen.ghannam@amd.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Link: http://lkml.kernel.org/r/20170613162835.30750-4-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit e585513b76f7b05d08ca3fb250fed11f6ba46ee5
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Tue Jun 6 14:31:20 2017 +0300

    x86/mm/gup: Switch GUP to the generic get_user_page_fast() implementation
    
    This patch provides all required callbacks required by the generic
    get_user_pages_fast() code and switches x86 over - and removes
    the platform specific implementation.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20170606113133.22974-2-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 0aed55af88345b5d673240f90e671d79662fb01e
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon May 29 12:22:50 2017 -0700

    x86, uaccess: introduce copy_from_iter_flushcache for pmem / cache-bypass operations
    
    The pmem driver has a need to transfer data with a persistent memory
    destination and be able to rely on the fact that the destination writes are not
    cached. It is sufficient for the writes to be flushed to a cpu-store-buffer
    (non-temporal / "movnt" in x86 terms), as we expect userspace to call fsync()
    to ensure data-writes have reached a power-fail-safe zone in the platform. The
    fsync() triggers a REQ_FUA or REQ_FLUSH to the pmem driver which will turn
    around and fence previous writes with an "sfence".
    
    Implement a __copy_from_user_inatomic_flushcache, memcpy_page_flushcache, and
    memcpy_flushcache, that guarantee that the destination buffer is not dirty in
    the cpu cache on completion. The new copy_from_iter_flushcache and sub-routines
    will be used to replace the "pmem api" (include/linux/pmem.h +
    arch/x86/include/asm/pmem.h). The availability of copy_from_iter_flushcache()
    and memcpy_flushcache() are gated by the CONFIG_ARCH_HAS_UACCESS_FLUSHCACHE
    config symbol, and fallback to copy_from_iter_nocache() and plain memcpy()
    otherwise.
    
    This is meant to satisfy the concern from Linus that if a driver wants to do
    something beyond the normal nocache semantics it should be something private to
    that driver [1], and Al's concern that anything uaccess related belongs with
    the rest of the uaccess code [2].
    
    The first consumer of this interface is a new 'copy_from_iter' dax operation so
    that pmem can inject cache maintenance operations without imposing this
    overhead on other dax-capable drivers.
    
    [1]: https://lists.01.org/pipermail/linux-nvdimm/2017-January/008364.html
    [2]: https://lists.01.org/pipermail/linux-nvdimm/2017-April/009942.html
    
    Cc: <x86@kernel.org>
    Cc: Jan Kara <jack@suse.cz>
    Cc: Jeff Moyer <jmoyer@redhat.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Toshi Kani <toshi.kani@hpe.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Matthew Wilcox <mawilcox@microsoft.com>
    Reviewed-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>

commit 47b2c3fff4932e6fc17ce13d51a43c6969714e20
Author: Bilal Amarni <bilal.amarni@gmail.com>
Date:   Thu Jun 8 14:47:26 2017 +0100

    security/keys: add CONFIG_KEYS_COMPAT to Kconfig
    
    CONFIG_KEYS_COMPAT is defined in arch-specific Kconfigs and is missing for
    several 64-bit architectures : mips, parisc, tile.
    
    At the moment and for those architectures, calling in 32-bit userspace the
    keyctl syscall would return an ENOSYS error.
    
    This patch moves the CONFIG_KEYS_COMPAT option to security/keys/Kconfig, to
    make sure the compatibility wrapper is registered by default for any 64-bit
    architecture as long as it is configured with CONFIG_COMPAT.
    
    [DH: Modified to remove arm64 compat enablement also as requested by Eric
     Biggers]
    
    Signed-off-by: Bilal Amarni <bilal.amarni@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    cc: Eric Biggers <ebiggers3@gmail.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>

commit ce4a4e565f5264909a18c733b864c3f74467f69e
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sun May 28 10:00:14 2017 -0700

    x86/mm: Remove the UP asm/tlbflush.h code, always use the (formerly) SMP code
    
    The UP asm/tlbflush.h generates somewhat nicer code than the SMP version.
    Aside from that, it's fallen quite a bit behind the SMP code:
    
     - flush_tlb_mm_range() didn't flush individual pages if the range
       was small.
    
     - The lazy TLB code was much weaker.  This usually wouldn't matter,
       but, if a kernel thread flushed its lazy "active_mm" more than
       once (due to reclaim or similar), it wouldn't be unlazied and
       would instead pointlessly flush repeatedly.
    
     - Tracepoints were missing.
    
    Aside from that, simply having the UP code around was a maintanence
    burden, since it means that any change to the TLB flush code had to
    make sure not to break it.
    
    Simplify everything by deleting the UP code.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: Nadav Amit <namit@vmware.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit c9525a3fab63fbe091007494f8b7a06438eea6a7
Author: Benjamin Peterson <bp@benjamin.pe>
Date:   Sat May 20 17:20:16 2017 -0700

    x86/watchdog: Fix Kconfig help text file path reference to lockup watchdog documentation
    
    Signed-off-by: Benjamin Peterson <bp@benjamin.pe>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: 9919cba7ff71147803c988521cc1ceb80e7f0f6d ("watchdog: Update documentation")
    Link: http://lkml.kernel.org/r/20170521002016.13258-1-bp@benjamin.pe
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 76f1948a79b26d5f57a5ee9941876b745c6baaea
Merge: 7af4c72 a084160
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue May 2 18:24:16 2017 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/livepatching
    
    Pull livepatch updates from Jiri Kosina:
    
     - a per-task consistency model is being added for architectures that
       support reliable stack dumping (extending this, currently rather
       trivial set, is currently in the works).
    
       This extends the nature of the types of patches that can be applied
       by live patching infrastructure. The code stems from the design
       proposal made [1] back in November 2014. It's a hybrid of SUSE's
       kGraft and RH's kpatch, combining advantages of both: it uses
       kGraft's per-task consistency and syscall barrier switching combined
       with kpatch's stack trace switching. There are also a number of
       fallback options which make it quite flexible.
    
       Most of the heavy lifting done by Josh Poimboeuf with help from
       Miroslav Benes and Petr Mladek
    
       [1] https://lkml.kernel.org/r/20141107140458.GA21774@suse.cz
    
     - module load time patch optimization from Zhou Chengming
    
     - a few assorted small fixes
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/livepatching:
      livepatch: add missing printk newlines
      livepatch: Cancel transition a safe way for immediate patches
      livepatch: Reduce the time of finding module symbols
      livepatch: make klp_mutex proper part of API
      livepatch: allow removal of a disabled patch
      livepatch: add /proc/<pid>/patch_state
      livepatch: change to a per-task consistency model
      livepatch: store function sizes
      livepatch: use kstrtobool() in enabled_store()
      livepatch: move patching functions into patch.c
      livepatch: remove unnecessary object loaded check
      livepatch: separate enabled and patched states
      livepatch/s390: add TIF_PATCH_PENDING thread flag
      livepatch/s390: reorganize TIF thread flag bits
      livepatch/powerpc: add TIF_PATCH_PENDING thread flag
      livepatch/x86: add TIF_PATCH_PENDING thread flag
      livepatch: create temporary klp_update_patch_state() stub
      x86/entry: define _TIF_ALLWORK_MASK flags explicitly
      stacktrace/x86: add function for detecting reliable stack traces

commit d3b5d35290d729a2518af00feca867385a1b08fa
Merge: aa2a4b65 7138970
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 1 23:54:56 2017 -0700

    Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 mm updates from Ingo Molnar:
     "The main x86 MM changes in this cycle were:
    
       - continued native kernel PCID support preparation patches to the TLB
         flushing code (Andy Lutomirski)
    
       - various fixes related to 32-bit compat syscall returning address
         over 4Gb in applications, launched from 64-bit binaries - motivated
         by C/R frameworks such as Virtuozzo. (Dmitry Safonov)
    
       - continued Intel 5-level paging enablement: in particular the
         conversion of x86 GUP to the generic GUP code. (Kirill A. Shutemov)
    
       - x86/mpx ABI corner case fixes/enhancements (Joerg Roedel)
    
       - ... plus misc updates, fixes and cleanups"
    
    * 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (62 commits)
      mm, zone_device: Replace {get, put}_zone_device_page() with a single reference to fix pmem crash
      x86/mm: Fix flush_tlb_page() on Xen
      x86/mm: Make flush_tlb_mm_range() more predictable
      x86/mm: Remove flush_tlb() and flush_tlb_current_task()
      x86/vm86/32: Switch to flush_tlb_mm_range() in mark_screen_rdonly()
      x86/mm/64: Fix crash in remove_pagetable()
      Revert "x86/mm/gup: Switch GUP to the generic get_user_page_fast() implementation"
      x86/boot/e820: Remove a redundant self assignment
      x86/mm: Fix dump pagetables for 4 levels of page tables
      x86/mpx, selftests: Only check bounds-vs-shadow when we keep shadow
      x86/mpx: Correctly report do_mpx_bt_fault() failures to user-space
      Revert "x86/mm/numa: Remove numa_nodemask_from_meminfo()"
      x86/espfix: Add support for 5-level paging
      x86/kasan: Extend KASAN to support 5-level paging
      x86/mm: Add basic defines/helpers for CONFIG_X86_5LEVEL=y
      x86/paravirt: Add 5-level support to the paravirt code
      x86/mm: Define virtual memory map for 5-level paging
      x86/asm: Remove __VIRTUAL_MASK_SHIFT==47 assert
      x86/boot: Detect 5-level paging support
      x86/mm/numa: Remove numa_nodemask_from_meminfo()
      ...

commit 3fb9268e43e7ab62adb5c6ddec58d3cb4767bd9a
Merge: 12ca7c8 262fa73
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 1 22:07:51 2017 -0700

    Merge branch 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 asm updates from Ingo Molnar:
     "The main changes in this cycle were:
    
       - unwinder fixes and enhancements
    
       - improve ftrace interaction with the unwinder
    
       - optimize the code footprint of WARN() and related debugging
         constructs
    
       - ... plus misc updates, cleanups and fixes"
    
    * 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (24 commits)
      x86/unwind: Dump all stacks in unwind_dump()
      x86/unwind: Silence more entry-code related warnings
      x86/ftrace: Fix ebp in ftrace_regs_caller that screws up unwinder
      x86/unwind: Remove unused 'sp' parameter in unwind_dump()
      x86/unwind: Prepend hex mask value with '0x' in unwind_dump()
      x86/unwind: Properly zero-pad 32-bit values in unwind_dump()
      x86/unwind: Ensure stack pointer is aligned
      debug: Avoid setting BUGFLAG_WARNING twice
      x86/unwind: Silence entry-related warnings
      x86/unwind: Read stack return address in update_stack_state()
      x86/unwind: Move common code into update_stack_state()
      debug: Fix __bug_table[] in arch linker scripts
      debug: Add _ONCE() logic to report_bug()
      x86/debug: Define BUG() again for !CONFIG_BUG
      x86/debug: Implement __WARN() using UD0
      x86/ftrace: Use Makefile logic instead of #ifdef for compiling ftrace_*.o
      x86/ftrace: Add -mfentry support to x86_32 with DYNAMIC_FTRACE set
      x86/ftrace: Clean up ftrace_regs_caller
      x86/ftrace: Add stack frame pointer to ftrace_caller
      x86/ftrace: Move the ftrace specific code out of entry_32.S
      ...

commit 16b76293c5c81e6345323d7aef41b26e8390f62d
Merge: 3dee9fb da63b6b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 1 20:51:12 2017 -0700

    Merge branch 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 boot updates from Ingo Molnar:
     "The biggest changes in this cycle were:
    
       - reworking of the e820 code: separate in-kernel and boot-ABI data
         structures and apply a whole range of cleanups to the kernel side.
    
         No change in functionality.
    
       - enable KASLR by default: it's used by all major distros and it's
         out of the experimental stage as well.
    
       - ... misc fixes and cleanups"
    
    * 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (63 commits)
      x86/KASLR: Fix kexec kernel boot crash when KASLR randomization fails
      x86/reboot: Turn off KVM when halting a CPU
      x86/boot: Fix BSS corruption/overwrite bug in early x86 kernel startup
      x86: Enable KASLR by default
      boot/param: Move next_arg() function to lib/cmdline.c for later reuse
      x86/boot: Fix Sparse warning by including required header file
      x86/boot/64: Rename start_cpu()
      x86/xen: Update e820 table handling to the new core x86 E820 code
      x86/boot: Fix pr_debug() API braindamage
      xen, x86/headers: Add <linux/device.h> dependency to <asm/xen/page.h>
      x86/boot/e820: Simplify e820__update_table()
      x86/boot/e820: Separate the E820 ABI structures from the in-kernel structures
      x86/boot/e820: Fix and clean up e820_type switch() statements
      x86/boot/e820: Rename the remaining E820 APIs to the e820__*() prefix
      x86/boot/e820: Remove unnecessary #include's
      x86/boot/e820: Rename e820_mark_nosave_regions() to e820__register_nosave_regions()
      x86/boot/e820: Rename e820_reserve_resources*() to e820__reserve_resources*()
      x86/boot/e820: Use bool in query APIs
      x86/boot/e820: Document e820__reserve_setup_data()
      x86/boot/e820: Clean up __e820__update_table() et al
      ...

commit 3dee9fb2a4ced89a13a4d4b72b0b7360b701e566
Merge: 7c8c03b c6a9583
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 1 20:48:33 2017 -0700

    Merge branch 'ras-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull RAS updates from Ingo Molnar:
     "The main changes in this cycle were:
    
       - add the 'Corrected Errors Collector' kernel feature which collect
         and monitor correctable errors statistics and will preemptively
         (soft-)offline physical pages that have a suspiciously high error
         count.
    
       - handle MCE errors during kexec() more gracefully
    
       - factor out and deprecate the /dev/mcelog driver
    
       - ... plus misc fixes and cleanpus"
    
    * 'ras-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/mce: Check MCi_STATUS[MISCV] for usable addr on Intel only
      ACPI/APEI: Use setup_deferrable_timer()
      x86/mce: Update notifier priority check
      x86/mce: Enable PPIN for Knights Landing/Mill
      x86/mce: Do not register notifiers with invalid prio
      x86/mce: Factor out and deprecate the /dev/mcelog driver
      RAS: Add a Corrected Errors Collector
      x86/mce: Rename mce_log to mce_log_buffer
      x86/mce: Rename mce_log()'s argument
      x86/mce: Init some CPU features early
      x86/mce: Handle broadcasted MCE gracefully with kexec

commit 2fefc97b2180518bac923fba3f79fdca1f41dc15
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Wed Apr 5 19:17:18 2017 -0400

    HAVE_ARCH_HARDENED_USERCOPY is unconditional now
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit 701cac61d0250912b89cbc28589969530179099a
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Wed Apr 5 19:15:53 2017 -0400

    CONFIG_ARCH_HAS_RAW_COPY_USER is unconditional now
    
    all architectures converted
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit 6dd29b3df975582ef429b5b93c899e6575785940
Author: Ingo Molnar <mingo@kernel.org>
Date:   Sun Apr 23 11:37:17 2017 +0200

    Revert "x86/mm/gup: Switch GUP to the generic get_user_page_fast() implementation"
    
    This reverts commit 2947ba054a4dabbd82848728d765346886050029.
    
    Dan Williams reported dax-pmem kernel warnings with the following signature:
    
       WARNING: CPU: 8 PID: 245 at lib/percpu-refcount.c:155 percpu_ref_switch_to_atomic_rcu+0x1f5/0x200
       percpu ref (dax_pmem_percpu_release [dax_pmem]) <= 0 (0) after switching to atomic
    
    ... and bisected it to this commit, which suggests possible memory corruption
    caused by the x86 fast-GUP conversion.
    
    He also pointed out:
    
     "
      This is similar to the backtrace when we were not properly handling
      pud faults and was fixed with this commit: 220ced1676c4 "mm: fix
      get_user_pages() vs device-dax pud mappings"
    
      I've found some missing _devmap checks in the generic
      get_user_pages_fast() path, but this does not fix the regression
      [...]
     "
    
    So given that there are known bugs, and a pretty robust looking bisection
    points to this commit suggesting that are unknown bugs in the conversion
    as well, revert it for the time being - we'll re-try in v4.13.
    
    Reported-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Michal Hocko <mhocko@suse.cz>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: aneesh.kumar@linux.vnet.ibm.com
    Cc: dann.frazier@canonical.com
    Cc: dave.hansen@intel.com
    Cc: steve.capper@linaro.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 6807c84652b0b7e2e198e50a9ad47ef41b236e59
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Apr 18 11:08:12 2017 +0200

    x86: Enable KASLR by default
    
    KASLR is mature (and important) enough to be enabled by default on x86.
    
    Also enable it by default in the defconfigs.
    
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: dan.j.williams@intel.com
    Cc: dave.jiang@intel.com
    Cc: dyoung@redhat.com
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 4c7c44837be77e2689c577abef155c4b5d873c82
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Mar 30 11:07:27 2017 +0300

    x86/mm: Define virtual memory map for 5-level paging
    
    The first part of memory map (up to %esp fixup) simply scales existing
    map for 4-level paging by factor of 9 -- number of bits addressed by
    the additional page table level.
    
    The rest of the map is unchanged.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20170330080731.65421-4-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit beba3a20bf90ce1b93e24592c3ebf0d0bb581bbe
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Mar 25 19:33:21 2017 -0400

    x86: switch to RAW_COPY_USER
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit 5de97c9f6d85fd83af76e09e338b18e7adb1ae60
Author: Tony Luck <tony.luck@intel.com>
Date:   Mon Mar 27 11:33:03 2017 +0200

    x86/mce: Factor out and deprecate the /dev/mcelog driver
    
    Move all code relating to /dev/mcelog to a separate source file.
    /dev/mcelog driver can now operate from the machine check notifier with
    lowest prio.
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    [ Move the mce_helper and trigger functionality behind CONFIG_X86_MCELOG_LEGACY. ]
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20170327093304.10683-6-bp@alien8.de
    [ Renamed CONFIG_X86_MCELOG to CONFIG_X86_MCELOG_LEGACY. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 644e0e8dc76b919976c44d3929164d42cbe656bc
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Thu Mar 23 10:33:52 2017 -0400

    x86/ftrace: Add -mfentry support to x86_32 with DYNAMIC_FTRACE set
    
    x86_64 has had fentry support for some time. I did not add support to x86_32
    as I was unsure if it will be used much in the future. It is still very much
    used, and there's issues with function graph tracing with gcc playing around
    with the mcount frames, causing function graph to panic. The fentry code
    does not have this issue, and is able to cope as there is no frame to mess
    up.
    
    Note, this only adds support for fentry when DYNAMIC_FTRACE is set. There's
    really no reason to not have that set, because the performance of the
    machine drops significantly when it's not enabled.
    
    Keep !DYNAMIC_FTRACE around to test it off, as there's still some archs
    that have FTRACE but not DYNAMIC_FTRACE.
    
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Reviewed-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Link: http://lkml.kernel.org/r/20170323143446.052202377@goodmis.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 2947ba054a4dabbd82848728d765346886050029
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri Mar 17 00:39:06 2017 +0300

    x86/mm/gup: Switch GUP to the generic get_user_page_fast() implementation
    
    This patch provides all required callbacks required by the generic
    get_user_pages_fast() code and switches x86 over - and removes
    the platform specific implementation.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Aneesh Kumar K . V <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Dann Frazier <dann.frazier@canonical.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Steve Capper <steve.capper@linaro.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20170316213906.89528-1-kirill.shutemov@linux.intel.com
    [ Minor readability edits. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 1b028f784e8c341e762c264f70dc0ca1418c8b7a
Author: Dmitry Safonov <dsafonov@virtuozzo.com>
Date:   Mon Mar 6 17:17:19 2017 +0300

    x86/mm: Introduce mmap_compat_base() for 32-bit mmap()
    
    mmap() uses a base address, from which it starts to look for a free space
    for allocation.
    
    The base address is stored in mm->mmap_base, which is calculated during
    exec(). The address depends on task's size, set rlimit for stack, ASLR
    randomization. The base depends on the task size and the number of random
    bits which are different for 64-bit and 32bit applications.
    
    Due to the fact, that the base address is fixed, its mmap() from a compat
    (32bit) syscall issued by a 64bit task will return a address which is based
    on the 64bit base address and does not fit into the 32bit address space
    (4GB). The returned pointer is truncated to 32bit, which results in an
    invalid address.
    
    To solve store a seperate compat address base plus a compat legacy address
    base in mm_struct. These bases are calculated at exec() time and can be
    used later to address the 32bit compat mmap() issued by 64 bit
    applications.
    
    As a consequence of this change 32-bit applications issuing a 64-bit
    syscall (after doing a long jump) will get a 64-bit mapping now. Before
    this change 32-bit applications always got a 32bit mapping.
    
    [ tglx: Massaged changelog and added a comment ]
    
    Signed-off-by: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: 0x7f454c46@gmail.com
    Cc: linux-mm@kvack.org
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Link: http://lkml.kernel.org/r/20170306141721.9188-4-dsafonov@virtuozzo.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit af085d9084b48530153f51e6cad19fd0b1a13ed7
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Feb 13 19:42:28 2017 -0600

    stacktrace/x86: add function for detecting reliable stack traces
    
    For live patching and possibly other use cases, a stack trace is only
    useful if it can be assured that it's completely reliable.  Add a new
    save_stack_trace_tsk_reliable() function to achieve that.
    
    Note that if the target task isn't the current task, and the target task
    is allowed to run, then it could be writing the stack while the unwinder
    is reading it, resulting in possible corruption.  So the caller of
    save_stack_trace_tsk_reliable() must ensure that the task is either
    'current' or inactive.
    
    save_stack_trace_tsk_reliable() relies on the x86 unwinder's detection
    of pt_regs on the stack.  If the pt_regs are not user-mode registers
    from a syscall, then they indicate an in-kernel interrupt or exception
    (e.g. preemption or a page fault), in which case the stack is considered
    unreliable due to the nature of frame pointers.
    
    It also relies on the x86 unwinder's detection of other issues, such as:
    
    - corrupted stack data
    - stack grows the wrong way
    - stack walk doesn't reach the bottom
    - user didn't provide a large enough entries array
    
    Such issues are reported by checking unwind_error() and !unwind_done().
    
    Also add CONFIG_HAVE_RELIABLE_STACKTRACE so arch-independent code can
    determine at build time whether the function is implemented.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Reviewed-by: Miroslav Benes <mbenes@suse.cz>
    Acked-by: Ingo Molnar <mingo@kernel.org>	# for the x86 changes
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit 5d8a00eee2ed2e548a5d21b0edf495f3f7bf8bb4
Merge: 7067739 f59de56
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Feb 25 14:28:06 2017 -0800

    Merge tag 'clk-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux
    
    Pull clk updates from Stephen Boyd:
     "The usual collection of new drivers, non-critical fixes, and updates
      to existing clk drivers. The bulk of the work is on Allwinner and
      Rockchip SoCs, but there's also an Intel Atom driver in here too.
    
      New Drivers:
       - Tegra BPMP firmware
       - Hisilicon hi3660 SoCs
       - Rockchip rk3328 SoCs
       - Intel Atom PMC
       - STM32F746
       - IDT VersaClock 5P49V5923 and 5P49V5933
       - Marvell mv98dx3236 SoCs
       - Allwinner V3s SoCs
    
      Removed Drivers:
       - Samsung Exynos4415 SoCs
    
      Updates:
       - Migrate ABx500 to OF
       - Qualcomm IPQ4019 CPU clks and general PLL support
       - Qualcomm MSM8974 RPM
       - Rockchip non-critical fixes and clk id additions
       - Samsung Exynos4412 CPUs
       - Socionext UniPhier NAND and eMMC support
       - ZTE zx296718 i2s and other audio clks
       - Renesas CAN and MSIOF clks for R-Car M3-W
       - Renesas resets for R-Car Gen2 and Gen3 and RZ/G1
       - TI CDCE913, CDCE937, and CDCE949 clk generators
       - Marvell Armada ap806 CPU frequencies
       - STM32F4* I2S/SAI support
       - Broadcom BCM2835 DSI support
       - Allwinner sun5i and A80 conversion to new style clk bindings"
    
    * tag 'clk-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux: (130 commits)
      clk: renesas: mstp: ensure register writes complete
      clk: qcom: Do not drop device node twice
      clk: mvebu: adjust clock handling for the CP110 system controller
      clk: mvebu: Expand mv98dx3236-core-clock support
      clk: zte: add i2s clocks for zx296718
      clk: sunxi-ng: sun9i-a80: Fix wrong pointer passed to PTR_ERR()
      clk: sunxi-ng: select SUNXI_CCU_MULT for sun5i
      clk: sunxi-ng: Check kzalloc() for errors and cleanup error path
      clk: tegra: Add BPMP clock driver
      clk: uniphier: add eMMC clock for LD11 and LD20 SoCs
      clk: uniphier: add NAND clock for all UniPhier SoCs
      ARM: dts: sun9i: Switch to new clock bindings
      clk: sunxi-ng: Add A80 Display Engine CCU
      clk: sunxi-ng: Add A80 USB CCU
      clk: sunxi-ng: Add A80 CCU
      clk: sunxi-ng: Support separately grouped PLL lock status register
      clk: sunxi-ng: mux: Get closest parent rate possible with CLK_SET_RATE_PARENT
      clk: sunxi-ng: mux: honor CLK_SET_RATE_NO_REPARENT flag
      clk: sunxi-ng: mux: Fix determine_rate for mux clocks with pre-dividers
      clk: qcom: SDHCI enablement on Nexus 5X / 6P
      ...

commit a00cc7d9dd93d66a3fb83fc52aa57a4bec51c517
Author: Matthew Wilcox <willy@linux.intel.com>
Date:   Fri Feb 24 14:57:02 2017 -0800

    mm, x86: add support for PUD-sized transparent hugepages
    
    The current transparent hugepage code only supports PMDs.  This patch
    adds support for transparent use of PUDs with DAX.  It does not include
    support for anonymous pages.  x86 support code also added.
    
    Most of this patch simply parallels the work that was done for huge
    PMDs.  The only major difference is how the new ->pud_entry method in
    mm_walk works.  The ->pmd_entry method replaces the ->pte_entry method,
    whereas the ->pud_entry method works along with either ->pmd_entry or
    ->pte_entry.  The pagewalk code takes care of locking the PUD before
    calling ->pud_walk, so handlers do not need to worry whether the PUD is
    stable.
    
    [dave.jiang@intel.com: fix SMP x86 32bit build for native_pud_clear()]
      Link: http://lkml.kernel.org/r/148719066814.31111.3239231168815337012.stgit@djiang5-desk3.ch.intel.com
    [dave.jiang@intel.com: native_pud_clear missing on i386 build]
      Link: http://lkml.kernel.org/r/148640375195.69754.3315433724330910314.stgit@djiang5-desk3.ch.intel.com
    Link: http://lkml.kernel.org/r/148545059381.17912.8602162635537598445.stgit@djiang5-desk3.ch.intel.com
    Signed-off-by: Matthew Wilcox <mawilcox@microsoft.com>
    Signed-off-by: Dave Jiang <dave.jiang@intel.com>
    Tested-by: Alexander Kapshuk <alexander.kapshuk@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Jan Kara <jack@suse.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Nilesh Choudhury <nilesh.choudhury@oracle.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit ca78d3173cff3503bcd15723b049757f75762d15
Merge: a4ee7ba ffe7afd
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Feb 22 10:46:44 2017 -0800

    Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux
    
    Pull arm64 updates from Will Deacon:
     - Errata workarounds for Qualcomm's Falkor CPU
     - Qualcomm L2 Cache PMU driver
     - Qualcomm SMCCC firmware quirk
     - Support for DEBUG_VIRTUAL
     - CPU feature detection for userspace via MRS emulation
     - Preliminary work for the Statistical Profiling Extension
     - Misc cleanups and non-critical fixes
    
    * tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux: (74 commits)
      arm64/kprobes: consistently handle MRS/MSR with XZR
      arm64: cpufeature: correctly handle MRS to XZR
      arm64: traps: correctly handle MRS/MSR with XZR
      arm64: ptrace: add XZR-safe regs accessors
      arm64: include asm/assembler.h in entry-ftrace.S
      arm64: fix warning about swapper_pg_dir overflow
      arm64: Work around Falkor erratum 1003
      arm64: head.S: Enable EL1 (host) access to SPE when entered at EL2
      arm64: arch_timer: document Hisilicon erratum 161010101
      arm64: use is_vmalloc_addr
      arm64: use linux/sizes.h for constants
      arm64: uaccess: consistently check object sizes
      perf: add qcom l2 cache perf events driver
      arm64: remove wrong CONFIG_PROC_SYSCTL ifdef
      ARM: smccc: Update HVC comment to describe new quirk parameter
      arm64: do not trace atomic operations
      ACPI/IORT: Fix the error return code in iort_add_smmu_platform_device()
      ACPI/IORT: Fix iort_node_get_id() mapping entries indexing
      arm64: mm: enable CONFIG_HOLES_IN_ZONE for NUMA
      perf: xgene: Include module.h
      ...

commit 3051bf36c25d5153051704291782f8d44e744d36
Merge: 1e74a2e 005c349
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Feb 22 10:15:09 2017 -0800

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next
    
    Pull networking updates from David Miller:
     "Highlights:
    
       1) Support TX_RING in AF_PACKET TPACKET_V3 mode, from Sowmini
          Varadhan.
    
       2) Simplify classifier state on sk_buff in order to shrink it a bit.
          From Willem de Bruijn.
    
       3) Introduce SIPHASH and it's usage for secure sequence numbers and
          syncookies. From Jason A. Donenfeld.
    
       4) Reduce CPU usage for ICMP replies we are going to limit or
          suppress, from Jesper Dangaard Brouer.
    
       5) Introduce Shared Memory Communications socket layer, from Ursula
          Braun.
    
       6) Add RACK loss detection and allow it to actually trigger fast
          recovery instead of just assisting after other algorithms have
          triggered it. From Yuchung Cheng.
    
       7) Add xmit_more and BQL support to mvneta driver, from Simon Guinot.
    
       8) skb_cow_data avoidance in esp4 and esp6, from Steffen Klassert.
    
       9) Export MPLS packet stats via netlink, from Robert Shearman.
    
      10) Significantly improve inet port bind conflict handling, especially
          when an application is restarted and changes it's setting of
          reuseport. From Josef Bacik.
    
      11) Implement TX batching in vhost_net, from Jason Wang.
    
      12) Extend the dummy device so that VF (virtual function) features,
          such as configuration, can be more easily tested. From Phil
          Sutter.
    
      13) Avoid two atomic ops per page on x86 in bnx2x driver, from Eric
          Dumazet.
    
      14) Add new bpf MAP, implementing a longest prefix match trie. From
          Daniel Mack.
    
      15) Packet sample offloading support in mlxsw driver, from Yotam Gigi.
    
      16) Add new aquantia driver, from David VomLehn.
    
      17) Add bpf tracepoints, from Daniel Borkmann.
    
      18) Add support for port mirroring to b53 and bcm_sf2 drivers, from
          Florian Fainelli.
    
      19) Remove custom busy polling in many drivers, it is done in the core
          networking since 4.5 times. From Eric Dumazet.
    
      20) Support XDP adjust_head in virtio_net, from John Fastabend.
    
      21) Fix several major holes in neighbour entry confirmation, from
          Julian Anastasov.
    
      22) Add XDP support to bnxt_en driver, from Michael Chan.
    
      23) VXLAN offloads for enic driver, from Govindarajulu Varadarajan.
    
      24) Add IPVTAP driver (IP-VLAN based tap driver) from Sainath Grandhi.
    
      25) Support GRO in IPSEC protocols, from Steffen Klassert"
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next: (1764 commits)
      Revert "ath10k: Search SMBIOS for OEM board file extension"
      net: socket: fix recvmmsg not returning error from sock_error
      bnxt_en: use eth_hw_addr_random()
      bpf: fix unlocking of jited image when module ronx not set
      arch: add ARCH_HAS_SET_MEMORY config
      net: napi_watchdog() can use napi_schedule_irqoff()
      tcp: Revert "tcp: tcp_probe: use spin_lock_bh()"
      net/hsr: use eth_hw_addr_random()
      net: mvpp2: enable building on 64-bit platforms
      net: mvpp2: switch to build_skb() in the RX path
      net: mvpp2: simplify MVPP2_PRS_RI_* definitions
      net: mvpp2: fix indentation of MVPP2_EXT_GLOBAL_CTRL_DEFAULT
      net: mvpp2: remove unused register definitions
      net: mvpp2: simplify mvpp2_bm_bufs_add()
      net: mvpp2: drop useless fields in mvpp2_bm_pool and related code
      net: mvpp2: remove unused 'tx_skb' field of 'struct mvpp2_tx_queue'
      net: mvpp2: release reference to txq_cpu[] entry after unmapping
      net: mvpp2: handle too large value in mvpp2_rx_time_coal_set()
      net: mvpp2: handle too large value handling in mvpp2_rx_pkts_coal_set()
      net: mvpp2: remove useless arguments in mvpp2_rx_{pkts, time}_coal_set
      ...

commit 7bb033829ef3ecfc491c0ed0197966e8f197fbdc
Merge: 4a0853b 0f5bf6d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Feb 21 17:56:45 2017 -0800

    Merge tag 'rodata-v4.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
    
    Pull rodata updates from Kees Cook:
     "This renames the (now inaccurate) DEBUG_RODATA and related
      SET_MODULE_RONX configs to the more sensible STRICT_KERNEL_RWX and
      STRICT_MODULE_RWX"
    
    * tag 'rodata-v4.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:
      arch: Rename CONFIG_DEBUG_RODATA and CONFIG_DEBUG_MODULE_RONX
      arch: Move CONFIG_DEBUG_RODATA and CONFIG_SET_MODULE_RONX to be common

commit d2852a2240509e512712e25de2d0796cda435ecb
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Tue Feb 21 16:09:33 2017 +0100

    arch: add ARCH_HAS_SET_MEMORY config
    
    Currently, there's no good way to test for the presence of
    set_memory_ro/rw/x/nx() helpers implemented by archs such as
    x86, arm, arm64 and s390.
    
    There's DEBUG_SET_MODULE_RONX and DEBUG_RODATA, however both
    don't really reflect that: set_memory_*() are also available
    even when DEBUG_SET_MODULE_RONX is turned off, and DEBUG_RODATA
    is set by parisc, but doesn't implement above functions. Thus,
    add ARCH_HAS_SET_MEMORY that is selected by mentioned archs,
    where generic code can test against this.
    
    This also allows later on to move DEBUG_SET_MODULE_RONX out of
    the arch specific Kconfig to define it only once depending on
    ARCH_HAS_SET_MEMORY.
    
    Suggested-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit 292d38674301c6fbee3965e446bd1c8a6672a400
Merge: 4abaa80 5773ebf
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Feb 20 14:04:37 2017 -0800

    Merge branch 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 boot updates from Ingo Molnar:
     "Misc updates:
    
       - fix e820 error handling
    
       - convert page table setup code from assembly to C
    
       - fix kexec environment bug
    
       - ... plus small cleanups"
    
    * 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/kconfig: Remove misleading note regarding hibernation and KASLR
      x86/boot: Fix KASLR and memmap= collision
      x86/e820/32: Fix e820_search_gap() error handling on x86-32
      x86/boot/32: Convert the 32-bit pgtable setup code from assembly to C
      x86/e820: Make e820_search_gap() static and remove unused variables

commit ad21fc4faa2a1f919bac1073b885df9310dbc581
Author: Laura Abbott <labbott@redhat.com>
Date:   Mon Feb 6 16:31:57 2017 -0800

    arch: Move CONFIG_DEBUG_RODATA and CONFIG_SET_MODULE_RONX to be common
    
    There are multiple architectures that support CONFIG_DEBUG_RODATA and
    CONFIG_SET_MODULE_RONX. These options also now have the ability to be
    turned off at runtime. Move these to an architecture independent
    location and make these options def_bool y for almost all of those
    arches.
    
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>

commit 5773ebfee729acf93b330664eab4c8d77edc2193
Author: Niklas Cassel <niklas.cassel@axis.com>
Date:   Mon Feb 6 17:43:49 2017 +0100

    x86/kconfig: Remove misleading note regarding hibernation and KASLR
    
    There used to be a restriction with KASLR and hibernation, but this is no
    longer true, and since commit:
    
      65fe935dd238 ("x86/KASLR, x86/power: Remove x86 hibernation restrictions")
    
    the parameter "kaslr" does no longer exist.
    
    Signed-off-by: Niklas Cassel <niklas.cassel@axis.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Niklas Cassel <niklass@axis.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1486399429-23078-1-git-send-email-niklass@axis.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 80a7581f38c0b2e83dc883a2125340b90b5635ec
Author: Irina Tirdea <irina.tirdea@intel.com>
Date:   Mon Jan 23 12:07:43 2017 -0600

    arch/x86/platform/atom: Move pmc_atom to drivers/platform/x86
    
    The pmc_atom driver does not contain any architecture specific
    code. It only enables the SoC Power Management Controller driver
    for BayTrail and CherryTrail platforms.
    
    Move the pmc_atom driver from arch/x86/platform/atom to
    drivers/platform/x86. Also clean-up and reorder include files by
    alphabetical order in pmc_atom.h
    
    Signed-off-by: Irina Tirdea <irina.tirdea@intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>

commit d4b2ac63b0eae461fc10c9791084be24724ef57a
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Jan 23 19:35:06 2017 +0100

    x86/ras/inject: Make it depend on X86_LOCAL_APIC=y
    
    ... and get rid of the annoying:
    
      arch/x86/kernel/cpu/mcheck/mce-inject.c:97:13: warning: ‘mce_irq_ipi’ defined but not used [-Wunused-function]
    
    when doing randconfig builds.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Yazen Ghannam <Yazen.Ghannam@amd.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20170123183514.13356-2-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit fa5b6ec9e5274aeae2326e25995506a953e5f878
Author: Laura Abbott <labbott@redhat.com>
Date:   Tue Jan 10 13:35:40 2017 -0800

    lib/Kconfig.debug: Add ARCH_HAS_DEBUG_VIRTUAL
    
    DEBUG_VIRTUAL currently depends on DEBUG_KERNEL && X86. arm64 is getting
    the same support. Rather than add a list of architectures, switch this
    to ARCH_HAS_DEBUG_VIRTUAL and let architectures select it as
    appropriate.
    
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Mark Rutland <mark.rutland@arm.com>
    Suggested-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>

commit eb254f323bd50ab7e3cc385f2fc641a595cc8b37
Merge: f79f7b1 76ae054
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Dec 22 09:25:45 2016 -0800

    Merge branch 'x86-cache-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 cache allocation interface from Thomas Gleixner:
     "This provides support for Intel's Cache Allocation Technology, a cache
      partitioning mechanism.
    
      The interface is odd, but the hardware interface of that CAT stuff is
      odd as well.
    
      We tried hard to come up with an abstraction, but that only allows
      rather simple partitioning, but no way of sharing and dealing with the
      per package nature of this mechanism.
    
      In the end we decided to expose the allocation bitmaps directly so all
      combinations of the hardware can be utilized.
    
      There are two ways of associating a cache partition:
    
       - Task
    
         A task can be added to a resource group. It uses the cache
         partition associated to the group.
    
       - CPU
    
         All tasks which are not member of a resource group use the group to
         which the CPU they are running on is associated with.
    
         That allows for simple CPU based partitioning schemes.
    
      The main expected user sare:
    
       - Virtualization so a VM can only trash only the associated part of
         the cash w/o disturbing others
    
       - Real-Time systems to seperate RT and general workloads.
    
       - Latency sensitive enterprise workloads
    
       - In theory this also can be used to protect against cache side
         channel attacks"
    
    [ Intel RDT is "Resource Director Technology". The interface really is
      rather odd and very specific, which delayed this pull request while I
      was thinking about it. The pull request itself came in early during
      the merge window, I just delayed it until things had calmed down and I
      had more time.
    
      But people tell me they'll use this, and the good news is that it is
      _so_ specific that it's rather independent of anything else, and no
      user is going to depend on the interface since it's pretty rare. So if
      push comes to shove, we can just remove the interface and nothing will
      break ]
    
    * 'x86-cache-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (31 commits)
      x86/intel_rdt: Implement show_options() for resctrlfs
      x86/intel_rdt: Call intel_rdt_sched_in() with preemption disabled
      x86/intel_rdt: Update task closid immediately on CPU in rmdir and unmount
      x86/intel_rdt: Fix setting of closid when adding CPUs to a group
      x86/intel_rdt: Update percpu closid immeditately on CPUs affected by changee
      x86/intel_rdt: Reset per cpu closids on unmount
      x86/intel_rdt: Select KERNFS when enabling INTEL_RDT_A
      x86/intel_rdt: Prevent deadlock against hotplug lock
      x86/intel_rdt: Protect info directory from removal
      x86/intel_rdt: Add info files to Documentation
      x86/intel_rdt: Export the minimum number of set mask bits in sysfs
      x86/intel_rdt: Propagate error in rdt_mount() properly
      x86/intel_rdt: Add a missing #include
      MAINTAINERS: Add maintainer for Intel RDT resource allocation
      x86/intel_rdt: Add scheduler hook
      x86/intel_rdt: Add schemata file
      x86/intel_rdt: Add tasks files
      x86/intel_rdt: Add cpus file
      x86/intel_rdt: Add mkdir to resctrl file system
      x86/intel_rdt: Add "info" files to resctrl file system
      ...

commit 8421c60446290c0fef1858a806261871a40ebf76
Merge: f7dd3b17 83da6b5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Dec 18 15:45:33 2016 -0800

    Merge tag 'platform-drivers-x86-v4.10-2' of git://git.infradead.org/users/dvhart/linux-platform-drivers-x86
    
    Pull more x86 platform driver updates from Darren Hart:
     "Move and add registration for the mlx-platform driver. Introduce
      button and lid drivers for the surface3 (different from the
      surface3-pro). Add BXT PMIC TMU support. Add Y700 to existing
      ideapad-laptop quirk.
    
      Summary:
    
      ideapad-laptop:
       - Add Y700 15-ACZ to no_hw_rfkill DMI list
    
      surface3_button:
       - Introduce button support for the Surface 3
    
      surface3-wmi:
       - Add custom surface3 platform device for controlling LID
       - Balance locking on error path
    
      mlx-platform:
       - Add mlxcpld-hotplug driver registration
       - Fix semicolon.cocci warnings
       - Move module from arch/x86
    
      platform/x86:
       - Add Whiskey Cove PMIC TMU support"
    
    * tag 'platform-drivers-x86-v4.10-2' of git://git.infradead.org/users/dvhart/linux-platform-drivers-x86:
      platform/x86: surface3-wmi: Balance locking on error path
      platform/x86: Add Whiskey Cove PMIC TMU support
      platform/x86: ideapad-laptop: Add Y700 15-ACZ to no_hw_rfkill DMI list
      platform/x86: Introduce button support for the Surface 3
      platform/x86: Add custom surface3 platform device for controlling LID
      platform/x86: mlx-platform: Add mlxcpld-hotplug driver registration
      platform/x86: mlx-platform: Fix semicolon.cocci warnings
      platform/x86: mlx-platform: Move module from arch/x86

commit 6613d18e90385db5cdbe32fe47567a3c11575b2d
Author: Vadim Pasternak <vadimp@mellanox.com>
Date:   Mon Oct 31 07:22:33 2016 +0000

    platform/x86: mlx-platform: Move module from arch/x86
    
    Since mlx-platform is not an architectural driver, it is moved out
    of arch/x86/platform to drivers/platform/x86.
    Relevant Makefile and Kconfig are updated.
    
    Signed-off-by: Vadim Pasternak <vadimp@mellanox.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>

commit e7aa8c2eb11ba69b1b69099c3c7bd6be3087b0ba
Merge: e34bac7 868c97a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Dec 12 21:58:13 2016 -0800

    Merge tag 'docs-4.10' of git://git.lwn.net/linux
    
    Pull documentation update from Jonathan Corbet:
     "These are the documentation changes for 4.10.
    
      It's another busy cycle for the docs tree, as the sphinx conversion
      continues. Highlights include:
    
       - Further work on PDF output, which remains a bit of a pain but
         should be more solid now.
    
       - Five more DocBook template files converted to Sphinx. Only 27 to
         go... Lots of plain-text files have also been converted and
         integrated.
    
       - Images in binary formats have been replaced with more
         source-friendly versions.
    
       - Various bits of organizational work, including the renaming of
         various files discussed at the kernel summit.
    
       - New documentation for the device_link mechanism.
    
      ... and, of course, lots of typo fixes and small updates"
    
    * tag 'docs-4.10' of git://git.lwn.net/linux: (193 commits)
      dma-buf: Extract dma-buf.rst
      Update Documentation/00-INDEX
      docs: 00-INDEX: document directories/files with no docs
      docs: 00-INDEX: remove non-existing entries
      docs: 00-INDEX: add missing entries for documentation files/dirs
      docs: 00-INDEX: consolidate process/ and admin-guide/ description
      scripts: add a script to check if Documentation/00-INDEX is sane
      Docs: change sh -> awk in REPORTING-BUGS
      Documentation/core-api/device_link: Add initial documentation
      core-api: remove an unexpected unident
      ppc/idle: Add documentation for powersave=off
      Doc: Correct typo, "Introdution" => "Introduction"
      Documentation/atomic_ops.txt: convert to ReST markup
      Documentation/local_ops.txt: convert to ReST markup
      Documentation/assoc_array.txt: convert to ReST markup
      docs-rst: parse-headers.pl: cleanup the documentation
      docs-rst: fix media cleandocs target
      docs-rst: media/Makefile: reorganize the rules
      docs-rst: media: build SVG from graphviz files
      docs-rst: replace bayer.png by a SVG image
      ...

commit 5fc0363d439ff15d2b9b1a5abe8265fa17512975
Merge: 06cc6b9 9190e21
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Dec 12 14:16:19 2016 -0800

    Merge branch 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 build updates from Ingo Molnar:
     "The main changes in this cycle were:
    
       - Makefile improvements (Paul Bolle)
    
       - KConfig cleanups to better separate 32-bit only, 64-bit only and
         generic feature enablement sections (Ingo Molnar)"
    
    * 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/build: Remove three unneeded genhdr-y entries
      x86/build: Don't use $(LINUXINCLUDE) twice
      x86/kconfig: Sort the 'config X86' selects alphabetically
      x86/kconfig: Clean up 32-bit compat options
      x86/kconfig: Clean up IA32_EMULATION select
      x86/kconfig, x86/pkeys: Move pkeys selects to X86_INTEL_MEMORY_PROTECTION_KEYS
      x86/kconfig: Move 64-bit only arch Kconfig selects to 'config X86_64'
      x86/kconfig: Move 32-bit only arch Kconfig selects to 'config X86_32'

commit df5f0f0a028c9bf43949398a175dbaafaf513e14
Merge: cbaa157 3f5a789
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Dec 12 12:58:50 2016 -0800

    Merge branch 'ras-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 RAS updates from Ingo Molnar:
     "The main changes in this development cycle were:
    
       - more AMD northbridge support work, mostly in preparation for Fam17h
         CPUs (Yazen Ghannam, Borislav Petkov)
    
       - cleanups/refactorings and fixes (Borislav Petkov, Tony Luck,
         Yinghai Lu)"
    
    * 'ras-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/mce: Include the PPIN in MCE records when available
      x86/mce/AMD: Add system physical address translation for AMD Fam17h
      x86/amd_nb: Add SMN and Indirect Data Fabric access for AMD Fam17h
      x86/amd_nb: Add Fam17h Data Fabric as "Northbridge"
      x86/amd_nb: Make all exports EXPORT_SYMBOL_GPL
      x86/amd_nb: Make amd_northbridges internal to amd_nb.c
      x86/mce/AMD: Reset Threshold Limit after logging error
      x86/mce/AMD: Fix HWID_MCATYPE calculation by grouping arguments
      x86/MCE: Correct TSC timestamping of error records
      x86/RAS: Hide SMCA bank names
      x86/RAS: Rename smca_bank_names to smca_names
      x86/RAS: Simplify SMCA HWID descriptor struct
      x86/RAS: Simplify SMCA bank descriptor struct
      x86/MCE: Dump MCE to dmesg if no consumers
      x86/RAS: Add TSC timestamp to the injected MCE
      x86/MCE: Do not look at panic_on_oops in the severity grading

commit 0a21fc1214a25427e13538665ff2afbe707a0b9f
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Nov 30 08:33:54 2016 +0100

    sched/x86: Make CONFIG_SCHED_MC_PRIO=y easier to enable
    
    Right now CONFIG_SCHED_MC_PRIO has X86_INTEL_PSTATE as a dependency,
    which is not enabled by default and which hides the CONFIG_SCHED_MC_PRIO
    hardware-enabling feature.
    
    Select X86_INTEL_PSTATE instead, plus its dependency (CPU_FREQ), if the
    user enables CONFIG_SCHED_MC_PRIO=y.
    
    (Also align the CONFIG_SCHED_MC_PRIO Kconfig help text in standard style.)
    
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: bp@suse.de
    Cc: jolsa@redhat.com
    Cc: linux-acpi@vger.kernel.org
    Cc: linux-pm@vger.kernel.org
    Cc: rjw@rjwysocki.net
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit de966cf4a4fa8d4e0357b08204bc791f34deb3fb
Author: Tim Chen <tim.c.chen@linux.intel.com>
Date:   Tue Nov 29 10:43:27 2016 -0800

    sched/x86: Change CONFIG_SCHED_ITMT to CONFIG_SCHED_MC_PRIO
    
    Rename CONFIG_SCHED_ITMT for Intel Turbo Boost Max Technology 3.0
    to CONFIG_SCHED_MC_PRIO.  This makes the configuration extensible
    in future to other architectures that wish to similarly establish
    CPU core priorities support in the scheduler.
    
    The description in Kconfig is updated to reflect this change with
    added details for better clarity.  The configuration is explicitly
    default-y, to enable the feature on CPUs that have this feature.
    
    It has no effect on non-TBM3 CPUs.
    
    Signed-off-by: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: bp@suse.de
    Cc: jolsa@redhat.com
    Cc: linux-acpi@vger.kernel.org
    Cc: linux-pm@vger.kernel.org
    Cc: rjw@rjwysocki.net
    Link: http://lkml.kernel.org/r/2b2ee29d93e3f162922d72d0165a1405864fbb23.1480444902.git.tim.c.chen@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 5e76b2ab36b40ca33023e78725bdc69eafd63134
Author: Tim Chen <tim.c.chen@linux.intel.com>
Date:   Tue Nov 22 12:23:55 2016 -0800

    x86: Enable Intel Turbo Boost Max Technology 3.0
    
    On platforms supporting Intel Turbo Boost Max Technology 3.0, the maximum
    turbo frequencies of some cores in a CPU package may be higher than for
    the other cores in the same package.  In that case, better performance
    (and possibly lower energy consumption as well) can be achieved by
    making the scheduler prefer to run tasks on the CPUs with higher max
    turbo frequencies.
    
    To that end, set up a core priority metric to abstract the core
    preferences based on the maximum turbo frequency.  In that metric,
    the cores with higher maximum turbo frequencies are higher-priority
    than the other cores in the same package and that causes the scheduler
    to favor them when making load-balancing decisions using the asymmertic
    packing approach.  At the same time, the priority of SMT threads with a
    higher CPU number is reduced so as to avoid scheduling tasks on all of
    the threads that belong to a favored core before all of the other cores
    have been given a task to run.
    
    The priority metric will be initialized by the P-state driver with the
    help of the sched_set_itmt_core_prio() function.  The P-state driver
    will also determine whether or not ITMT is supported by the platform
    and will call sched_set_itmt_support() to indicate that.
    
    Co-developed-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Co-developed-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Signed-off-by: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: linux-pm@vger.kernel.org
    Cc: peterz@infradead.org
    Cc: jolsa@redhat.com
    Cc: rjw@rjwysocki.net
    Cc: linux-acpi@vger.kernel.org
    Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: bp@suse.de
    Link: http://lkml.kernel.org/r/cd401ccdff88f88c8349314febdc25d51f7c48f7.1479844244.git.tim.c.chen@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit f5382de9d4b1d67cc858c49fa6077720621576ea
Author: Yazen Ghannam <Yazen.Ghannam@amd.com>
Date:   Thu Nov 17 17:57:27 2016 -0500

    x86/mce/AMD: Add system physical address translation for AMD Fam17h
    
    The Unified Memory Controllers (UMCs) on Fam17h log a normalized address
    in their MCA_ADDR registers. We need to convert that normalized address
    to a system physical address in order to support a few facilities:
    
    1) To offline poisoned pages in DRAM proactively in the deferred error
       handler.
    
    2) To print sysaddr and page info for DRAM ECC errors in EDAC.
    
    [ Boris: fixes/cleanups ontop:
    
      * hi_addr_offset = 0 - no need for that branch. Stick it all under the
        HiAddrOffsetEn case. It confines hi_addr_offset's declaration too.
    
      * Move variables to the innermost scope they're used at so that we save
        on stack and not blow it up immediately on function entry.
    
      * Do not modify *sys_addr prematurely - we want to not exit early and
        have modified *sys_addr some, which callers get to see. We either
        convert to a sys_addr or we don't do anything. And we signal that with
        the retval of the function.
    
      * Rename label out -> out_err - because it is the error path.
    
      * No need to pr_err of the conversion failed case: imagine a
        sparsely-populated machine with UMCs which don't have DIMMs. Callers
        should look at the retval instead and issue a printk only when really
        necessary. No need for useless info in dmesg.
    
      * s/temp_reg/tmp/ and other variable names shortening => shorter code.
    
      * Use BIT() everywhere.
    
      * Make error messages more informative.
    
      *  Small build fix for the !CONFIG_X86_MCE_AMD case.
    
      * ... and more minor cleanups.
    ]
    
    Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Aravind Gopalakrishnan <aravindksg.lkml@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20161122111133.mjzpvzhf7o7yl2oa@pd.tnic
    [ Typo fixes. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 59fe5a77d473f3519dbee8ef5e77c69897a838f9
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Nov 15 15:17:12 2016 +0100

    x86/intel_rdt: Select KERNFS when enabling INTEL_RDT_A
    
    arch/x86/kernel/cpu/intel_rdt_rdtgroup.c: In function 'rdtgroup_kn_lock_live':
    arch/x86/kernel/cpu/intel_rdt_rdtgroup.c:658:2: error: implicit declaration of
    function 'kernfs_break_active_protection' [-Werror=implicit-function-declaration]
    
    Reported-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Shaohua Li <shli@fb.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Tony Luck <tony.luck@intel.com>

commit c763ea2650dfa7e95562177f20f0394dce7d6aa9
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Nov 15 10:26:39 2016 +0100

    x86/kconfig: Sort the 'config X86' selects alphabetically
    
    This organizes the list a bit, plus reduces future conflicts (if people
    remember to insert new options alphabetically that is).
    
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 953fee1d82f3454091e9ddc88205136d31f7f212
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Nov 15 10:22:52 2016 +0100

    x86/kconfig: Clean up 32-bit compat options
    
    Introduce a 'COMPAT_32' helper config value for 'X86_32 || IA32_EMULATION'
    and use it.
    
    Also move some selects to this new option, to remove more selects from
    the generic X86 section.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 39f88911b9dc6c43391a0a3dd609cce8534e40e2
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Nov 15 10:22:52 2016 +0100

    x86/kconfig: Clean up IA32_EMULATION select
    
    Move a 'if IA32_EMULATION' select from the generic X86 section
    to the IA32_EMULATION option.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 52c8e6017c764dcae33cc5c65c1fd37084b04b30
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Nov 15 10:15:03 2016 +0100

    x86/kconfig, x86/pkeys: Move pkeys selects to X86_INTEL_MEMORY_PROTECTION_KEYS
    
    Move the pkeys selects from the generic x86 config section to
    the X86_INTEL_MEMORY_PROTECTION_KEYS section.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit d94e068573f2cf9aa92759f37829c5e5259e5cf1
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Nov 15 10:11:57 2016 +0100

    x86/kconfig: Move 64-bit only arch Kconfig selects to 'config X86_64'
    
    These are easier to read when they come next to the X86_64 config.
    
    Note that all remaining 'if X86_64' config options in the generic
    section are in principle suitable for activation on 32-bit, but have
    not been ported yet.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 341c787e34afb3599977a077ea01ee213323620c
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Nov 15 10:04:55 2016 +0100

    x86/kconfig: Move 32-bit only arch Kconfig selects to 'config X86_32'
    
    These are easier to read when they come next to the X86_32 config.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 78e99b4a2b9afb1c304259fcd4a1c71ca97e3acd
Author: Fenghua Yu <fenghua.yu@intel.com>
Date:   Sat Oct 22 06:19:53 2016 -0700

    x86/intel_rdt: Add CONFIG, Makefile, and basic initialization
    
    Introduce CONFIG_INTEL_RDT_A (default: no, dependent on CPU_SUP_INTEL) to
    control inclusion of Resource Director Technology in the build.
    
    Simple init() routine just checks which features are present. If they are
    pr_info() one line summary for each feature for now.
    
    Signed-off-by: Fenghua Yu <fenghua.yu@intel.com>
    Cc: "Ravi V Shankar" <ravi.v.shankar@intel.com>
    Cc: "Tony Luck" <tony.luck@intel.com>
    Cc: "David Carrillo-Cisneros" <davidcc@google.com>
    Cc: "Sai Prakhya" <sai.praneeth.prakhya@intel.com>
    Cc: "Peter Zijlstra" <peterz@infradead.org>
    Cc: "Stephane Eranian" <eranian@google.com>
    Cc: "Dave Hansen" <dave.hansen@intel.com>
    Cc: "Shaohua Li" <shli@fb.com>
    Cc: "Nilay Vaish" <nilayvaish@gmail.com>
    Cc: "Vikas Shivappa" <vikas.shivappa@linux.intel.com>
    Cc: "Ingo Molnar" <mingo@elte.hu>
    Cc: "Borislav Petkov" <bp@suse.de>
    Cc: "H. Peter Anvin" <h.peter.anvin@intel.com>
    Link: http://lkml.kernel.org/r/1477142405-32078-7-git-send-email-fenghua.yu@intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 8c27ceff3604b249a9efafbd1bd8b141b79e619d
Author: Mauro Carvalho Chehab <mchehab@s-opensource.com>
Date:   Tue Oct 18 10:12:27 2016 -0200

    docs: fix locations of several documents that got moved
    
    The previous patch renamed several files that are cross-referenced
    along the Kernel documentation. Adjust the links to point to
    the right places.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

commit 51a021244b9d579be6b4f8c15c493a76deb2a79e
Author: Vineet Gupta <Vineet.Gupta1@synopsys.com>
Date:   Fri Oct 7 17:02:10 2016 -0700

    atomic64: no need for CONFIG_ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE
    
    This came to light when implementing native 64-bit atomics for ARCv2.
    
    The atomic64 self-test code uses CONFIG_ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE
    to check whether atomic64_dec_if_positive() is available.  It seems it
    was needed when not every arch defined it.  However as of current code
    the Kconfig option seems needless
    
     - for CONFIG_GENERIC_ATOMIC64 it is auto-enabled in lib/Kconfig and a
       generic definition of API is present lib/atomic64.c
     - arches with native 64-bit atomics select it in arch/*/Kconfig and
       define the API in their headers
    
    So I see no point in keeping the Kconfig option
    
    Compile tested for:
     - blackfin (CONFIG_GENERIC_ATOMIC64)
     - x86 (!CONFIG_GENERIC_ATOMIC64)
     - ia64
    
    Link: http://lkml.kernel.org/r/1473703083-8625-3-git-send-email-vgupta@synopsys.com
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Cc: Richard Henderson <rth@twiddle.net>
    Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Cc: Matt Turner <mattst88@gmail.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: "James E.J. Bottomley" <jejb@parisc-linux.org>
    Cc: Helge Deller <deller@gmx.de>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: Zhaoxiu Zeng <zhaoxiu.zeng@gmail.com>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Ming Lin <ming.l@ssi.samsung.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Boqun Feng <boqun.feng@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 461a7184320a1b4d2c12ad538354062fef4ee0f1
Author: Yisheng Xie <xieyisheng1@huawei.com>
Date:   Fri Oct 7 17:01:46 2016 -0700

    mm/hugetlb: introduce ARCH_HAS_GIGANTIC_PAGE
    
    Avoid making ifdef get pretty unwieldy if many ARCHs support gigantic
    page.  No functional change with this patch.
    
    Link: http://lkml.kernel.org/r/1475227569-63446-2-git-send-email-xieyisheng1@huawei.com
    Signed-off-by: Yisheng Xie <xieyisheng1@huawei.com>
    Suggested-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Acked-by: Hillf Danton <hillf.zj@alibaba-inc.com>
    Cc: Hanjun Guo <guohanjun@huawei.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Sudeep Holla <sudeep.holla@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Rob Herring <robh+dt@kernel.org>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit e6e3d8f8f4f06caf25004c749bb2ba84f18c7d39
Merge: fbbea38 bdf5309
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Oct 7 11:46:37 2016 -0700

    Merge tag 'pci-v4.9-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
    
    Pull PCI updates from Bjorn Helgaas:
     "Summary of PCI changes for the v4.9 merge window:
    
      Enumeration:
       - microblaze: Add multidomain support for procfs (Bharat Kumar Gogada)
    
      Resource management:
       - Ignore requested alignment for PROBE_ONLY and fixed resources (Yongji Xie)
       - Ignore requested alignment for VF BARs (Yongji Xie)
    
      PCI device hotplug:
       - Make core explicitly non-modular (Paul Gortmaker)
    
      PCIe native device hotplug:
       - Rename pcie_isr() locals for clarity (Bjorn Helgaas)
       - Return IRQ_NONE when we can't read interrupt status (Bjorn Helgaas)
       - Remove unnecessary guard (Bjorn Helgaas)
       - Clean up dmesg "Slot(%s)" messages (Bjorn Helgaas)
       - Remove useless pciehp_get_latch_status() calls (Bjorn Helgaas)
       - Clear attention LED on device add (Keith Busch)
       - Allow exclusive userspace control of indicators (Keith Busch)
       - Process all hotplug events before looking for new ones (Mayurkumar Patel)
       - Don't re-read Slot Status when queuing hotplug event (Mayurkumar Patel)
       - Don't re-read Slot Status when handling surprise event (Mayurkumar Patel)
       - Make explicitly non-modular (Paul Gortmaker)
    
      Power management:
       - Afford direct-complete to devices with non-standard PM (Lukas Wunner)
       - Query platform firmware for device power state (Lukas Wunner)
       - Recognize D3cold in pci_update_current_state() (Lukas Wunner)
       - Avoid unnecessary resume after direct-complete (Lukas Wunner)
       - Make explicitly non-modular (Paul Gortmaker)
    
      Virtualization:
       - Mark Atheros AR9580 to avoid bus reset (Maik Broemme)
       - Check for pci_setup_device() failure in pci_iov_add_virtfn() (Po Liu)
    
      MSI:
       - Enable PCI_MSI_IRQ_DOMAIN support for ARC (Joao Pinto)
    
      AER:
       - Remove aerdriver.nosourceid kernel parameter (Bjorn Helgaas)
       - Remove aerdriver.forceload kernel parameter (Bjorn Helgaas)
       - Fix aer_probe() kernel-doc comment (Cao jin)
       - Add bus flag to skip source ID matching (Jon Derrick)
       - Avoid memory allocation in interrupt handling path (Jon Derrick)
       - Cache capability position (Keith Busch)
       - Make explicitly non-modular (Paul Gortmaker)
       - Remove duplicate AER severity translation (Tyler Baicar)
       - Send correct severity to calculate AER severity (Tyler Baicar)
    
      Precision Time Measurement:
       - Add Precision Time Measurement (PTM) support (Jonathan Yong)
       - Add PTM clock granularity information (Bjorn Helgaas)
       - Add pci_enable_ptm() for drivers to enable PTM on endpoints (Bjorn Helgaas)
    
      Generic host bridge driver:
       - Fix pci_remap_iospace() failure path (Lorenzo Pieralisi)
       - Make explicitly non-modular (Paul Gortmaker)
    
      Altera host bridge driver:
       - Remove redundant platform_get_resource() return value check (Bjorn Helgaas)
       - Poll for link training status after retraining the link (Ley Foon Tan)
       - Rework config accessors for use without a struct pci_bus (Ley Foon Tan)
       - Move retrain from fixup to altera_pcie_host_init() (Ley Foon Tan)
       - Make MSI explicitly non-modular (Paul Gortmaker)
       - Make explicitly non-modular (Paul Gortmaker)
       - Relax device number checking to allow SR-IOV (Po Liu)
    
      ARM Versatile host bridge driver:
       - Fix pci_remap_iospace() failure path (Lorenzo Pieralisi)
    
      Axis ARTPEC-6 host bridge driver:
       - Drop __init from artpec6_add_pcie_port() (Niklas Cassel)
    
      Freescale i.MX6 host bridge driver:
       - Make explicitly non-modular (Paul Gortmaker)
    
      Intel VMD host bridge driver:
       - Add quirk for AER to ignore source ID (Jon Derrick)
       - Allocate IRQ lists with correct MSI-X count (Jon Derrick)
       - Convert to use pci_alloc_irq_vectors() API (Jon Derrick)
       - Eliminate vmd_vector member from list type (Jon Derrick)
       - Eliminate index member from IRQ list (Jon Derrick)
       - Synchronize with RCU freeing MSI IRQ descs (Keith Busch)
       - Request userspace control of PCIe hotplug indicators (Keith Busch)
       - Move VMD driver to drivers/pci/host (Keith Busch)
    
      Marvell Aardvark host bridge driver:
       - Fix pci_remap_iospace() failure path (Lorenzo Pieralisi)
       - Remove redundant dev_err call in advk_pcie_probe() (Wei Yongjun)
    
      Microsoft Hyper-V host bridge driver:
       - Use zero-length array in struct pci_packet (Dexuan Cui)
       - Use pci_function_description[0] in struct definitions (Dexuan Cui)
       - Remove the unused 'wrk' in struct hv_pcibus_device (Dexuan Cui)
       - Handle vmbus_sendpacket() failure in hv_compose_msi_msg() (Dexuan Cui)
       - Handle hv_pci_generic_compl() error case (Dexuan Cui)
       - Use list_move_tail() instead of list_del() + list_add_tail() (Wei Yongjun)
    
      NVIDIA Tegra host bridge driver:
       - Fix pci_remap_iospace() failure path (Lorenzo Pieralisi)
       - Remove redundant _data suffix (Thierry Reding)
       - Use of_device_get_match_data() (Thierry Reding)
    
      Qualcomm host bridge driver:
       - Make explicitly non-modular (Paul Gortmaker)
    
      Renesas R-Car host bridge driver:
       - Consolidate register space lookup and ioremap (Bjorn Helgaas)
       - Don't disable/unprepare clocks on prepare/enable failure (Geert Uytterhoeven)
       - Add multi-MSI support (Grigory Kletsko)
       - Fix pci_remap_iospace() failure path (Lorenzo Pieralisi)
       - Fix some checkpatch warnings (Sergei Shtylyov)
       - Try increasing PCIe link speed to 5 GT/s at boot (Sergei Shtylyov)
    
      Rockchip host bridge driver:
       - Add DT bindings for Rockchip PCIe controller (Shawn Lin)
       - Add Rockchip PCIe controller support (Shawn Lin)
       - Improve the deassert sequence of four reset pins (Shawn Lin)
       - Fix wrong transmitted FTS count (Shawn Lin)
       - Increase the Max Credit update interval (Rajat Jain)
    
      Samsung Exynos host bridge driver:
       - Make explicitly non-modular (Paul Gortmaker)
    
      ST Microelectronics SPEAr13xx host bridge driver:
       - Make explicitly non-modular (Paul Gortmaker)
    
      Synopsys DesignWare host bridge driver:
       - Return data directly from dw_pcie_readl_rc() (Bjorn Helgaas)
       - Exchange viewport of `MEMORYs' and `CFGs/IOs' (Dong Bo)
       - Check LTSSM training bit before deciding link is up (Jisheng Zhang)
       - Move link wait definitions to .c file (Joao Pinto)
       - Wait for iATU enable (Joao Pinto)
       - Add iATU Unroll feature (Joao Pinto)
       - Fix pci_remap_iospace() failure path (Lorenzo Pieralisi)
       - Make explicitly non-modular (Paul Gortmaker)
       - Relax device number checking to allow SR-IOV (Po Liu)
       - Keep viewport fixed for IO transaction if num_viewport > 2 (Pratyush Anand)
       - Remove redundant platform_get_resource() return value check (Wei Yongjun)
    
      TI DRA7xx host bridge driver:
       - Make explicitly non-modular (Paul Gortmaker)
    
      TI Keystone host bridge driver:
       - Propagate request_irq() failure (Wei Yongjun)
    
      Xilinx AXI host bridge driver:
       - Keep both legacy and MSI interrupt domain references (Bharat Kumar Gogada)
       - Clear interrupt register for invalid interrupt (Bharat Kumar Gogada)
       - Clear correct MSI set bit (Bharat Kumar Gogada)
       - Dispose of MSI virtual IRQ (Bharat Kumar Gogada)
       - Make explicitly non-modular (Paul Gortmaker)
       - Relax device number checking to allow SR-IOV (Po Liu)
    
      Xilinx NWL host bridge driver:
       - Expand error logging (Bharat Kumar Gogada)
       - Enable all MSI interrupts using MSI mask (Bharat Kumar Gogada)
       - Make explicitly non-modular (Paul Gortmaker)
    
      Miscellaneous:
       - Drop CONFIG_KEXEC_CORE ifdeffery (Lukas Wunner)
       - portdrv: Make explicitly non-modular (Paul Gortmaker)
       - Make DPC explicitly non-modular (Paul Gortmaker)"
    
    * tag 'pci-v4.9-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci: (105 commits)
      x86/PCI: VMD: Move VMD driver to drivers/pci/host
      PCI: rockchip: Fix wrong transmitted FTS count
      PCI: rockchip: Improve the deassert sequence of four reset pins
      PCI: rockchip: Increase the Max Credit update interval
      PCI: rcar: Try increasing PCIe link speed to 5 GT/s at boot
      PCI/AER: Fix aer_probe() kernel-doc comment
      PCI: Ignore requested alignment for VF BARs
      PCI: Ignore requested alignment for PROBE_ONLY and fixed resources
      PCI: Avoid unnecessary resume after direct-complete
      PCI: Recognize D3cold in pci_update_current_state()
      PCI: Query platform firmware for device power state
      PCI: Afford direct-complete to devices with non-standard PM
      PCI/AER: Cache capability position
      PCI/AER: Avoid memory allocation in interrupt handling path
      x86/PCI: VMD: Request userspace control of PCIe hotplug indicators
      PCI: pciehp: Allow exclusive userspace control of indicators
      ACPI / APEI: Send correct severity to calculate AER severity
      PCI/AER: Remove duplicate AER severity translation
      x86/PCI: VMD: Synchronize with RCU freeing MSI IRQ descs
      x86/PCI: VMD: Eliminate index member from IRQ list
      ...

commit 181ffd19cc9898f795646bf9a897072a419a51ed
Author: Keith Busch <keith.busch@intel.com>
Date:   Tue Oct 4 12:26:37 2016 -0500

    x86/PCI: VMD: Move VMD driver to drivers/pci/host
    
    Move the driver source and Kconfig to the PCI host bridge drivers directory
    and move the config option to a more appropriate sub-menu instead of
    occupying the top-level location.
    
    Update the Kconfig option with the X86_64 dependency that was implicitly
    included from the previous location, and add information about the module
    name when built as a loadable module.
    
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    CC: Jon Derrick <jonathan.derrick@intel.com>

commit a6c4e4cd44649b696038326f90161113d8569170
Merge: a8adc0f 65f7422
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 3 17:22:25 2016 -0700

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 platform changes from Ingo Molnar:
     "The main changes in this cycle were:
    
       - SGI UV updates (Andrew Banman)
    
       - Intel MID updates (Andy Shevchenko)
    
       - Initial Mellanox systems platform (Vadim Pasternak)"
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/platform/mellanox: Fix return value check in mlxplat_init()
      x86/platform/mellanox: Introduce support for Mellanox systems platform
      x86/platform/uv/BAU: Add UV4-specific functions
      x86/platform/uv/BAU: Fix payload queue setup on UV4 hardware
      x86/platform/uv/BAU: Disable software timeout on UV4 hardware
      x86/platform/uv/BAU: Populate ->uvhub_version with UV4 version information
      x86/platform/uv/BAU: Use generic function pointers
      x86/platform/uv/BAU: Add generic function pointers
      x86/platform/uv/BAU: Convert uv_physnodeaddr() use to uv_gpa_to_offset()
      x86/platform/uv/BAU: Clean up pq_init()
      x86/platform/uv/BAU: Clean up and update printks
      x86/platform/uv/BAU: Clean up vertical alignment
      x86/platform/intel-mid: Keep SRAM powered on at boot
      x86/platform/intel-mid: Add Intel Penwell to ID table
      x86/cpu: Rename Merrifield2 to Moorefield
      x86/platform/intel-mid: Implement power off sequence
      x86/platform/intel-mid: Enable SD card detection on Merrifield
      x86/platform/intel-mid: Enable WiFi on Intel Edison
      x86/platform/intel-mid: Run PWRMU command immediately

commit 1a4a2bc460721bc8f91e4c1294d39b38e5af132f
Merge: 110a9e4 1ef55be1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 3 16:13:28 2016 -0700

    Merge branch 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull low-level x86 updates from Ingo Molnar:
     "In this cycle this topic tree has become one of those 'super topics'
      that accumulated a lot of changes:
    
       - Add CONFIG_VMAP_STACK=y support to the core kernel and enable it on
         x86 - preceded by an array of changes. v4.8 saw preparatory changes
         in this area already - this is the rest of the work. Includes the
         thread stack caching performance optimization. (Andy Lutomirski)
    
       - switch_to() cleanups and all around enhancements. (Brian Gerst)
    
       - A large number of dumpstack infrastructure enhancements and an
         unwinder abstraction. The secret long term plan is safe(r) live
         patching plus maybe another attempt at debuginfo based unwinding -
         but all these current bits are standalone enhancements in a frame
         pointer based debug environment as well. (Josh Poimboeuf)
    
       - More __ro_after_init and const annotations. (Kees Cook)
    
       - Enable KASLR for the vmemmap memory region. (Thomas Garnier)"
    
    [ The virtually mapped stack changes are pretty fundamental, and not
      x86-specific per se, even if they are only used on x86 right now. ]
    
    * 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (70 commits)
      x86/asm: Get rid of __read_cr4_safe()
      thread_info: Use unsigned long for flags
      x86/alternatives: Add stack frame dependency to alternative_call_2()
      x86/dumpstack: Fix show_stack() task pointer regression
      x86/dumpstack: Remove dump_trace() and related callbacks
      x86/dumpstack: Convert show_trace_log_lvl() to use the new unwinder
      oprofile/x86: Convert x86_backtrace() to use the new unwinder
      x86/stacktrace: Convert save_stack_trace_*() to use the new unwinder
      perf/x86: Convert perf_callchain_kernel() to use the new unwinder
      x86/unwind: Add new unwind interface and implementations
      x86/dumpstack: Remove NULL task pointer convention
      fork: Optimize task creation by caching two thread stacks per CPU if CONFIG_VMAP_STACK=y
      sched/core: Free the stack early if CONFIG_THREAD_INFO_IN_TASK
      lib/syscall: Pin the task stack in collect_syscall()
      x86/process: Pin the target stack in get_wchan()
      x86/dumpstack: Pin the target stack when dumping it
      kthread: Pin the stack via try_get_task_stack()/put_task_stack() in to_live_kthread() function
      sched/core: Add try_get_task_stack() and put_task_stack()
      x86/entry/64: Fix a minor comment rebase error
      iommu/amd: Don't put completion-wait semaphore on stack
      ...

commit cfd8983f03c7b2f977faab8dfc4ec5f6dbf9c1f3
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed May 18 20:43:02 2016 +0200

    x86, locking/spinlocks: Remove ticket (spin)lock implementation
    
    We've unconditionally used the queued spinlock for many releases now.
    
    Its time to remove the old ticket lock code.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Waiman Long <waiman.long@hpe.com>
    Cc: Waiman.Long@hpe.com
    Cc: david.vrabel@citrix.com
    Cc: dhowells@redhat.com
    Cc: pbonzini@redhat.com
    Cc: xen-devel@lists.xenproject.org
    Link: http://lkml.kernel.org/r/20160518184302.GO3193@twins.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 58cbbee2391ce3876e6eee80a4f2a7f025859c52
Author: Vadim Pasternak <vadimp@mellanox.com>
Date:   Thu Sep 22 21:13:42 2016 +0000

    x86/platform/mellanox: Introduce support for Mellanox systems platform
    
    Enable system support for the Mellanox Technologies platform, which
    provides support for the next Mellanox basic systems: "msx6710",
    "msx6720", "msb7700", "msn2700", "msx1410", "msn2410", "msb7800",
    "msn2740", "msn2100" and also various number of derivative systems from
    the above basic types.
    
    The Kconfig controlling compilation of this code is: MLX_PLATFORM
    
    Signed-off-by: Vadim Pasternak <vadimp@mellanox.com>
    Cc: jiri@resnulli.us
    Cc: gregkh@linuxfoundation.org
    Cc: platform-driver-x86@vger.kernel.org
    Cc: geert@linux-m68k.org
    Cc: linux@roeck-us.net
    Cc: akpm@linux-foundation.org
    Cc: mchehab@kernel.org
    Cc: davem@davemloft.net
    Cc: kvalo@codeaurora.org
    Link: http://lkml.kernel.org/r/1474578822-33805-1-git-send-email-vadimp@mellanox.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 15f4eae70d365bba26854c90b6002aaabb18c8aa
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Sep 13 14:29:25 2016 -0700

    x86: Move thread_info into task_struct
    
    Now that most of the thread_info users have been cleaned up,
    this is straightforward.
    
    Most of this code was written by Linus.
    
    Originally-from: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jann Horn <jann@thejh.net>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/a50eab40abeaec9cb9a9e3cbdeafd32190206654.1473801993.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit d4b80afbba49e968623330f1336da8c724da8aad
Merge: fcd709e 4cea877
Author: Ingo Molnar <mingo@kernel.org>
Date:   Thu Sep 15 08:24:53 2016 +0200

    Merge branch 'linus' into x86/asm, to pick up recent fixes
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 0d025d271e55f3de21f0aaaf54b42d20404d2b23
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Tue Aug 30 08:04:16 2016 -0500

    mm/usercopy: get rid of CONFIG_DEBUG_STRICT_USER_COPY_CHECKS
    
    There are three usercopy warnings which are currently being silenced for
    gcc 4.6 and newer:
    
    1) "copy_from_user() buffer size is too small" compile warning/error
    
       This is a static warning which happens when object size and copy size
       are both const, and copy size > object size.  I didn't see any false
       positives for this one.  So the function warning attribute seems to
       be working fine here.
    
       Note this scenario is always a bug and so I think it should be
       changed to *always* be an error, regardless of
       CONFIG_DEBUG_STRICT_USER_COPY_CHECKS.
    
    2) "copy_from_user() buffer size is not provably correct" compile warning
    
       This is another static warning which happens when I enable
       __compiletime_object_size() for new compilers (and
       CONFIG_DEBUG_STRICT_USER_COPY_CHECKS).  It happens when object size
       is const, but copy size is *not*.  In this case there's no way to
       compare the two at build time, so it gives the warning.  (Note the
       warning is a byproduct of the fact that gcc has no way of knowing
       whether the overflow function will be called, so the call isn't dead
       code and the warning attribute is activated.)
    
       So this warning seems to only indicate "this is an unusual pattern,
       maybe you should check it out" rather than "this is a bug".
    
       I get 102(!) of these warnings with allyesconfig and the
       __compiletime_object_size() gcc check removed.  I don't know if there
       are any real bugs hiding in there, but from looking at a small
       sample, I didn't see any.  According to Kees, it does sometimes find
       real bugs.  But the false positive rate seems high.
    
    3) "Buffer overflow detected" runtime warning
    
       This is a runtime warning where object size is const, and copy size >
       object size.
    
    All three warnings (both static and runtime) were completely disabled
    for gcc 4.6 with the following commit:
    
      2fb0815c9ee6 ("gcc4: disable __compiletime_object_size for GCC 4.6+")
    
    That commit mistakenly assumed that the false positives were caused by a
    gcc bug in __compiletime_object_size().  But in fact,
    __compiletime_object_size() seems to be working fine.  The false
    positives were instead triggered by #2 above.  (Though I don't have an
    explanation for why the warnings supposedly only started showing up in
    gcc 4.6.)
    
    So remove warning #2 to get rid of all the false positives, and re-enable
    warnings #1 and #3 by reverting the above commit.
    
    Furthermore, since #1 is a real bug which is detected at compile time,
    upgrade it to always be an error.
    
    Having done all that, CONFIG_DEBUG_STRICT_USER_COPY_CHECKS is no longer
    needed.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: "H . Peter Anvin" <hpa@zytor.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Byungchul Park <byungchul.park@lge.com>
    Cc: Nilay Vaish <nilayvaish@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit e4a744ef2fef5c803348b650a3a2d01da7797a9b
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Fri Aug 19 06:52:55 2016 -0500

    ftrace: Remove CONFIG_HAVE_FUNCTION_GRAPH_FP_TEST from config
    
    Make HAVE_FUNCTION_GRAPH_FP_TEST a normal define, independent from
    kconfig.  This removes some config file pollution and simplifies the
    checking for the fp test.
    
    Suggested-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Byungchul Park <byungchul.park@lge.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Nilay Vaish <nilayvaish@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/2c4e5f05054d6d367f702fd153af7a0109dd5c81.1471607358.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit e37e43a497d5a8b7c0cc1736d56986f432c394c9
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Aug 11 02:35:23 2016 -0700

    x86/mm/64: Enable vmapped stacks (CONFIG_HAVE_ARCH_VMAP_STACK=y)
    
    This allows x86_64 kernels to enable vmapped stacks by setting
    HAVE_ARCH_VMAP_STACK=y - which enables the CONFIG_VMAP_STACK=y
    high level Kconfig option.
    
    There are a couple of interesting bits:
    
    First, x86 lazily faults in top-level paging entries for the vmalloc
    area.  This won't work if we get a page fault while trying to access
    the stack: the CPU will promote it to a double-fault and we'll die.
    To avoid this problem, probe the new stack when switching stacks and
    forcibly populate the pgd entry for the stack when switching mms.
    
    Second, once we have guard pages around the stack, we'll want to
    detect and handle stack overflow.
    
    I didn't enable it on x86_32.  We'd need to rework the double-fault
    code a bit and I'm concerned about running out of vmalloc virtual
    addresses under some workloads.
    
    This patch, by itself, will behave somewhat erratically when the
    stack overflows while RSP is still more than a few tens of bytes
    above the bottom of the stack.  Specifically, we'll get #PF and make
    it to no_context and them oops without reliably triggering a
    double-fault, and no_context doesn't know about stack overflows.
    The next patch will improve that case.
    
    Thank you to Nadav and Brian for helping me pay enough attention to
    the SDM to hopefully get this right.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/c88f3e2920b18e6cc621d772a04a62c06869037e.1470907718.git.luto@kernel.org
    [ Minor edits. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 1eccfa090eaea22558570054bbdc147817e1df5e
Merge: 1bd4403 ed18adc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Aug 8 14:48:14 2016 -0700

    Merge tag 'usercopy-v4.8' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
    
    Pull usercopy protection from Kees Cook:
     "Tbhis implements HARDENED_USERCOPY verification of copy_to_user and
      copy_from_user bounds checking for most architectures on SLAB and
      SLUB"
    
    * tag 'usercopy-v4.8' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:
      mm: SLUB hardened usercopy support
      mm: SLAB hardened usercopy support
      s390/uaccess: Enable hardened usercopy
      sparc/uaccess: Enable hardened usercopy
      powerpc/uaccess: Enable hardened usercopy
      ia64/uaccess: Enable hardened usercopy
      arm64/uaccess: Enable hardened usercopy
      ARM: uaccess: Enable hardened usercopy
      x86/uaccess: Enable hardened usercopy
      mm: Hardened usercopy
      mm: Implement stack frame object validation
      mm: Add is_migrate_cma_page

commit 6c84239d595dc6ffe39f0f03dae2f64ed200db95
Merge: d4c06c7 6f36778
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Aug 5 09:48:22 2016 -0400

    Merge tag 'rtc-4.8' of git://git.kernel.org/pub/scm/linux/kernel/git/abelloni/linux
    
    Pull RTC updates from Alexandre Belloni:
     "RTC for 4.8
    
      Cleanups:
       - huge cleanup of rtc-generic and char/genrtc this allowed to cleanup
         rtc-cmos, rtc-sh, rtc-m68k, rtc-powerpc and rtc-parisc
       - move mn10300 to rtc-cmos
    
      Subsystem:
       - fix wakealarms after hibernate
       - multiples fixes for rctest
       - simplify implementations of .read_alarm
    
      New drivers:
       - Maxim MAX6916
    
      Drivers:
       - ds1307: fix weekday
       - m41t80: add wakeup support
       - pcf85063: add support for PCF85063A variant
       - rv8803: extend i2c fix and other fixes
       - s35390a: fix alarm reading, this fixes instant reboot after
         shutdown for QNAP TS-41x
       - s3c: clock fixes"
    
    * tag 'rtc-4.8' of git://git.kernel.org/pub/scm/linux/kernel/git/abelloni/linux: (65 commits)
      rtc: rv8803: Clear V1F when setting the time
      rtc: rv8803: Stop the clock while setting the time
      rtc: rv8803: Always apply the I²C workaround
      rtc: rv8803: Fix read day of week
      rtc: rv8803: Remove the check for valid time
      rtc: rv8803: Kconfig: Indicate rx8900 support
      rtc: asm9260: remove .owner field for driver
      rtc: at91sam9: Fix missing spin_lock_init()
      rtc: m41t80: add suspend handlers for alarm IRQ
      rtc: m41t80: make it a real error message
      rtc: pcf85063: Add support for the PCF85063A device
      rtc: pcf85063: fix year range
      rtc: hym8563: in .read_alarm set .tm_sec to 0 to signal minute accuracy
      rtc: explicitly set tm_sec = 0 for drivers with minute accurancy
      rtc: s3c: Add s3c_rtc_{enable/disable}_clk in s3c_rtc_setfreq()
      rtc: s3c: Remove unnecessary call to disable already disabled clock
      rtc: abx80x: use devm_add_action_or_reset()
      rtc: m41t80: use devm_add_action_or_reset()
      rtc: fix a typo and reduce three empty lines to one
      rtc: s35390a: improve two comments in .set_alarm
      ...

commit f716a85cd6045c994011268223706642cff7e485
Merge: 221bb8a a519167e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Aug 2 16:37:12 2016 -0400

    Merge branch 'kbuild' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild
    
    Pull kbuild updates from Michal Marek:
    
     - GCC plugin support by Emese Revfy from grsecurity, with a fixup from
       Kees Cook.  The plugins are meant to be used for static analysis of
       the kernel code.  Two plugins are provided already.
    
     - reduction of the gcc commandline by Arnd Bergmann.
    
     - IS_ENABLED / IS_REACHABLE macro enhancements by Masahiro Yamada
    
     - bin2c fix by Michael Tautschnig
    
     - setlocalversion fix by Wolfram Sang
    
    * 'kbuild' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild:
      gcc-plugins: disable under COMPILE_TEST
      kbuild: Abort build on bad stack protector flag
      scripts: Fix size mismatch of kexec_purgatory_size
      kbuild: make samples depend on headers_install
      Kbuild: don't add obj tree in additional includes
      Kbuild: arch: look for generated headers in obtree
      Kbuild: always prefix objtree in LINUXINCLUDE
      Kbuild: avoid duplicate include path
      Kbuild: don't add ../../ to include path
      vmlinux.lds.h: replace config_enabled() with IS_ENABLED()
      kconfig.h: allow to use IS_{ENABLE,REACHABLE} in macro expansion
      kconfig.h: use already defined macros for IS_REACHABLE() define
      export.h: use __is_defined() to check if __KSYM_* is defined
      kconfig.h: use __is_defined() to check if MODULE is defined
      kbuild: setlocalversion: print error to STDERR
      Add sancov plugin
      Add Cyclomatic complexity GCC plugin
      GCC plugin infrastructure
      Shared library support

commit e663107fa1edda4d8a0d5b8ce704d71f8e27de43
Merge: 6453dbd 54d0b14
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jul 26 17:56:45 2016 -0700

    Merge tag 'acpi-4.8-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
    
    Pull ACPI updates from Rafael Wysocki:
     "The new feaures here are the support for ACPI overlays (allowing ACPI
      tables to be loaded at any time from EFI variables or via configfs)
      and the LPI (Low-Power Idle) support.  Also notable is the ACPI-based
      NUMA support for ARM64.
    
      Apart from that we have two new drivers, for the DPTF (Dynamic Power
      and Thermal Framework) power participant device and for the Intel
      Broxton WhiskeyCove PMIC, some more PMIC-related changes, support for
      the Boot Error Record Table (BERT) in APEI and support for
      platform-initiated graceful shutdown.
    
      Plus two new pieces of documentation and usual assorted fixes and
      cleanups in quite a few places.
    
      Specifics:
    
       - Support for ACPI SSDT overlays allowing Secondary System
         Description Tables (SSDTs) to be loaded at any time from EFI
         variables or via configfs (Octavian Purdila, Mika Westerberg).
    
       - Support for the ACPI LPI (Low-Power Idle) feature introduced in
         ACPI 6.0 and allowing processor idle states to be represented in
         ACPI tables in a hierarchical way (with the help of Processor
         Container objects) and support for ACPI idle states management on
         ARM64, based on LPI (Sudeep Holla).
    
       - General improvements of ACPI support for NUMA and ARM64 support for
         ACPI-based NUMA (Hanjun Guo, David Daney, Robert Richter).
    
       - General improvements of the ACPI table upgrade mechanism and ARM64
         support for that feature (Aleksey Makarov, Jon Masters).
    
       - Support for the Boot Error Record Table (BERT) in APEI and
         improvements of kernel messages printed by the error injection code
         (Huang Ying, Borislav Petkov).
    
       - New driver for the Intel Broxton WhiskeyCove PMIC operation region
         and support for the REGS operation region on Broxton, PMIC code
         cleanups (Bin Gao, Felipe Balbi, Paul Gortmaker).
    
       - New driver for the power participant device which is part of the
         Dynamic Power and Thermal Framework (DPTF) and DPTF-related code
         reorganization (Srinivas Pandruvada).
    
       - Support for the platform-initiated graceful shutdown feature
         introduced in ACPI 6.1 (Prashanth Prakash).
    
       - ACPI button driver update related to lid input events generated
         automatically on initialization and system resume that have been
         problematic for some time (Lv Zheng).
    
       - ACPI EC driver cleanups (Lv Zheng).
    
       - Documentation of the ACPICA release automation process and the
         in-kernel ACPI AML debugger (Lv Zheng).
    
       - New blacklist entry and two fixes for the ACPI backlight driver
         (Alex Hung, Arvind Yadav, Ralf Gerbig).
    
       - Cleanups of the ACPI pci_slot driver (Joe Perches, Paul Gortmaker).
    
       - ACPI CPPC code changes to make it more robust against possible
         defects in ACPI tables and new symbol definitions for PCC (Hoan
         Tran).
    
       - System reboot code modification to execute the ACPI _PTS (Prepare
         To Sleep) method in addition to _TTS (Ocean He).
    
       - ACPICA-related change to carry out lock ordering checks in ACPICA
         if ACPICA debug is enabled in the kernel (Lv Zheng).
    
       - Assorted minor fixes and cleanups (Andy Shevchenko, Baoquan He,
         Bhaktipriya Shridhar, Paul Gortmaker, Rafael Wysocki)"
    
    * tag 'acpi-4.8-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (71 commits)
      ACPI: enable ACPI_PROCESSOR_IDLE on ARM64
      arm64: add support for ACPI Low Power Idle(LPI)
      drivers: firmware: psci: initialise idle states using ACPI LPI
      cpuidle: introduce CPU_PM_CPU_IDLE_ENTER macro for ARM{32, 64}
      arm64: cpuidle: drop __init section marker to arm_cpuidle_init
      ACPI / processor_idle: Add support for Low Power Idle(LPI) states
      ACPI / processor_idle: introduce ACPI_PROCESSOR_CSTATE
      ACPI / DPTF: move int340x_thermal.c to the DPTF folder
      ACPI / DPTF: Add DPTF power participant driver
      ACPI / lpat: make it explicitly non-modular
      ACPI / dock: make dock explicitly non-modular
      ACPI / PCI: make pci_slot explicitly non-modular
      ACPI / PMIC: remove modular references from non-modular code
      ACPICA: Linux: Enable ACPI_MUTEX_DEBUG for Linux kernel
      ACPI: Rename configfs.c to acpi_configfs.c to prevent link error
      ACPI / debugger: Add AML debugger documentation
      ACPI: Add documentation describing ACPICA release automation
      ACPI: add support for loading SSDTs via configfs
      ACPI: add support for configfs
      efi / ACPI: load SSTDs from EFI variables
      ...

commit 5b710f34e194c6b7710f69fdb5d798fdf35b98c1
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jun 23 15:04:01 2016 -0700

    x86/uaccess: Enable hardened usercopy
    
    Enables CONFIG_HARDENED_USERCOPY checks on x86. This is done both in
    copy_*_user() and __copy_*_user() because copy_*_user() actually calls
    down to _copy_*_user() and not __copy_*_user().
    
    Based on code from PaX and grsecurity.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Tested-by: Valdis Kletnieks <valdis.kletnieks@vt.edu>

commit 0f60a8efe4005ab5e65ce000724b04d4ca04a199
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Jul 12 16:19:48 2016 -0700

    mm: Implement stack frame object validation
    
    This creates per-architecture function arch_within_stack_frames() that
    should validate if a given object is contained by a kernel stack frame.
    Initial implementation is on x86.
    
    This is based on code from PaX.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>

commit c265cc5c3cb2e950910437a846ef59e3a5c2df51
Merge: 80f09cf cf2cf0f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jul 25 18:06:00 2016 -0700

    Merge branch 'x86-cleanups-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 cleanups from Ingo Molnar:
     "Three small cleanups"
    
    * 'x86-cleanups-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      lguest: Read offset of device_cap later
      lguest: Read length of device_cap later
      x86: Do away with ARCH_[WANT_OPTIONAL|REQUIRE]_GPIOLIB

commit 77cd3d0c43b7e6c0bb49ca641cf936891f6e1766
Merge: 0f65726 6a79296
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jul 25 17:32:28 2016 -0700

    Merge branch 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 boot updates from Ingo Molnar:
     "The main changes:
    
       - add initial commits to randomize kernel memory section virtual
         addresses, enabled via a new kernel option: RANDOMIZE_MEMORY
         (Thomas Garnier, Kees Cook, Baoquan He, Yinghai Lu)
    
       - enhance KASLR (RANDOMIZE_BASE) physical memory randomization (Kees
         Cook)
    
       - EBDA/BIOS region boot quirk cleanups (Andy Lutomirski, Ingo Molnar)
    
       - misc cleanups/fixes"
    
    * 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/boot: Simplify EBDA-vs-BIOS reservation logic
      x86/boot: Clarify what x86_legacy_features.reserve_bios_regions does
      x86/boot: Reorganize and clean up the BIOS area reservation code
      x86/mm: Do not reference phys addr beyond kernel
      x86/mm: Add memory hotplug support for KASLR memory randomization
      x86/mm: Enable KASLR for vmalloc memory regions
      x86/mm: Enable KASLR for physical mapping memory regions
      x86/mm: Implement ASLR for kernel memory regions
      x86/mm: Separate variable for trampoline PGD
      x86/mm: Add PUD VA support for physical mapping
      x86/mm: Update physical mapping variable names
      x86/mm: Refactor KASLR entropy functions
      x86/KASLR: Fix boot crash with certain memory configurations
      x86/boot/64: Add forgotten end of function marker
      x86/KASLR: Allow randomization below the load address
      x86/KASLR: Extend kernel image physical address randomization to addresses larger than 4G
      x86/KASLR: Randomize virtual address separately
      x86/KASLR: Clarify identity map interface
      x86/boot: Refuse to build with data relocations
      x86/KASLR, x86/power: Remove x86 hibernation restrictions

commit 52e31f89cc40c613b22e62108fe12b27433a888e
Merge: 9a7e7b57 ee40fb29
Author: Ingo Molnar <mingo@kernel.org>
Date:   Sat Jul 9 10:43:49 2016 +0200

    Merge branch 'linus' into x86/asm, to pick up fixes before merging new changes
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 90397a41779645d3abba5599f6bb538fdcab9339
Author: Thomas Garnier <thgarnie@google.com>
Date:   Tue Jun 21 17:47:06 2016 -0700

    x86/mm: Add memory hotplug support for KASLR memory randomization
    
    Add a new option (CONFIG_RANDOMIZE_MEMORY_PHYSICAL_PADDING) to define
    the padding used for the physical memory mapping section when KASLR
    memory is enabled. It ensures there is enough virtual address space when
    CONFIG_MEMORY_HOTPLUG is used. The default value is 10 terabytes. If
    CONFIG_MEMORY_HOTPLUG is not used, no space is reserved increasing the
    entropy available.
    
    Signed-off-by: Thomas Garnier <thgarnie@google.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Alexander Kuleshov <kuleshovmail@gmail.com>
    Cc: Alexander Popov <alpopov@ptsecurity.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jan Beulich <JBeulich@suse.com>
    Cc: Joerg Roedel <jroedel@suse.de>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Lv Zheng <lv.zheng@intel.com>
    Cc: Mark Salter <msalter@redhat.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephen Smalley <sds@tycho.nsa.gov>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Toshi Kani <toshi.kani@hpe.com>
    Cc: Xiao Guangrong <guangrong.xiao@linux.intel.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: kernel-hardening@lists.openwall.com
    Cc: linux-doc@vger.kernel.org
    Link: http://lkml.kernel.org/r/1466556426-32664-10-git-send-email-keescook@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 0483e1fa6e09d4948272680f691dccb1edb9677f
Author: Thomas Garnier <thgarnie@google.com>
Date:   Tue Jun 21 17:47:02 2016 -0700

    x86/mm: Implement ASLR for kernel memory regions
    
    Randomizes the virtual address space of kernel memory regions for
    x86_64. This first patch adds the infrastructure and does not randomize
    any region. The following patches will randomize the physical memory
    mapping, vmalloc and vmemmap regions.
    
    This security feature mitigates exploits relying on predictable kernel
    addresses. These addresses can be used to disclose the kernel modules
    base addresses or corrupt specific structures to elevate privileges
    bypassing the current implementation of KASLR. This feature can be
    enabled with the CONFIG_RANDOMIZE_MEMORY option.
    
    The order of each memory region is not changed. The feature looks at the
    available space for the regions based on different configuration options
    and randomizes the base and space between each. The size of the physical
    memory mapping is the available physical memory. No performance impact
    was detected while testing the feature.
    
    Entropy is generated using the KASLR early boot functions now shared in
    the lib directory (originally written by Kees Cook). Randomization is
    done on PGD & PUD page table levels to increase possible addresses. The
    physical memory mapping code was adapted to support PUD level virtual
    addresses. This implementation on the best configuration provides 30,000
    possible virtual addresses in average for each memory region.  An
    additional low memory page is used to ensure each CPU can start with a
    PGD aligned virtual address (for realmode).
    
    x86/dump_pagetable was updated to correctly display each region.
    
    Updated documentation on x86_64 memory layout accordingly.
    
    Performance data, after all patches in the series:
    
    Kernbench shows almost no difference (-+ less than 1%):
    
    Before:
    
    Average Optimal load -j 12 Run (std deviation): Elapsed Time 102.63 (1.2695)
    User Time 1034.89 (1.18115) System Time 87.056 (0.456416) Percent CPU 1092.9
    (13.892) Context Switches 199805 (3455.33) Sleeps 97907.8 (900.636)
    
    After:
    
    Average Optimal load -j 12 Run (std deviation): Elapsed Time 102.489 (1.10636)
    User Time 1034.86 (1.36053) System Time 87.764 (0.49345) Percent CPU 1095
    (12.7715) Context Switches 199036 (4298.1) Sleeps 97681.6 (1031.11)
    
    Hackbench shows 0% difference on average (hackbench 90 repeated 10 times):
    
    attemp,before,after 1,0.076,0.069 2,0.072,0.069 3,0.066,0.066 4,0.066,0.068
    5,0.066,0.067 6,0.066,0.069 7,0.067,0.066 8,0.063,0.067 9,0.067,0.065
    10,0.068,0.071 average,0.0677,0.0677
    
    Signed-off-by: Thomas Garnier <thgarnie@google.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Alexander Kuleshov <kuleshovmail@gmail.com>
    Cc: Alexander Popov <alpopov@ptsecurity.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jan Beulich <JBeulich@suse.com>
    Cc: Joerg Roedel <jroedel@suse.de>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Lv Zheng <lv.zheng@intel.com>
    Cc: Mark Salter <msalter@redhat.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephen Smalley <sds@tycho.nsa.gov>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Toshi Kani <toshi.kani@hpe.com>
    Cc: Xiao Guangrong <guangrong.xiao@linux.intel.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: kernel-hardening@lists.openwall.com
    Cc: linux-doc@vger.kernel.org
    Link: http://lkml.kernel.org/r/1466556426-32664-6-git-send-email-keescook@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 9e7f7f5425e6d1492109a537ee88c99b29580655
Merge: 6daa2ec f80fd3a
Author: Ingo Molnar <mingo@kernel.org>
Date:   Fri Jul 8 17:27:47 2016 +0200

    Merge branch 'x86/mm' into x86/boot, to pick up dependencies
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit ed9f007ee68478f6a50ec9971ade25a0129a5c0e
Author: Kees Cook <keescook@chromium.org>
Date:   Wed May 25 15:45:33 2016 -0700

    x86/KASLR: Extend kernel image physical address randomization to addresses larger than 4G
    
    We want the physical address to be randomized anywhere between
    16MB and the top of physical memory (up to 64TB).
    
    This patch exchanges the prior slots[] array for the new slot_areas[]
    array, and lifts the limitation of KERNEL_IMAGE_SIZE on the physical
    address offset for 64-bit. As before, process_e820_entry() walks
    memory and populates slot_areas[], splitting on any detected mem_avoid
    collisions.
    
    Finally, since the slots[] array and its associated functions are not
    needed any more, so they are removed.
    
    Based on earlier patches by Baoquan He.
    
    Originally-from: Baoquan He <bhe@redhat.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: H.J. Lu <hjl.tools@gmail.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Link: http://lkml.kernel.org/r/1464216334-17200-5-git-send-email-keescook@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit d6faca40f40b62aca8ea8c29289c7bf7456172bb
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jun 1 16:46:23 2016 +0200

    rtc: move mc146818 helper functions out-of-line
    
    The mc146818_get_time/mc146818_set_time functions are rather large
    inline functions in a global header file and are used in several
    drivers and in x86 specific code.
    
    Here we move them into a separate .c file that is compiled whenever
    any of the users require it. This also lets us remove the linux/acpi.h
    header inclusion from mc146818rtc.h, which in turn avoids some
    warnings about duplicate definition of the TRUE/FALSE macros.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>

commit 91dda51a115770fb9f24634fb09a502ad7bda5c6
Author: Aleksey Makarov <aleksey.makarov@linaro.org>
Date:   Mon Jun 20 13:56:12 2016 +0300

    ACPI / tables: introduce ARCH_HAS_ACPI_TABLE_UPGRADE
    
    We want to use the table upgrade feature in ARM64.
    Introduce a new configuration option that allows that.
    
    Signed-off-by: Aleksey Makarov <aleksey.makarov@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

commit 3a4955111ad46a022f05b51f91306d864f989625
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Fri May 27 18:08:27 2016 -0400

    isa: Allow ISA-style drivers on modern systems
    
    Several modern devices, such as PC/104 cards, are expected to run on
    modern systems via an ISA bus interface. Since ISA is a legacy interface
    for most modern architectures, ISA support should remain disabled in
    general. Support for ISA-style drivers should be enabled on a per driver
    basis.
    
    To allow ISA-style drivers on modern systems, this patch introduces the
    ISA_BUS_API and ISA_BUS Kconfig options. The ISA bus driver will now
    build conditionally on the ISA_BUS_API Kconfig option, which defaults to
    the legacy ISA Kconfig option. The ISA_BUS Kconfig option allows the
    ISA_BUS_API Kconfig option to be selected on architectures which do not
    enable ISA (e.g. X86_64).
    
    The ISA_BUS Kconfig option is currently only implemented for X86
    architectures. Other architectures may have their own ISA_BUS Kconfig
    options added as required.
    
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0145071b33142cbccffb51486b1ce921677b1d2d
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Thu Jun 2 14:20:18 2016 +0200

    x86: Do away with ARCH_[WANT_OPTIONAL|REQUIRE]_GPIOLIB
    
    This replaces:
    
    - "select ARCH_REQUIRE_GPIOLIB" with "select GPIOLIB" as this can
      now be selected directly.
    
    - "select ARCH_WANT_OPTIONAL_GPIOLIB" with no dependency: GPIOLIB
      is now selectable by everyone, so we need not declare our
      intent to select it.
    
    When ordering the symbols the following rationale was used:
    if the selects were in alphabetical order, I moved select GPIOLIB
    to be in alphabetical order, but if the selects were not
    maintained in alphabetical order, I just replaced
    "select ARCH_REQUIRE_GPIOLIB" with "select GPIOLIB".
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: Michael Büsch <m@bues.ch>
    Link: http://lkml.kernel.org/r/1464870018-8281-1-git-send-email-linus.walleij@linaro.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit f5967101e9de12addcda4510dfbac66d7c5779c3
Author: Borislav Petkov <bp@suse.de>
Date:   Mon May 30 12:56:27 2016 +0200

    x86/hweight: Get rid of the special calling convention
    
    People complained about ARCH_HWEIGHT_CFLAGS and how it throws a wrench
    into kcov, lto, etc, experimentations.
    
    Add asm versions for __sw_hweight{32,64}() and do explicit saving and
    restoring of clobbered registers. This gets rid of the special calling
    convention. We get to call those functions on !X86_FEATURE_POPCNT CPUs.
    
    We still need to hardcode POPCNT and register operands as some old gas
    versions which we support, do not know about POPCNT.
    
    Btw, remove redundant REX prefix from 32-bit POPCNT because alternatives
    can do padding now.
    
    Suggested-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1464605787-20603-1-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 6b90bd4ba40b38dc13c2782469c1c77e4ed79915
Author: Emese Revfy <re.emese@gmail.com>
Date:   Tue May 24 00:09:38 2016 +0200

    GCC plugin infrastructure
    
    This patch allows to build the whole kernel with GCC plugins. It was ported from
    grsecurity/PaX. The infrastructure supports building out-of-tree modules and
    building in a separate directory. Cross-compilation is supported too.
    Currently the x86, arm, arm64 and uml architectures enable plugins.
    
    The directory of the gcc plugins is scripts/gcc-plugins. You can use a file or a directory
    there. The plugins compile with these options:
     * -fno-rtti: gcc is compiled with this option so the plugins must use it too
     * -fno-exceptions: this is inherited from gcc too
     * -fasynchronous-unwind-tables: this is inherited from gcc too
     * -ggdb: it is useful for debugging a plugin (better backtrace on internal
        errors)
     * -Wno-narrowing: to suppress warnings from gcc headers (ipa-utils.h)
     * -Wno-unused-variable: to suppress warnings from gcc headers (gcc_version
        variable, plugin-version.h)
    
    The infrastructure introduces a new Makefile target called gcc-plugins. It
    supports all gcc versions from 4.5 to 6.0. The scripts/gcc-plugin.sh script
    chooses the proper host compiler (gcc-4.7 can be built by either gcc or g++).
    This script also checks the availability of the included headers in
    scripts/gcc-plugins/gcc-common.h.
    
    The gcc-common.h header contains frequently included headers for GCC plugins
    and it has a compatibility layer for the supported gcc versions.
    
    The gcc-generate-*-pass.h headers automatically generate the registration
    structures for GIMPLE, SIMPLE_IPA, IPA and RTL passes.
    
    Note that 'make clean' keeps the *.so files (only the distclean or mrproper
    targets clean all) because they are needed for out-of-tree modules.
    
    Based on work created by the PaX Team.
    
    Signed-off-by: Emese Revfy <re.emese@gmail.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Michal Marek <mmarek@suse.com>

commit 51e68d055cbabfd36cba3903fd2a223bc98514b1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 21 10:25:19 2016 -0700

    x86 isa: add back X86_32 dependency on CONFIG_ISA
    
    Commit b3c1be1b789c ("base: isa: Remove X86_32 dependency") made ISA
    support available on x86-64 too.  That's not right - while there are
    some LPC-style devices that might be useful still and be based on
    ISA-like IP blocks, that is *not* an excuse to try to enable any random
    legacy drivers.
    
    Such drivers should be individually enabled and made to perhaps depend
    on ISA_DMA_API instead (which we have continued to support on x86-64).
    Or we could add another "ISA_XYZ_API" that we support that doesn't
    enable random old drivers that aren't even 64-bit clean nor do we have
    any test coverage for.
    
    Turning off ISA will now also turn off some drivers that have been
    marked as depending on it as part of this series, and that used to work
    on modern platforms.
    
    See for example commits ad7afc38eab3..cc736607c86d, which may also need
    to be reverted.
    
    This commit means that the warnings that came in due to enabling ISA
    widely are now gone again.
    
    Acked-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 5469dc270cd44c451590d40c031e6a71c1f637e8
Merge: 2f37dd1 ea9b501
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri May 20 22:31:33 2016 -0700

    Merge branch 'akpm' (patches from Andrew)
    
    Merge more updates from Andrew Morton:
    
     - the rest of MM
    
     - KASAN updates
    
     - procfs updates
    
     - exit, fork updates
    
     - printk updates
    
     - lib/ updates
    
     - radix-tree testsuite updates
    
     - checkpatch updates
    
     - kprobes updates
    
     - a few other misc bits
    
    * emailed patches from Andrew Morton <akpm@linux-foundation.org>: (162 commits)
      samples/kprobes: print out the symbol name for the hooks
      samples/kprobes: add a new module parameter
      kprobes: add the "tls" argument for j_do_fork
      init/main.c: simplify initcall_blacklisted()
      fs/efs/super.c: fix return value
      checkpatch: improve --git <commit-count> shortcut
      checkpatch: reduce number of `git log` calls with --git
      checkpatch: add support to check already applied git commits
      checkpatch: add --list-types to show message types to show or ignore
      checkpatch: advertise the --fix and --fix-inplace options more
      checkpatch: whine about ACCESS_ONCE
      checkpatch: add test for keywords not starting on tabstops
      checkpatch: improve CONSTANT_COMPARISON test for structure members
      checkpatch: add PREFER_IS_ENABLED test
      lib/GCD.c: use binary GCD algorithm instead of Euclidean
      radix-tree: free up the bottom bit of exceptional entries for reuse
      dax: move RADIX_DAX_ definitions to dax.c
      radix-tree: make radix_tree_descend() more useful
      radix-tree: introduce radix_tree_replace_clear_tags()
      radix-tree: tidy up __radix_tree_create()
      ...

commit 3aa2fc1667acdd9cca816a2bc9529f494bd61b05
Merge: 5af2344 c6e360a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri May 20 21:26:15 2016 -0700

    Merge tag 'driver-core-4.7-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core
    
    Pull driver core updates from Greg KH:
     "Here's the "big" driver core update for 4.7-rc1.
    
      Mostly just debugfs changes, the long-known and messy races with
      removing debugfs files should be fixed thanks to the great work of
      Nicolai Stange.  We also have some isa updates in here (the x86
      maintainers told me to take it through this tree), a new warning when
      we run out of dynamic char major numbers, and a few other assorted
      changes, details in the shortlog.
    
      All have been in linux-next for some time with no reported issues"
    
    * tag 'driver-core-4.7-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core: (32 commits)
      Revert "base: dd: don't remove driver_data in -EPROBE_DEFER case"
      gpio: ws16c48: Utilize the ISA bus driver
      gpio: 104-idio-16: Utilize the ISA bus driver
      gpio: 104-idi-48: Utilize the ISA bus driver
      gpio: 104-dio-48e: Utilize the ISA bus driver
      watchdog: ebc-c384_wdt: Utilize the ISA bus driver
      iio: stx104: Utilize the module_isa_driver and max_num_isa_dev macros
      iio: stx104: Add X86 dependency to STX104 Kconfig option
      Documentation: Add ISA bus driver documentation
      isa: Implement the max_num_isa_dev macro
      isa: Implement the module_isa_driver macro
      pnp: pnpbios: Add explicit X86_32 dependency to PNPBIOS
      isa: Decouple X86_32 dependency from the ISA Kconfig option
      driver-core: use 'dev' argument in dev_dbg_ratelimited stub
      base: dd: don't remove driver_data in -EPROBE_DEFER case
      kernfs: Move faulting copy_user operations outside of the mutex
      devcoredump: add scatterlist support
      debugfs: unproxify files created through debugfs_create_u32_array()
      debugfs: unproxify files created through debugfs_create_blob()
      debugfs: unproxify files created through debugfs_create_bool()
      ...

commit 42a0bb3f71383b457a7db362f1c69e7afb96732b
Author: Petr Mladek <pmladek@suse.com>
Date:   Fri May 20 17:00:33 2016 -0700

    printk/nmi: generic solution for safe printk in NMI
    
    printk() takes some locks and could not be used a safe way in NMI
    context.
    
    The chance of a deadlock is real especially when printing stacks from
    all CPUs.  This particular problem has been addressed on x86 by the
    commit a9edc8809328 ("x86/nmi: Perform a safe NMI stack trace on all
    CPUs").
    
    The patchset brings two big advantages.  First, it makes the NMI
    backtraces safe on all architectures for free.  Second, it makes all NMI
    messages almost safe on all architectures (the temporary buffer is
    limited.  We still should keep the number of messages in NMI context at
    minimum).
    
    Note that there already are several messages printed in NMI context:
    WARN_ON(in_nmi()), BUG_ON(in_nmi()), anything being printed out from MCE
    handlers.  These are not easy to avoid.
    
    This patch reuses most of the code and makes it generic.  It is useful
    for all messages and architectures that support NMI.
    
    The alternative printk_func is set when entering and is reseted when
    leaving NMI context.  It queues IRQ work to copy the messages into the
    main ring buffer in a safe context.
    
    __printk_nmi_flush() copies all available messages and reset the buffer.
    Then we could use a simple cmpxchg operations to get synchronized with
    writers.  There is also used a spinlock to get synchronized with other
    flushers.
    
    We do not longer use seq_buf because it depends on external lock.  It
    would be hard to make all supported operations safe for a lockless use.
    It would be confusing and error prone to make only some operations safe.
    
    The code is put into separate printk/nmi.c as suggested by Steven
    Rostedt.  It needs a per-CPU buffer and is compiled only on
    architectures that call nmi_enter().  This is achieved by the new
    HAVE_NMI Kconfig flag.
    
    The are MN10300 and Xtensa architectures.  We need to clean up NMI
    handling there first.  Let's do it separately.
    
    The patch is heavily based on the draft from Peter Zijlstra, see
    
      https://lkml.org/lkml/2015/6/10/327
    
    [arnd@arndb.de: printk-nmi: use %zu format string for size_t]
    [akpm@linux-foundation.org: min_t->min - all types are size_t here]
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Suggested-by: Steven Rostedt <rostedt@goodmis.org>
    Cc: Jan Kara <jack@suse.cz>
    Acked-by: Russell King <rmk+kernel@arm.linux.org.uk>	[arm part]
    Cc: Daniel Thompson <daniel.thompson@linaro.org>
    Cc: Jiri Kosina <jkosina@suse.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: David Miller <davem@davemloft.net>
    Cc: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 5f56a5dfdb9bcb3bca03df59980d4d2f012cbb53
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Fri May 20 17:00:16 2016 -0700

    exit_thread: remove empty bodies
    
    Define HAVE_EXIT_THREAD for archs which want to do something in
    exit_thread. For others, let's define exit_thread as an empty inline.
    
    This is a cleanup before we change the prototype of exit_thread to
    accept a task parameter.
    
    [akpm@linux-foundation.org: fix mips]
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: "James E.J. Bottomley" <jejb@parisc-linux.org>
    Cc: Aurelien Jacquiot <a-jacquiot@ti.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Chen Liqin <liqin.linux@gmail.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Chris Zankel <chris@zankel.net>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Guan Xuetao <gxt@mprc.pku.edu.cn>
    Cc: Haavard Skinnemoen <hskinnemoen@gmail.com>
    Cc: Hans-Christian Egtvedt <egtvedt@samfundet.no>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Jeff Dike <jdike@addtoit.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Jonas Bonn <jonas@southpole.se>
    Cc: Koichi Yasutake <yasutake.koichi@jp.panasonic.com>
    Cc: Lennox Wu <lennox.wu@gmail.com>
    Cc: Ley Foon Tan <lftan@altera.com>
    Cc: Mark Salter <msalter@redhat.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Matt Turner <mattst88@gmail.com>
    Cc: Max Filippov <jcmvbkbc@gmail.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Michal Simek <monstr@monstr.eu>
    Cc: Mikael Starvik <starvik@axis.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Rich Felker <dalias@libc.org>
    Cc: Richard Henderson <rth@twiddle.net>
    Cc: Richard Kuo <rkuo@codeaurora.org>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Steven Miao <realmz6@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit a7fd20d1c476af4563e66865213474a2f9f473a4
Merge: b80fed9 917fa53
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue May 17 16:26:30 2016 -0700

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next
    
    Pull networking updates from David Miller:
     "Highlights:
    
       1) Support SPI based w5100 devices, from Akinobu Mita.
    
       2) Partial Segmentation Offload, from Alexander Duyck.
    
       3) Add GMAC4 support to stmmac driver, from Alexandre TORGUE.
    
       4) Allow cls_flower stats offload, from Amir Vadai.
    
       5) Implement bpf blinding, from Daniel Borkmann.
    
       6) Optimize _ASYNC_ bit twiddling on sockets, unless the socket is
          actually using FASYNC these atomics are superfluous.  From Eric
          Dumazet.
    
       7) Run TCP more preemptibly, also from Eric Dumazet.
    
       8) Support LED blinking, EEPROM dumps, and rxvlan offloading in mlx5e
          driver, from Gal Pressman.
    
       9) Allow creating ppp devices via rtnetlink, from Guillaume Nault.
    
      10) Improve BPF usage documentation, from Jesper Dangaard Brouer.
    
      11) Support tunneling offloads in qed, from Manish Chopra.
    
      12) aRFS offloading in mlx5e, from Maor Gottlieb.
    
      13) Add RFS and RPS support to SCTP protocol, from Marcelo Ricardo
          Leitner.
    
      14) Add MSG_EOR support to TCP, this allows controlling packet
          coalescing on application record boundaries for more accurate
          socket timestamp sampling.  From Martin KaFai Lau.
    
      15) Fix alignment of 64-bit netlink attributes across the board, from
          Nicolas Dichtel.
    
      16) Per-vlan stats in bridging, from Nikolay Aleksandrov.
    
      17) Several conversions of drivers to ethtool ksettings, from Philippe
          Reynes.
    
      18) Checksum neutral ILA in ipv6, from Tom Herbert.
    
      19) Factorize all of the various marvell dsa drivers into one, from
          Vivien Didelot
    
      20) Add VF support to qed driver, from Yuval Mintz"
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next: (1649 commits)
      Revert "phy dp83867: Fix compilation with CONFIG_OF_MDIO=m"
      Revert "phy dp83867: Make rgmii parameters optional"
      r8169: default to 64-bit DMA on recent PCIe chips
      phy dp83867: Make rgmii parameters optional
      phy dp83867: Fix compilation with CONFIG_OF_MDIO=m
      bpf: arm64: remove callee-save registers use for tmp registers
      asix: Fix offset calculation in asix_rx_fixup() causing slow transmissions
      switchdev: pass pointer to fib_info instead of copy
      net_sched: close another race condition in tcf_mirred_release()
      tipc: fix nametable publication field in nl compat
      drivers: net: Don't print unpopulated net_device name
      qed: add support for dcbx.
      ravb: Add missing free_irq() calls to ravb_close()
      qed: Remove a stray tab
      net: ethernet: fec-mpc52xx: use phy_ethtool_{get|set}_link_ksettings
      net: ethernet: fec-mpc52xx: use phydev from struct net_device
      bpf, doc: fix typo on bpf_asm descriptions
      stmmac: hardware TX COE doesn't work when force_thresh_dma_mode is set
      net: ethernet: fs-enet: use phy_ethtool_{get|set}_link_ksettings
      net: ethernet: fs-enet: use phydev from struct net_device
      ...

commit 9a45f036af363aec1efec08827c825d69c115a9a
Merge: 168f1a7 d2d3462
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 16 15:54:01 2016 -0700

    Merge branch 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 boot updates from Ingo Molnar:
     "The biggest changes in this cycle were:
    
       - prepare for more KASLR related changes, by restructuring, cleaning
         up and fixing the existing boot code.  (Kees Cook, Baoquan He,
         Yinghai Lu)
    
       - simplifly/concentrate subarch handling code, eliminate
         paravirt_enabled() usage.  (Luis R Rodriguez)"
    
    * 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (50 commits)
      x86/KASLR: Clarify purpose of each get_random_long()
      x86/KASLR: Add virtual address choosing function
      x86/KASLR: Return earliest overlap when avoiding regions
      x86/KASLR: Add 'struct slot_area' to manage random_addr slots
      x86/boot: Add missing file header comments
      x86/KASLR: Initialize mapping_info every time
      x86/boot: Comment what finalize_identity_maps() does
      x86/KASLR: Build identity mappings on demand
      x86/boot: Split out kernel_ident_mapping_init()
      x86/boot: Clean up indenting for asm/boot.h
      x86/KASLR: Improve comments around the mem_avoid[] logic
      x86/boot: Simplify pointer casting in choose_random_location()
      x86/KASLR: Consolidate mem_avoid[] entries
      x86/boot: Clean up pointer casting
      x86/boot: Warn on future overlapping memcpy() use
      x86/boot: Extract error reporting functions
      x86/boot: Correctly bounds-check relocations
      x86/KASLR: Clean up unused code from old 'run_size' and rename it to 'kernel_total_size'
      x86/boot: Fix "run_size" calculation
      x86/boot: Calculate decompression size during boot not build
      ...

commit 6077776b5908e0493a3946f7d3bc63871b201e87
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri May 13 19:08:28 2016 +0200

    bpf: split HAVE_BPF_JIT into cBPF and eBPF variant
    
    Split the HAVE_BPF_JIT into two for distinguishing cBPF and eBPF JITs.
    
    Current cBPF ones:
    
      # git grep -n HAVE_CBPF_JIT arch/
      arch/arm/Kconfig:44:    select HAVE_CBPF_JIT
      arch/mips/Kconfig:18:   select HAVE_CBPF_JIT if !CPU_MICROMIPS
      arch/powerpc/Kconfig:129:       select HAVE_CBPF_JIT
      arch/sparc/Kconfig:35:  select HAVE_CBPF_JIT
    
    Current eBPF ones:
    
      # git grep -n HAVE_EBPF_JIT arch/
      arch/arm64/Kconfig:61:  select HAVE_EBPF_JIT
      arch/s390/Kconfig:126:  select HAVE_EBPF_JIT if PACK_STACK && HAVE_MARCH_Z196_FEATURES
      arch/x86/Kconfig:94:    select HAVE_EBPF_JIT                    if X86_64
    
    Later code also needs this facility to check for eBPF JITs.
    
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit 8ac0fba2da41620f4931a1007c71b0d4723eb02a
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Sun May 1 17:50:29 2016 -0400

    isa: Decouple X86_32 dependency from the ISA Kconfig option
    
    The introduction of the ISA_BUS option blocks the compilation of ISA
    drivers on non-x86 platforms. The ISA_BUS configuration option should
    not be necessary if the X86_32 dependency can be decoupled from the ISA
    configuration option. This patch both removes the ISA_BUS configuration
    option entirely and removes the X86_32 dependency from the ISA
    configuration option.
    
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8581e3d67788b6b29d055fa42c6cb5b258fee64
Author: Baoquan He <bhe@redhat.com>
Date:   Wed Apr 20 13:55:43 2016 -0700

    x86/KASLR: Drop CONFIG_RANDOMIZE_BASE_MAX_OFFSET
    
    Currently CONFIG_RANDOMIZE_BASE_MAX_OFFSET is used to limit the maximum
    offset for kernel randomization. This limit doesn't need to be a CONFIG
    since it is tied completely to KERNEL_IMAGE_SIZE, and will make no sense
    once physical and virtual offsets are randomized separately. This patch
    removes CONFIG_RANDOMIZE_BASE_MAX_OFFSET and consolidates the Kconfig
    help text.
    
    [kees: rewrote changelog, dropped KERNEL_IMAGE_SIZE_DEFAULT, rewrote help]
    Signed-off-by: Baoquan He <bhe@redhat.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: H.J. Lu <hjl.tools@gmail.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Link: http://lkml.kernel.org/r/1461185746-8017-3-git-send-email-keescook@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 889fac6d67d46a5e781c08fb26fec9016db1c307
Merge: dad38ca bf16200
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Apr 13 08:57:03 2016 +0200

    Merge tag 'v4.6-rc3' into perf/core, to refresh the tree
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 07dc900e17a94681877b5797ce62ba97fa170400
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Mar 29 14:30:35 2016 +0200

    perf/x86: Move Kconfig.perf and other perf configuration bits to events/Kconfig
    
    Ingo says:
    
     "If we do a separate file we should have it in arch/x86/events/Kconfig
      (not in arch/x86/Kconfig.perf), and also move some of the other bits,
      such as PERF_EVENTS_AMD_POWER?"
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit e633c65a1d5859da170a83d537d9762c07d12213
Author: Kan Liang <kan.liang@intel.com>
Date:   Sun Mar 20 01:33:36 2016 -0700

    x86/perf/intel/uncore: Make the Intel uncore PMU driver modular
    
    By default, the uncore driver will be built into the kernel. If it is
    configured as a module, the supported CPU model can be auto loaded.
    
    This patch also cleans up the code of uncore_cpu_init() and
    uncore_pci_init().
    
    Based-on-a-patch-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Kan Liang <kan.liang@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Link: http://lkml.kernel.org/r/1458462817-2475-1-git-send-email-kan.liang@intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit b3c1be1b789cca6d3e39c950dfed690f0511fe76
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Fri Jan 22 11:28:07 2016 -0500

    base: isa: Remove X86_32 dependency
    
    Many motherboards utilize a LPC to ISA bridge in order to decode
    ISA-style port-mapped I/O addresses. This is particularly true for
    embedded motherboards supporting the PC/104 bus (a bus specification
    derived from ISA).
    
    These motherboards are now commonly running 64-bit x86 processors. The
    X86_32 dependency should be removed from the ISA bus configuration
    option in order to support these newer motherboards.
    
    A new config option, CONFIG_ISA_BUS, is introduced to allow for the
    compilation of the ISA bus driver independent of the CONFIG_ISA option.
    Devices which communicate via ISA-compatible buses can now be supported
    independent of the dependencies of the CONFIG_ISA option.
    
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fa2fe2ce09c5a16be69c5319eb3347271a99735
Merge: d88f48e 05f5ece
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Mar 24 10:02:14 2016 -0700

    Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull perf fixes from Ingo Molnar:
     "This tree contains various perf fixes on the kernel side, plus three
      hw/event-enablement late additions:
    
       - Intel Memory Bandwidth Monitoring events and handling
       - the AMD Accumulated Power Mechanism reporting facility
       - more IOMMU events
    
      ... and a final round of perf tooling updates/fixes"
    
    * 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (44 commits)
      perf llvm: Use strerror_r instead of the thread unsafe strerror one
      perf llvm: Use realpath to canonicalize paths
      perf tools: Unexport some methods unused outside strbuf.c
      perf probe: No need to use formatting strbuf method
      perf help: Use asprintf instead of adhoc equivalents
      perf tools: Remove unused perf_pathdup, xstrdup functions
      perf tools: Do not include stringify.h from the kernel sources
      tools include: Copy linux/stringify.h from the kernel
      tools lib traceevent: Remove redundant CPU output
      perf tools: Remove needless 'extern' from function prototypes
      perf tools: Simplify die() mechanism
      perf tools: Remove unused DIE_IF macro
      perf script: Remove lots of unused arguments
      perf thread: Rename perf_event__preprocess_sample_addr to thread__resolve
      perf machine: Rename perf_event__preprocess_sample to machine__resolve
      perf tools: Add cpumode to struct perf_sample
      perf tests: Forward the perf_sample in the dwarf unwind test
      perf tools: Remove misplaced __maybe_unused
      perf list: Fix documentation of :ppp
      perf bench numa: Fix assertion for nodes bitfield
      ...

commit 5c9a8750a6409c63a0f01d51a9024861022f6593
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Tue Mar 22 14:27:30 2016 -0700

    kernel: add kcov code coverage
    
    kcov provides code coverage collection for coverage-guided fuzzing
    (randomized testing).  Coverage-guided fuzzing is a testing technique
    that uses coverage feedback to determine new interesting inputs to a
    system.  A notable user-space example is AFL
    (http://lcamtuf.coredump.cx/afl/).  However, this technique is not
    widely used for kernel testing due to missing compiler and kernel
    support.
    
    kcov does not aim to collect as much coverage as possible.  It aims to
    collect more or less stable coverage that is function of syscall inputs.
    To achieve this goal it does not collect coverage in soft/hard
    interrupts and instrumentation of some inherently non-deterministic or
    non-interesting parts of kernel is disbled (e.g.  scheduler, locking).
    
    Currently there is a single coverage collection mode (tracing), but the
    API anticipates additional collection modes.  Initially I also
    implemented a second mode which exposes coverage in a fixed-size hash
    table of counters (what Quentin used in his original patch).  I've
    dropped the second mode for simplicity.
    
    This patch adds the necessary support on kernel side.  The complimentary
    compiler support was added in gcc revision 231296.
    
    We've used this support to build syzkaller system call fuzzer, which has
    found 90 kernel bugs in just 2 months:
    
      https://github.com/google/syzkaller/wiki/Found-Bugs
    
    We've also found 30+ bugs in our internal systems with syzkaller.
    Another (yet unexplored) direction where kcov coverage would greatly
    help is more traditional "blob mutation".  For example, mounting a
    random blob as a filesystem, or receiving a random blob over wire.
    
    Why not gcov.  Typical fuzzing loop looks as follows: (1) reset
    coverage, (2) execute a bit of code, (3) collect coverage, repeat.  A
    typical coverage can be just a dozen of basic blocks (e.g.  an invalid
    input).  In such context gcov becomes prohibitively expensive as
    reset/collect coverage steps depend on total number of basic
    blocks/edges in program (in case of kernel it is about 2M).  Cost of
    kcov depends only on number of executed basic blocks/edges.  On top of
    that, kernel requires per-thread coverage because there are always
    background threads and unrelated processes that also produce coverage.
    With inlined gcov instrumentation per-thread coverage is not possible.
    
    kcov exposes kernel PCs and control flow to user-space which is
    insecure.  But debugfs should not be mapped as user accessible.
    
    Based on a patch by Quentin Casasnovas.
    
    [akpm@linux-foundation.org: make task_struct.kcov_mode have type `enum kcov_mode']
    [akpm@linux-foundation.org: unbreak allmodconfig]
    [akpm@linux-foundation.org: follow x86 Makefile layout standards]
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Tavis Ormandy <taviso@google.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Quentin Casasnovas <quentin.casasnovas@oracle.com>
    Cc: Kostya Serebryany <kcc@google.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Sasha Levin <sasha.levin@oracle.com>
    Cc: David Drysdale <drysdale@google.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Cc: Kirill A. Shutemov <kirill@shutemov.name>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit c7ab62bfbe0e27ef452d19d88b083f01e99f13a7
Author: Huang Rui <ray.huang@amd.com>
Date:   Wed Mar 9 13:45:06 2016 +0800

    perf/x86/amd/power: Add AMD accumulated power reporting mechanism
    
    Introduce an AMD accumlated power reporting mechanism for the Family
    15h, Model 60h processor that can be used to calculate the average
    power consumed by a processor during a measurement interval. The
    feature support is indicated by CPUID Fn8000_0007_EDX[12].
    
    This feature will be implemented both in hwmon and perf. The current
    design provides one event to report per package/processor power
    consumption by counting each compute unit power value.
    
    Here the gory details of how the computation is done:
    
    * Tsample: compute unit power accumulator sample period
    * Tref: the PTSC counter period (PTSC: performance timestamp counter)
    * N: the ratio of compute unit power accumulator sample period to the
      PTSC period
    
    * Jmax: max compute unit accumulated power which is indicated by
      MSR_C001007b[MaxCpuSwPwrAcc]
    
    * Jx/Jy: compute unit accumulated power which is indicated by
      MSR_C001007a[CpuSwPwrAcc]
    
    * Tx/Ty: the value of performance timestamp counter which is indicated
      by CU_PTSC MSR_C0010280[PTSC]
    * PwrCPUave: CPU average power
    
    i. Determine the ratio of Tsample to Tref by executing CPUID Fn8000_0007.
    	N = value of CPUID Fn8000_0007_ECX[CpuPwrSampleTimeRatio[15:0]].
    
    ii. Read the full range of the cumulative energy value from the new
        MSR MaxCpuSwPwrAcc.
    	Jmax = value returned.
    
    iii. At time x, software reads CpuSwPwrAcc and samples the PTSC.
    	Jx = value read from CpuSwPwrAcc and Tx = value read from PTSC.
    
    iv. At time y, software reads CpuSwPwrAcc and samples the PTSC.
    	Jy = value read from CpuSwPwrAcc and Ty = value read from PTSC.
    
    v. Calculate the average power consumption for a compute unit over
    time period (y-x). Unit of result is uWatt:
    
    	if (Jy < Jx) // Rollover has occurred
    		Jdelta = (Jy + Jmax) - Jx
    	else
    		Jdelta = Jy - Jx
    	PwrCPUave = N * Jdelta * 1000 / (Ty - Tx)
    
    Simple example:
    
      root@hr-zp:/home/ray/tip# ./tools/perf/perf stat -a -e 'power/power-pkg/' make -j4
        CHK     include/config/kernel.release
        CHK     include/generated/uapi/linux/version.h
        CHK     include/generated/utsrelease.h
        CHK     include/generated/timeconst.h
        CHK     include/generated/bounds.h
        CHK     include/generated/asm-offsets.h
        CALL    scripts/checksyscalls.sh
        CHK     include/generated/compile.h
        SKIPPED include/generated/compile.h
        Building modules, stage 2.
      Kernel: arch/x86/boot/bzImage is ready  (#40)
        MODPOST 4225 modules
    
       Performance counter stats for 'system wide':
    
                  183.44 mWatts power/power-pkg/
    
           341.837270111 seconds time elapsed
    
      root@hr-zp:/home/ray/tip# ./tools/perf/perf stat -a -e 'power/power-pkg/' sleep 10
    
       Performance counter stats for 'system wide':
    
                    0.18 mWatts power/power-pkg/
    
            10.012551815 seconds time elapsed
    
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Suggested-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kan Liang <kan.liang@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Robert Richter <rric@kernel.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Cc: jacob.w.shin@gmail.com
    Link: http://lkml.kernel.org/r/1457502306-2559-1-git-send-email-ray.huang@amd.com
    [ Fixed the modular build. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 643ad15d47410d37d43daf3ef1c8ac52c281efa5
Merge: 24b5e20 0d47638
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Mar 20 19:08:56 2016 -0700

    Merge branch 'mm-pkeys-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 protection key support from Ingo Molnar:
     "This tree adds support for a new memory protection hardware feature
      that is available in upcoming Intel CPUs: 'protection keys' (pkeys).
    
      There's a background article at LWN.net:
    
          https://lwn.net/Articles/643797/
    
      The gist is that protection keys allow the encoding of
      user-controllable permission masks in the pte.  So instead of having a
      fixed protection mask in the pte (which needs a system call to change
      and works on a per page basis), the user can map a (handful of)
      protection mask variants and can change the masks runtime relatively
      cheaply, without having to change every single page in the affected
      virtual memory range.
    
      This allows the dynamic switching of the protection bits of large
      amounts of virtual memory, via user-space instructions.  It also
      allows more precise control of MMU permission bits: for example the
      executable bit is separate from the read bit (see more about that
      below).
    
      This tree adds the MM infrastructure and low level x86 glue needed for
      that, plus it adds a high level API to make use of protection keys -
      if a user-space application calls:
    
            mmap(..., PROT_EXEC);
    
      or
    
            mprotect(ptr, sz, PROT_EXEC);
    
      (note PROT_EXEC-only, without PROT_READ/WRITE), the kernel will notice
      this special case, and will set a special protection key on this
      memory range.  It also sets the appropriate bits in the Protection
      Keys User Rights (PKRU) register so that the memory becomes unreadable
      and unwritable.
    
      So using protection keys the kernel is able to implement 'true'
      PROT_EXEC on x86 CPUs: without protection keys PROT_EXEC implies
      PROT_READ as well.  Unreadable executable mappings have security
      advantages: they cannot be read via information leaks to figure out
      ASLR details, nor can they be scanned for ROP gadgets - and they
      cannot be used by exploits for data purposes either.
    
      We know about no user-space code that relies on pure PROT_EXEC
      mappings today, but binary loaders could start making use of this new
      feature to map binaries and libraries in a more secure fashion.
    
      There is other pending pkeys work that offers more high level system
      call APIs to manage protection keys - but those are not part of this
      pull request.
    
      Right now there's a Kconfig that controls this feature
      (CONFIG_X86_INTEL_MEMORY_PROTECTION_KEYS) that is default enabled
      (like most x86 CPU feature enablement code that has no runtime
      overhead), but it's not user-configurable at the moment.  If there's
      any serious problem with this then we can make it configurable and/or
      flip the default"
    
    * 'mm-pkeys-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (38 commits)
      x86/mm/pkeys: Fix mismerge of protection keys CPUID bits
      mm/pkeys: Fix siginfo ABI breakage caused by new u64 field
      x86/mm/pkeys: Fix access_error() denial of writes to write-only VMA
      mm/core, x86/mm/pkeys: Add execute-only protection keys support
      x86/mm/pkeys: Create an x86 arch_calc_vm_prot_bits() for VMA flags
      x86/mm/pkeys: Allow kernel to modify user pkey rights register
      x86/fpu: Allow setting of XSAVE state
      x86/mm: Factor out LDT init from context init
      mm/core, x86/mm/pkeys: Add arch_validate_pkey()
      mm/core, arch, powerpc: Pass a protection key in to calc_vm_flag_bits()
      x86/mm/pkeys: Actually enable Memory Protection Keys in the CPU
      x86/mm/pkeys: Add Kconfig prompt to existing config option
      x86/mm/pkeys: Dump pkey from VMA in /proc/pid/smaps
      x86/mm/pkeys: Dump PKRU with other kernel registers
      mm/core, x86/mm/pkeys: Differentiate instruction fetches
      x86/mm/pkeys: Optimize fault handling in access_error()
      mm/core: Do not enforce PKEY permissions on remote mm access
      um, pkeys: Add UML arch_*_access_permitted() methods
      mm/gup, x86/mm/pkeys: Check VMAs and PTEs for protection keys
      x86/mm/gup: Simplify get_user_pages() PTE bit handling
      ...

commit 26660a4046b171a752e72a1dd32153230234fe3a
Merge: 46e595a 1bcb58a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Mar 20 18:23:21 2016 -0700

    Merge branch 'core-objtool-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull 'objtool' stack frame validation from Ingo Molnar:
     "This tree adds a new kernel build-time object file validation feature
      (ONFIG_STACK_VALIDATION=y): kernel stack frame correctness validation.
      It was written by and is maintained by Josh Poimboeuf.
    
      The motivation: there's a category of hard to find kernel bugs, most
      of them in assembly code (but also occasionally in C code), that
      degrades the quality of kernel stack dumps/backtraces.  These bugs are
      hard to detect at the source code level.  Such bugs result in
      incorrect/incomplete backtraces most of time - but can also in some
      rare cases result in crashes or other undefined behavior.
    
      The build time correctness checking is done via the new 'objtool'
      user-space utility that was written for this purpose and which is
      hosted in the kernel repository in tools/objtool/.  The tool's (very
      simple) UI and source code design is shaped after Git and perf and
      shares quite a bit of infrastructure with tools/perf (which tooling
      infrastructure sharing effort got merged via perf and is already
      upstream).  Objtool follows the well-known kernel coding style.
    
      Objtool does not try to check .c or .S files, it instead analyzes the
      resulting .o generated machine code from first principles: it decodes
      the instruction stream and interprets it.  (Right now objtool supports
      the x86-64 architecture.)
    
      From tools/objtool/Documentation/stack-validation.txt:
    
       "The kernel CONFIG_STACK_VALIDATION option enables a host tool named
        objtool which runs at compile time.  It has a "check" subcommand
        which analyzes every .o file and ensures the validity of its stack
        metadata.  It enforces a set of rules on asm code and C inline
        assembly code so that stack traces can be reliable.
    
        Currently it only checks frame pointer usage, but there are plans to
        add CFI validation for C files and CFI generation for asm files.
    
        For each function, it recursively follows all possible code paths
        and validates the correct frame pointer state at each instruction.
    
        It also follows code paths involving special sections, like
        .altinstructions, __jump_table, and __ex_table, which can add
        alternative execution paths to a given instruction (or set of
        instructions).  Similarly, it knows how to follow switch statements,
        for which gcc sometimes uses jump tables."
    
      When this new kernel option is enabled (it's disabled by default), the
      tool, if it finds any suspicious assembly code pattern, outputs
      warnings in compiler warning format:
    
        warning: objtool: rtlwifi_rate_mapping()+0x2e7: frame pointer state mismatch
        warning: objtool: cik_tiling_mode_table_init()+0x6ce: call without frame pointer save/setup
        warning: objtool:__schedule()+0x3c0: duplicate frame pointer save
        warning: objtool:__schedule()+0x3fd: sibling call from callable instruction with changed frame pointer
    
      ... so that scripts that pick up compiler warnings will notice them.
      All known warnings triggered by the tool are fixed by the tree, most
      of the commits in fact prepare the kernel to be warning-free.  Most of
      them are bugfixes or cleanups that stand on their own, but there are
      also some annotations of 'special' stack frames for justified cases
      such entries to JIT-ed code (BPF) or really special boot time code.
    
      There are two other long-term motivations behind this tool as well:
    
       - To improve the quality and reliability of kernel stack frames, so
         that they can be used for optimized live patching.
    
       - To create independent infrastructure to check the correctness of
         CFI stack frames at build time.  CFI debuginfo is notoriously
         unreliable and we cannot use it in the kernel as-is without extra
         checking done both on the kernel side and on the build side.
    
      The quality of kernel stack frames matters to debuggability as well,
      so IMO we can merge this without having to consider the live patching
      or CFI debuginfo angle"
    
    * 'core-objtool-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (52 commits)
      objtool: Only print one warning per function
      objtool: Add several performance improvements
      tools: Copy hashtable.h into tools directory
      objtool: Fix false positive warnings for functions with multiple switch statements
      objtool: Rename some variables and functions
      objtool: Remove superflous INIT_LIST_HEAD
      objtool: Add helper macros for traversing instructions
      objtool: Fix false positive warnings related to sibling calls
      objtool: Compile with debugging symbols
      objtool: Detect infinite recursion
      objtool: Prevent infinite recursion in noreturn detection
      objtool: Detect and warn if libelf is missing and don't break the build
      tools: Support relative directory path for 'O='
      objtool: Support CROSS_COMPILE
      x86/asm/decoder: Use explicitly signed chars
      objtool: Enable stack metadata validation on 64-bit x86
      objtool: Add CONFIG_STACK_VALIDATION option
      objtool: Add tool to perform compile-time stack metadata validation
      x86/kprobes: Mark kretprobe_trampoline() stack frame as non-standard
      sched: Always inline context_switch()
      ...

commit 63e30271b04c712c684c07567401b61b10d094d4
Merge: 277edba 6e6f498
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Mar 16 14:45:55 2016 -0700

    Merge tag 'pci-v4.6-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
    
    Pull PCI updates from Bjorn Helgaas:
     "PCI changes for v4.6:
    
      Enumeration:
       - Disable IO/MEM decoding for devices with non-compliant BARs (Bjorn Helgaas)
       - Mark Broadwell-EP Home Agent & PCU as having non-compliant BARs (Bjorn Helgaas
    
      Resource management:
       - Mark shadow copy of VGA ROM as IORESOURCE_PCI_FIXED (Bjorn Helgaas)
       - Don't assign or reassign immutable resources (Bjorn Helgaas)
       - Don't enable/disable ROM BAR if we're using a RAM shadow copy (Bjorn Helgaas)
       - Set ROM shadow location in arch code, not in PCI core (Bjorn Helgaas)
       - Remove arch-specific IORESOURCE_ROM_SHADOW size from sysfs (Bjorn Helgaas)
       - ia64: Use ioremap() instead of open-coded equivalent (Bjorn Helgaas)
       - ia64: Keep CPU physical (not virtual) addresses in shadow ROM resource (Bjorn Helgaas)
       - MIPS: Keep CPU physical (not virtual) addresses in shadow ROM resource (Bjorn Helgaas)
       - Remove unused IORESOURCE_ROM_COPY and IORESOURCE_ROM_BIOS_COPY (Bjorn Helgaas)
       - Don't leak memory if sysfs_create_bin_file() fails (Bjorn Helgaas)
       - rcar: Remove PCI_PROBE_ONLY handling (Lorenzo Pieralisi)
       - designware: Remove PCI_PROBE_ONLY handling (Lorenzo Pieralisi)
    
      Virtualization:
       - Wait for up to 1000ms after FLR reset (Alex Williamson)
       - Support SR-IOV on any function type (Kelly Zytaruk)
       - Add ACS quirk for all Cavium devices (Manish Jaggi)
    
      AER:
       - Rename pci_ops_aer to aer_inj_pci_ops (Bjorn Helgaas)
       - Restore pci_ops pointer while calling original pci_ops (David Daney)
       - Fix aer_inject error codes (Jean Delvare)
       - Use dev_warn() in aer_inject (Jean Delvare)
       - Log actual error causes in aer_inject (Jean Delvare)
       - Log aer_inject error injections (Jean Delvare)
    
      VPD:
       - Prevent VPD access for buggy devices (Babu Moger)
       - Move pci_read_vpd() and pci_write_vpd() close to other VPD code (Bjorn Helgaas)
       - Move pci_vpd_release() from header file to pci/access.c (Bjorn Helgaas)
       - Remove struct pci_vpd_ops.release function pointer (Bjorn Helgaas)
       - Rename VPD symbols to remove unnecessary "pci22" (Bjorn Helgaas)
       - Fold struct pci_vpd_pci22 into struct pci_vpd (Bjorn Helgaas)
       - Sleep rather than busy-wait for VPD access completion (Bjorn Helgaas)
       - Update VPD definitions (Hannes Reinecke)
       - Allow access to VPD attributes with size 0 (Hannes Reinecke)
       - Determine actual VPD size on first access (Hannes Reinecke)
    
      Generic host bridge driver:
       - Move structure definitions to separate header file (David Daney)
       - Add pci_host_common_probe(), based on gen_pci_probe() (David Daney)
       - Expose pci_host_common_probe() for use by other drivers (David Daney)
    
      Altera host bridge driver:
       - Fix altera_pcie_link_is_up() (Ley Foon Tan)
    
      Cavium ThunderX host bridge driver:
       - Add PCIe host driver for ThunderX processors (David Daney)
       - Add driver for ThunderX-pass{1,2} on-chip devices (David Daney)
    
      Freescale i.MX6 host bridge driver:
       - Add DT bindings to configure PHY Tx driver settings (Justin Waters)
       - Move imx6_pcie_reset_phy() near other PHY handling functions (Lucas Stach)
       - Move PHY reset into imx6_pcie_establish_link() (Lucas Stach)
       - Remove broken Gen2 workaround (Lucas Stach)
       - Move link up check into imx6_pcie_wait_for_link() (Lucas Stach)
    
      Freescale Layerscape host bridge driver:
       - Add "fsl,ls2085a-pcie" compatible ID (Yang Shi)
    
      Intel VMD host bridge driver:
       - Attach VMD resources to parent domain's resource tree (Jon Derrick)
       - Set bus resource start to 0 (Keith Busch)
    
      Microsoft Hyper-V host bridge driver:
       - Add fwnode_handle to x86 pci_sysdata (Jake Oshins)
       - Look up IRQ domain by fwnode_handle (Jake Oshins)
       - Add paravirtual PCI front-end for Microsoft Hyper-V VMs (Jake Oshins)
    
      NVIDIA Tegra host bridge driver:
       - Add pci_ops.{add,remove}_bus() callbacks (Thierry Reding)
       - Implement ->{add,remove}_bus() callbacks (Thierry Reding)
       - Remove unused struct tegra_pcie.num_ports field (Thierry Reding)
       - Track bus -> CPU mapping (Thierry Reding)
       - Remove misleading PHYS_OFFSET (Thierry Reding)
    
      Renesas R-Car host bridge driver:
       - Depend on ARCH_RENESAS, not ARCH_SHMOBILE (Simon Horman)
    
      Synopsys DesignWare host bridge driver:
       - ARC: Add PCI support (Joao Pinto)
       - Add generic dw_pcie_wait_for_link() (Joao Pinto)
       - Add default link up check if sub-driver doesn't override (Joao Pinto)
       - Add driver for prototyping kits based on ARC SDP (Joao Pinto)
    
      TI Keystone host bridge driver:
       - Defer probing if devm_phy_get() returns -EPROBE_DEFER (Shawn Lin)
    
      Xilinx AXI host bridge driver:
       - Use of_pci_get_host_bridge_resources() to parse DT (Bharat Kumar Gogada)
       - Remove dependency on ARM-specific struct hw_pci (Bharat Kumar Gogada)
       - Don't call pci_fixup_irqs() on Microblaze (Bharat Kumar Gogada)
       - Update Zynq binding with Microblaze node (Bharat Kumar Gogada)
       - microblaze: Support generic Xilinx AXI PCIe Host Bridge IP driver (Bharat Kumar Gogada)
    
      Xilinx NWL host bridge driver:
       - Add support for Xilinx NWL PCIe Host Controller (Bharat Kumar Gogada)
    
      Miscellaneous:
       - Check device_attach() return value always (Bjorn Helgaas)
       - Move pci_set_flags() from asm-generic/pci-bridge.h to linux/pci.h (Bjorn Helgaas)
       - Remove includes of empty asm-generic/pci-bridge.h (Bjorn Helgaas)
       - ARM64: Remove generated include of asm-generic/pci-bridge.h (Bjorn Helgaas)
       - Remove empty asm-generic/pci-bridge.h (Bjorn Helgaas)
       - Remove includes of asm/pci-bridge.h (Bjorn Helgaas)
       - Consolidate PCI DMA constants and interfaces in linux/pci-dma-compat.h (Bjorn Helgaas)
       - unicore32: Remove unused HAVE_ARCH_PCI_SET_DMA_MASK definition (Bjorn Helgaas)
       - Cleanup pci/pcie/Kconfig whitespace (Andreas Ziegler)
       - Include pci/hotplug Kconfig directly from pci/Kconfig (Bjorn Helgaas)
       - Include pci/pcie/Kconfig directly from pci/Kconfig (Bogicevic Sasa)
       - frv: Remove stray pci_{alloc,free}_consistent() declaration (Christoph Hellwig)
       - Move pci_dma_* helpers to common code (Christoph Hellwig)
       - Add PCI_CLASS_SERIAL_USB_DEVICE definition (Heikki Krogerus)
       - Add QEMU top-level IDs for (sub)vendor & device (Robin H. Johnson)
       - Fix broken URL for Dell biosdevname (Naga Venkata Sai Indubhaskar Jupudi)"
    
    * tag 'pci-v4.6-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci: (94 commits)
      PCI: Add PCI_CLASS_SERIAL_USB_DEVICE definition
      PCI: designware: Add driver for prototyping kits based on ARC SDP
      PCI: designware: Add default link up check if sub-driver doesn't override
      PCI: designware: Add generic dw_pcie_wait_for_link()
      PCI: Cleanup pci/pcie/Kconfig whitespace
      PCI: Simplify pci_create_attr() control flow
      PCI: Don't leak memory if sysfs_create_bin_file() fails
      PCI: Simplify sysfs ROM cleanup
      PCI: Remove unused IORESOURCE_ROM_COPY and IORESOURCE_ROM_BIOS_COPY
      MIPS: Loongson 3: Keep CPU physical (not virtual) addresses in shadow ROM resource
      MIPS: Loongson 3: Use temporary struct resource * to avoid repetition
      ia64/PCI: Keep CPU physical (not virtual) addresses in shadow ROM resource
      ia64/PCI: Use ioremap() instead of open-coded equivalent
      ia64/PCI: Use temporary struct resource * to avoid repetition
      PCI: Clean up pci_map_rom() whitespace
      PCI: Remove arch-specific IORESOURCE_ROM_SHADOW size from sysfs
      PCI: thunder: Add driver for ThunderX-pass{1,2} on-chip devices
      PCI: thunder: Add PCIe host driver for ThunderX processors
      PCI: generic: Expose pci_host_common_probe() for use by other drivers
      PCI: generic: Add pci_host_common_probe(), based on gen_pci_probe()
      ...

commit 9cf8d6360c1589a97a98313729ed9e5db187f80b
Merge: ecc026b 4ace2e7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 15 10:39:22 2016 -0700

    Merge branch 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 microcode updates from Ingo Molnar:
     "The biggest change in this cycle was the separation of the microcode
      loading mechanism from the initrd code plus the support of built-in
      microcode images.
    
      There were also lots cleanups and general restructuring (by Borislav
      Petkov)"
    
    * 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (24 commits)
      x86/microcode/intel: Drop orig_sum from ext signature checksum
      x86/microcode/intel: Improve microcode sanity-checking error messages
      x86/microcode/intel: Merge two consecutive if-statements
      x86/microcode/intel: Get rid of DWSIZE
      x86/microcode/intel: Change checksum variables to u32
      x86/microcode: Use kmemdup() rather than duplicating its implementation
      x86/microcode: Remove unnecessary paravirt_enabled check
      x86/microcode: Document builtin microcode loading method
      x86/microcode/AMD: Issue microcode updated message later
      x86/microcode/intel: Cleanup get_matching_model_microcode()
      x86/microcode/intel: Remove unused arg of get_matching_model_microcode()
      x86/microcode/intel: Rename mc_saved_in_initrd
      x86/microcode/intel: Use *wrmsrl variants
      x86/microcode/intel: Cleanup apply_microcode_intel()
      x86/microcode/intel: Move the BUG_ON up and turn it into WARN_ON
      x86/microcode/intel: Rename mc_intel variable to mc
      x86/microcode/intel: Rename mc_saved_count to num_saved
      x86/microcode/intel: Rename local variables of type struct mc_saved_data
      x86/microcode/AMD: Drop redundant printk prefix
      x86/microcode: Issue update message only once
      ...

commit e7e127e3c767094aca96ee976729dc5f756666df
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Tue Mar 8 14:57:21 2016 -0600

    PCI: Include pci/hotplug Kconfig directly from pci/Kconfig
    
    Include pci/hotplug/Kconfig directly from pci/Kconfig, so arches don't
    have to source both pci/Kconfig and pci/hotplug/Kconfig.
    
    Note that this effectively adds pci/hotplug/Kconfig to the following
    arches, because they already sourced drivers/pci/Kconfig but they
    previously did not source drivers/pci/hotplug/Kconfig:
    
      alpha
      arm
      avr32
      frv
      m68k
      microblaze
      mn10300
      sparc
      unicore32
    
    Inspired-by-patch-from: Bogicevic Sasa <brutallesale@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

commit 5f8fc43217a01c98be88aa53794b4d1333a07a5a
Author: Bogicevic Sasa <brutallesale@gmail.com>
Date:   Wed Feb 3 13:24:22 2016 -0800

    PCI: Include pci/pcie/Kconfig directly from pci/Kconfig
    
    Include pci/pcie/Kconfig directly from pci/Kconfig, so arches don't
    have to source both pci/Kconfig and pci/pcie/Kconfig.
    
    Note that this effectively adds pci/pcie/Kconfig to the following
    arches, because they already sourced drivers/pci/Kconfig but they
    previously did not source drivers/pci/pcie/Kconfig:
    
      alpha
      avr32
      blackfin
      frv
      m32r
      m68k
      microblaze
      mn10300
      parisc
      sparc
      unicore32
      xtensa
    
    [bhelgaas: changelog, source pci/pcie/Kconfig at top of pci/Kconfig, whitespace]
    Signed-off-by: Sasa Bogicevic <brutallesale@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

commit d4883d5d6b146fd65f762c462b2c6d4a327c7d50
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Sun Feb 28 22:22:43 2016 -0600

    objtool: Enable stack metadata validation on 64-bit x86
    
    Set HAVE_STACK_VALIDATION to enable stack metadata validation for
    x86_64.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Bernd Petrovitsch <bernd@petrovitsch.priv.at>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Chris J Arges <chris.j.arges@canonical.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Michal Marek <mmarek@suse.cz>
    Cc: Namhyung Kim <namhyung@gmail.com>
    Cc: Pedro Alves <palves@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: live-patching@vger.kernel.org
    Link: http://lkml.kernel.org/r/cdaeb6914d00a070c0f455cd06989bf3f787a2f6.1456719558.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 9ccaf77cf05915f51231d158abfd5448aedde758
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Feb 17 14:41:14 2016 -0800

    x86/mm: Always enable CONFIG_DEBUG_RODATA and remove the Kconfig option
    
    This removes the CONFIG_DEBUG_RODATA option and makes it always enabled.
    
    This simplifies the code and also makes it clearer that read-only mapped
    memory is just as fundamental a security feature in kernel-space as it is
    in user-space.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Brown <david.brown@linaro.org>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Emese Revfy <re.emese@gmail.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mathias Krause <minipli@googlemail.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: PaX Team <pageexec@freemail.hu>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kernel-hardening@lists.openwall.com
    Cc: linux-arch <linux-arch@vger.kernel.org>
    Link: http://lkml.kernel.org/r/1455748879-21872-4-git-send-email-keescook@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 66d375709d2c891acc639538fd3179fa0cbb0daf
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Feb 12 13:02:32 2016 -0800

    mm/core, x86/mm/pkeys: Add arch_validate_pkey()
    
    The syscall-level code is passed a protection key and need to
    return an appropriate error code if the protection key is bogus.
    We will be using this in subsequent patches.
    
    Note that this also begins a series of arch-specific calls that
    we need to expose in otherwise arch-independent code.  We create
    a linux/pkeys.h header where we will put *all* the stubs for
    these functions.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave@sr71.net>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20160212210232.774EEAAB@viggo.jf.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 284244a9876225eb73102aff41d4492f65cb2868
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Feb 12 13:02:28 2016 -0800

    x86/mm/pkeys: Add Kconfig prompt to existing config option
    
    I don't have a strong opinion on whether we need this or not.
    Protection Keys has relatively little code associated with it,
    and it is not a heavyweight feature to keep enabled.  However,
    I can imagine that folks would still appreciate being able to
    disable it.
    
    Here's the option if folks want it.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave@sr71.net>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20160212210228.7E79386C@viggo.jf.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 63c17fb8e5a46a16e10e82005748837fd11a2024
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Feb 12 13:02:08 2016 -0800

    mm/core, x86/mm/pkeys: Store protection bits in high VMA flags
    
    vma->vm_flags is an 'unsigned long', so has space for 32 flags
    on 32-bit architectures.  The high 32 bits are unused on 64-bit
    platforms.  We've steered away from using the unused high VMA
    bits for things because we would have difficulty supporting it
    on 32-bit.
    
    Protection Keys are not available in 32-bit mode, so there is
    no concern about supporting this feature in 32-bit mode or on
    32-bit CPUs.
    
    This patch carves out 4 bits from the high half of
    vma->vm_flags and allows architectures to set config option
    to make them available.
    
    Sparse complains about these constants unless we explicitly
    call them "UL".
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave@sr71.net>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jan Kara <jack@suse.cz>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Konstantin Khlebnikov <koct9i@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Sasha Levin <sasha.levin@oracle.com>
    Cc: Valentin Rothberg <valentinrothberg@gmail.com>
    Cc: Vladimir Davydov <vdavydov@parallels.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Xie XiuQi <xiexiuqi@huawei.com>
    Cc: linux-kernel@vger.kernel.org
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20160212210208.81AF00D5@viggo.jf.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 4e7f9df25874cedbbc604a5c5c2e7a6efe662387
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Thu Feb 11 01:05:01 2016 +0200

    hpet: Drop stale URLs
    
    Looks like the HPET spec at intel.com got moved.
    It isn't hard to find so drop the link, just mention
    the revision assumed.
    
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Clemens Ladisch <clemens@ladisch.de>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linux-doc@vger.kernel.org
    Link: http://lkml.kernel.org/r/1455145462-3877-1-git-send-email-mst@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 35e97790f5f1e5cf2b5522c55e3e31d5c81bd226
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Feb 12 13:02:00 2016 -0800

    x86/mm/pkeys: Add Kconfig option
    
    I don't have a strong opinion on whether we need a Kconfig prompt
    or not.  Protection Keys has relatively little code associated
    with it, and it is not a heavyweight feature to keep enabled.
    However, I can imagine that folks would still appreciate being
    able to disable it.
    
    Note that, with disabled-features.h, the checks in the code
    for protection keys are always the same:
    
    	cpu_has(c, X86_FEATURE_PKU)
    
    With the config option disabled, this essentially turns into an
    
    We will hide the prompt for now.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave@sr71.net>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20160212210200.DB7055E8@viggo.jf.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 1ecb4ae5f0aaf48b538b9e90b7b360215a2cf9ed
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Thu Feb 11 16:13:20 2016 -0800

    arch/x86/Kconfig: CONFIG_X86_UV should depend on CONFIG_EFI
    
    arch/x86/built-in.o: In function `uv_bios_call':
    (.text+0xeba00): undefined reference to `efi_call'
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Suggested-by: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Reviewed-by: Matt Fleming <matt@codeblueprint.co.uk>
    Acked-by: Alex Thorlton <athorlton@sgi.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 5f9c01aa7c49a2d74474d6d879a797b8badf29e6
Author: Borislav Petkov <bp@suse.de>
Date:   Wed Feb 3 12:33:29 2016 +0100

    x86/microcode: Untangle from BLK_DEV_INITRD
    
    Thomas Voegtle reported that doing oldconfig with a .config which has
    CONFIG_MICROCODE enabled but BLK_DEV_INITRD disabled prevents the
    microcode loading mechanism from being built.
    
    So untangle it from the BLK_DEV_INITRD dependency so that oldconfig
    doesn't turn it off and add an explanatory text to its Kconfig help what
    the supported methods for supplying microcode are.
    
    Reported-by: Thomas Voegtle <tv@lio96.de>
    Tested-by: Thomas Voegtle <tv@lio96.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org> # 4.4
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1454499225-21544-2-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit d517be5fcf1a7feb06ce3d5f28055ad1ce17030b
Merge: dc799d0 7425637
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jan 31 16:17:19 2016 -0800

    Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 fixes from Thomas Gleixner:
     "A bit on the largish side due to a series of fixes for a regression in
      the x86 vector management which was introduced in 4.3.  This work was
      started in December already, but it took some time to fix all corner
      cases and a couple of older bugs in that area which were detected
      while at it
    
      Aside of that a few platform updates for intel-mid, quark and UV and
      two fixes for in the mm code:
       - Use proper types for pgprot values to avoid truncation
       - Prevent a size truncation in the pageattr code when setting page
         attributes for large mappings"
    
    * 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (21 commits)
      x86/mm/pat: Avoid truncation when converting cpa->numpages to address
      x86/mm: Fix types used in pgprot cacheability flags translations
      x86/platform/quark: Print boundaries correctly
      x86/platform/UV: Remove EFI memmap quirk for UV2+
      x86/platform/intel-mid: Join string and fix SoC name
      x86/platform/intel-mid: Enable 64-bit build
      x86/irq: Plug vector cleanup race
      x86/irq: Call irq_force_move_complete with irq descriptor
      x86/irq: Remove outgoing CPU from vector cleanup mask
      x86/irq: Remove the cpumask allocation from send_cleanup_vector()
      x86/irq: Clear move_in_progress before sending cleanup IPI
      x86/irq: Remove offline cpus from vector cleanup
      x86/irq: Get rid of code duplication
      x86/irq: Copy vectormask instead of an AND operation
      x86/irq: Check vector allocation early
      x86/irq: Reorganize the search in assign_irq_vector
      x86/irq: Reorganize the return path in assign_irq_vector
      x86/irq: Do not use apic_chip_data.old_domain as temporary buffer
      x86/irq: Validate that irq descriptor is still active
      x86/irq: Fix a race in x86_vector_free_irqs()
      ...

commit eae21770b4fed5597623aad0d618190fa60426ff
Merge: e9f57eb 9f273c2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jan 21 12:32:08 2016 -0800

    Merge branch 'akpm' (patches from Andrew)
    
    Merge third patch-bomb from Andrew Morton:
     "I'm pretty much done for -rc1 now:
    
       - the rest of MM, basically
    
       - lib/ updates
    
       - checkpatch, epoll, hfs, fatfs, ptrace, coredump, exit
    
       - cpu_mask simplifications
    
       - kexec, rapidio, MAINTAINERS etc, etc.
    
       - more dma-mapping cleanups/simplifications from hch"
    
    * emailed patches from Andrew Morton <akpm@linux-foundation.org>: (109 commits)
      MAINTAINERS: add/fix git URLs for various subsystems
      mm: memcontrol: add "sock" to cgroup2 memory.stat
      mm: memcontrol: basic memory statistics in cgroup2 memory controller
      mm: memcontrol: do not uncharge old page in page cache replacement
      Documentation: cgroup: add memory.swap.{current,max} description
      mm: free swap cache aggressively if memcg swap is full
      mm: vmscan: do not scan anon pages if memcg swap limit is hit
      swap.h: move memcg related stuff to the end of the file
      mm: memcontrol: replace mem_cgroup_lruvec_online with mem_cgroup_online
      mm: vmscan: pass memcg to get_scan_count()
      mm: memcontrol: charge swap to cgroup2
      mm: memcontrol: clean up alloc, online, offline, free functions
      mm: memcontrol: flatten struct cg_proto
      mm: memcontrol: rein in the CONFIG space madness
      net: drop tcp_memcontrol.c
      mm: memcontrol: introduce CONFIG_MEMCG_LEGACY_KMEM
      mm: memcontrol: allow to disable kmem accounting for cgroup2
      mm: memcontrol: account "kmem" consumers in cgroup2 memory controller
      mm: memcontrol: move kmem accounting code to CONFIG_MEMCG
      mm: memcontrol: separate kmem code from legacy tcp accounting code
      ...

commit d43421565bf0510d35e6a39ebf96586ad486f3aa
Merge: 859e762 9662e32
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jan 21 11:52:16 2016 -0800

    Merge tag 'pci-v4.5-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
    
    Pull PCI updates from Bjorn Helgaas:
     "PCI changes for the v4.5 merge window:
    
      Enumeration:
       - Simplify config space size computation (Bjorn Helgaas)
       - Avoid iterating through ROM outside the resource window (Edward O'Callaghan)
       - Support PCIe devices with short cfg_size (Jason S. McMullan)
       - Add Netronome vendor and device IDs (Jason S. McMullan)
       - Limit config space size for Netronome NFP6000 family (Jason S. McMullan)
       - Add Netronome NFP4000 PF device ID (Simon Horman)
       - Limit config space size for Netronome NFP4000 (Simon Horman)
       - Print warnings for all invalid expansion ROM headers (Vladis Dronov)
    
      Resource management:
       - Fix minimum allocation address overwrite (Christoph Biedl)
    
      PCI device hotplug:
       - acpiphp_ibm: Fix null dereferences on null ibm_slot (Colin Ian King)
       - pciehp: Always protect pciehp_disable_slot() with hotplug mutex (Guenter Roeck)
       - shpchp: Constify hpc_ops structure (Julia Lawall)
       - ibmphp: Remove unneeded NULL test (Julia Lawall)
    
      Power management:
       - Make ASPM sysfs link_state_store() consistent with link_state_show() (Andy Lutomirski)
    
      Virtualization
       - Add function 1 DMA alias quirk for Lite-On/Plextor M6e/Marvell 88SS9183 (Tim Sander)
    
      MSI:
       - Remove empty pci_msi_init_pci_dev() (Bjorn Helgaas)
       - Mark PCIe/PCI (MSI) IRQ cascade handlers as IRQF_NO_THREAD (Grygorii Strashko)
       - Initialize MSI capability for all architectures (Guilherme G. Piccoli)
       - Relax msi_domain_alloc() to support parentless MSI irqdomains (Liu Jiang)
    
      ARM Versatile host bridge driver:
       - Remove unused pci_sys_data structures (Lorenzo Pieralisi)
    
      Broadcom iProc host bridge driver:
       - Hide CONFIG_PCIE_IPROC (Arnd Bergmann)
       - Do not use 0x in front of %pap (Dmitry V. Krivenok)
       - Update iProc PCIe device tree binding (Ray Jui)
       - Add PAXC interface support (Ray Jui)
       - Add iProc PCIe MSI device tree binding (Ray Jui)
       - Add iProc PCIe MSI support (Ray Jui)
    
      Freescale i.MX6 host bridge driver:
       - Use gpio_set_value_cansleep() (Fabio Estevam)
       - Add support for active-low reset GPIO (Petr Štetiar)
    
      HiSilicon host bridge driver:
       - Add support for HiSilicon Hip06 PCIe host controllers (Gabriele Paoloni)
    
      Intel VMD host bridge driver:
       - Export irq_domain_set_info() for module use (Keith Busch)
       - x86/PCI: Allow DMA ops specific to a PCI domain (Keith Busch)
       - Use 32 bit PCI domain numbers (Keith Busch)
       - Add driver for Intel Volume Management Device (VMD) (Keith Busch)
    
      Qualcomm host bridge driver:
       - Document PCIe devicetree bindings (Stanimir Varbanov)
       - Add Qualcomm PCIe controller driver (Stanimir Varbanov)
       - dts: apq8064: add PCIe devicetree node (Stanimir Varbanov)
       - dts: ifc6410: enable PCIe DT node for this board (Stanimir Varbanov)
    
      Renesas R-Car host bridge driver:
       - Add support for R-Car H3 to pcie-rcar (Harunobu Kurokawa)
       - Allow DT to override default window settings (Phil Edworthy)
       - Convert to DT resource parsing API (Phil Edworthy)
       - Revert "PCI: rcar: Build pcie-rcar.c only on ARM" (Phil Edworthy)
       - Remove unused pci_sys_data struct from pcie-rcar (Phil Edworthy)
       - Add runtime PM support to pcie-rcar (Phil Edworthy)
       - Add Gen2 PHY setup to pcie-rcar (Phil Edworthy)
       - Add gen2 fallback compatibility string for pci-rcar-gen2 (Simon Horman)
       - Add gen2 fallback compatibility string for pcie-rcar (Simon Horman)
    
      Synopsys DesignWare host bridge driver:
       - Simplify control flow (Bjorn Helgaas)
       - Make config accessor override checking symmetric (Bjorn Helgaas)
       - Ensure ATU is enabled before IO/conf space accesses (Stanimir Varbanov)
    
      Miscellaneous:
       - Add of_pci_get_host_bridge_resources() stub (Arnd Bergmann)
       - Check for PCI_HEADER_TYPE_BRIDGE equality, not bitmask (Bjorn Helgaas)
       - Fix all whitespace issues (Bogicevic Sasa)
       - x86/PCI: Simplify pci_bios_{read,write} (Geliang Tang)
       - Use to_pci_dev() instead of open-coding it (Geliang Tang)
       - Use kobj_to_dev() instead of open-coding it (Geliang Tang)
       - Use list_for_each_entry() to simplify code (Geliang Tang)
       - Fix typos in <linux/msi.h> (Thomas Petazzoni)
       - x86/PCI: Clarify AMD Fam10h config access restrictions comment (Tomasz Nowicki)"
    
    * tag 'pci-v4.5-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci: (58 commits)
      PCI: Add function 1 DMA alias quirk for Lite-On/Plextor M6e/Marvell 88SS9183
      PCI: Limit config space size for Netronome NFP4000
      PCI: Add Netronome NFP4000 PF device ID
      x86/PCI: Add driver for Intel Volume Management Device (VMD)
      PCI/AER: Use 32 bit PCI domain numbers
      x86/PCI: Allow DMA ops specific to a PCI domain
      irqdomain: Export irq_domain_set_info() for module use
      PCI: host: Add of_pci_get_host_bridge_resources() stub
      genirq/MSI: Relax msi_domain_alloc() to support parentless MSI irqdomains
      PCI: rcar: Add Gen2 PHY setup to pcie-rcar
      PCI: rcar: Add runtime PM support to pcie-rcar
      PCI: designware: Make config accessor override checking symmetric
      PCI: ibmphp: Remove unneeded NULL test
      ARM: dts: ifc6410: enable PCIe DT node for this board
      ARM: dts: apq8064: add PCIe devicetree node
      PCI: hotplug: Use list_for_each_entry() to simplify code
      PCI: rcar: Remove unused pci_sys_data struct from pcie-rcar
      PCI: hisi: Add support for HiSilicon Hip06 PCIe host controllers
      PCI: Avoid iterating through memory outside the resource window
      PCI: acpiphp_ibm: Fix null dereferences on null ibm_slot
      ...

commit e1c7e324539ada3b2b13ca2898bcb4948a9ef9db
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Jan 20 15:02:05 2016 -0800

    dma-mapping: always provide the dma_map_ops based implementation
    
    Move the generic implementation to <linux/dma-mapping.h> now that all
    architectures support it and remove the HAVE_DMA_ATTR Kconfig symbol now
    that everyone supports them.
    
    [valentinrothberg@gmail.com: remove leftovers in Kconfig]
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Aurelien Jacquiot <a-jacquiot@ti.com>
    Cc: Chris Metcalf <cmetcalf@ezchip.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Haavard Skinnemoen <hskinnemoen@gmail.com>
    Cc: Hans-Christian Egtvedt <egtvedt@samfundet.no>
    Cc: Helge Deller <deller@gmx.de>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Koichi Yasutake <yasutake.koichi@jp.panasonic.com>
    Cc: Ley Foon Tan <lftan@altera.com>
    Cc: Mark Salter <msalter@redhat.com>
    Cc: Mikael Starvik <starvik@axis.com>
    Cc: Steven Miao <realmz6@gmail.com>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Joerg Roedel <jroedel@suse.de>
    Cc: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Signed-off-by: Valentin Rothberg <valentinrothberg@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit c6d308534aef6c99904bf5862066360ae067abc4
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Wed Jan 20 15:00:55 2016 -0800

    UBSAN: run-time undefined behavior sanity checker
    
    UBSAN uses compile-time instrumentation to catch undefined behavior
    (UB).  Compiler inserts code that perform certain kinds of checks before
    operations that could cause UB.  If check fails (i.e.  UB detected)
    __ubsan_handle_* function called to print error message.
    
    So the most of the work is done by compiler.  This patch just implements
    ubsan handlers printing errors.
    
    GCC has this capability since 4.9.x [1] (see -fsanitize=undefined
    option and its suboptions).
    However GCC 5.x has more checkers implemented [2].
    Article [3] has a bit more details about UBSAN in the GCC.
    
    [1] - https://gcc.gnu.org/onlinedocs/gcc-4.9.0/gcc/Debugging-Options.html
    [2] - https://gcc.gnu.org/onlinedocs/gcc/Debugging-Options.html
    [3] - http://developerblog.redhat.com/2014/10/16/gcc-undefined-behavior-sanitizer-ubsan/
    
    Issues which UBSAN has found thus far are:
    
    Found bugs:
    
     * out-of-bounds access - 97840cb67ff5 ("netfilter: nfnetlink: fix
       insufficient validation in nfnetlink_bind")
    
    undefined shifts:
    
     * d48458d4a768 ("jbd2: use a better hash function for the revoke
       table")
    
     * 10632008b9e1 ("clockevents: Prevent shift out of bounds")
    
     * 'x << -1' shift in ext4 -
       http://lkml.kernel.org/r/<5444EF21.8020501@samsung.com>
    
     * undefined rol32(0) -
       http://lkml.kernel.org/r/<1449198241-20654-1-git-send-email-sasha.levin@oracle.com>
    
     * undefined dirty_ratelimit calculation -
       http://lkml.kernel.org/r/<566594E2.3050306@odin.com>
    
     * undefined roundown_pow_of_two(0) -
       http://lkml.kernel.org/r/<1449156616-11474-1-git-send-email-sasha.levin@oracle.com>
    
     * [WONTFIX] undefined shift in __bpf_prog_run -
       http://lkml.kernel.org/r/<CACT4Y+ZxoR3UjLgcNdUm4fECLMx2VdtfrENMtRRCdgHB2n0bJA@mail.gmail.com>
    
       WONTFIX here because it should be fixed in bpf program, not in kernel.
    
    signed overflows:
    
     * 32a8df4e0b33f ("sched: Fix odd values in effective_load()
       calculations")
    
     * mul overflow in ntp -
       http://lkml.kernel.org/r/<1449175608-1146-1-git-send-email-sasha.levin@oracle.com>
    
     * incorrect conversion into rtc_time in rtc_time64_to_tm() -
       http://lkml.kernel.org/r/<1449187944-11730-1-git-send-email-sasha.levin@oracle.com>
    
     * unvalidated timespec in io_getevents() -
       http://lkml.kernel.org/r/<CACT4Y+bBxVYLQ6LtOKrKtnLthqLHcw-BMp3aqP3mjdAvr9FULQ@mail.gmail.com>
    
     * [NOTABUG] signed overflow in ktime_add_safe() -
       http://lkml.kernel.org/r/<CACT4Y+aJ4muRnWxsUe1CMnA6P8nooO33kwG-c8YZg=0Xc8rJqw@mail.gmail.com>
    
    [akpm@linux-foundation.org: fix unused local warning]
    [akpm@linux-foundation.org: fix __int128 build woes]
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sasha Levin <sasha.levin@oracle.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Michal Marek <mmarek@suse.cz>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Yury Gribov <y.gribov@samsung.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Konstantin Khlebnikov <koct9i@gmail.com>
    Cc: Kostya Serebryany <kcc@google.com>
    Cc: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 3fda5bb420e79b357328b358409e4c547d8f0a18
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jan 15 22:11:07 2016 +0200

    x86/platform/intel-mid: Enable 64-bit build
    
    Intel Tangier SoC is known to have 64-bit dual core CPU. Enable
    64-bit build for it.
    
    The kernel has been tested on Intel Edison board:
    
    	Linux buildroot 4.4.0-next-20160115+ #25 SMP Fri Jan 15 22:03:19 EET 2016 x86_64 GNU/Linux
    
    	processor       : 0
    	vendor_id       : GenuineIntel
    	cpu family      : 6
    	model           : 74
    	model name      : Genuine Intel(R) CPU   4000  @  500MHz
    	stepping        : 8
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1452888668-147116-1-git-send-email-andriy.shevchenko@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit da48d094ce5d7c7dcdad9011648a81c42fd1c2ef
Author: Will Deacon <will.deacon@arm.com>
Date:   Fri Jan 15 16:58:07 2016 -0800

    Kconfig: remove HAVE_LATENCYTOP_SUPPORT
    
    As illustrated by commit a3afe70b83fd ("[S390] latencytop s390
    support."), HAVE_LATENCYTOP_SUPPORT is defined by an architecture to
    advertise an implementation of save_stack_trace_tsk.
    
    However, as of 9212ddb5eada ("stacktrace: provide save_stack_trace_tsk()
    weak alias") a dummy implementation is provided if STACKTRACE=y.  Given
    that LATENCYTOP already depends on STACKTRACE_SUPPORT and selects
    STACKTRACE, we can remove HAVE_LATENCYTOP_SUPPORT altogether.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Michal Simek <monstr@monstr.eu>
    Cc: Helge Deller <deller@gmx.de>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Guan Xuetao <gxt@mprc.pku.edu.cn>
    Cc: Ingo Molnar <mingo@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 185a383ada2e7794b0e82e040223e741b24d2bf8
Author: Keith Busch <keith.busch@intel.com>
Date:   Tue Jan 12 13:18:10 2016 -0700

    x86/PCI: Add driver for Intel Volume Management Device (VMD)
    
    The Intel Volume Management Device (VMD) is a Root Complex Integrated
    Endpoint that acts as a host bridge to a secondary PCIe domain.  BIOS can
    reassign one or more Root Ports to appear within a VMD domain instead of
    the primary domain.  The immediate benefit is that additional PCIe domains
    allow more than 256 buses in a system by letting bus numbers be reused
    across different domains.
    
    VMD domains do not define ACPI _SEG, so to avoid domain clashing with host
    bridges defining this segment, VMD domains start at 0x10000, which is
    greater than the highest possible 16-bit ACPI defined _SEG.
    
    This driver enumerates and enables the domain using the root bus
    configuration interface provided by the PCI subsystem.  The driver provides
    configuration space accessor functions (pci_ops), bus and memory resources,
    an MSI IRQ domain with irq_chip implementation, and DMA operations
    necessary to use devices through the VMD endpoint's interface.
    
    VMD routes I/O as follows:
    
       1) Configuration Space: BAR 0 ("CFGBAR") of VMD provides the base
       address and size for configuration space register access to VMD-owned
       root ports.  It works similarly to MMCONFIG for extended configuration
       space.  Bus numbering is independent and does not conflict with the
       primary domain.
    
       2) MMIO Space: BARs 2 and 4 ("MEMBAR1" and "MEMBAR2") of VMD provide the
       base address, size, and type for MMIO register access.  These addresses
       are not translated by VMD hardware; they are simply reservations to be
       distributed to root ports' memory base/limit registers and subdivided
       among devices downstream.
    
       3) DMA: To interact appropriately with an IOMMU, the source ID DMA read
       and write requests are translated to the bus-device-function of the VMD
       endpoint.  Otherwise, DMA operates normally without VMD-specific address
       translation.
    
       4) Interrupts: Part of VMD's BAR 4 is reserved for VMD's MSI-X Table and
       PBA.  MSIs from VMD domain devices and ports are remapped to appear as
       if they were issued using one of VMD's MSI-X table entries.  Each MSI
       and MSI-X address of VMD-owned devices and ports has a special format
       where the address refers to specific entries in the VMD's MSI-X table.
       As with DMA, the interrupt source ID is translated to VMD's
       bus-device-function.
    
       The driver provides its own MSI and MSI-X configuration functions
       specific to how MSI messages are used within the VMD domain, and
       provides an irq_chip for independent IRQ allocation to relay interrupts
       from VMD's interrupt handler to the appropriate device driver's handler.
    
       5) Errors: PCIe error message are intercepted by the root ports normally
       (e.g., AER), except with VMD, system errors (i.e., firmware first) are
       disabled by default.  AER and hotplug interrupts are translated in the
       same way as endpoint interrupts.
    
       6) VMD does not support INTx interrupts or IO ports.  Devices or drivers
       requiring these features should either not be placed below VMD-owned
       root ports, or VMD should be disabled by BIOS for such endpoints.
    
    [bhelgaas: add VMD BAR #defines, factor out vmd_cfg_addr(), rework VMD
    resource setup, whitespace, changelog]
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de> (IRQ-related parts)

commit 9e08f57d684ac2f40685f55f659564bfd91a971e
Author: Daniel Cashman <dcashman@google.com>
Date:   Thu Jan 14 15:20:06 2016 -0800

    x86: mm: support ARCH_MMAP_RND_BITS
    
    x86: arch_mmap_rnd() uses hard-coded values, 8 for 32-bit and 28 for
    64-bit, to generate the random offset for the mmap base address.  This
    value represents a compromise between increased ASLR effectiveness and
    avoiding address-space fragmentation.  Replace it with a Kconfig option,
    which is sensibly bounded, so that platform developers may choose where
    to place this compromise.  Keep default values as new minimums.
    
    Signed-off-by: Daniel Cashman <dcashman@google.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Acked-by: Kees Cook <keescook@chromium.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Don Zickus <dzickus@redhat.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Heinrich Schuchardt <xypron.glpk@gmx.de>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Mark Salyzyn <salyzyn@android.com>
    Cc: Jeff Vander Stoep <jeffv@google.com>
    Cc: Nick Kralevich <nnk@google.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Hector Marco-Gisbert <hecmargi@upv.es>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit d080827f850ba4df5b955d5ca8c8c0fc92fe18c0
Merge: cbd88cd 8b63b6b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jan 13 19:15:14 2016 -0800

    Merge tag 'libnvdimm-for-4.5' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm
    
    Pull libnvdimm updates from Dan Williams:
     "The bulk of this has appeared in -next and independently received a
      build success notification from the kbuild robot.  The 'for-4.5/block-
      dax' topic branch was rebased over the weekend to drop the "block
      device end-of-life" rework that Al would like to see re-implemented
      with a notifier, and to address bug reports against the badblocks
      integration.
    
      There is pending feedback against "libnvdimm: Add a poison list and
      export badblocks" received last week.  Linda identified some localized
      fixups that we will handle incrementally.
    
      Summary:
    
       - Media error handling: The 'badblocks' implementation that
         originated in md-raid is up-levelled to a generic capability of a
         block device.  This initial implementation is limited to being
         consulted in the pmem block-i/o path.  Later, 'badblocks' will be
         consulted when creating dax mappings.
    
       - Raw block device dax: For virtualization and other cases that want
         large contiguous mappings of persistent memory, add the capability
         to dax-mmap a block device directly.
    
       - Increased /dev/mem restrictions: Add an option to treat all
         io-memory as IORESOURCE_EXCLUSIVE, i.e. disable /dev/mem access
         while a driver is actively using an address range.  This behavior
         is controlled via the new CONFIG_IO_STRICT_DEVMEM option and can be
         overridden by the existing "iomem=relaxed" kernel command line
         option.
    
       - Miscellaneous fixes include a 'pfn'-device huge page alignment fix,
         block device shutdown crash fix, and other small libnvdimm fixes"
    
    * tag 'libnvdimm-for-4.5' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm: (32 commits)
      block: kill disk_{check|set|clear|alloc}_badblocks
      libnvdimm, pmem: nvdimm_read_bytes() badblocks support
      pmem, dax: disable dax in the presence of bad blocks
      pmem: fail io-requests to known bad blocks
      libnvdimm: convert to statically allocated badblocks
      libnvdimm: don't fail init for full badblocks list
      block, badblocks: introduce devm_init_badblocks
      block: clarify badblocks lifetime
      badblocks: rename badblocks_free to badblocks_exit
      libnvdimm, pmem: move definition of nvdimm_namespace_add_poison to nd.h
      libnvdimm: Add a poison list and export badblocks
      nfit_test: Enable DSMs for all test NFITs
      md: convert to use the generic badblocks code
      block: Add badblock management for gendisks
      badblocks: Add core badblock management code
      block: fix del_gendisk() vs blkdev_ioctl crash
      block: enable dax for raw block devices
      block: introduce bdev_file_inode()
      restrict /dev/mem to idle io memory ranges
      arch: consolidate CONFIG_STRICT_DEVM in lib/Kconfig.debug
      ...

commit 67990608c8b95d2b8ccc29932376ae73d5818727
Merge: c17488d a889f76
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jan 12 20:25:09 2016 -0800

    Merge tag 'pm+acpi-4.5-rc1-1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
    
    Pull oower management and ACPI updates from Rafael Wysocki:
     "As far as the number of commits goes, ACPICA takes the lead this time,
      followed by cpufreq and the device properties framework changes.
    
      The most significant new feature is the debugfs-based interface to the
      ACPICA's AML debugger added in the previous cycle and a new user space
      tool for accessing it.
    
      On the cpufreq front, the core is updated to handle governors more
      efficiently, particularly on systems where a single cpufreq policy
      object is shared between multiple CPUs, and there are quite a few
      changes in drivers (intel_pstate, cpufreq-dt etc).
    
      The device properties framework is updated to handle built-in (ie
      included in the kernel itself) device properties better, among other
      things by adding a fallback mechanism that will allow drivers to
      provide default properties to be used in case the plaform firmware
      doesn't provide the properties expected by them.
    
      The Operating Performance Points (OPP) framework gets new DT bindings
      and debugfs support.
    
      A new cpufreq driver for ST platforms is added and the ACPI driver for
      AMD SoCs will now support the APM X-Gene ACPI I2C device.
    
      The rest is mostly fixes and cleanups all over.
    
      Specifics:
    
       - Add a debugfs-based interface for interacting with the ACPICA's AML
         debugger introduced in the previous cycle and a new user space tool
         for that, fix some bugs related to the AML debugger and clean up
         the code in question (Lv Zheng, Dan Carpenter, Colin Ian King,
         Markus Elfring).
    
       - Update ACPICA to upstream revision 20151218 including a number of
         fixes and cleanups in the ACPICA core (Bob Moore, Lv Zheng, Labbe
         Corentin, Prarit Bhargava, Colin Ian King, David E Box, Rafael
         Wysocki).
    
         In particular, the previously added erroneous support for the _SUB
         object is dropped, the concatenate operator will support all ACPI
         objects now, the Debug Object handling is improved, the SuperName
         handling of parameters being control methods is fixed, the
         ObjectType operator handling is updated to follow ACPI 5.0A and the
         handling of CondRefOf and RefOf is updated accordingly, module-
         level code will be executed after loading each ACPI table now
         (instead of being run once after all tables containing AML have
         been loaded), the Operation Region handlers management is updated
         to fix some reported problems and a the ACPICA code in the kernel
         is more in line with the upstream now.
    
       - Update the ACPI backlight driver to provide information on whether
         or not it will generate key-presses for brightness change hotkeys
         and update some platform drivers (dell-wmi, thinkpad_acpi) to use
         that information to avoid sending double key-events to users pace
         for these, add new ACPI backlight quirks (Hans de Goede, Aaron Lu,
         Adrien Schildknecht).
    
       - Improve the ACPI handling of interrupt GPIOs (Christophe Ricard).
    
       - Fix the handling of the list of device IDs of device objects found
         in the ACPI namespace and add a helper for checking if there is a
         device object for a given device ID (Lukas Wunner).
    
       - Change the logic in the ACPI namespace scanning code to create
         struct acpi_device objects for all ACPI device objects found in the
         namespace even if _STA fails for them which helps to avoid device
         enumeration problems on Microsoft Surface 3 (Aaron Lu).
    
       - Add support for the APM X-Gene ACPI I2C device to the ACPI driver
         for AMD SoCs (Loc Ho).
    
       - Fix the long-standing issue with the DMA controller on Intel SoCs
         where ACPI tables have no power management support for the DMA
         controller itself, but it can be powered off automatically when the
         last (other) device on the SoC is powered off via ACPI and clean up
         the ACPI driver for Intel SoCs (acpi-lpss) after previous attempts
         to fix that problem (Andy Shevchenko).
    
       - Assorted ACPI fixes and cleanups (Andy Lutomirski, Colin Ian King,
         Javier Martinez Canillas, Ken Xue, Mathias Krause, Rafael Wysocki,
         Sinan Kaya).
    
       - Update the device properties framework for better handling of
         built-in properties, add support for built-in properties to the
         platform bus type, update the MFD subsystem's handling of device
         properties and add support for passing default configuration data
         as device properties to the intel-lpss MFD drivers, convert the
         designware I2C driver to use the unified device properties API and
         add a fallback mechanism for using default built-in properties if
         the platform firmware fails to provide the properties as expected
         by drivers (Andy Shevchenko, Mika Westerberg, Heikki Krogerus,
         Andrew Morton).
    
       - Add new Device Tree bindings to the Operating Performance Points
         (OPP) framework and update the exynos4412 DT binding accordingly,
         introduce debugfs support for the OPP framework (Viresh Kumar,
         Bartlomiej Zolnierkiewicz).
    
       - Migrate the mt8173 cpufreq driver to the new OPP bindings (Pi-Cheng
         Chen).
    
       - Update the cpufreq core to make the handling of governors more
         efficient, especially on systems where policy objects are shared
         between multiple CPUs (Viresh Kumar, Rafael Wysocki).
    
       - Fix cpufreq governor handling on configurations with
         CONFIG_HZ_PERIODIC set (Chen Yu).
    
       - Clean up the cpufreq core code related to the boost sysfs knob
         support and update the ACPI cpufreq driver accordingly (Rafael
         Wysocki).
    
       - Add a new cpufreq driver for ST platforms and corresponding Device
         Tree bindings (Lee Jones).
    
       - Update the intel_pstate driver to allow the P-state selection
         algorithm used by it to depend on the CPU ID of the processor it is
         running on, make it use a special P-state selection algorithm (with
         an IO wait time compensation tweak) on Atom CPUs based on the
         Airmont and Silvermont cores so as to reduce their energy
         consumption and improve intel_pstate documentation (Philippe
         Longepe, Srinivas Pandruvada).
    
       - Update the cpufreq-dt driver to support registering cooling devices
         that use the (P * V^2 * f) dynamic power draw formula where V is
         the voltage, f is the frequency and P is a constant coefficient
         provided by Device Tree and update the arm_big_little cpufreq
         driver to use that support (Punit Agrawal).
    
       - Assorted cpufreq driver (cpufreq-dt, qoriq, pcc-cpufreq,
         blackfin-cpufreq) updates (Andrzej Hajda, Hongtao Jia, Jacob
         Tanenbaum, Markus Elfring).
    
       - cpuidle core tweaks related to polling and measured_us calculation
         (Rik van Riel).
    
       - Removal of modularity from a few cpuidle drivers (clps711x, ux500,
         exynos) that cannot be built as modules in practice (Paul
         Gortmaker).
    
       - PM core update to prevent devices from being probed during system
         suspend/resume which is generally problematic and may lead to
         inconsistent behavior (Grygorii Strashko).
    
       - Assorted updates of the PM core and related code (Julia Lawall,
         Manuel Pégourié-Gonnard, Maruthi Bayyavarapu, Rafael Wysocki, Ulf
         Hansson).
    
       - PNP bus type updates (Christophe Le Roy, Heiner Kallweit).
    
       - PCI PM code cleanups (Jarkko Nikula, Julia Lawall).
    
       - cpupower tool updates (Jacob Tanenbaum, Thomas Renninger)"
    
    * tag 'pm+acpi-4.5-rc1-1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (177 commits)
      PM / clk: don't leave clocks enabled when driver not bound
      i2c: dw: Add APM X-Gene ACPI I2C device support
      ACPI / APD: Add APM X-Gene ACPI I2C device support
      ACPI / LPSS: change 'does not have' to 'has' in comment
      Revert "dmaengine: dw: platform: provide platform data for Intel"
      dmaengine: dw: return immediately from IRQ when DMA isn't in use
      dmaengine: dw: platform: power on device on shutdown
      ACPI / LPSS: override power state for LPSS DMA device
      PM / OPP: Use snprintf() instead of sprintf()
      Documentation: cpufreq: intel_pstate: enhance documentation
      ACPI, PCI, irq: remove redundant check for null string pointer
      ACPI / video: driver must be registered before checking for keypresses
      cpufreq-dt: fix handling regulator_get_voltage() result
      cpufreq: governor: Fix negative idle_time when configured with CONFIG_HZ_PERIODIC
      PM / sleep: Add support for read-only sysfs attributes
      ACPI: Fix white space in a structure definition
      ACPI / SBS: fix inconsistent indenting inside if statement
      PNP: respect PNP_DRIVER_RES_DO_NOT_CHANGE when detaching
      ACPI / PNP: constify device IDs
      ACPI / PCI: Simplify acpi_penalize_isa_irq()
      ...

commit 67c707e451e12f59e57bca6cf33b5803cb74b022
Merge: 463eb8a 0105c8d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jan 11 16:26:03 2016 -0800

    Merge branch 'x86-cleanups-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 cleanups from Ingo Molnar:
     "The main changes in this cycle were:
    
       - code patching and cpu_has cleanups (Borislav Petkov)
    
       - paravirt cleanups (Juergen Gross)
    
       - TSC cleanup (Thomas Gleixner)
    
       - ptrace cleanup (Chen Gang)"
    
    * 'x86-cleanups-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      arch/x86/kernel/ptrace.c: Remove unused arg_offs_table
      x86/mm: Align macro defines
      x86/cpu: Provide a config option to disable static_cpu_has
      x86/cpufeature: Remove unused and seldomly used cpu_has_xx macros
      x86/cpufeature: Cleanup get_cpu_cap()
      x86/cpufeature: Move some of the scattered feature bits to x86_capability
      x86/paravirt: Remove paravirt ops pmd_update[_defer] and pte_update_defer
      x86/paravirt: Remove unused pv_apic_ops structure
      x86/tsc: Remove unused tsc_pre_init() hook
      x86: Remove unused function cpu_has_ht_siblings()
      x86/paravirt: Kill some unused patching functions

commit 21266be9ed542f13436bd9c75316d43e1e84f6ae
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Nov 19 18:19:29 2015 -0800

    arch: consolidate CONFIG_STRICT_DEVM in lib/Kconfig.debug
    
    Let all the archs that implement devmem_is_allowed() opt-in to a common
    definition of CONFIG_STRICT_DEVM in lib/Kconfig.debug.
    
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    [heiko: drop 'default y' for s390]
    Acked-by: Ingo Molnar <mingo@redhat.com>
    Suggested-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>

commit eebb3e8d8aaf28f4bcaf12fd3645350bfd2f0b36
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Sat Dec 12 02:45:06 2015 +0100

    ACPI / LPSS: override power state for LPSS DMA device
    
    This is a third approach to workaround long standing issue with LPSS on
    BayTrail. First one [1] was reverted since it didn't resolve the issue
    comprehensively. Second one [2] was rejected by internal review.
    
    The LPSS DMA controller does not have neither _PS0 nor _PS3 method. Moreover it
    can be powered off automatically whenever the last LPSS device goes down. In
    case of no power any access to the DMA controller will hang the system. The
    behaviour is reproduced on some HP laptops based on Intel BayTrail [3,4] as
    well as on ASuS T100TA transformer.
    
    Power on the LPSS island through the registers accessible in a specific way.
    
    [1] http://www.spinics.net/lists/linux-acpi/msg53963.html
    [2] https://bugzilla.redhat.com/attachment.cgi?id=1066779&action=diff
    [3] https://bugzilla.redhat.com/show_bug.cgi?id=1184273
    [4] http://www.spinics.net/lists/dmaengine/msg01514.html
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

commit 6e1315fe82308cd29e7550eab967262e8bbc71a3
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Dec 7 10:39:42 2015 +0100

    x86/cpu: Provide a config option to disable static_cpu_has
    
    This brings .text savings of about ~1.6K when building a tinyconfig. It
    is off by default so nothing changes for the default.
    
    Kconfig help text from Josh.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Josh Triplett <josh@joshtriplett.org>
    Link: http://lkml.kernel.org/r/1449481182-27541-5-git-send-email-bp@alien8.de
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 45e898b735620f426eddf105fc886d2966593a58
Author: Waiman Long <Waiman.Long@hpe.com>
Date:   Mon Nov 9 19:09:25 2015 -0500

    locking/pvqspinlock: Collect slowpath lock statistics
    
    This patch enables the accumulation of kicking and waiting related
    PV qspinlock statistics when the new QUEUED_LOCK_STAT configuration
    option is selected. It also enables the collection of data which
    enable us to calculate the kicking and wakeup latencies which have
    a heavy dependency on the CPUs being used.
    
    The statistical counters are per-cpu variables to minimize the
    performance overhead in their updates. These counters are exported
    via the debugfs filesystem under the qlockstat directory.  When the
    corresponding debugfs files are read, summation and computing of the
    required data are then performed.
    
    The measured latencies for different CPUs are:
    
    	CPU		Wakeup		Kicking
    	---		------		-------
    	Haswell-EX	63.6us		 7.4us
    	Westmere-EX	67.6us		 9.3us
    
    The measured latencies varied a bit from run-to-run. The wakeup
    latency is much higher than the kicking latency.
    
    A sample of statistical counters after system bootup (with vCPU
    overcommit) was:
    
    	pv_hash_hops=1.00
    	pv_kick_unlock=1148
    	pv_kick_wake=1146
    	pv_latency_kick=11040
    	pv_latency_wake=194840
    	pv_spurious_wakeup=7
    	pv_wait_again=4
    	pv_wait_head=23
    	pv_wait_node=1129
    
    Signed-off-by: Waiman Long <Waiman.Long@hpe.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Douglas Hatch <doug.hatch@hpe.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Scott J Norton <scott.norton@hpe.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1447114167-47185-6-git-send-email-Waiman.Long@hpe.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit a75a3f6fc92888e4119744d8594ffdf748c3d444
Merge: d2bea73 3bd2951
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Nov 3 18:59:10 2015 -0800

    Merge branch 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 asm changes from Ingo Molnar:
     "The main change in this cycle is another step in the big x86 system
      call interface rework by Andy Lutomirski, which moves most of the low
      level x86 entry code from assembly to C, for all syscall entries
      except native 64-bit system calls:
    
        arch/x86/entry/entry_32.S        | 182 ++++------
        arch/x86/entry/entry_64_compat.S | 547 ++++++++-----------------------
        194 insertions(+), 535 deletions(-)
    
      ... our hope is that the final remaining step (converting native
      64-bit system calls) will be less painful as all the previous steps,
      given that most of the legacies and quirks are concentrated around
      native 32-bit and compat environments"
    
    * 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (47 commits)
      x86/entry/32: Fix FS and GS restore in opportunistic SYSEXIT
      x86/entry/32: Fix entry_INT80_32() to expect interrupts to be on
      um/x86: Fix build after x86 syscall changes
      x86/asm: Remove the xyz_cfi macros from dwarf2.h
      selftests/x86: Style fixes for the 'unwind_vdso' test
      x86/entry/64/compat: Document sysenter_fix_flags's reason for existence
      x86/entry: Split and inline syscall_return_slowpath()
      x86/entry: Split and inline prepare_exit_to_usermode()
      x86/entry: Use pt_regs_to_thread_info() in syscall entry tracing
      x86/entry: Hide two syscall entry assertions behind CONFIG_DEBUG_ENTRY
      x86/entry: Micro-optimize compat fast syscall arg fetch
      x86/entry: Force inlining of 32-bit syscall code
      x86/entry: Make irqs_disabled checks in exit code depend on lockdep
      x86/entry: Remove unnecessary IRQ twiddling in fast 32-bit syscalls
      x86/asm: Remove thread_info.sysenter_return
      x86/entry/32: Re-implement SYSENTER using the new C path
      x86/entry/32: Switch INT80 to the new C syscall path
      x86/entry/32: Open-code return tracking from fork and kthreads
      x86/entry/compat: Implement opportunistic SYSRETL for compat syscalls
      x86/vdso/compat: Wire up SYSENTER and SYSCSALL for compat userspace
      ...

commit fe055896c040df571e4ff56fb196d6845130057b
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Oct 20 11:54:45 2015 +0200

    x86/microcode: Merge the early microcode loader
    
    Merge the early loader functionality into the driver proper. The
    diff is huge but logically, it is simply moving code from the
    _early.c files into the main driver.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Jones <davej@codemonkey.org.uk>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Len Brown <len.brown@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Link: http://lkml.kernel.org/r/1445334889-300-3-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 9a2bc335f100a0f6ee6392b9f97ac4188d84db1d
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Oct 20 11:54:44 2015 +0200

    x86/microcode: Unmodularize the microcode driver
    
    Make CONFIG_MICROCODE a bool. It was practically a bool already anyway,
    since early loader was forcing it to =y.
    
    Regardless, there's no real reason to have something be a module which
    gets built-in on the majority of installations out there. And its not
    like there's noticeable change in functionality - we still can load late
    microcode - just the module glue disappears.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Jones <davej@codemonkey.org.uk>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Len Brown <len.brown@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Link: http://lkml.kernel.org/r/1445334889-300-2-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 9d99c7123c9af5f47a2037933a3ffaec3e37efad
Author: Christian Melki <christian.melki@t2data.com>
Date:   Mon Oct 5 17:31:33 2015 +0200

    swiotlb: Enable it under x86 PAE
    
    Most distributions end up enabling SWIOTLB already with 32-bit
    kernels due to the combination of CONFIG_HYPERVISOR_GUEST|CONFIG_XEN=y
    as those end up requiring the SWIOTLB.
    
    However for those that are not interested in virtualization and
    run in 32-bit they will discover that: "32-bit PAE 4.2.0 kernel
    (no IOMMU code) would hang when writing to my USB disk. The kernel
    spews million(-ish messages per sec) to syslog, effectively
    "hanging" userspace with my kernel.
    
    Oct  2 14:33:06 voodoochild kernel: [  223.287447] nommu_map_sg:
    overflow 25dcac000+1024 of device mask ffffffff
    Oct  2 14:33:06 voodoochild kernel: [  223.287448] nommu_map_sg:
    overflow 25dcac000+1024 of device mask ffffffff
    Oct  2 14:33:06 voodoochild kernel: [  223.287449] nommu_map_sg:
    overflow 25dcac000+1024 of device mask ffffffff
    ... etc ..."
    
    Enabling it makes the problem go away.
    
    N.B. With a6dfa128ce5c414ab46b1d690f7a1b8decb8526d
    "config: Enable NEED_DMA_MAP_STATE by default when SWIOTLB is selected"
    we also have the important part of the SG macros enabled to make this
    work properly - in case anybody wants to backport this patch.
    
    Reported-and-Tested-by: Christian Melki <christian.melki@t2data.com>
    Signed-off-by: Christian Melki <christian.melki@t2data.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

commit 3dc33bd30f3e1c1bcaaafa3482737694debf0f0b
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Aug 12 17:55:19 2015 -0700

    x86/entry/vsyscall: Add CONFIG to control default
    
    Most modern systems can run with vsyscall=none. In an effort to
    provide a way for build-time defaults to lack legacy settings,
    this adds a new CONFIG to select the type of vsyscall mapping to
    use, similar to the existing "vsyscall" command line parameter.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Triplett <josh@joshtriplett.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20150813005519.GA11696@www.outflux.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 42dc2a3048247109b0a5ee6345226cbd3e4f6410
Merge: 1345df2 03da3ff
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Sep 17 11:01:34 2015 -0700

    Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 fixes from Ingo Molnar:
     - misc fixes all around the map
     - block non-root vm86(old) if mmap_min_addr != 0
     - two small debuggability improvements
     - removal of obsolete paravirt op
    
    * 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/platform: Fix Geode LX timekeeping in the generic x86 build
      x86/apic: Serialize LVTT and TSC_DEADLINE writes
      x86/ioapic: Force affinity setting in setup_ioapic_dest()
      x86/paravirt: Remove the unused pv_time_ops::get_tsc_khz method
      x86/ldt: Fix small LDT allocation for Xen
      x86/vm86: Fix the misleading CONFIG_VM86 Kconfig help text
      x86/cpu: Print family/model/stepping in hex
      x86/vm86: Block non-root vm86(old) if mmap_min_addr != 0
      x86/alternatives: Make optimize_nops() interrupt safe and synced
      x86/mm/srat: Print non-volatile flag in SRAT
      x86/cpufeatures: Enable cpuid for Intel SHA extensions

commit 1e6428124fe22906be0de1622c8fed8e50e5de05
Author: Ingo Molnar <mingo@kernel.org>
Date:   Sat Sep 5 08:58:10 2015 +0200

    x86/vm86: Fix the misleading CONFIG_VM86 Kconfig help text
    
    The CONFIG_VM86 Kconfig help text is actively misleading, so fix it:
    
      - Don't mark it 'obsolete' in the text as we'll support the ABI as long as CPUs
        support it.
    
      - Qualify the part about software emulation and mention that for some apps you
        want a real vm86 mode.
    
      - Don't scare users away from the option, instead explain what it does.
    
    Reported-by: Stas Sergeev <stsp@list.ru>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Austin S Hemmelgarn <ahferroin7@gmail.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Josh Boyer <jwboyer@fedoraproject.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matthew Garrett <mjg59@srcf.ucam.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 2965faa5e03d1e71e9ff9aa143fff39e0a77543a
Author: Dave Young <dyoung@redhat.com>
Date:   Wed Sep 9 15:38:55 2015 -0700

    kexec: split kexec_load syscall from kexec core code
    
    There are two kexec load syscalls, kexec_load another and kexec_file_load.
     kexec_file_load has been splited as kernel/kexec_file.c.  In this patch I
    split kexec_load syscall code to kernel/kexec.c.
    
    And add a new kconfig option KEXEC_CORE, so we can disable kexec_load and
    use kexec_file_load only, or vice verse.
    
    The original requirement is from Ted Ts'o, he want kexec kernel signature
    being checked with CONFIG_KEXEC_VERIFY_SIG enabled.  But kexec-tools use
    kexec_load syscall can bypass the checking.
    
    Vivek Goyal proposed to create a common kconfig option so user can compile
    in only one syscall for loading kexec kernel.  KEXEC/KEXEC_FILE selects
    KEXEC_CORE so that old config files still work.
    
    Because there's general code need CONFIG_KEXEC_CORE, so I updated all the
    architecture Kconfig with a new option KEXEC_CORE, and let KEXEC selects
    KEXEC_CORE in arch Kconfig.  Also updated general kernel code with to
    kexec_load syscall.
    
    [akpm@linux-foundation.org: coding-style fixes]
    Signed-off-by: Dave Young <dyoung@redhat.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Vivek Goyal <vgoyal@redhat.com>
    Cc: Petr Tesarik <ptesarik@suse.cz>
    Cc: Theodore Ts'o <tytso@mit.edu>
    Cc: Josh Boyer <jwboyer@fedoraproject.org>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 12f03ee606914317e7e6a0815e53a48205c31dae
Merge: d9241b2 004f1af
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Sep 8 14:35:59 2015 -0700

    Merge tag 'libnvdimm-for-4.3' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm
    
    Pull libnvdimm updates from Dan Williams:
     "This update has successfully completed a 0day-kbuild run and has
      appeared in a linux-next release.  The changes outside of the typical
      drivers/nvdimm/ and drivers/acpi/nfit.[ch] paths are related to the
      removal of IORESOURCE_CACHEABLE, the introduction of memremap(), and
      the introduction of ZONE_DEVICE + devm_memremap_pages().
    
      Summary:
    
       - Introduce ZONE_DEVICE and devm_memremap_pages() as a generic
         mechanism for adding device-driver-discovered memory regions to the
         kernel's direct map.
    
         This facility is used by the pmem driver to enable pfn_to_page()
         operations on the page frames returned by DAX ('direct_access' in
         'struct block_device_operations').
    
         For now, the 'memmap' allocation for these "device" pages comes
         from "System RAM".  Support for allocating the memmap from device
         memory will arrive in a later kernel.
    
       - Introduce memremap() to replace usages of ioremap_cache() and
         ioremap_wt().  memremap() drops the __iomem annotation for these
         mappings to memory that do not have i/o side effects.  The
         replacement of ioremap_cache() with memremap() is limited to the
         pmem driver to ease merging the api change in v4.3.
    
         Completion of the conversion is targeted for v4.4.
    
       - Similar to the usage of memcpy_to_pmem() + wmb_pmem() in the pmem
         driver, update the VFS DAX implementation and PMEM api to provide
         persistence guarantees for kernel operations on a DAX mapping.
    
       - Convert the ACPI NFIT 'BLK' driver to map the block apertures as
         cacheable to improve performance.
    
       - Miscellaneous updates and fixes to libnvdimm including support for
         issuing "address range scrub" commands, clarifying the optimal
         'sector size' of pmem devices, a clarification of the usage of the
         ACPI '_STA' (status) property for DIMM devices, and other minor
         fixes"
    
    * tag 'libnvdimm-for-4.3' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm: (34 commits)
      libnvdimm, pmem: direct map legacy pmem by default
      libnvdimm, pmem: 'struct page' for pmem
      libnvdimm, pfn: 'struct page' provider infrastructure
      x86, pmem: clarify that ARCH_HAS_PMEM_API implies PMEM mapped WB
      add devm_memremap_pages
      mm: ZONE_DEVICE for "device memory"
      mm: move __phys_to_pfn and __pfn_to_phys to asm/generic/memory_model.h
      dax: drop size parameter to ->direct_access()
      nd_blk: change aperture mapping from WC to WB
      nvdimm: change to use generic kvfree()
      pmem, dax: have direct_access use __pmem annotation
      dax: update I/O path to do proper PMEM flushing
      pmem: add copy_from_iter_pmem() and clear_pmem()
      pmem, x86: clean up conditional pmem includes
      pmem: remove layer when calling arch_has_wmb_pmem()
      pmem, x86: move x86 PMEM API to new pmem.h header
      libnvdimm, e820: make CONFIG_X86_PMEM_LEGACY a tristate option
      pmem: switch to devm_ allocations
      devres: add devm_memremap
      libnvdimm, btt: write and validate parent_uuid
      ...

commit 72b252aed506b8f1a03f7abd29caef4cdf6a043b
Author: Mel Gorman <mgorman@suse.de>
Date:   Fri Sep 4 15:47:32 2015 -0700

    mm: send one IPI per CPU to TLB flush all entries after unmapping pages
    
    An IPI is sent to flush remote TLBs when a page is unmapped that was
    potentially accesssed by other CPUs.  There are many circumstances where
    this happens but the obvious one is kswapd reclaiming pages belonging to a
    running process as kswapd and the task are likely running on separate
    CPUs.
    
    On small machines, this is not a significant problem but as machine gets
    larger with more cores and more memory, the cost of these IPIs can be
    high.  This patch uses a simple structure that tracks CPUs that
    potentially have TLB entries for pages being unmapped.  When the unmapping
    is complete, the full TLB is flushed on the assumption that a refill cost
    is lower than flushing individual entries.
    
    Architectures wishing to do this must give the following guarantee.
    
            If a clean page is unmapped and not immediately flushed, the
            architecture must guarantee that a write to that linear address
            from a CPU with a cached TLB entry will trap a page fault.
    
    This is essentially what the kernel already depends on but the window is
    much larger with this patch applied and is worth highlighting.  The
    architecture should consider whether the cost of the full TLB flush is
    higher than sending an IPI to flush each individual entry.  An additional
    architecture helper called flush_tlb_local is required.  It's a trivial
    wrapper with some accounting in the x86 case.
    
    The impact of this patch depends on the workload as measuring any benefit
    requires both mapped pages co-located on the LRU and memory pressure.  The
    case with the biggest impact is multiple processes reading mapped pages
    taken from the vm-scalability test suite.  The test case uses NR_CPU
    readers of mapped files that consume 10*RAM.
    
    Linear mapped reader on a 4-node machine with 64G RAM and 48 CPUs
    
                                               4.2.0-rc1          4.2.0-rc1
                                                 vanilla       flushfull-v7
    Ops lru-file-mmap-read-elapsed      159.62 (  0.00%)   120.68 ( 24.40%)
    Ops lru-file-mmap-read-time_range    30.59 (  0.00%)     2.80 ( 90.85%)
    Ops lru-file-mmap-read-time_stddv     6.70 (  0.00%)     0.64 ( 90.38%)
    
               4.2.0-rc1    4.2.0-rc1
                 vanilla flushfull-v7
    User          581.00       611.43
    System       5804.93      4111.76
    Elapsed       161.03       122.12
    
    This is showing that the readers completed 24.40% faster with 29% less
    system CPU time.  From vmstats, it is known that the vanilla kernel was
    interrupted roughly 900K times per second during the steady phase of the
    test and the patched kernel was interrupts 180K times per second.
    
    The impact is lower on a single socket machine.
    
                                               4.2.0-rc1          4.2.0-rc1
                                                 vanilla       flushfull-v7
    Ops lru-file-mmap-read-elapsed       25.33 (  0.00%)    20.38 ( 19.54%)
    Ops lru-file-mmap-read-time_range     0.91 (  0.00%)     1.44 (-58.24%)
    Ops lru-file-mmap-read-time_stddv     0.28 (  0.00%)     0.47 (-65.34%)
    
               4.2.0-rc1    4.2.0-rc1
                 vanilla flushfull-v7
    User           58.09        57.64
    System        111.82        76.56
    Elapsed        27.29        22.55
    
    It's still a noticeable improvement with vmstat showing interrupts went
    from roughly 500K per second to 45K per second.
    
    The patch will have no impact on workloads with no memory pressure or have
    relatively few mapped pages.  It will have an unpredictable impact on the
    workload running on the CPU being flushed as it'll depend on how many TLB
    entries need to be refilled and how long that takes.  Worst case, the TLB
    will be completely cleared of active entries when the target PFNs were not
    resident at all.
    
    [sasha.levin@oracle.com: trace tlb flush after disabling preemption in try_to_unmap_flush]
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Reviewed-by: Rik van Riel <riel@redhat.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 5778077d03cb25aac9b6a428e18970642fc019e3
Merge: 65a9959 7e01ebf
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Sep 1 08:40:25 2015 -0700

    Merge branch 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 asm changes from Ingo Molnar:
     "The biggest changes in this cycle were:
    
       - Revamp, simplify (and in some cases fix) Time Stamp Counter (TSC)
         primitives.  (Andy Lutomirski)
    
       - Add new, comprehensible entry and exit handlers written in C.
         (Andy Lutomirski)
    
       - vm86 mode cleanups and fixes.  (Brian Gerst)
    
       - 32-bit compat code cleanups.  (Brian Gerst)
    
      The amount of simplification in low level assembly code is already
      palpable:
    
         arch/x86/entry/entry_32.S                          | 130 +----
         arch/x86/entry/entry_64.S                          | 197 ++-----
    
      but more simplifications are planned.
    
      There's also the usual laudry mix of low level changes - see the
      changelog for details"
    
    * 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (83 commits)
      x86/asm: Drop repeated macro of X86_EFLAGS_AC definition
      x86/asm/msr: Make wrmsrl() a function
      x86/asm/delay: Introduce an MWAITX-based delay with a configurable timer
      x86/asm: Add MONITORX/MWAITX instruction support
      x86/traps: Weaken context tracking entry assertions
      x86/asm/tsc: Add rdtscll() merge helper
      selftests/x86: Add syscall_nt selftest
      selftests/x86: Disable sigreturn_64
      x86/vdso: Emit a GNU hash
      x86/entry: Remove do_notify_resume(), syscall_trace_leave(), and their TIF masks
      x86/entry/32: Migrate to C exit path
      x86/entry/32: Remove 32-bit syscall audit optimizations
      x86/vm86: Rename vm86->v86flags and v86mask
      x86/vm86: Rename vm86->vm86_info to user_vm86
      x86/vm86: Clean up vm86.h includes
      x86/vm86: Move the vm86 IRQ definitions to vm86.h
      x86/vm86: Use the normal pt_regs area for vm86
      x86/vm86: Eliminate 'struct kernel_vm86_struct'
      x86/vm86: Move fields from 'struct kernel_vm86_struct' to 'struct vm86'
      x86/vm86: Move vm86 fields out of 'thread_struct'
      ...

commit 96601adb745186ccbcf5b078d4756f13381ec2af
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Aug 24 18:29:38 2015 -0400

    x86, pmem: clarify that ARCH_HAS_PMEM_API implies PMEM mapped WB
    
    Given that a write-back (WB) mapping plus non-temporal stores is
    expected to be the most efficient way to access PMEM, update the
    definition of ARCH_HAS_PMEM_API to imply arch support for
    WB-mapped-PMEM.  This is needed as a pre-requisite for adding PMEM to
    the direct map and mapping it with struct page.
    
    The above clarification for X86_64 means that memcpy_to_pmem() is
    permitted to use the non-temporal arch_memcpy_to_pmem() rather than
    needlessly fall back to default_memcpy_to_pmem() when the pcommit
    instruction is not available.  When arch_memcpy_to_pmem() is not
    guaranteed to flush writes out of cache, i.e. on older X86_32
    implementations where non-temporal stores may just dirty cache,
    ARCH_HAS_PMEM_API is simply disabled.
    
    The default fall back for persistent memory handling remains.  Namely,
    map it with the WT (write-through) cache-type and hope for the best.
    
    arch_has_pmem_api() is updated to only indicate whether the arch
    provides the proper helpers to meet the minimum "writes are visible
    outside the cache hierarchy after memcpy_to_pmem() + wmb_pmem()".  Code
    that cares whether wmb_pmem() actually flushes writes to pmem must now
    call arch_has_wmb_pmem() directly.
    
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Reviewed-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    [hch: set ARCH_HAS_PMEM_API=n on x86_32]
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    [toshi: x86_32 compile fixes]
    Signed-off-by: Toshi Kani <toshi.kani@hp.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>

commit 4a9bf88a5caa8495b5eb2b738d5fb40924bbc538
Merge: a06a757 67a3e8f
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Aug 27 19:40:26 2015 -0400

    Merge branch 'pmem-api' into libnvdimm-for-next

commit 67a3e8fe90156d41cd480d3dfbb40f3bc007c262
Author: Ross Zwisler <ross.zwisler@linux.intel.com>
Date:   Thu Aug 27 13:14:20 2015 -0600

    nd_blk: change aperture mapping from WC to WB
    
    This should result in a pretty sizeable performance gain for reads.  For
    rough comparison I did some simple read testing using PMEM to compare
    reads of write combining (WC) mappings vs write-back (WB).  This was
    done on a random lab machine.
    
    PMEM reads from a write combining mapping:
    	# dd of=/dev/null if=/dev/pmem0 bs=4096 count=100000
    	100000+0 records in
    	100000+0 records out
    	409600000 bytes (410 MB) copied, 9.2855 s, 44.1 MB/s
    
    PMEM reads from a write-back mapping:
    	# dd of=/dev/null if=/dev/pmem0 bs=4096 count=1000000
    	1000000+0 records in
    	1000000+0 records out
    	4096000000 bytes (4.1 GB) copied, 3.44034 s, 1.2 GB/s
    
    To be able to safely support a write-back aperture I needed to add
    support for the "read flush" _DSM flag, as outlined in the DSM spec:
    
    http://pmem.io/documents/NVDIMM_DSM_Interface_Example.pdf
    
    This flag tells the ND BLK driver that it needs to flush the cache lines
    associated with the aperture after the aperture is moved but before any
    new data is read.  This ensures that any stale cache lines from the
    previous contents of the aperture will be discarded from the processor
    cache, and the new data will be read properly from the DIMM.  We know
    that the cache lines are clean and will be discarded without any
    writeback because either a) the previous aperture operation was a read,
    and we never modified the contents of the aperture, or b) the previous
    aperture operation was a write and we must have written back the dirtied
    contents of the aperture to the DIMM before the I/O was completed.
    
    In order to add support for the "read flush" flag I needed to add a
    generic routine to invalidate cache lines, mmio_flush_range().  This is
    protected by the ARCH_HAS_MMIO_FLUSH Kconfig variable, and is currently
    only supported on x86.
    
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>

commit 7a67832c7e44c20935c5d6f2264035a0f7bf0d8f
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Aug 19 00:34:34 2015 -0400

    libnvdimm, e820: make CONFIG_X86_PMEM_LEGACY a tristate option
    
    We currently register a platform device for e820 type-12 memory and
    register a nvdimm bus beneath it.  Registering the platform device
    triggers the device-core machinery to probe for a driver, but that
    search currently comes up empty.  Building the nvdimm-bus registration
    into the e820_pmem platform device registration in this way forces
    libnvdimm to be built-in.  Instead, convert the built-in portion of
    CONFIG_X86_PMEM_LEGACY to simply register a platform device and move the
    rest of the logic to the driver for e820_pmem, for the following
    reasons:
    
    1/ Letting e820_pmem support be a module allows building and testing
       libnvdimm.ko changes without rebooting
    
    2/ All the normal policy around modules can be applied to e820_pmem
       (unbind to disable and/or blacklisting the module from loading by
       default)
    
    3/ Moving the driver to a generic location and converting it to scan
       "iomem_resource" rather than "e820.map" means any other architecture can
       take advantage of this simple nvdimm resource discovery mechanism by
       registering a resource named "Persistent Memory (legacy)"
    
    Cc: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>

commit 648ed94038c030245a06e4be59744fd5cdc18c40
Author: Chen, Gong <gong.chen@linux.intel.com>
Date:   Wed Aug 12 18:29:34 2015 +0200

    x86/mce: Provide a lockless memory pool to save error records
    
    printk() is not safe to use in MCE context. Add a lockless
    memory allocator pool to save error records in MCE context.
    Those records will be issued later, in a printk-safe context.
    The idea is inspired by the APEI/GHES driver.
    
    We're very conservative and allocate only two pages for it but
    since we're going to use those pages throughout the system's
    lifetime, we allocate them statically to avoid early boot time
    allocation woes.
    
    Signed-off-by: Chen, Gong <gong.chen@linux.intel.com>
    [ Rewrite. ]
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Link: http://lkml.kernel.org/r/1439396985-12812-3-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit a5b9e5a2f14f25a8dae987494d50ad3aac7366b6
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Jul 30 14:31:34 2015 -0700

    x86/ldt: Make modify_ldt() optional
    
    The modify_ldt syscall exposes a large attack surface and is
    unnecessary for modern userspace.  Make it optional.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: Andrew Cooper <andrew.cooper3@citrix.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jan Beulich <jbeulich@suse.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sasha Levin <sasha.levin@oracle.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: security@kernel.org <security@kernel.org>
    Cc: xen-devel <xen-devel@lists.xen.org>
    Link: http://lkml.kernel.org/r/a605166a771c343fd64802dece77a903507333bd.1438291540.git.luto@kernel.org
    [ Made MATH_EMULATION dependent on MODIFY_LDT_SYSCALL. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 5b929bd11df23922daf1be5d52731cc3900c1d79
Merge: b2c5110 37868fe
Author: Ingo Molnar <mingo@kernel.org>
Date:   Fri Jul 31 10:23:35 2015 +0200

    Merge branch 'x86/urgent' into x86/asm, before applying dependent patches
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 5aef51c340cb50ed9a3997dc5d782324372078bd
Author: Andy Lutomirski <luto@kernel.org>
Date:   Fri Jul 10 08:34:23 2015 -0700

    x86/kconfig/32: Rename CONFIG_VM86 and default it to 'n'
    
    VM86 is entirely broken if ptrace, syscall auditing, or
    NOHZ_FULL is in use.  The code is a big undocumented mess, it's
    a real PITA to test, and it looks like a big chunk of vm86_32.c
    is dead code.  It also plays awful games with the entry asm.
    
    No one should be using it anyway. Use DOSBOX or KVM instead.
    
    Let's accelerate its slow death.  Remove it from EXPERT and
    default it to n.  Distros should not enable it.  In the unlikely
    event that some user needs it, they can easily re-enable it.
    
    While we're at it, rename it to CONFIG_X86_LEGACY_VM86 so that 'make
    oldconfig' users will be prompted again.  I left CONFIG_VM86 as
    an alias to avoid a treewide replacement of the names.  We can
    clean that up once the current asm and vm86 code churn settles
    down.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Austin S Hemmelgarn <ahferroin7@gmail.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matthew Garrett <mjg59@srcf.ucam.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/d29c6cc442d32d4df58849d2f8c89fb39ff88d61.1436542295.git.luto@kernel.org
    [ Refined it some more. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 5aaeb5c01c5b6c0be7b7aadbf3ace9f3a4458c3d
Author: Ingo Molnar <mingo@kernel.org>
Date:   Fri Jul 17 12:28:12 2015 +0200

    x86/fpu, sched: Introduce CONFIG_ARCH_WANTS_DYNAMIC_TASK_STRUCT and use it on x86
    
    Don't burden architectures without dynamic task_struct sizing
    with the overhead of dynamic sizing.
    
    Also optimize the x86 code a bit by caching task_struct_size.
    
    Acked-and-Tested-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave@sr71.net>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1437128892-9831-3-git-send-email-mingo@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 69711ca19b06d1b33d8f21213b540b5d1c638dbf
Author: Sébastien Hinderer <Sebastien.Hinderer@ens-lyon.org>
Date:   Wed Jul 8 00:02:01 2015 +0200

    x86/kconfig: Fix typo in the CONFIG_CMDLINE_BOOL help text
    
    Signed-off-by: Sébastien Hinderer <Sebastien.Hinderer@ens-lyon.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Samuel Thibault <Samuel.Thibault@ens-lyon.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 9b54050bfe438d9e1108211d28cb0b995b1f347c
Author: Brian Gerst <brgerst@gmail.com>
Date:   Mon Jun 22 07:55:21 2015 -0400

    x86/compat: Separate ia32 and x32 compat ABIs
    
    The x32 ABI is now independent of the ia32 compat ABI.  Common
    code is now conditional on CONFIG_COMPAT, but unshared code like
    syscall entry, signal handling, and the VDSO are under separate
    config options.
    
    Signed-off-by: Brian Gerst <brgerst@gmail.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1434974121-32575-13-git-send-email-brgerst@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 0c3619ea6756833e5c636c886cb55ca5b77f5d73
Author: Brian Gerst <brgerst@gmail.com>
Date:   Mon Jun 22 07:55:20 2015 -0400

    x86/compat: Clean up HAVE_UID16 config
    
    Merge the 32-bit compat config setting for HAVE_UID16 with the
    32-bit native one.
    
    Signed-off-by: Brian Gerst <brgerst@gmail.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1434974121-32575-12-git-send-email-brgerst@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 3bead553ab657d482c3fd6559a1fd7f024414a63
Author: Brian Gerst <brgerst@gmail.com>
Date:   Mon Jun 22 07:55:19 2015 -0400

    x86/compat: Define ARCH_WANT_OLD_COMPAT_IPC only for 32-bit compat
    
    x32 does not need CONFIG_ARCH_WANT_OLD_COMPAT_IPC=y.
    
    Signed-off-by: Brian Gerst <brgerst@gmail.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1434974121-32575-11-git-send-email-brgerst@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit d6f2d75a7ae06ffd793bb504c4f0d1665548cffc
Author: Andrey Ryabinin <a.ryabinin@samsung.com>
Date:   Thu Jul 2 12:09:38 2015 +0300

    x86/kasan: Move KASAN_SHADOW_OFFSET to the arch Kconfig
    
    KASAN_SHADOW_OFFSET is purely arch specific setting,
    so it should be in arch's Kconfig file.
    
    Signed-off-by: Andrey Ryabinin <a.ryabinin@samsung.com>
    Cc: Alexander Popov <alpopov@ptsecurity.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Konovalov <adech.fo@gmail.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul Bolle <pebolle@tiscali.nl>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1435828178-10975-7-git-send-email-a.ryabinin@samsung.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit c1bd55f922a2df6038060ed48a82d146d301ca12
Author: Josh Triplett <josh@joshtriplett.org>
Date:   Tue Jun 30 15:00:00 2015 -0700

    x86: opt into HAVE_COPY_THREAD_TLS, for both 32-bit and 64-bit
    
    For 32-bit userspace on a 64-bit kernel, this requires modifying
    stub32_clone to actually swap the appropriate arguments to match
    CONFIG_CLONE_BACKWARDS, rather than just leaving the C argument for tls
    broken.
    
    Patch co-authored by Josh Triplett and Thiago Macieira.
    
    Signed-off-by: Josh Triplett <josh@joshtriplett.org>
    Acked-by: Andy Lutomirski <luto@kernel.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thiago Macieira <thiago.macieira@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 3b242c66ccbd60cf47ab0e8992119d9617548c23
Author: Mel Gorman <mgorman@suse.de>
Date:   Tue Jun 30 14:57:13 2015 -0700

    x86: mm: enable deferred struct page initialisation on x86-64
    
    Subject says it all.  Other architectures may enable on a case-by-case
    basis after auditing early_pfn_to_nid and testing.
    
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Tested-by: Nate Zimmer <nzimmer@sgi.com>
    Tested-by: Waiman Long <waiman.long@hp.com>
    Tested-by: Daniel J Blueman <daniel@numascale.com>
    Acked-by: Pekka Enberg <penberg@kernel.org>
    Cc: Robin Holt <robinmholt@gmail.com>
    Cc: Nate Zimmer <nzimmer@sgi.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Waiman Long <waiman.long@hp.com>
    Cc: Scott Norton <scott.norton@hp.com>
    Cc: "Luck, Tony" <tony.luck@intel.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 88793e5c774ec69351ef6b5200bb59f532e41bca
Merge: 1bc5e15 6103195
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jun 29 10:34:42 2015 -0700

    Merge tag 'libnvdimm-for-4.2' of git://git.kernel.org/pub/scm/linux/kernel/git/djbw/nvdimm
    
    Pull libnvdimm subsystem from Dan Williams:
     "The libnvdimm sub-system introduces, in addition to the
      libnvdimm-core, 4 drivers / enabling modules:
    
      NFIT:
        Instantiates an "nvdimm bus" with the core and registers memory
        devices (NVDIMMs) enumerated by the ACPI 6.0 NFIT (NVDIMM Firmware
        Interface table).
    
        After registering NVDIMMs the NFIT driver then registers "region"
        devices.  A libnvdimm-region defines an access mode and the
        boundaries of persistent memory media.  A region may span multiple
        NVDIMMs that are interleaved by the hardware memory controller.  In
        turn, a libnvdimm-region can be carved into a "namespace" device and
        bound to the PMEM or BLK driver which will attach a Linux block
        device (disk) interface to the memory.
    
      PMEM:
        Initially merged in v4.1 this driver for contiguous spans of
        persistent memory address ranges is re-worked to drive
        PMEM-namespaces emitted by the libnvdimm-core.
    
        In this update the PMEM driver, on x86, gains the ability to assert
        that writes to persistent memory have been flushed all the way
        through the caches and buffers in the platform to persistent media.
        See memcpy_to_pmem() and wmb_pmem().
    
      BLK:
        This new driver enables access to persistent memory media through
        "Block Data Windows" as defined by the NFIT.  The primary difference
        of this driver to PMEM is that only a small window of persistent
        memory is mapped into system address space at any given point in
        time.
    
        Per-NVDIMM windows are reprogrammed at run time, per-I/O, to access
        different portions of the media.  BLK-mode, by definition, does not
        support DAX.
    
      BTT:
        This is a library, optionally consumed by either PMEM or BLK, that
        converts a byte-accessible namespace into a disk with atomic sector
        update semantics (prevents sector tearing on crash or power loss).
    
        The sinister aspect of sector tearing is that most applications do
        not know they have a atomic sector dependency.  At least today's
        disk's rarely ever tear sectors and if they do one almost certainly
        gets a CRC error on access.  NVDIMMs will always tear and always
        silently.  Until an application is audited to be robust in the
        presence of sector-tearing the usage of BTT is recommended.
    
      Thanks to: Ross Zwisler, Jeff Moyer, Vishal Verma, Christoph Hellwig,
      Ingo Molnar, Neil Brown, Boaz Harrosh, Robert Elliott, Matthew Wilcox,
      Andy Rudoff, Linda Knippers, Toshi Kani, Nicholas Moulin, Rafael
      Wysocki, and Bob Moore"
    
    * tag 'libnvdimm-for-4.2' of git://git.kernel.org/pub/scm/linux/kernel/git/djbw/nvdimm: (33 commits)
      arch, x86: pmem api for ensuring durability of persistent memory updates
      libnvdimm: Add sysfs numa_node to NVDIMM devices
      libnvdimm: Set numa_node to NVDIMM devices
      acpi: Add acpi_map_pxm_to_online_node()
      libnvdimm, nfit: handle unarmed dimms, mark namespaces read-only
      pmem: flag pmem block devices as non-rotational
      libnvdimm: enable iostat
      pmem: make_request cleanups
      libnvdimm, pmem: fix up max_hw_sectors
      libnvdimm, blk: add support for blk integrity
      libnvdimm, btt: add support for blk integrity
      fs/block_dev.c: skip rw_page if bdev has integrity
      libnvdimm: Non-Volatile Devices
      tools/testing/nvdimm: libnvdimm unit test infrastructure
      libnvdimm, nfit, nd_blk: driver for BLK-mode access persistent memory
      nd_btt: atomic sector updates
      libnvdimm: infrastructure for btt devices
      libnvdimm: write blk label set
      libnvdimm: write pmem label set
      libnvdimm: blk labels and namespace instantiation
      ...

commit d87823813fe498fdd47894bd28e460a9dee8d771
Merge: e382608 3dc196e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jun 26 14:51:15 2015 -0700

    Merge tag 'char-misc-4.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc
    
    Pull char/misc driver updates from Greg KH:
     "Here's the big char/misc driver pull request for 4.2-rc1.
    
      Lots of mei, extcon, coresight, uio, mic, and other driver updates in
      here.  Full details in the shortlog.  All of these have been in
      linux-next for some time with no reported problems"
    
    * tag 'char-misc-4.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc: (176 commits)
      mei: me: wait for power gating exit confirmation
      mei: reset flow control on the last client disconnection
      MAINTAINERS: mei: add mei_cl_bus.h to maintained file list
      misc: sram: sort and clean up included headers
      misc: sram: move reserved block logic out of probe function
      misc: sram: add private struct device and virt_base members
      misc: sram: report correct SRAM pool size
      misc: sram: bump error message level on unclean driver unbinding
      misc: sram: fix device node reference leak on error
      misc: sram: fix enabled clock leak on error path
      misc: mic: Fix reported static checker warning
      misc: mic: Fix randconfig build error by including errno.h
      uio: pruss: Drop depends on ARCH_DAVINCI_DA850 from config
      uio: pruss: Add CONFIG_HAS_IOMEM dependence
      uio: pruss: Include <linux/sizes.h>
      extcon: Redefine the unique id of supported external connectors without 'enum extcon' type
      char:xilinx_hwicap:buffer_icap - change 1/0 to true/false for bool type variable in function buffer_icap_set_configuration().
      Drivers: hv: vmbus: Allocate ring buffer memory in NUMA aware fashion
      parport: check exclusive access before register
      w1: use correct lock on error in w1_seq_show()
      ...

commit 61031952f4c89dba1065f7a5b9419badb112554c
Author: Ross Zwisler <ross.zwisler@linux.intel.com>
Date:   Thu Jun 25 03:08:39 2015 -0400

    arch, x86: pmem api for ensuring durability of persistent memory updates
    
    Based on an original patch by Ross Zwisler [1].
    
    Writes to persistent memory have the potential to be posted to cpu
    cache, cpu write buffers, and platform write buffers (memory controller)
    before being committed to persistent media.  Provide apis,
    memcpy_to_pmem(), wmb_pmem(), and memremap_pmem(), to write data to
    pmem and assert that it is durable in PMEM (a persistent linear address
    range).  A '__pmem' attribute is added so sparse can track proper usage
    of pointers to pmem.
    
    This continues the status quo of pmem being x86 only for 4.2, but
    reworks to ioremap, and wider implementation of memremap() will enable
    other archs in 4.3.
    
    [1]: https://lists.01.org/pipermail/linux-nvdimm/2015-May/000932.html
    
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    [djbw: various reworks]
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>

commit 45471cd98decae5fced8b38e46c223f54a924814
Merge: 93a4b1b 043b431
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jun 24 19:52:06 2015 -0700

    Merge tag 'edac_for_4.2_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp
    
    Pull EDAC updates from Borislav Petkov:
    
     - New APM X-Gene SoC EDAC driver (Loc Ho)
    
     - AMD error injection module improvements (Aravind Gopalakrishnan)
    
     - Altera Arria 10 support (Thor Thayer)
    
     - misc fixes and cleanups all over the place
    
    * tag 'edac_for_4.2_2' of git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp: (28 commits)
      EDAC: Update Documentation/edac.txt
      EDAC: Fix typos in Documentation/edac.txt
      EDAC, mce_amd_inj: Set MISCV on injection
      EDAC, mce_amd_inj: Move bit preparations before the injection
      EDAC, mce_amd_inj: Cleanup and simplify README
      EDAC, altera: Do not allow suspend when EDAC is enabled
      EDAC, mce_amd_inj: Make inj_type static
      arm: socfpga: dts: Add Arria10 SDRAM EDAC DTS support
      EDAC, altera: Add Arria10 EDAC support
      EDAC, altera: Refactor for Altera CycloneV SoC
      EDAC, altera: Generalize driver to use DT Memory size
      EDAC, mce_amd_inj: Add README file
      EDAC, mce_amd_inj: Add individual permissions field to dfs_node
      EDAC, mce_amd_inj: Modify flags attribute to use string arguments
      EDAC, mce_amd_inj: Read out number of MCE banks from the hardware
      EDAC, mce_amd_inj: Use MCE_INJECT_GET macro for bank node too
      EDAC, xgene: Fix cpuid abuse
      EDAC, mpc85xx: Extend error address to 64 bit
      EDAC, mpc8xxx: Adapt for FSL SoC
      EDAC, edac_stub: Drop arch-specific include
      ...

commit 9f53f9fa4ad1d8bddd4d14359cdabc531aedffe8
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Jun 9 15:33:45 2015 -0400

    libnvdimm, pmem: add libnvdimm support to the pmem driver
    
    nd_pmem attaches to persistent memory regions and namespaces emitted by
    the libnvdimm subsystem, and, same as the original pmem driver, presents
    the system-physical-address range as a block device.
    
    The existing e820-type-12 to pmem setup is converted to an nvdimm_bus
    that emits an nd_namespace_io device.
    
    Note that the X in 'pmemX' is now derived from the parent region.  This
    provides some stability to the pmem devices names from boot-to-boot.
    The minor numbers are also more predictable by passing 0 to
    alloc_disk().
    
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Boaz Harrosh <boaz@plexistor.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Acked-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Toshi Kani <toshi.kani@hp.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>

commit c8e56d20f2d190d54c0615775dcb6a23c1091681
Author: Borislav Petkov <bp@suse.de>
Date:   Thu Jun 4 18:55:25 2015 +0200

    x86: Kill CONFIG_X86_HT
    
    In talking to Aravind recently about making certain AMD topology
    attributes available to the MCE injection module, it seemed like
    that CONFIG_X86_HT thing is more or less superfluous. It is
    def_bool y, depends on SMP and gets enabled in the majority of
    .configs - distro and otherwise - out there.
    
    So let's kill it and make code behind it depend directly on SMP.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Aravind Gopalakrishnan <Aravind.Gopalakrishnan@amd.com>
    Cc: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Daniel Walter <dwalter@google.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Igor Mammedov <imammedo@redhat.com>
    Cc: Jacob Shin <jacob.w.shin@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1433436928-31903-18-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 6471b825c41e6fc3cd41caa18d15142d0e121e76
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Jun 3 10:00:13 2015 +0200

    x86/kconfig: Reorganize arch feature Kconfig select's
    
    Peter Zijstra noticed that in arch/x86/Kconfig there are a lot
    of X86_{32,64} clauses in the X86 symbol, plus there are a number
    of similar selects in the X86_32 and X86_64 config definitions
    as well - which all overlap in an inconsistent mess.
    
    So:
    
      - move all select's from X86_32 and X86_64 to the X64 config
        option
    
      - sort their names, so that duplications are easier to spot
    
      - align their if clauses, so that they are easier to identify
        at a glance - and so that weirdnesses stand out more
    
    No change in functionality:
    
         105 insertions(+)
         105 deletions(-)
    
    Originally-from: Peter Zijlstra <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20150602153027.GU3644@twins.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 71966f3a0b24b408a87a0c475262638fbb71da99
Merge: 34e7724 92ae183
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Jun 3 10:07:35 2015 +0200

    Merge branch 'locking/core' into x86/core, to prepare for dependent patch
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 34e7724c0767f04f6199f2bd7232e9ab1207e1df
Merge: c46a024 1e6277d cad14bb 501b326 956079e
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Jun 3 10:05:18 2015 +0200

    Merge branches 'x86/mm', 'x86/build', 'x86/apic' and 'x86/platform' into x86/core, to apply dependent patch
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit b01aec9b2c7d32f17a37553df63efa9f7c0fdaa0
Author: Borislav Petkov <bp@suse.de>
Date:   Thu May 21 19:59:31 2015 +0200

    EDAC: Cleanup atomic_scrub mess
    
    So first of all, this atomic_scrub() function's naming is bad. It looks
    like an atomic_t helper. Change it to edac_atomic_scrub().
    
    The bigger problem is that this function is arch-specific and every new
    arch which doesn't necessarily need that functionality still needs to
    define it, otherwise EDAC doesn't compile.
    
    So instead of doing that and including arch-specific headers, have each
    arch define an EDAC_ATOMIC_SCRUB symbol which can be used in edac_mc.c
    for ifdeffery. Much cleaner.
    
    And we already are doing this with another symbol - EDAC_SUPPORT. This
    is also much cleaner than having CONFIG_EDAC enumerate all the arches
    which need/have EDAC support and drivers.
    
    This way I can kill the useless edac.h header in tile too.
    
    Acked-by: Ralf Baechle <ralf@linux-mips.org>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Chris Metcalf <cmetcalf@ezchip.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Doug Thompson <dougthompson@xmission.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-edac@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Cc: linux-mips@linux-mips.org
    Cc: linuxppc-dev@lists.ozlabs.org
    Cc: "Maciej W. Rozycki" <macro@codesourcery.com>
    Cc: Markos Chandras <markos.chandras@imgtec.com>
    Cc: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: "Steven J. Hill" <Steven.Hill@imgtec.com>
    Cc: x86@kernel.org
    Signed-off-by: Borislav Petkov <bp@suse.de>

commit 10455f64aff0d715dcdfb09b02393df168fe267e
Author: Toshi Kani <toshi.kani@hp.com>
Date:   Tue May 26 10:28:04 2015 +0200

    x86/mm/kconfig: Simplify conditions for HAVE_ARCH_HUGE_VMAP
    
    Simplify the conditions selecting HAVE_ARCH_HUGE_VMAP since
    X86_PAE depends on X86_32 already.
    
    Signed-off-by: Toshi Kani <toshi.kani@hp.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Elliott@hp.com
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Luis R. Rodriguez <mcgrof@suse.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dave.hansen@intel.com
    Cc: linux-mm <linux-mm@kvack.org>
    Cc: pebolle@tiscali.nl
    Link: http://lkml.kernel.org/r/1431714237-880-2-git-send-email-toshi.kani@hp.com
    Link: http://lkml.kernel.org/r/1432628901-18044-2-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 039ae58503f3349157a852c2cd5555a630f0bfaf
Author: Pali Rohár <pali.rohar@gmail.com>
Date:   Thu May 14 13:16:37 2015 +0200

    hwmon: Allow to compile dell-smm-hwmon driver without /proc/i8k
    
    This patch splits CONFIG_I8K compile option to SENSORS_DELL_SMM and CONFIG_I8K.
    Option SENSORS_DELL_SMM is now used to enable compilation of dell-smm-hwmon
    driver and old CONFIG_I8K option to enable /proc/i8k interface in driver.
    
    So this change allows to compile dell-smm-hwmon driver without legacy /proc/i8k
    interface which is needed only for old Dell Inspirion models or for userspace
    i8kutils package.
    
    For backward compatibility when CONFIG_I8K is enabled then also SENSORS_DELL_SMM
    is enabled and so driver dell-smm-hwmon (with /proc/i8k) is compiled.
    
    Signed-off-by: Pali Rohár <pali.rohar@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7114b4e6c53111d415485875725b60213ffc675
Author: Waiman Long <Waiman.Long@hp.com>
Date:   Mon May 11 13:57:11 2015 -0400

    locking/qrwlock: Rename QUEUE_RWLOCK to QUEUED_RWLOCKS
    
    To be consistent with the queued spinlocks which use
    CONFIG_QUEUED_SPINLOCKS config parameter, the one for the queued
    rwlocks is now renamed to CONFIG_QUEUED_RWLOCKS.
    
    Signed-off-by: Waiman Long <Waiman.Long@hp.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Douglas Hatch <doug.hatch@hp.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Scott J Norton <scott.norton@hp.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1431367031-36697-1-git-send-email-Waiman.Long@hp.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 191a66353b22fad8ac89404ab4c929cbe7b0afb2
Merge: f5d6a52 f21262b
Author: Ingo Molnar <mingo@kernel.org>
Date:   Mon May 11 16:05:09 2015 +0200

    Merge branch 'x86/asm' into x86/apic, to resolve a conflict
    
    Conflicts:
    	arch/x86/kernel/apic/io_apic.c
    	arch/x86/kernel/apic/vector.c
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 62c7a1e9ae54ef66658df9614bdbc09cbbdaa6f0
Author: Ingo Molnar <mingo@kernel.org>
Date:   Mon May 11 09:47:23 2015 +0200

    locking/pvqspinlock: Rename QUEUED_SPINLOCK to QUEUED_SPINLOCKS
    
    Valentin Rothberg reported that we use CONFIG_QUEUED_SPINLOCKS
    in arch/x86/kernel/paravirt_patch_32.c, while the symbol is
    called CONFIG_QUEUED_SPINLOCK. (Note the extra 'S')
    
    But the typo was natural: the proper English term for such
    a generic object would be 'queued spinlocks' - so rename
    this and related symbols accordingly to the plural form.
    
    Reported-by: Valentin Rothberg <valentinrothberg@gmail.com>
    Cc: Douglas Hatch <doug.hatch@hp.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Scott J Norton <scott.norton@hp.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Waiman Long <Waiman.Long@hp.com>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit cad14bb9f8ef8bed42c3118adc0d9756e2aeeaa1
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri May 8 13:25:26 2015 +0300

    x86/kconfig: Fix the CONFIG_NR_CPUS description
    
    Since:
    
      b53b5eda8194 ("x86/cpu: Increase max CPU count to 8192")
    
    ... the maximum supported NR_CPUS for CPUMASK_OFFSTACK case
    is 8192. Let's adjust the description to reflect the change.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1431080726-2490-1-git-send-email-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit c5c19941ad1bb18f010ae47f1db333c00b276d55
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri May 8 13:25:45 2015 +0300

    x86/kconfig: Bump default NR_CPUS from 8 to 64 for 64-bit configuration
    
    Default NR_CPUS==8 is not enough to cover high-end desktop
    configuration: Haswell-E has upto 16 threads.
    
    Let's increase default NR_CPUS to 64 on 64-bit configuration.
    With this value CPU bitmask will still fit into one unsigned long.
    
    Default for 32-bit configuration is still 8: it's unlikely
    anybody will run 32-bit kernels on modern hardware.
    
    As an alternative we could bump NR_CPUS to 128 to cover all
    dual-processor servers with some margin.
    
    For reference: Debian and Suse build their kernels with
    NR_CPUS==512, Fedora -- 1024.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1431080745-19792-1-git-send-email-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit f233f7f1581e78fd9b4023f2e7d8c1ed89020cc9
Author: Peter Zijlstra (Intel) <peterz@infradead.org>
Date:   Fri Apr 24 14:56:38 2015 -0400

    locking/pvqspinlock, x86: Implement the paravirt qspinlock call patching
    
    We use the regular paravirt call patching to switch between:
    
      native_queued_spin_lock_slowpath()	__pv_queued_spin_lock_slowpath()
      native_queued_spin_unlock()		__pv_queued_spin_unlock()
    
    We use a callee saved call for the unlock function which reduces the
    i-cache footprint and allows 'inlining' of SPIN_UNLOCK functions
    again.
    
    We further optimize the unlock path by patching the direct call with a
    "movb $0,%arg1" if we are indeed using the native unlock code. This
    makes the unlock code almost as fast as the !PARAVIRT case.
    
    This significantly lowers the overhead of having
    CONFIG_PARAVIRT_SPINLOCKS enabled, even for native code.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Waiman Long <Waiman.Long@hp.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Daniel J Blueman <daniel@numascale.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Douglas Hatch <doug.hatch@hp.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Paolo Bonzini <paolo.bonzini@gmail.com>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Scott J Norton <scott.norton@hp.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: virtualization@lists.linux-foundation.org
    Cc: xen-devel@lists.xenproject.org
    Link: http://lkml.kernel.org/r/1429901803-29771-10-git-send-email-Waiman.Long@hp.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit d73a33973f16ab6703e75ea00edee857afa3406e
Author: Waiman Long <Waiman.Long@hp.com>
Date:   Fri Apr 24 14:56:31 2015 -0400

    locking/qspinlock, x86: Enable x86-64 to use queued spinlocks
    
    This patch makes the necessary changes at the x86 architecture
    specific layer to enable the use of queued spinlocks for x86-64. As
    x86-32 machines are typically not multi-socket. The benefit of queue
    spinlock may not be apparent. So queued spinlocks are not enabled.
    
    Currently, there is some incompatibilities between the para-virtualized
    spinlock code (which hard-codes the use of ticket spinlock) and the
    queued spinlocks. Therefore, the use of queued spinlocks is disabled
    when the para-virtualized spinlock is enabled.
    
    The arch/x86/include/asm/qspinlock.h header file includes some x86
    specific optimization which will make the queueds spinlock code
    perform better than the generic implementation.
    
    Signed-off-by: Waiman Long <Waiman.Long@hp.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Daniel J Blueman <daniel@numascale.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Douglas Hatch <doug.hatch@hp.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Paolo Bonzini <paolo.bonzini@gmail.com>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Scott J Norton <scott.norton@hp.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: virtualization@lists.linux-foundation.org
    Cc: xen-devel@lists.xenproject.org
    Link: http://lkml.kernel.org/r/1429901803-29771-3-git-send-email-Waiman.Long@hp.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 1222e564cf4394af0b3c5e8a73330b20862c068b
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed May 6 06:23:59 2015 +0200

    x86/platform/uv: Make SGI UV dependent on CONFIG_PCI
    
    Recent PCI changes stopped exporting PCI constants if !CONFIG_PCI,
    which made the UV build fail:
    
      arch/x86/kernel/apic/x2apic_uv_x.c:843:16: error: ‘PCI_VGA_STATE_CHANGE_BRIDGE’ undeclared (first use in this function)
      arch/x86/kernel/apic/x2apic_uv_x.c:1023:2: error: implicit declaration of function ‘pci_register_set_vga_state’ [-Werror=implicit-function-declaration]
    
    As it's unlikely that an UV bootup will get far without PCI
    enumeration, make the platform Kconfig switch (CONFIG_X86_UV)
    depend on CONFIG_PCI=y.
    
    Cc: Robin Holt <holt@sgi.com>
    Cc: Dimitri Sivanich <sivanich@sgi.com>
    Cc: Russ Anderson <rja@sgi.com>
    Cc: Mike Travis <travis@sgi.com>
    Cc: Jack Steiner <steiner@sgi.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 19e3d60d49f05a9de0ef06c60703f31d4acd5f17
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Mon May 4 17:58:01 2015 +0200

    x86: Let x2APIC support depend on interrupt remapping or guest support
    
    We are able to use x2APIC mode in the absence of interrupt remapping on
    certain hypervisors. So it is fine to disable IRQ_REMAP without having
    to give up x2APIC support.
    
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Link: http://lkml.kernel.org/r/55479709.4030901@siemens.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 836ee4874e201a5907f9658fb2bf3527dd952d30
Merge: fb65d87 7676fa7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Apr 24 08:23:45 2015 -0700

    Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux
    
    Pull initial ACPI support for arm64 from Will Deacon:
     "This series introduces preliminary ACPI 5.1 support to the arm64
      kernel using the "hardware reduced" profile.  We don't support any
      peripherals yet, so it's fairly limited in scope:
    
       - MEMORY init (UEFI)
    
       - ACPI discovery (RSDP via UEFI)
    
       - CPU init (FADT)
    
       - GIC init (MADT)
    
       - SMP boot (MADT + PSCI)
    
       - ACPI Kconfig options (dependent on EXPERT)
    
      ACPI for arm64 has been in development for a while now and hardware
      has been available that can boot with either FDT or ACPI tables.  This
      has been made possible by both changes to the ACPI spec to cater for
      ARM-based machines (known as "hardware-reduced" in ACPI parlance) but
      also a Linaro-driven effort to get this supported on top of the Linux
      kernel.  This pull request is the result of that work.
    
      These changes allow us to initialise the CPUs, interrupt controller,
      and timers via ACPI tables, with memory information and cmdline coming
      from EFI.  We don't support a hybrid ACPI/FDT scheme.  Of course,
      there is still plenty of work to do (a serial console would be nice!)
      but I expect that to happen on a per-driver basis after this core
      series has been merged.
    
      Anyway, the diff stat here is fairly horrible, but splitting this up
      and merging it via all the different subsystems would have been
      extremely painful.  Instead, we've got all the relevant Acks in place
      and I've not seen anything other than trivial (Kconfig) conflicts in
      -next (for completeness, I've included my resolution below).  Nearly
      half of the insertions fall under Documentation/.
    
      So, we'll see how this goes.  Right now, it all depends on EXPERT and
      I fully expect people to use FDT by default for the immediate future"
    
    * tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux: (31 commits)
      ARM64 / ACPI: make acpi_map_gic_cpu_interface() as void function
      ARM64 / ACPI: Ignore the return error value of acpi_map_gic_cpu_interface()
      ARM64 / ACPI: fix usage of acpi_map_gic_cpu_interface
      ARM64: kernel: acpi: honour acpi=force command line parameter
      ARM64: kernel: acpi: refactor ACPI tables init and checks
      ARM64: kernel: psci: let ACPI probe PSCI version
      ARM64: kernel: psci: factor out probe function
      ACPI: move arm64 GSI IRQ model to generic GSI IRQ layer
      ARM64 / ACPI: Don't unflatten device tree if acpi=force is passed
      ARM64 / ACPI: additions of ACPI documentation for arm64
      Documentation: ACPI for ARM64
      ARM64 / ACPI: Enable ARM64 in Kconfig
      XEN / ACPI: Make XEN ACPI depend on X86
      ARM64 / ACPI: Select ACPI_REDUCED_HARDWARE_ONLY if ACPI is enabled on ARM64
      clocksource / arch_timer: Parse GTDT to initialize arch timer
      irqchip: Add GICv2 specific ACPI boot support
      ARM64 / ACPI: Introduce ACPI_IRQ_MODEL_GIC and register device's gsi
      ACPI / processor: Make it possible to get CPU hardware ID via GICC
      ACPI / processor: Introduce phys_cpuid_t for CPU hardware ID
      ARM64 / ACPI: Parse MADT for SMP initialization
      ...

commit baac16952635445addaf397bad74e847db821d6d
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Tue Apr 14 10:29:44 2015 +0800

    x86/irq: Remove GENERIC_IRQ_LEGACY_ALLOC_HWIRQ
    
    There's no user of irq_alloc_hwirqs(), irq_alloc_hwirq(),
    irq_free_hwirqs() and irq_free_hwirq() in x86 anymore, so remove
    GENERIC_IRQ_LEGACY_ALLOC_HWIRQ and related code.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: David Cohen <david.a.cohen@linux.intel.com>
    Cc: Sander Eikelenboom <linux@eikelenboom.it>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dimitri Sivanich <sivanich@sgi.com>
    Link: http://lkml.kernel.org/r/1428978610-28986-8-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 52f518a3a7c2f80551a38d38be28bc9f335e713c
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Mon Apr 13 14:11:35 2015 +0800

    x86/MSI: Use hierarchical irqdomains to manage MSI interrupts
    
    Enhance MSI code to support hierarchical irqdomains, it helps to make
    the architecture more clear.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: David Cohen <david.a.cohen@linux.intel.com>
    Cc: Sander Eikelenboom <linux@eikelenboom.it>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: iommu@lists.linux-foundation.org
    Cc: Joerg Roedel <jroedel@suse.de>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dimitri Sivanich <sivanich@sgi.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Link: http://lkml.kernel.org/r/1428905519-23704-14-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit b5dc8e6c21e7ffba0246bf39cea97805c142bf85
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Mon Apr 13 14:11:24 2015 +0800

    x86/irq: Use hierarchical irqdomain to manage CPU interrupt vectors
    
    Abstract CPU local APIC as an interrupt controller and create an
    irqdomain for it to manage CPU interrupt vectors. It's the base to
    enable hierarchical irqdomains on x86 systems.
    
    The final irqdomain hierarchy will look like this:
    
    IOAPIC domain    ----|
    MSI/MSI-x domain ----> [Interrupt Remapping domain] -> CPU vector domain
    HPET_IRQ domain  ----|                                         ^
                                                                   |
    DMAR domain      ----------------------------------------------|
    HT_IRQ domain    ----------------------------------------------|
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: David Cohen <david.a.cohen@linux.intel.com>
    Cc: Sander Eikelenboom <linux@eikelenboom.it>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Prarit Bhargava <prarit@redhat.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dimitri Sivanich <sivanich@sgi.com>
    Cc: Grant Likely <grant.likely@linaro.org>
    Link: http://lkml.kernel.org/r/1428905519-23704-3-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 34a984f7b0cc6355a1e0c184251d0d4cc86f44d2
Merge: 90d1c08 4c1eaa2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Apr 18 11:42:49 2015 -0400

    Merge branch 'x86-pmem-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull PMEM driver from Ingo Molnar:
     "This is the initial support for the pmem block device driver:
      persistent non-volatile memory space mapped into the system's physical
      memory space as large physical memory regions.
    
      The driver is based on Intel code, written by Ross Zwisler, with fixes
      by Boaz Harrosh, integrated with x86 e820 memory resource management
      and tidied up by Christoph Hellwig.
    
      Note that there were two other separate pmem driver submissions to
      lkml: but apparently all parties (Ross Zwisler, Boaz Harrosh) are
      reasonably happy with this initial version.
    
      This version enables minimal support that enables persistent memory
      devices out in the wild to work as block devices, identified through a
      magic (non-standard) e820 flag and auto-discovered if
      CONFIG_X86_PMEM_LEGACY=y, or added explicitly through manipulating the
      memory maps via the "memmap=..." boot option with the new, special '!'
      modifier character.
    
      Limitations: this is a regular block device, and since the pmem areas
      are not struct page backed, they are invisible to the rest of the
      system (other than the block IO device), so direct IO to/from pmem
      areas, direct mmap() or XIP is not possible yet.  The page cache will
      also shadow and double buffer pmem contents, etc.
    
      Initial support is for x86"
    
    * 'x86-pmem-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      drivers/block/pmem: Fix 32-bit build warning in pmem_alloc()
      drivers/block/pmem: Add a driver for persistent memory
      x86/mm: Add support for the non-standard protected e820 type

commit 90d1c087861dcc3d1175993fc03492c137fd21bb
Merge: 96b90f2 a6dfa12
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Apr 18 11:31:11 2015 -0400

    Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 fixes from Ingo Molnar:
     "This tree includes:
    
       - an FPU related crash fix
    
       - a ptrace fix (with matching testcase in tools/testing/selftests/)
    
       - an x86 Kconfig DMA-config defaults tweak to better avoid
         non-working drivers"
    
    * 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      config: Enable NEED_DMA_MAP_STATE by default when SWIOTLB is selected
      x86/fpu: Load xsave pointer *after* initialization
      x86/ptrace: Fix the TIF_FORCED_TF logic in handle_signal()
      x86, selftests: Add single_step_syscall test

commit a6dfa128ce5c414ab46b1d690f7a1b8decb8526d
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Fri Apr 17 15:04:48 2015 -0400

    config: Enable NEED_DMA_MAP_STATE by default when SWIOTLB is selected
    
    A huge amount of NIC drivers use the DMA API, however if
    compiled under 32-bit an very important part of the DMA API can
    be ommitted leading to the drivers not working at all
    (especially if used with 'swiotlb=force iommu=soft').
    
    As Prashant Sreedharan explains it: "the driver [tg3] uses
    DEFINE_DMA_UNMAP_ADDR(), dma_unmap_addr_set() to keep a copy of
    the dma "mapping" and dma_unmap_addr() to get the "mapping"
    value. On most of the platforms this is a no-op, but ... with
    "iommu=soft and swiotlb=force" this house keeping is required,
    ... otherwise we pass 0 while calling pci_unmap_/pci_dma_sync_
    instead of the DMA address."
    
    As such enable this even when using 32-bit kernels.
    
    Reported-by: Ian Jackson <Ian.Jackson@eu.citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Acked-by: David S. Miller <davem@davemloft.net>
    Acked-by: Prashant Sreedharan <prashant@broadcom.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Michael Chan <mchan@broadcom.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: boris.ostrovsky@oracle.com
    Cc: cascardo@linux.vnet.ibm.com
    Cc: david.vrabel@citrix.com
    Cc: sanjeevb@broadcom.com
    Cc: siva.kallam@broadcom.com
    Cc: vyasevich@gmail.com
    Cc: xen-devel@lists.xensource.com
    Link: http://lkml.kernel.org/r/20150417190448.GA9462@l.oracle.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 4a20799d11f64e6b8725cacc7619b1ae1dbf9acd
Author: Vladimir Murzin <vladimir.murzin@arm.com>
Date:   Tue Apr 14 15:48:27 2015 -0700

    mm: move memtest under mm
    
    Memtest is a simple feature which fills the memory with a given set of
    patterns and validates memory contents, if bad memory regions is detected
    it reserves them via memblock API.  Since memblock API is widely used by
    other architectures this feature can be enabled outside of x86 world.
    
    This patch set promotes memtest to live under generic mm umbrella and
    enables memtest feature for arm/arm64.
    
    It was reported that this patch set was useful for tracking down an issue
    with some errant DMA on an arm64 platform.
    
    This patch (of 6):
    
    There is nothing platform dependent in the core memtest code, so other
    platforms might benefit from this feature too.
    
    [linux@roeck-us.net: MEMTEST depends on MEMBLOCK]
    Signed-off-by: Vladimir Murzin <vladimir.murzin@arm.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Mark Rutland <mark.rutland@arm.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Russell King <rmk@arm.linux.org.uk>
    Cc: Paul Bolle <pebolle@tiscali.nl>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit d1fd836dcf00d2028c700c7e44d2c23404062c90
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Apr 14 15:48:07 2015 -0700

    mm: split ET_DYN ASLR from mmap ASLR
    
    This fixes the "offset2lib" weakness in ASLR for arm, arm64, mips,
    powerpc, and x86.  The problem is that if there is a leak of ASLR from
    the executable (ET_DYN), it means a leak of shared library offset as
    well (mmap), and vice versa.  Further details and a PoC of this attack
    is available here:
    
      http://cybersecurity.upv.es/attacks/offset2lib/offset2lib.html
    
    With this patch, a PIE linked executable (ET_DYN) has its own ASLR
    region:
    
      $ ./show_mmaps_pie
      54859ccd6000-54859ccd7000 r-xp  ...  /tmp/show_mmaps_pie
      54859ced6000-54859ced7000 r--p  ...  /tmp/show_mmaps_pie
      54859ced7000-54859ced8000 rw-p  ...  /tmp/show_mmaps_pie
      7f75be764000-7f75be91f000 r-xp  ...  /lib/x86_64-linux-gnu/libc.so.6
      7f75be91f000-7f75beb1f000 ---p  ...  /lib/x86_64-linux-gnu/libc.so.6
      7f75beb1f000-7f75beb23000 r--p  ...  /lib/x86_64-linux-gnu/libc.so.6
      7f75beb23000-7f75beb25000 rw-p  ...  /lib/x86_64-linux-gnu/libc.so.6
      7f75beb25000-7f75beb2a000 rw-p  ...
      7f75beb2a000-7f75beb4d000 r-xp  ...  /lib64/ld-linux-x86-64.so.2
      7f75bed45000-7f75bed46000 rw-p  ...
      7f75bed46000-7f75bed47000 r-xp  ...
      7f75bed47000-7f75bed4c000 rw-p  ...
      7f75bed4c000-7f75bed4d000 r--p  ...  /lib64/ld-linux-x86-64.so.2
      7f75bed4d000-7f75bed4e000 rw-p  ...  /lib64/ld-linux-x86-64.so.2
      7f75bed4e000-7f75bed4f000 rw-p  ...
      7fffb3741000-7fffb3762000 rw-p  ...  [stack]
      7fffb377b000-7fffb377d000 r--p  ...  [vvar]
      7fffb377d000-7fffb377f000 r-xp  ...  [vdso]
    
    The change is to add a call the newly created arch_mmap_rnd() into the
    ELF loader for handling ET_DYN ASLR in a separate region from mmap ASLR,
    as was already done on s390.  Removes CONFIG_BINFMT_ELF_RANDOMIZE_PIE,
    which is no longer needed.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reported-by: Hector Marco-Gisbert <hecmargi@upv.es>
    Cc: Russell King <linux@arm.linux.org.uk>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: "David A. Long" <dave.long@linaro.org>
    Cc: Andrey Ryabinin <a.ryabinin@samsung.com>
    Cc: Arun Chandran <achandran@mvista.com>
    Cc: Yann Droneaud <ydroneaud@opteya.com>
    Cc: Min-Hua Chen <orca.chen@gmail.com>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Markos Chandras <markos.chandras@imgtec.com>
    Cc: Vineeth Vijayan <vvijayan@mvista.com>
    Cc: Jeff Bailey <jeffbailey@google.com>
    Cc: Michael Holzheu <holzheu@linux.vnet.ibm.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Cc: Behan Webster <behanw@converseincode.com>
    Cc: Ismael Ripoll <iripoll@upv.es>
    Cc: Jan-Simon Mller <dl9pf@gmx.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 2b68f6caeac271620cd2f9362aeaed360e317df0
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Apr 14 15:48:00 2015 -0700

    mm: expose arch_mmap_rnd when available
    
    When an architecture fully supports randomizing the ELF load location,
    a per-arch mmap_rnd() function is used to find a randomized mmap base.
    In preparation for randomizing the location of ET_DYN binaries
    separately from mmap, this renames and exports these functions as
    arch_mmap_rnd(). Additionally introduces CONFIG_ARCH_HAS_ELF_RANDOMIZE
    for describing this feature on architectures that support it
    (which is a superset of ARCH_BINFMT_ELF_RANDOMIZE_PIE, since s390
    already supports a separated ET_DYN ASLR from mmap ASLR without the
    ARCH_BINFMT_ELF_RANDOMIZE_PIE logic).
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Hector Marco-Gisbert <hecmargi@upv.es>
    Cc: Russell King <linux@arm.linux.org.uk>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: "David A. Long" <dave.long@linaro.org>
    Cc: Andrey Ryabinin <a.ryabinin@samsung.com>
    Cc: Arun Chandran <achandran@mvista.com>
    Cc: Yann Droneaud <ydroneaud@opteya.com>
    Cc: Min-Hua Chen <orca.chen@gmail.com>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Markos Chandras <markos.chandras@imgtec.com>
    Cc: Vineeth Vijayan <vvijayan@mvista.com>
    Cc: Jeff Bailey <jeffbailey@google.com>
    Cc: Michael Holzheu <holzheu@linux.vnet.ibm.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Cc: Behan Webster <behanw@converseincode.com>
    Cc: Ismael Ripoll <iripoll@upv.es>
    Cc: Jan-Simon Mller <dl9pf@gmx.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 6b6378355b925050eb6fa966742d8c2d65ff0d83
Author: Toshi Kani <toshi.kani@hp.com>
Date:   Tue Apr 14 15:47:32 2015 -0700

    x86, mm: support huge KVA mappings on x86
    
    Implement huge KVA mapping interfaces on x86.
    
    On x86, MTRRs can override PAT memory types with a 4KB granularity.  When
    using a huge page, MTRRs can override the memory type of the huge page,
    which may lead a performance penalty.  The processor can also behave in an
    undefined manner if a huge page is mapped to a memory range that MTRRs
    have mapped with multiple different memory types.  Therefore, the mapping
    code falls back to use a smaller page size toward 4KB when a mapping range
    is covered by non-WB type of MTRRs.  The WB type of MTRRs has no affect on
    the PAT memory types.
    
    pud_set_huge() and pmd_set_huge() call mtrr_type_lookup() to see if a
    given range is covered by MTRRs.  MTRR_TYPE_WRBACK indicates that the
    range is either covered by WB or not covered and the MTRR default value is
    set to WB.  0xFF indicates that MTRRs are disabled.
    
    HAVE_ARCH_HUGE_VMAP is selected when X86_64 or X86_32 with X86_PAE is set.
     X86_32 without X86_PAE is not supported since such config can unlikey be
    benefited from this feature, and there was an issue found in testing.
    
    [fengguang.wu@intel.com: ioremap_pud_capable can be static]
    Signed-off-by: Toshi Kani <toshi.kani@hp.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Robert Elliott <Elliott@hp.com>
    Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 982333683385343d8d2db9a1df69c98406f42687
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Tue Apr 14 15:46:14 2015 -0700

    x86: expose number of page table levels on Kconfig level
    
    We would want to use number of page table level to define mm_struct.
    Let's expose it as CONFIG_PGTABLE_LEVELS.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 6cf78d4b3766bcd25348d72377796f9566ac8e1a
Merge: 0ad5c6b 4e26d11f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Apr 13 12:31:32 2015 -0800

    Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 mm changes from Ingo Molnar:
     "The main changes in this cycle were:
    
       - reduce the x86/32 PAE per task PGD allocation overhead from 4K to
         0.032k (Fenghua Yu)
    
       - early_ioremap/memunmap() usage cleanups (Juergen Gross)
    
       - gbpages support cleanups (Luis R Rodriguez)
    
       - improve AMD Bulldozer (family 0x15) ASLR I$ aliasing workaround to
         increase randomization by 3 bits (per bootup) (Hector
         Marco-Gisbert)
    
       - misc fixlets"
    
    * 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/mm: Improve AMD Bulldozer ASLR workaround
      x86/mm/pat: Initialize __cachemode2pte_tbl[] and __pte2cachemode_tbl[] in a bit more readable fashion
      init.h: Clean up the __setup()/early_param() macros
      x86/mm: Simplify probe_page_size_mask()
      x86/mm: Further simplify 1 GB kernel linear mappings handling
      x86/mm: Use early_param_on_off() for direct_gbpages
      init.h: Add early_param_on_off()
      x86/mm: Simplify enabling direct_gbpages
      x86/mm: Use IS_ENABLED() for direct_gbpages
      x86/mm: Unexport set_memory_ro() and set_memory_rw()
      x86/mm, efi: Use early_ioremap() in arch/x86/platform/efi/efi-bgrt.c
      x86/mm: Use early_memunmap() instead of early_iounmap()
      x86/mm/pat: Ensure different messages in STRICT_DEVMEM and PAT cases
      x86/mm: Reduce PAE-mode per task pgd allocation overhead from 4K to 32 bytes

commit ec776ef6bbe1734c29cd6bd05219cd93b2731bd4
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Apr 1 09:12:18 2015 +0200

    x86/mm: Add support for the non-standard protected e820 type
    
    Various recent BIOSes support NVDIMMs or ADR using a
    non-standard e820 memory type, and Intel supplied reference
    Linux code using this type to various vendors.
    
    Wire this e820 table type up to export platform devices for the
    pmem driver so that we can use it in Linux.
    
    Based on earlier work from:
    
       Dave Jiang <dave.jiang@intel.com>
       Dan Williams <dan.j.williams@intel.com>
    
    Includes fixes for NUMA regions from Boaz Harrosh.
    
    Tested-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Boaz Harrosh <boaz@plexistor.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Keith Busch <keith.busch@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matthew Wilcox <willy@linux.intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-nvdimm@ml01.01.org
    Link: http://lkml.kernel.org/r/1427872339-6688-2-git-send-email-hch@lst.de
    [ Minor cleanups. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 6e0a0ea12962a2175a9f47621f9fe7a4c866cb12
Author: Graeme Gregory <graeme.gregory@linaro.org>
Date:   Tue Mar 24 14:02:39 2015 +0000

    ACPI / sleep: Introduce CONFIG_ACPI_SYSTEM_POWER_STATES_SUPPORT
    
    ACPI 5.1 does not currently support S states for ARM64 hardware but
    ACPI code will call acpi_target_system_state() and acpi_sleep_init()
    for device power management, so introduce
    CONFIG_ACPI_SYSTEM_POWER_STATES_SUPPORT and select it for x86 and
    ia64 only to make sleep functions available, and also introduce stub
    function to allow other drivers to function until S states are defined
    for ARM64.
    
    It will be no functional change for x86 and IA64.
    
    Suggested-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Graeme Gregory <graeme.gregory@linaro.org>
    Signed-off-by: Tomasz Nowicki <tomasz.nowicki@linaro.org>
    Signed-off-by: Hanjun Guo <hanjun.guo@linaro.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>

commit d8eb8940417559808fdd0180a4d50f8f0281b822
Author: Borislav Petkov <bp@suse.de>
Date:   Fri Mar 13 14:04:37 2015 +0100

    x86/kexec: Cleanup KEXEC_VERIFY_SIG Kconfig help text
    
    Fix typos and also make it simpler without losing the gist of what it says.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vivek Goyal <vgoyal@redhat.com>
    Link: http://lkml.kernel.org/r/1426251877-11415-1-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 56544d29c3a0e383c0d819fefc9570b2803db193
Merge: 9261dc1 9eccca0
Author: Ingo Molnar <mingo@kernel.org>
Date:   Fri Mar 13 14:20:46 2015 +0100

    Merge tag 'v4.0-rc3' into x86/build, to refresh an older tree before applying new changes
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 9ab6eb51ef4ad63cb71533d3a4dfb09ea8f69b4c
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Mar 5 17:24:04 2015 +0200

    x86/intel/quark: Select COMMON_CLK
    
    The commit 8bbc2a135b63 ("x86/intel/quark: Add Intel Quark
    platform support") introduced a minimal support of Intel Quark
    SoC. That allows to use core parts of the SoC. However, the SPI,
    I2C, and GPIO drivers can't be selected by kernel configuration
    because they depend on COMMON_CLK. The patch adds a COMMON_CLK
    selection to the platfrom definition to allow user choose the drivers.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Ong, Boon Leong <boon.leong.ong@intel.com>
    Cc: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Cc: Darren Hart <dvhart@linux.intel.com>
    Fixes: 8bbc2a135b63 ("x86/intel/quark: Add Intel Quark platform support")
    Link: http://lkml.kernel.org/r/1425569044-2867-1-git-send-email-andriy.shevchenko@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 10971ab269bbf22120edac95fcfa3c873a549bea
Author: Ingo Molnar <mingo@kernel.org>
Date:   Thu Mar 5 08:18:23 2015 +0100

    x86/mm: Further simplify 1 GB kernel linear mappings handling
    
    It's a bit pointless to allow Kconfig configuration for 1GB kernel
    mappings, it's already hidden behind a 'default y' and CONFIG_EXPERT.
    
    Remove this complication and simplify the code by renaming
    CONFIG_ENABLE_DIRECT_GBPAGES to CONFIG_X86_DIRECT_GBPAGES and
    document the DEBUG_PAGE_ALLOC and KMEMCHECK quirks.
    
    Cc: Luis R. Rodriguez <mcgrof@suse.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Dexuan Cui <decui@microsoft.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: JBeulich@suse.com
    Cc: Jan Beulich <JBeulich@suse.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Lindgren <tony@atomide.com>
    Cc: Toshi Kani <toshi.kani@hp.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Xishi Qiu <qiuxishi@huawei.com>
    Cc: julia.lawall@lip6.fr
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit e5008abe929c160d36e44b8c2b644d4330d2e389
Author: Luis R. Rodriguez <mcgrof@suse.com>
Date:   Wed Mar 4 17:24:12 2015 -0800

    x86/mm: Simplify enabling direct_gbpages
    
    direct_gbpages can be force enabled as an early parameter
    but not really have taken effect when DEBUG_PAGEALLOC
    or KMEMCHECK is enabled. You can also enable direct_gbpages
    right now if you have an x86_64 architecture but your CPU
    doesn't really have support for this feature. In both cases
    PG_LEVEL_1G won't actually be enabled but direct_gbpages is used
    in other areas under the assumptions that PG_LEVEL_1G
    was set. Fix this by putting together all requirements
    which make this feature sensible to enable under, and only
    enable both finally flipping on PG_LEVEL_1G and leaving
    PG_LEVEL_1G set when this is true.
    
    We only enable this feature then to be possible on sensible
    builds defined by the new ENABLE_DIRECT_GBPAGES. If the
    CPU has support for it you can either enable this by using
    the DIRECT_GBPAGES option or using the early kernel parameter.
    If a platform had support for this you can always force disable
    it as well.
    
    Signed-off-by: Luis R. Rodriguez <mcgrof@suse.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Dexuan Cui <decui@microsoft.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: JBeulich@suse.com
    Cc: Jan Beulich <JBeulich@suse.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Lindgren <tony@atomide.com>
    Cc: Toshi Kani <toshi.kani@hp.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Xishi Qiu <qiuxishi@huawei.com>
    Cc: julia.lawall@lip6.fr
    Link: http://lkml.kernel.org/r/1425518654-3403-3-git-send-email-mcgrof@do-not-panic.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit f9677375b0c07e39c78b43aab9fb2c253a4b50c2
Merge: f3c233d c11a25f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Feb 21 11:12:07 2015 -0800

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull Intel Quark SoC support from Ingo Molnar:
     "This adds support for Intel Quark X1000 SoC boards, used in the low
      power 32-bit x86 Intel Galileo microcontroller board intended for the
      Arduino space.
    
      There's been some preparatory core x86 patches for Quark CPU quirks
      merged already, but this rounds it all up and adds Kconfig enablement.
      It's a clean hardware enablement addition tree at this point"
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/intel/quark: Fix simple_return.cocci warnings
      x86/intel/quark: Fix ptr_ret.cocci warnings
      x86/intel/quark: Add Intel Quark platform support
      x86/intel/quark: Add Isolated Memory Regions for Quark X1000

commit 8bbc2a135b63bee6b41fa90f415521a97995a49f
Author: Bryan O'Donoghue <pure.logic@nexus-software.ie>
Date:   Fri Jan 30 16:29:39 2015 +0000

    x86/intel/quark: Add Intel Quark platform support
    
    Add Intel Quark platform support. Quark needs to pull down all
    unlocked IMRs to ensure agreement with the EFI memory map post
    boot.
    
    This patch adds an entry in Kconfig for Quark as a platform and
    makes IMR support mandatory if selected.
    
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Suggested-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Tested-by: Ong, Boon Leong <boon.leong.ong@intel.com>
    Signed-off-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Reviewed-by: Andy Shevchenko <andy.schevchenko@gmail.com>
    Reviewed-by: Darren Hart <dvhart@linux.intel.com>
    Reviewed-by: Ong, Boon Leong <boon.leong.ong@intel.com>
    Cc: dvhart@infradead.org
    Link: http://lkml.kernel.org/r/1422635379-12476-3-git-send-email-pure.logic@nexus-software.ie
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 50849eefea3ba8aa6e540e0cbdc9533098f25656
Author: Jan Beulich <JBeulich@suse.com>
Date:   Thu Feb 5 15:31:56 2015 +0000

    x86/Kconfig: Simplify X86_UP_APIC handling
    
    We don't really need a helper symbol for that. For one, it's
    pointlessly getting set to Y for all configurations (even 64-bit
    ones). And then the purpose can be fulfilled by suitably
    adjusting X86_UP_APIC: Hide its prompt when PCI_MSI, and default
    it to PCI_MSI.
    
    Tested-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Link: http://lkml.kernel.org/r/54D39AFC020000780005D684@mail.emea.novell.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit b1da1e715d4faf01468b7f45f7098922bc85ea8e
Author: Jan Beulich <JBeulich@suse.com>
Date:   Thu Feb 5 15:35:21 2015 +0000

    x86/Kconfig: Simplify X86_IO_APIC dependencies
    
    Since dependencies are transitive, we don't really need to
    repeat those of X86_UP_IOAPIC.
    
    Furthermore avoid the symbol getting entered into .config when
    it is off by having the default simply Y and the dependencies
    solely handled via the intended for that purpose "depends on".
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Link: http://lkml.kernel.org/r/54D39BC9020000780005D688@mail.emea.novell.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit e0fd24a3b4ad7b4084b41944835952eedec53f98
Author: Jan Beulich <JBeulich@suse.com>
Date:   Thu Feb 5 15:39:34 2015 +0000

    x86/Kconfig: Avoid issuing pointless turned off entries to .config
    
    Settings without prompts shouldn't normally have defaults other
    than Y, as otherwise they (a) needlessly enlarge the resulting
    .config and (b) if they ever get a prompt added later, the
    tracked setting of off will prevent the devloper from then being
    prompted for his/her choice when doing an incremental update of
    the configuration (make oldconfig).
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Link: http://lkml.kernel.org/r/54D39CC6020000780005D6AE@mail.emea.novell.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit ef7f0d6a6ca8c9e4b27d78895af86c2fbfaeedb2
Author: Andrey Ryabinin <a.ryabinin@samsung.com>
Date:   Fri Feb 13 14:39:25 2015 -0800

    x86_64: add KASan support
    
    This patch adds arch specific code for kernel address sanitizer.
    
    16TB of virtual addressed used for shadow memory.  It's located in range
    [ffffec0000000000 - fffffc0000000000] between vmemmap and %esp fixup
    stacks.
    
    At early stage we map whole shadow region with zero page.  Latter, after
    pages mapped to direct mapping address range we unmap zero pages from
    corresponding shadow (see kasan_map_shadow()) and allocate and map a real
    shadow memory reusing vmemmap_populate() function.
    
    Also replace __pa with __pa_nodebug before shadow initialized.  __pa with
    CONFIG_DEBUG_VIRTUAL=y make external function call (__phys_addr)
    __phys_addr is instrumented, so __asan_load could be called before shadow
    area initialized.
    
    Signed-off-by: Andrey Ryabinin <a.ryabinin@samsung.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Konstantin Serebryany <kcc@google.com>
    Cc: Dmitry Chernenkov <dmitryc@google.com>
    Signed-off-by: Andrey Konovalov <adech.fo@gmail.com>
    Cc: Yuri Gribov <tetra2005@gmail.com>
    Cc: Konstantin Khlebnikov <koct9i@gmail.com>
    Cc: Sasha Levin <sasha.levin@oracle.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Jim Davis <jim.epost@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 1d9c5d79e6e4385aea6f69c23ba543717434ed70
Merge: 870fd0f f638f4d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Feb 10 18:35:40 2015 -0800

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/livepatching
    
    Pull live patching infrastructure from Jiri Kosina:
     "Let me provide a bit of history first, before describing what is in
      this pile.
    
      Originally, there was kSplice as a standalone project that implemented
      stop_machine()-based patching for the linux kernel.  This project got
      later acquired, and the current owner is providing live patching as a
      proprietary service, without any intentions to have their
      implementation merged.
    
      Then, due to rising user/customer demand, both Red Hat and SUSE
      started working on their own implementation (not knowing about each
      other), and announced first versions roughly at the same time [1] [2].
    
      The principle difference between the two solutions is how they are
      making sure that the patching is performed in a consistent way when it
      comes to different execution threads with respect to the semantic
      nature of the change that is being introduced.
    
      In a nutshell, kPatch is issuing stop_machine(), then looking at
      stacks of all existing processess, and if it decides that the system
      is in a state that can be patched safely, it proceeds insterting code
      redirection machinery to the patched functions.
    
      On the other hand, kGraft provides a per-thread consistency during one
      single pass of a process through the kernel and performs a lazy
      contignuous migration of threads from "unpatched" universe to the
      "patched" one at safe checkpoints.
    
      If interested in a more detailed discussion about the consistency
      models and its possible combinations, please see the thread that
      evolved around [3].
    
      It pretty quickly became obvious to the interested parties that it's
      absolutely impractical in this case to have several isolated solutions
      for one task to co-exist in the kernel.  During a dedicated Live
      Kernel Patching track at LPC in Dusseldorf, all the interested parties
      sat together and came up with a joint aproach that would work for both
      distro vendors.  Steven Rostedt took notes [4] from this meeting.
    
      And the foundation for that aproach is what's present in this pull
      request.
    
      It provides a basic infrastructure for function "live patching" (i.e.
      code redirection), including API for kernel modules containing the
      actual patches, and API/ABI for userspace to be able to operate on the
      patches (look up what patches are applied, enable/disable them, etc).
    
      It's relatively simple and minimalistic, as it's making use of
      existing kernel infrastructure (namely ftrace) as much as possible.
      It's also self-contained, in a sense that it doesn't hook itself in
      any other kernel subsystem (it doesn't even touch any other code).
      It's now implemented for x86 only as a reference architecture, but
      support for powerpc, s390 and arm is already in the works (adding
      arch-specific support basically boils down to teaching ftrace about
      regs-saving).
    
      Once this common infrastructure gets merged, both Red Hat and SUSE
      have agreed to immediately start porting their current solutions on
      top of this, abandoning their out-of-tree code.  The plan basically is
      that each patch will be marked by flag(s) that would indicate which
      consistency model it is willing to use (again, the details have been
      sketched out already in the thread at [3]).
    
      Before this happens, the current codebase can be used to patch a large
      group of secruity/stability problems the patches for which are not too
      complex (in a sense that they don't introduce non-trivial change of
      function's return value semantics, they don't change layout of data
      structures, etc) -- this corresponds to LEAVE_FUNCTION &&
      SWITCH_FUNCTION semantics described at [3].
    
      This tree has been in linux-next since December.
    
        [1] https://lkml.org/lkml/2014/4/30/477
        [2] https://lkml.org/lkml/2014/7/14/857
        [3] https://lkml.org/lkml/2014/11/7/354
        [4] http://linuxplumbersconf.org/2014/wp-content/uploads/2014/10/LPC2014_LivePatching.txt
    
      [ The core code is introduced by the three commits authored by Seth
        Jennings, which got a lot of changes incorporated during numerous
        respins and reviews of the initial implementation.  All the followup
        commits have materialized only after public tree has been created,
        so they were not folded into initial three commits so that the
        public tree doesn't get rebased ]"
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/livepatching:
      livepatch: add missing newline to error message
      livepatch: rename config to CONFIG_LIVEPATCH
      livepatch: fix uninitialized return value
      livepatch: support for repatching a function
      livepatch: enforce patch stacking semantics
      livepatch: change ARCH_HAVE_LIVE_PATCHING to HAVE_LIVE_PATCHING
      livepatch: fix deferred module patching order
      livepatch: handle ancient compilers with more grace
      livepatch: kconfig: use bool instead of boolean
      livepatch: samples: fix usage example comments
      livepatch: MAINTAINERS: add git tree location
      livepatch: use FTRACE_OPS_FL_IPMODIFY
      livepatch: move x86 specific ftrace handler code to arch/x86
      livepatch: samples: add sample live patching module
      livepatch: kernel: add support for live patching
      livepatch: kernel: add TAINT_LIVEPATCH

commit 872912352c5be930e9568e5f3b6d73107d9f278d
Merge: c08f8467 b5e8223
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Feb 10 15:09:41 2015 -0800

    Merge tag 'pm+acpi-3.20-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
    
    Pull ACPI and power management updates from Rafael Wysocki:
     "We have a few new features this time, including a new SFI-based
      cpufreq driver, a new devfreq driver for Tegra Activity Monitor, a new
      devfreq class for providing its governors with raw utilization data
      and a new ACPI driver for AMD SoCs.
    
      Still, the majority of changes here are reworks of existing code to
      make it more straightforward or to prepare it for implementing new
      features on top of it.  The primary example is the rework of ACPI
      resources handling from Jiang Liu, Thomas Gleixner and Lv Zheng with
      support for IOAPIC hotplug implemented on top of it, but there is
      quite a number of changes of this kind in the cpufreq core, ACPICA,
      ACPI EC driver, ACPI processor driver and the generic power domains
      core code too.
    
      The most active developer is Viresh Kumar with his cpufreq changes.
    
      Specifics:
    
       - Rework of the core ACPI resources parsing code to fix issues in it
         and make using resource offsets more convenient and consolidation
         of some resource-handing code in a couple of places that have grown
         analagous data structures and code to cover the the same gap in the
         core (Jiang Liu, Thomas Gleixner, Lv Zheng).
    
       - ACPI-based IOAPIC hotplug support on top of the resources handling
         rework (Jiang Liu, Yinghai Lu).
    
       - ACPICA update to upstream release 20150204 including an interrupt
         handling rework that allows drivers to install raw handlers for
         ACPI GPEs which then become entirely responsible for the given GPE
         and the ACPICA core code won't touch it (Lv Zheng, David E Box,
         Octavian Purdila).
    
       - ACPI EC driver rework to fix several concurrency issues and other
         problems related to events handling on top of the ACPICA's new
         support for raw GPE handlers (Lv Zheng).
    
       - New ACPI driver for AMD SoCs analogous to the LPSS (Low-Power
         Subsystem) driver for Intel chips (Ken Xue).
    
       - Two minor fixes of the ACPI LPSS driver (Heikki Krogerus, Jarkko
         Nikula).
    
       - Two new blacklist entries for machines (Samsung 730U3E/740U3E and
         510R) where the native backlight interface doesn't work correctly
         while the ACPI one does (Hans de Goede).
    
       - Rework of the ACPI processor driver's handling of idle states to
         make the code more straightforward and less bloated overall (Rafael
         J Wysocki).
    
       - Assorted minor fixes related to ACPI and SFI (Andreas Ruprecht,
         Andy Shevchenko, Hanjun Guo, Jan Beulich, Rafael J Wysocki, Yaowei
         Bai).
    
       - PCI core power management modification to avoid resuming (some)
         runtime-suspended devices during system suspend if they are in the
         right states already (Rafael J Wysocki).
    
       - New SFI-based cpufreq driver for Intel platforms using SFI
         (Srinidhi Kasagar).
    
       - cpufreq core fixes, cleanups and simplifications (Viresh Kumar,
         Doug Anderson, Wolfram Sang).
    
       - SkyLake CPU support and other updates for the intel_pstate driver
         (Kristen Carlson Accardi, Srinivas Pandruvada).
    
       - cpufreq-dt driver cleanup (Markus Elfring).
    
       - Init fix for the ARM big.LITTLE cpuidle driver (Sudeep Holla).
    
       - Generic power domains core code fixes and cleanups (Ulf Hansson).
    
       - Operating Performance Points (OPP) core code cleanups and kernel
         documentation update (Nishanth Menon).
    
       - New dabugfs interface to make the list of PM QoS constraints
         available to user space (Nishanth Menon).
    
       - New devfreq driver for Tegra Activity Monitor (Tomeu Vizoso).
    
       - New devfreq class (devfreq_event) to provide raw utilization data
         to devfreq governors (Chanwoo Choi).
    
       - Assorted minor fixes and cleanups related to power management
         (Andreas Ruprecht, Krzysztof Kozlowski, Rickard Strandqvist, Pavel
         Machek, Todd E Brandt, Wonhong Kwon).
    
       - turbostat updates (Len Brown) and cpupower Makefile improvement
         (Sriram Raghunathan)"
    
    * tag 'pm+acpi-3.20-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (151 commits)
      tools/power turbostat: relax dependency on APERF_MSR
      tools/power turbostat: relax dependency on invariant TSC
      Merge branch 'pci/host-generic' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci into acpi-resources
      tools/power turbostat: decode MSR_*_PERF_LIMIT_REASONS
      tools/power turbostat: relax dependency on root permission
      ACPI / video: Add disable_native_backlight quirk for Samsung 510R
      ACPI / PM: Remove unneeded nested #ifdef
      USB / PM: Remove unneeded #ifdef and associated dead code
      intel_pstate: provide option to only use intel_pstate with HWP
      ACPI / EC: Add GPE reference counting debugging messages
      ACPI / EC: Add query flushing support
      ACPI / EC: Refine command storm prevention support
      ACPI / EC: Add command flushing support.
      ACPI / EC: Introduce STARTED/STOPPED flags to replace BLOCKED flag
      ACPI: add AMD ACPI2Platform device support for x86 system
      ACPI / table: remove duplicate NULL check for the handler of acpi_table_parse()
      ACPI / EC: Update revision due to raw handler mode.
      ACPI / EC: Reduce ec_poll() by referencing the last register access timestamp.
      ACPI / EC: Fix several GPE handling issues by deploying ACPI_GPE_DISPATCH_RAW_HANDLER mode.
      ACPICA: Events: Enable APIs to allow interrupt/polling adaptive request based GPE handling model
      ...

commit 9d43bade347143b96671b38a7f81c39a81206675
Merge: 0ba97bc ba360f887
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Feb 9 16:57:56 2015 -0800

    Merge branch 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 APIC updates from Ingo Molnar:
     "Continued fallout of the conversion of the x86 IRQ code to the
      hierarchical irqdomain framework: more cleanups, simplifications,
      memory allocation behavior enhancements, mainly in the interrupt
      remapping and APIC code"
    
    * 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (44 commits)
      x86, init: Fix UP boot regression on x86_64
      iommu/amd: Fix irq remapping detection logic
      x86/acpi: Make acpi_[un]register_gsi_ioapic() depend on CONFIG_X86_LOCAL_APIC
      x86: Consolidate boot cpu timer setup
      x86/apic: Reuse apic_bsp_setup() for UP APIC setup
      x86/smpboot: Sanitize uniprocessor init
      x86/smpboot: Move apic init code to apic.c
      init: Get rid of x86isms
      x86/apic: Move apic_init_uniprocessor code
      x86/smpboot: Cleanup ioapic handling
      x86/apic: Sanitize ioapic handling
      x86/ioapic: Add proper checks to setp/enable_IO_APIC()
      x86/ioapic: Provide stub functions for IOAPIC%3Dn
      x86/smpboot: Move smpboot inlines to code
      x86/x2apic: Use state information for disable
      x86/x2apic: Split enable and setup function
      x86/x2apic: Disable x2apic from nox2apic setup
      x86/x2apic: Add proper state tracking
      x86/x2apic: Clarify remapping mode for x2apic enablement
      x86/x2apic: Move code in conditional region
      ...

commit 23e8fe2e16587494268510c1bc9f6952f50f0311
Merge: 30d4682 f490282
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Feb 9 14:28:42 2015 -0800

    Merge branch 'core-rcu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull RCU updates from Ingo Molnar:
     "The main RCU changes in this cycle are:
    
       - Documentation updates.
    
       - Miscellaneous fixes.
    
       - Preemptible-RCU fixes, including fixing an old bug in the
         interaction of RCU priority boosting and CPU hotplug.
    
       - SRCU updates.
    
       - RCU CPU stall-warning updates.
    
       - RCU torture-test updates"
    
    * 'core-rcu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (54 commits)
      rcu: Initialize tiny RCU stall-warning timeouts at boot
      rcu: Fix RCU CPU stall detection in tiny implementation
      rcu: Add GP-kthread-starvation checks to CPU stall warnings
      rcu: Make cond_resched_rcu_qs() apply to normal RCU flavors
      rcu: Optionally run grace-period kthreads at real-time priority
      ksoftirqd: Use new cond_resched_rcu_qs() function
      ksoftirqd: Enable IRQs and call cond_resched() before poking RCU
      rcutorture: Add more diagnostics in rcu_barrier() test failure case
      torture: Flag console.log file to prevent holdovers from earlier runs
      torture: Add "-enable-kvm -soundhw pcspk" to qemu command line
      rcutorture: Handle different mpstat versions
      rcutorture: Check from beginning to end of grace period
      rcu: Remove redundant rcu_batches_completed() declaration
      rcutorture: Drop rcu_torture_completed() and friends
      rcu: Provide rcu_batches_completed_sched() for TINY_RCU
      rcutorture: Use unsigned for Reader Batch computations
      rcutorture: Make build-output parsing correctly flag RCU's warnings
      rcu: Make _batches_completed() functions return unsigned long
      rcutorture: Issue warnings on close calls due to Reader Batch blows
      documentation: Fix smp typo in memory-barriers.txt
      ...

commit 92082a8886f30a1c492a31ac4b5a4966bb64b1a6
Author: Ken Xue <Ken.Xue@amd.com>
Date:   Fri Feb 6 08:27:51 2015 +0800

    ACPI: add AMD ACPI2Platform device support for x86 system
    
    This new feature is to interpret AMD specific ACPI device to
    platform device such as I2C, UART, GPIO found on AMD CZ and
    later chipsets. It based on example intel LPSS. Now, it can
    support AMD I2C, UART and GPIO.
    
    Signed-off-by: Ken Xue <Ken.Xue@amd.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

commit 12cf89b550d13eb7cb86ef182bd6c04345a33a1f
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Tue Feb 3 16:45:18 2015 -0600

    livepatch: rename config to CONFIG_LIVEPATCH
    
    Rename CONFIG_LIVE_PATCHING to CONFIG_LIVEPATCH to make the naming of
    the config and the code more consistent.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Reviewed-by: Jingoo Han <jg1.han@samsung.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit ba360f887a4130b06c55eb93bcb4ae373b262a1c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Jan 24 10:34:46 2015 +0100

    x86, init: Fix UP boot regression on x86_64
    
    Commit 30b8b0066caf "init: Get rid of x86isms" broke the UP boot on
    x86_64. That happens because CONFIG_UP_LATE_INIT depends on
    CONFIG_X86_UP_APIC. X86_UP_APIC is a 32bit only config switch and
    therefor not set on 64bit UP builds. As a consequence the UP init of
    the local APIC and the IOAPIC is not called, which results in a boot
    failure.
    
    Make it depend on !SMP && X86_LOCAL_APIC instead.
    
    Fixes: 30b8b0066caf init: Get rid of x86isms
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 38a1dfda8e77d7ba74c94d06d8bc41ba98a4bc8c
Author: Bryan O'Donoghue <pure.logic@nexus-software.ie>
Date:   Thu Jan 22 22:58:49 2015 +0000

    x86/apic: Re-enable PCI_MSI support for non-SMP X86_32
    
    Commit 0dbc6078c06bc0 ('x86, build, pci: Fix PCI_MSI build on !SMP')
    introduced the dependency that X86_UP_APIC is only available when
    PCI_MSI is false. This effectively prevents PCI_MSI support on 32bit
    UP systems because it disables both APIC and IO-APIC. But APIC support
    is architecturally required for PCI_MSI.
    
    The intention of the patch was to enforce APIC support when PCI_MSI is
    enabled, but failed to do so.
    
    Remove the !PCI_MSI dependency from X86_UP_APIC and enforce
    X86_UP_APIC when PCI_MSI support is enabled on 32bit UP systems.
    
    [ tglx: Massaged changelog ]
    
    Fixes 0dbc6078c06bc0 'x86, build, pci: Fix PCI_MSI build on !SMP'
    Signed-off-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/1421967529-9037-1-git-send-email-pure.logic@nexus-software.ie
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 30b8b0066cafef274fc92462578ee346211ce7cb
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 15 21:22:39 2015 +0000

    init: Get rid of x86isms
    
    The UP local API support can be set up from an early initcall. No need
    for horrible hackery in the init code.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jiang Liu <jiang.liu@linux.intel.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Link: http://lkml.kernel.org/r/20150115211703.827943883@linutronix.de
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 32b7eb877165fdb29f1722071c6c64ced1789014
Author: Miroslav Benes <mbenes@suse.cz>
Date:   Tue Jan 20 12:49:35 2015 +0100

    livepatch: change ARCH_HAVE_LIVE_PATCHING to HAVE_LIVE_PATCHING
    
    Change ARCH_HAVE_LIVE_PATCHING to HAVE_LIVE_PATCHING in Kconfigs. HAVE_
    bools are prevalent there and we should go with the flow.
    
    Suggested-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Miroslav Benes <mbenes@suse.cz>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit 83fe27ea531161a655f02dc7732d14cfaa27fd5d
Author: Pranith Kumar <bobby.prani@gmail.com>
Date:   Fri Dec 5 11:24:45 2014 -0500

    rcu: Make SRCU optional by using CONFIG_SRCU
    
    SRCU is not necessary to be compiled by default in all cases. For tinification
    efforts not compiling SRCU unless necessary is desirable.
    
    The current patch tries to make compiling SRCU optional by introducing a new
    Kconfig option CONFIG_SRCU which is selected when any of the components making
    use of SRCU are selected.
    
    If we do not select CONFIG_SRCU, srcu.o will not be compiled at all.
    
       text    data     bss     dec     hex filename
       2007       0       0    2007     7d7 kernel/rcu/srcu.o
    
    Size of arch/powerpc/boot/zImage changes from
    
       text    data     bss     dec     hex filename
     831552   64180   23944  919676   e087c arch/powerpc/boot/zImage : before
     829504   64180   23952  917636   e0084 arch/powerpc/boot/zImage : after
    
    so the savings are about ~2000 bytes.
    
    Signed-off-by: Pranith Kumar <bobby.prani@gmail.com>
    CC: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    CC: Josh Triplett <josh@joshtriplett.org>
    CC: Lai Jiangshan <laijs@cn.fujitsu.com>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    [ paulmck: resolve conflict due to removal of arch/ia64/kvm/Kconfig. ]

commit b700e7f03df5d92f85fa5247fe1f557528d3363d
Author: Seth Jennings <sjenning@redhat.com>
Date:   Tue Dec 16 11:58:19 2014 -0600

    livepatch: kernel: add support for live patching
    
    This commit introduces code for the live patching core.  It implements
    an ftrace-based mechanism and kernel interface for doing live patching
    of kernel and kernel module functions.
    
    It represents the greatest common functionality set between kpatch and
    kgraft and can accept patches built using either method.
    
    This first version does not implement any consistency mechanism that
    ensures that old and new code do not run together.  In practice, ~90% of
    CVEs are safe to apply in this way, since they simply add a conditional
    check.  However, any function change that can not execute safely with
    the old version of the function can _not_ be safely applied in this
    version.
    
    [ jkosina@suse.cz: due to the number of contributions that got folded into
      this original patch from Seth Jennings, add SUSE's copyright as well, as
      discussed via e-mail ]
    
    Signed-off-by: Seth Jennings <sjenning@redhat.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Reviewed-by: Miroslav Benes <mbenes@suse.cz>
    Reviewed-by: Petr Mladek <pmladek@suse.cz>
    Reviewed-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Signed-off-by: Miroslav Benes <mbenes@suse.cz>
    Signed-off-by: Petr Mladek <pmladek@suse.cz>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit e589c9e13aeb0c5539bf1314b3a78442ea8fc0c2
Merge: 4bb9374 719b530
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Dec 19 14:02:02 2014 -0800

    Merge branch 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 apic updates from Thomas Gleixner:
     "After stopping the full x86/apic branch, I took some time to go
      through the first block of patches again, which are mostly cleanups
      and preparatory work for the irqdomain conversion and ioapic hotplug
      support.
    
      Unfortunaly one of the real problematic commits was right at the
      beginning, so I rebased this portion of the pending patches without
      the offenders.
    
      It would be great to get this into 3.19.  That makes reworking the
      problematic parts simpler.  The usual tip testing did not unearth any
      issues and it is fully bisectible now.
    
      I'm pretty confident that this wont affect the calmness of the xmas
      season.
    
      Changes:
       - Split the convoluted io_apic.c code into domain specific parts
         (vector, ioapic, msi, htirq)
       - Introduce proper helper functions to retrieve irq specific data
         instead of open coded dereferencing of pointers
       - Preparatory work for ioapic hotplug and irqdomain conversion
       - Removal of the non functional pci-ioapic driver
       - Removal of unused irq entry stubs
       - Make native_smp_prepare_cpus() preemtible to avoid GFP_ATOMIC
         allocations for everything which is called from there.
       - Small cleanups and fixes"
    
    * 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (36 commits)
      iommu/amd: Use helpers to access irq_cfg data structure associated with IRQ
      iommu/vt-d: Use helpers to access irq_cfg data structure associated with IRQ
      x86: irq_remapping: Use helpers to access irq_cfg data structure associated with IRQ
      x86, irq: Use helpers to access irq_cfg data structure associated with IRQ
      x86, irq: Make MSI and HT_IRQ indepenent of X86_IO_APIC
      x86, irq: Move IRQ initialization routines from io_apic.c into vector.c
      x86, irq: Move IOAPIC related declarations from hw_irq.h into io_apic.h
      x86, irq: Move HT IRQ related code from io_apic.c into htirq.c
      x86, irq: Move PCI MSI related code from io_apic.c into msi.c
      x86, irq: Replace printk(KERN_LVL) with pr_lvl() utilities
      x86, irq: Make UP version of irq_complete_move() an inline stub
      x86, irq: Move local APIC related code from io_apic.c into vector.c
      x86, irq: Introduce helpers to access struct irq_cfg
      x86, irq: Protect __clear_irq_vector() with vector_lock
      x86, irq: Rename local APIC related functions in io_apic.c as apic_xxx()
      x86, irq: Refine hw_irq.h to prepare for irqdomain support
      x86, irq: Convert irq_2_pin list to generic list
      x86, irq: Kill useless parameter 'irq_attr' of IO_APIC_get_PCI_irq_vector()
      x86, irq, acpi: Get rid of special handling of GSI for ACPI SCI
      x86, irq: Introduce helper to check whether an IOAPIC has been registered
      ...

commit a54455766b9e3d3c27a6cef758355d2591d81d68
Merge: 1092b59 72e9b5f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Dec 19 13:22:42 2014 -0800

    Merge branch 'x86-mpx-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 MPX fixes from Thomas Gleixner:
     "Three updates for the new MPX infrastructure:
       - Use the proper error check in the trap handler
       - Add a proper config option for it
       - Bring documentation up to date"
    
    * 'x86-mpx-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, mpx: Give MPX a real config option prompt
      x86, mpx: Update documentation
      x86_64/traps: Fix always true condition

commit 2f600025d38f8c4e7debdeae9b80b7df498c22be
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Mon Oct 27 16:12:06 2014 +0800

    x86, irq: Make MSI and HT_IRQ indepenent of X86_IO_APIC
    
    Now we have splitted functions to support MSI and HT_IRQ into vector.c,
    and they have no dependency on IOAPIC any more. So change Kconfig files
    to make MSI and HT_IRQ independent of X86_IO_APIC.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Link: http://lkml.kernel.org/r/1414397531-28254-16-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 74afab7af7d9aeba86b3b8e39670cf7d0058f6df
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Mon Oct 27 16:12:00 2014 +0800

    x86, irq: Move local APIC related code from io_apic.c into vector.c
    
    Create arch/x86/kernel/apic/vector.c to host local APIC related code,
    prepare for making MSI/HT_IRQ independent of IOAPIC.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Prarit Bhargava <prarit@redhat.com>
    Cc: Grant Likely <grant.likely@linaro.org>
    Link: http://lkml.kernel.org/r/1414397531-28254-10-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 72e9b5fe9bee0826e7ce7599adbdc64e544780ef
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Dec 12 10:38:36 2014 -0800

    x86, mpx: Give MPX a real config option prompt
    
    Give MPX a real config option. The CPUs that support it (referenced
    here):
    
      https://software.intel.com/en-us/forums/topic/402393
    
    are not available publicly yet. Right now only the software emulator
    provides MPX for the general public.
    
    [ tglx: Make it default off. There is no point in having it on right
            now as no hardware and no proper tooling support are available ]
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Dave Hansen <dave@sr71.net>
    Link: http://lkml.kernel.org/r/20141212183836.2569D58D@viggo.jf.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 957e3facd147510f2cf8780e38606f1d707f0e33
Author: Riku Voipio <riku.voipio@linaro.org>
Date:   Fri Dec 12 16:57:44 2014 -0800

    gcov: enable GCOV_PROFILE_ALL from ARCH Kconfigs
    
    Following the suggestions from Andrew Morton and Stephen Rothwell,
    Dont expand the ARCH list in kernel/gcov/Kconfig. Instead,
    define a ARCH_HAS_GCOV_PROFILE_ALL bool which architectures
    can enable.
    
    set ARCH_HAS_GCOV_PROFILE_ALL on Architectures where it was
    previously allowed + ARM64 which I tested.
    
    Signed-off-by: Riku Voipio <riku.voipio@linaro.org>
    Cc: Peter Oberparleiter <oberpar@linux.vnet.ibm.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 3100e448e7d74489a96cb7b45d88fe6962774eaa
Merge: c9f861c 2689310
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Dec 10 14:24:20 2014 -0800

    Merge branch 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 vdso updates from Ingo Molnar:
     "Various vDSO updates from Andy Lutomirski, mostly cleanups and
      reorganization to improve maintainability, but also some
      micro-optimizations and robustization changes"
    
    * 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86_64/vsyscall: Restore orig_ax after vsyscall seccomp
      x86_64: Add a comment explaining the TASK_SIZE_MAX guard page
      x86_64,vsyscall: Make vsyscall emulation configurable
      x86_64, vsyscall: Rewrite comment and clean up headers in vsyscall code
      x86_64, vsyscall: Turn vsyscalls all the way off when vsyscall==none
      x86,vdso: Use LSL unconditionally for vgetcpu
      x86: vdso: Fix build with older gcc
      x86_64/vdso: Clean up vgetcpu init and merge the vdso initcalls
      x86_64/vdso: Remove jiffies from the vvar page
      x86/vdso: Make the PER_CPU segment 32 bits
      x86/vdso: Make the PER_CPU segment start out accessed
      x86/vdso: Change the PER_CPU segment to use struct desc_struct
      x86_64/vdso: Move getcpu code from vsyscall_64.c to vdso/vma.c
      x86_64/vsyscall: Move all of the gate_area code to vsyscall_64.c

commit 3eb5b893ebec7325ac9e6b8e4864af89a9ca1ed1
Merge: 9e66645 9f7789f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Dec 10 09:34:43 2014 -0800

    Merge branch 'x86-mpx-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 MPX support from Thomas Gleixner:
     "This enables support for x86 MPX.
    
      MPX is a new debug feature for bound checking in user space.  It
      requires kernel support to handle the bound tables and decode the
      bound violating instruction in the trap handler"
    
    * 'x86-mpx-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      asm-generic: Remove asm-generic arch_bprm_mm_init()
      mm: Make arch_unmap()/bprm_mm_init() available to all architectures
      x86: Cleanly separate use of asm-generic/mm_hooks.h
      x86 mpx: Change return type of get_reg_offset()
      fs: Do not include mpx.h in exec.c
      x86, mpx: Add documentation on Intel MPX
      x86, mpx: Cleanup unused bound tables
      x86, mpx: On-demand kernel allocation of bounds tables
      x86, mpx: Decode MPX instruction to get bound violation information
      x86, mpx: Add MPX-specific mmap interface
      x86, mpx: Introduce VM_MPX to indicate that a VMA is MPX specific
      x86, mpx: Add MPX to disabled features
      ia64: Sync struct siginfo with general version
      mips: Sync struct siginfo with general version
      mpx: Extend siginfo structure to include bound violation information
      x86, mpx: Rename cfg_reg_u and status_reg
      x86: mpx: Give bndX registers actual names
      x86: Remove arbitrary instruction size limit in instruction decoder

commit 57319d80e1d328e34cb24868a4f4405661485e30
Author: Qiaowei Ren <qiaowei.ren@intel.com>
Date:   Fri Nov 14 07:18:27 2014 -0800

    x86, mpx: Add MPX-specific mmap interface
    
    We have chosen to perform the allocation of bounds tables in
    kernel (See the patch "on-demand kernel allocation of bounds
    tables") and to mark these VMAs with VM_MPX.
    
    However, there is currently no suitable interface to actually do
    this.  Existing interfaces, like do_mmap_pgoff(), have no way to
    set a modified ->vm_ops or ->vm_flags and don't hold mmap_sem
    long enough to let a caller do it.
    
    This patch wraps mmap_region() and hold mmap_sem long enough to
    make the modifications to the VMA which we need.
    
    Also note the 32/64-bit #ifdef in the header.  We actually need
    to do this at runtime eventually.  But, for now, we don't support
    running 32-bit binaries on 64-bit kernels.  Support for this will
    come in later patches.
    
    Signed-off-by: Qiaowei Ren <qiaowei.ren@intel.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: linux-mm@kvack.org
    Cc: linux-mips@linux-mips.org
    Cc: Dave Hansen <dave@sr71.net>
    Link: http://lkml.kernel.org/r/20141114151827.CE440F67@viggo.jf.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit ce5686d4ed12158599d2042a6c8659254ed263ce
Author: Peter Zijlstra (Intel) <peterz@infradead.org>
Date:   Wed Oct 29 11:17:04 2014 +0100

    perf/x86: Fix embarrasing typo
    
    Because we're all human and typing sucks..
    
    Fixes: 7fb0f1de49fc ("perf/x86: Fix compile warnings for intel_uncore")
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: x86@kernel.org
    Link: http://lkml.kernel.org/n/tip-be0bftjh8yfm4uvmvtf3yi87@git.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 1ad83c858c7d4ea210429142c99a1548e6715a35
Author: Andy Lutomirski <luto@amacapital.net>
Date:   Wed Oct 29 14:33:47 2014 -0700

    x86_64,vsyscall: Make vsyscall emulation configurable
    
    This adds CONFIG_X86_VSYSCALL_EMULATION, guarded by CONFIG_EXPERT.
    Turning it off completely disables vsyscall emulation, saving ~3.5k
    for vsyscall_64.c, 4k for vsyscall_emu_64.S (the fake vsyscall
    page), some tiny amount of core mm code that supports a gate area,
    and possibly 4k for a wasted pagetable.  The latter is because the
    vsyscall addresses are misaligned and fit poorly in the fixmap.
    
    Signed-off-by: Andy Lutomirski <luto@amacapital.net>
    Reviewed-by: Josh Triplett <josh@joshtriplett.org>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Link: http://lkml.kernel.org/r/406db88b8dd5f0cbbf38216d11be34bbb43c7eae.1414618407.git.luto@amacapital.net
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 7fb0f1de49fc75a0dcec22531f2d0a79fc2fb625
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Oct 24 09:12:35 2014 +0200

    perf/x86: Fix compile warnings for intel_uncore
    
    The uncore drivers require PCI and generate compile time warnings when
    !CONFIG_PCI.
    
    Reported-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Josh Triplett <josh@joshtriplett.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Yan, Zheng <zheng.z.yan@intel.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit f1bfbd984b4e2177886507b6a0ec5faeb6d7c217
Merge: df133e8 aece118
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Oct 14 02:23:55 2014 +0200

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 platform updates from Ingo Molnar:
     "The main changes in this tree are:
    
       - fix and update Intel Quark [Galileo] SoC platform support
    
       - update IOSF chipset side band interface and make it available via
         debugfs
    
       - enable HPETs on Soekris net6501 and other e6xx based systems"
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86: Add cpu_detect_cache_sizes to init_intel() add Quark legacy_cache()
      x86: Quark: Comment setup_arch() to document TLB/PGE bug
      x86/intel/quark: Switch off CR4.PGE so TLB flush uses CR3 instead
      x86/platform/intel/iosf: Add debugfs config option for IOSF
      x86/platform/intel/iosf: Add better description of IOSF driver in config
      x86/platform/intel/iosf: Add Braswell PCI ID
      x86/platform/pmc_atom: Fix warning when CONFIG_DEBUG_FS=n
      x86: HPET force enable for e6xx based systems
      x86/iosf: Add debugfs support
      x86/iosf: Add Kconfig prompt for IOSF_MBI selection

commit 6a33979d5bd7521497121c5ae4435d7003115a0f
Author: Mel Gorman <mgorman@suse.de>
Date:   Thu Oct 9 15:26:33 2014 -0700

    mm: remove misleading ARCH_USES_NUMA_PROT_NONE
    
    ARCH_USES_NUMA_PROT_NONE was defined for architectures that implemented
    _PAGE_NUMA using _PROT_NONE.  This saved using an additional PTE bit and
    relied on the fact that PROT_NONE vmas were skipped by the NUMA hinting
    fault scanner.  This was found to be conceptually confusing with a lot of
    implicit assumptions and it was asked that an alternative be found.
    
    Commit c46a7c81 "x86: define _PAGE_NUMA by reusing software bits on the
    PMD and PTE levels" redefined _PAGE_NUMA on x86 to be one of the swap PTE
    bits and shrunk the maximum possible swap size but it did not go far
    enough.  There are no architectures that reuse _PROT_NONE as _PROT_NUMA
    but the relics still exist.
    
    This patch removes ARCH_USES_NUMA_PROT_NONE and removes some unnecessary
    duplication in powerpc vs the generic implementation by defining the types
    the core NUMA helpers expected to exist from x86 with their ppc64
    equivalent.  This necessitated that a PTE bit mask be created that
    identified the bits that distinguish present from NUMA pte entries but it
    is expected this will only differ between arches based on _PAGE_PROTNONE.
    The naming for the generic helpers was taken from x86 originally but ppc64
    has types that are equivalent for the purposes of the helper so they are
    mapped instead of duplicating code.
    
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Cyrill Gorcunov <gorcunov@gmail.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 74da38631a874b5a3ffc4ace6f813a975c55130b
Merge: bfe01a5 3cf6b01
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Oct 7 08:51:59 2014 -0400

    Merge tag 'tiny/for-3.18' of git://git.kernel.org/pub/scm/linux/kernel/git/josh/linux
    
    Pull "tinification" patches from Josh Triplett.
    
    Work on making smaller kernels.
    
    * tag 'tiny/for-3.18' of git://git.kernel.org/pub/scm/linux/kernel/git/josh/linux:
      bloat-o-meter: Ignore syscall aliases SyS_ and compat_SyS_
      mm: Support compiling out madvise and fadvise
      x86: Support compiling out human-friendly processor feature names
      x86: Drop support for /proc files when !CONFIG_PROC_FS
      x86, boot: Don't compile early_serial_console.c when !CONFIG_EARLY_PRINTK
      x86, boot: Don't compile aslr.c when !CONFIG_RANDOMIZE_BASE
      x86, boot: Use the usual -y -n mechanism for objects in vmlinux
      x86: Add "make tinyconfig" to configure the tiniest possible kernel
      x86, platform, kconfig: move kvmconfig functionality to a helper

commit ed2226bd4d4a53bcc3b2ea0b1b28e955ebc15da7
Author: David E. Box <david.e.box@linux.intel.com>
Date:   Wed Sep 17 22:13:51 2014 -0700

    x86/platform/intel/iosf: Add debugfs config option for IOSF
    
    Makes the IOSF sideband available through debugfs. Allows
    developers to experiment with using the sideband to provide
    debug and analytical tools for units on the SoC.
    
    Signed-off-by: David E. Box <david.e.box@linux.intel.com>
    Link: http://lkml.kernel.org/r/1411017231-20807-4-git-send-email-david.e.box@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit ced3ce760b8df08e8bafba44f6b40407df2d0402
Author: David E. Box <david.e.box@linux.intel.com>
Date:   Wed Sep 17 22:13:50 2014 -0700

    x86/platform/intel/iosf: Add better description of IOSF driver in config
    
    Adds better description of IOSF driver to determine when it
    should be enabled. Also moves the Kconfig option to "Processor
    type and features" menu from main configuration menu.
    
    Signed-off-by: David E. Box <david.e.box@linux.intel.com>
    Link: http://lkml.kernel.org/r/1411017231-20807-3-git-send-email-david.e.box@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 72d931046030beb2d13dad6d205be0e228618432
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Sep 13 11:14:53 2014 -0700

    Make ARCH_HAS_FAST_MULTIPLIER a real config variable
    
    It used to be an ad-hoc hack defined by the x86 version of
    <asm/bitops.h> that enabled a couple of library routines to know whether
    an integer multiply is faster than repeated shifts and additions.
    
    This just makes it use the real Kconfig system instead, and makes x86
    (which was the only architecture that did this) select the option.
    
    NOTE! Even for x86, this really is kind of wrong.  If we cared, we would
    probably not enable this for builds optimized for netburst (P4), where
    shifts-and-adds are generally faster than multiplies.  This patch does
    *not* change that kind of logic, though, it is purely a syntactic change
    with no code changes.
    
    This was triggered by the fact that we have other places that really
    want to know "do I want to expand multiples by constants by hand or
    not", particularly the hash generation code.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 74ca317c26a3f8543203b61d262c0ab2e30c384e
Author: Vivek Goyal <vgoyal@redhat.com>
Date:   Fri Aug 29 15:18:46 2014 -0700

    kexec: create a new config option CONFIG_KEXEC_FILE for new syscall
    
    Currently new system call kexec_file_load() and all the associated code
    compiles if CONFIG_KEXEC=y.  But new syscall also compiles purgatory
    code which currently uses gcc option -mcmodel=large.  This option seems
    to be available only gcc 4.4 onwards.
    
    Hiding new functionality behind a new config option will not break
    existing users of old gcc.  Those who wish to enable new functionality
    will require new gcc.  Having said that, I am trying to figure out how
    can I move away from using -mcmodel=large but that can take a while.
    
    I think there are other advantages of introducing this new config
    option.  As this option will be enabled only on x86_64, other arches
    don't have to compile generic kexec code which will never be used.  This
    new code selects CRYPTO=y and CRYPTO_SHA256=y.  And all other arches had
    to do this for CONFIG_KEXEC.  Now with introduction of new config
    option, we can remove crypto dependency from other arches.
    
    Now CONFIG_KEXEC_FILE is available only on x86_64.  So whereever I had
    CONFIG_X86_64 defined, I got rid of that.
    
    For CONFIG_KEXEC_FILE, instead of doing select CRYPTO=y, I changed it to
    "depends on CRYPTO=y".  This should be safer as "select" is not
    recursive.
    
    Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
    Cc: Eric Biederman <ebiederm@xmission.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Tested-by: Shaun Ruffell <sruffell@digium.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit aa8e4f22ab7773352ba3895597189b8097f2c307
Author: David E. Box <david.e.box@linux.intel.com>
Date:   Wed Aug 27 14:40:39 2014 -0700

    x86/iosf: Add Kconfig prompt for IOSF_MBI selection
    
    Fixes an error in having the iosf build as 'default m'. On X86 SoC's the iosf
    sideband is the only way to access information for some registers, as opposed to
    through MSR's on other Intel architectures. While selecting IOSF_MBI is
    preferred, it does mean carrying extra code on non-SoC architectures. This
    exports the selection to the user, allowing those driver writers to compile out
    iosf code if it's not being built.
    
    Signed-off-by: David E. Box <david.e.box@linux.intel.com>
    Link: http://lkml.kernel.org/r/1409175640-32426-2-git-send-email-david.e.box@linux.intel.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 9def39be4e960917fcb80514ff23651f9ec97193
Author: Josh Triplett <josh@joshtriplett.org>
Date:   Wed Oct 30 08:09:45 2013 -0700

    x86: Support compiling out human-friendly processor feature names
    
    The table mapping CPUID bits to human-readable strings takes up a
    non-trivial amount of space, and only exists to support /proc/cpuinfo
    and a couple of kernel messages.  Since programs depend on the format of
    /proc/cpuinfo, force inclusion of the table when building with /proc
    support; otherwise, support omitting that table to save space, in which
    case the kernel messages will print features numerically instead.
    
    In addition to saving 1408 bytes out of vmlinux, this also saves 1373
    bytes out of the uncompressed setup code, which contributes directly to
    the size of bzImage.
    
    Signed-off-by: Josh Triplett <josh@joshtriplett.org>

commit 81c02a21b293faecab725f691d709111831e1944
Merge: d27c0d9 3eec595
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Aug 13 18:23:32 2014 -0600

    Merge branch 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86/apic updates from Thomas Gleixner:
     "This is a major overhaul to the x86 apic subsystem consisting of the
      following parts:
    
       - Remove obsolete APIC driver abstractions (David Rientjes)
    
       - Use the irqdomain facilities to dynamically allocate IRQs for
         IOAPICs.  This is a prerequisite to enable IOAPIC hotplug support,
         and it also frees up wasted vectors (Jiang Liu)
    
       - Misc fixlets.
    
      Despite the hickup in Ingos previous pull request - caused by the
      missing fixup for the suspend/resume issue reported by Borislav - I
      strongly recommend that this update finds its way into 3.17.  Some
      history for you:
    
      This is preparatory work for physical IOAPIC hotplug.  The first
      attempt to support this was done by Yinghai and I shot it down because
      it just added another layer of obscurity and complexity to the already
      existing mess without tackling the underlying shortcomings of the
      current implementation.
    
      After quite some on- and offlist discussions, I requested that the
      design of this functionality must use generic infrastructure, i.e.
      irq domains, which provide all the mechanisms to dynamically map linux
      interrupt numbers to physical interrupts.
    
      Jiang picked up the idea and did a great job of consolidating the
      existing interfaces to manage the x86 (IOAPIC) interrupt system by
      utilizing irq domains.
    
      The testing in tip, Linux-next and inside of Intel on various machines
      did not unearth any oddities until Borislav exposed it to one of his
      oddball machines.  The issue was resolved quickly, but unfortunately
      the fix fell through the cracks and did not hit the tip tree before
      Ingo sent the pull request.  Not entirely Ingos fault, I also assumed
      that the fix was already merged when Ingo asked me whether he could
      send it.
    
      Nevertheless this work has a proper design, has undergone several
      rounds of review and the final fallout after applying it to tip and
      integrating it into Linux-next has been more than moderate.  It's the
      ground work not only for IOAPIC hotplug, it will also allow us to move
      the lowlevel vector allocation into the irqdomain hierarchy, which
      will benefit other architectures as well.  Patches are posted already,
      but they are on hold for two weeks, see below.
    
      I really appreciate the competence and responsiveness Jiang has shown
      in course of this endavour.  So I'm sure that any fallout of this will
      be addressed in a timely manner.
    
      FYI, I'm vanishing for 2 weeks into my annual kids summer camp kitchen
      duty^Wvacation, while you folks are drooling at KS/LinuxCon :) But HPA
      will have a look at the hopefully zero fallout until I'm back"
    
    * 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (53 commits)
      x86, irq, PCI: Keep IRQ assignment for PCI devices during suspend/hibernation
      x86/apic/vsmp: Make is_vsmp_box() static
      x86, apic: Remove enable_apic_mode callback
      x86, apic: Remove setup_portio_remap callback
      x86, apic: Remove multi_timer_check callback
      x86, apic: Replace noop_check_apicid_used
      x86, apic: Remove check_apicid_present callback
      x86, apic: Remove mps_oem_check callback
      x86, apic: Remove smp_callin_clear_local_apic callback
      x86, apic: Replace trampoline physical addresses with defaults
      x86, apic: Remove x86_32_numa_cpu_node callback
      x86: intel-mid: Use the new io_apic interfaces
      x86, vsmp: Remove is_vsmp_box() from apic_is_clustered_box()
      x86, irq: Clean up irqdomain transition code
      x86, irq, devicetree: Release IOAPIC pin when PCI device is disabled
      x86, irq, SFI: Release IOAPIC pin when PCI device is disabled
      x86, irq, mpparse: Release IOAPIC pin when PCI device is disabled
      x86, irq, ACPI: Release IOAPIC pin when PCI device is disabled
      x86, irq: Introduce helper functions to release IOAPIC pin
      x86, irq: Simplify the way to handle ISA IRQ
      ...

commit d27c0d90184a13e9e9f28c38e84f889a259f6b5f
Merge: 7453f33 9e13bcf
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Aug 13 18:21:35 2014 -0600

    Merge branch 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86/efix fixes from Peter Anvin:
     "Two EFI-related Kconfig changes, which happen to touch immediately
      adjacent lines in Kconfig and thus collapse to a single patch"
    
    * 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/efi: Enforce CONFIG_RELOCATABLE for EFI boot stub
      x86/efi: Fix 3DNow optimization build failure in EFI stub

commit 9e13bcf7e0981f1db0c8c8255ac17d5f898903e9
Merge: b16d8c2 7b2a583
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Mon Aug 11 13:58:54 2014 -0700

    Merge tag 'efi-urgent' into x86/efi
    
     * Enforce CONFIG_RELOCATABLE for the x86 EFI boot stub, otherwise
       it's possible to overwrite random pieces of unallocated memory during
       kernel decompression, leading to machine resets.
    
    Resolved Conflicts:
    	arch/x86/Kconfig
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 8e7d838103feac320baf9e68d73f954840ac1eea
Author: Vivek Goyal <vgoyal@redhat.com>
Date:   Fri Aug 8 14:26:13 2014 -0700

    kexec: verify the signature of signed PE bzImage
    
    This is the final piece of the puzzle of verifying kernel image signature
    during kexec_file_load() syscall.
    
    This patch calls into PE file routines to verify signature of bzImage.  If
    signature are valid, kexec_file_load() succeeds otherwise it fails.
    
    Two new config options have been introduced.  First one is
    CONFIG_KEXEC_VERIFY_SIG.  This option enforces that kernel has to be
    validly signed otherwise kernel load will fail.  If this option is not
    set, no signature verification will be done.  Only exception will be when
    secureboot is enabled.  In that case signature verification should be
    automatically enforced when secureboot is enabled.  But that will happen
    when secureboot patches are merged.
    
    Second config option is CONFIG_KEXEC_BZIMAGE_VERIFY_SIG.  This option
    enables signature verification support on bzImage.  If this option is not
    set and previous one is set, kernel image loading will fail because kernel
    does not have support to verify signature of bzImage.
    
    I tested these patches with both "pesign" and "sbsign" signed bzImages.
    
    I used signing_key.priv key and signing_key.x509 cert for signing as
    generated during kernel build process (if module signing is enabled).
    
    Used following method to sign bzImage.
    
    pesign
    ======
    - Convert DER format cert to PEM format cert
    openssl x509 -in signing_key.x509 -inform DER -out signing_key.x509.PEM -outform
    PEM
    
    - Generate a .p12 file from existing cert and private key file
    openssl pkcs12 -export -out kernel-key.p12 -inkey signing_key.priv -in
    signing_key.x509.PEM
    
    - Import .p12 file into pesign db
    pk12util -i /tmp/kernel-key.p12 -d /etc/pki/pesign
    
    - Sign bzImage
    pesign -i /boot/vmlinuz-3.16.0-rc3+ -o /boot/vmlinuz-3.16.0-rc3+.signed.pesign
    -c "Glacier signing key - Magrathea" -s
    
    sbsign
    ======
    sbsign --key signing_key.priv --cert signing_key.x509.PEM --output
    /boot/vmlinuz-3.16.0-rc3+.signed.sbsign /boot/vmlinuz-3.16.0-rc3+
    
    Patch details:
    
    Well all the hard work is done in previous patches.  Now bzImage loader
    has just call into that code and verify whether bzImage signature are
    valid or not.
    
    Also create two config options.  First one is CONFIG_KEXEC_VERIFY_SIG.
    This option enforces that kernel has to be validly signed otherwise kernel
    load will fail.  If this option is not set, no signature verification will
    be done.  Only exception will be when secureboot is enabled.  In that case
    signature verification should be automatically enforced when secureboot is
    enabled.  But that will happen when secureboot patches are merged.
    
    Second config option is CONFIG_KEXEC_BZIMAGE_VERIFY_SIG.  This option
    enables signature verification support on bzImage.  If this option is not
    set and previous one is set, kernel image loading will fail because kernel
    does not have support to verify signature of bzImage.
    
    Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Eric Biederman <ebiederm@xmission.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Matthew Garrett <mjg59@srcf.ucam.org>
    Cc: Greg Kroah-Hartman <greg@kroah.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: WANG Chao <chaowang@redhat.com>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Matt Fleming <matt@console-pimps.org>
    Cc: David Howells <dhowells@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 12db5562e0352986a265841638482b84f3a6899b
Author: Vivek Goyal <vgoyal@redhat.com>
Date:   Fri Aug 8 14:26:04 2014 -0700

    kexec: load and relocate purgatory at kernel load time
    
    Load purgatory code in RAM and relocate it based on the location.
    Relocation code has been inspired by module relocation code and purgatory
    relocation code in kexec-tools.
    
    Also compute the checksums of loaded kexec segments and store them in
    purgatory.
    
    Arch independent code provides this functionality so that arch dependent
    bootloaders can make use of it.
    
    Helper functions are provided to get/set symbol values in purgatory which
    are used by bootloaders later to set things like stack and entry point of
    second kernel etc.
    
    Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Eric Biederman <ebiederm@xmission.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Matthew Garrett <mjg59@srcf.ucam.org>
    Cc: Greg Kroah-Hartman <greg@kroah.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: WANG Chao <chaowang@redhat.com>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit de5b56ba51f63973ceb5c184ee0855f0c8a13fc9
Author: Vivek Goyal <vgoyal@redhat.com>
Date:   Fri Aug 8 14:25:41 2014 -0700

    kernel: build bin2c based on config option CONFIG_BUILD_BIN2C
    
    currently bin2c builds only if CONFIG_IKCONFIG=y. But bin2c will now be
    used by kexec too.  So make it compilation dependent on CONFIG_BUILD_BIN2C
    and this config option can be selected by CONFIG_KEXEC and CONFIG_IKCONFIG.
    
    Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Eric Biederman <ebiederm@xmission.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Matthew Garrett <mjg59@srcf.ucam.org>
    Cc: Greg Kroah-Hartman <greg@kroah.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: WANG Chao <chaowang@redhat.com>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 308c09f17da4adc53935115dbeb5bce4f067d8f9
Author: Laura Abbott <lauraa@codeaurora.org>
Date:   Fri Aug 8 14:23:25 2014 -0700

    lib/scatterlist: make ARCH_HAS_SG_CHAIN an actual Kconfig
    
    Rather than have architectures #define ARCH_HAS_SG_CHAIN in an
    architecture specific scatterlist.h, make it a proper Kconfig option and
    use that instead.  At same time, remove the header files are are now
    mostly useless and just include asm-generic/scatterlist.h.
    
    [sfr@canb.auug.org.au: powerpc files now need asm/dma.h]
    Signed-off-by: Laura Abbott <lauraa@codeaurora.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>			[x86]
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>	[powerpc]
    Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: "James E.J. Bottomley" <JBottomley@parallels.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 7725131982477bffff8ffdea143434dcc69f5d90
Merge: 6b22df7 7ef97e0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Aug 6 20:34:19 2014 -0700

    Merge tag 'pm+acpi-3.17-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
    
    Pull ACPI and power management updates from Rafael Wysocki:
     "Again, ACPICA leads the pack (47 commits), followed by cpufreq (18
      commits) and system suspend/hibernation (9 commits).
    
      From the new code perspective, the ACPICA update brings ACPI 5.1 to
      the table, including a new device configuration object called _DSD
      (Device Specific Data) that will hopefully help us to operate device
      properties like Device Trees do (at least to some extent) and changes
      related to supporting ACPI on ARM.
    
      Apart from that we have hibernation changes making it use radix trees
      to store memory bitmaps which should speed up some operations carried
      out by it quite significantly.  We also have some power management
      changes related to suspend-to-idle (the "freeze" sleep state) support
      and more preliminary changes needed to support ACPI on ARM (outside of
      ACPICA).
    
      The rest is fixes and cleanups pretty much everywhere.
    
      Specifics:
    
       - ACPICA update to upstream version 20140724.  That includes ACPI 5.1
         material (support for the _CCA and _DSD predefined names, changes
         related to the DMAR and PCCT tables and ARM support among other
         things) and cleanups related to using ACPICA's header files.  A
         major part of it is related to acpidump and the core code used by
         that utility.  Changes from Bob Moore, David E Box, Lv Zheng,
         Sascha Wildner, Tomasz Nowicki, Hanjun Guo.
    
       - Radix trees for memory bitmaps used by the hibernation core from
         Joerg Roedel.
    
       - Support for waking up the system from suspend-to-idle (also known
         as the "freeze" sleep state) using ACPI-based PCI wakeup signaling
         (Rafael J Wysocki).
    
       - Fixes for issues related to ACPI button events (Rafael J Wysocki).
    
       - New device ID for an ACPI-enumerated device included into the
         Wildcat Point PCH from Jie Yang.
    
       - ACPI video updates related to backlight handling from Hans de Goede
         and Linus Torvalds.
    
       - Preliminary changes needed to support ACPI on ARM from Hanjun Guo
         and Graeme Gregory.
    
       - ACPI PNP core cleanups from Arjun Sreedharan and Zhang Rui.
    
       - Cleanups related to ACPI_COMPANION() and ACPI_HANDLE() macros
         (Rafael J Wysocki).
    
       - ACPI-based device hotplug cleanups from Wei Yongjun and Rafael J
         Wysocki.
    
       - Cleanups and improvements related to system suspend from Lan
         Tianyu, Randy Dunlap and Rafael J Wysocki.
    
       - ACPI battery cleanup from Wei Yongjun.
    
       - cpufreq core fixes from Viresh Kumar.
    
       - Elimination of a deadband effect from the cpufreq ondemand governor
         and intel_pstate driver cleanups from Stratos Karafotis.
    
       - 350MHz CPU support for the powernow-k6 cpufreq driver from Mikulas
         Patocka.
    
       - Fix for the imx6 cpufreq driver from Anson Huang.
    
       - cpuidle core and governor cleanups from Daniel Lezcano, Sandeep
         Tripathy and Mohammad Merajul Islam Molla.
    
       - Build fix for the big_little cpuidle driver from Sachin Kamat.
    
       - Configuration fix for the Operation Performance Points (OPP)
         framework from Mark Brown.
    
       - APM cleanup from Jean Delvare.
    
       - cpupower utility fixes and cleanups from Peter Senna Tschudin,
         Andrey Utkin, Himangi Saraogi, Rickard Strandqvist, Thomas
         Renninger"
    
    * tag 'pm+acpi-3.17-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (118 commits)
      ACPI / LPSS: add LPSS device for Wildcat Point PCH
      ACPI / PNP: Replace faulty is_hex_digit() by isxdigit()
      ACPICA: Update version to 20140724.
      ACPICA: ACPI 5.1: Update for PCCT table changes.
      ACPICA/ARM: ACPI 5.1: Update for GTDT table changes.
      ACPICA/ARM: ACPI 5.1: Update for MADT changes.
      ACPICA/ARM: ACPI 5.1: Update for FADT changes.
      ACPICA: ACPI 5.1: Support for the _CCA predifined name.
      ACPICA: ACPI 5.1: New notify value for System Affinity Update.
      ACPICA: ACPI 5.1: Support for the _DSD predefined name.
      ACPICA: Debug object: Add current value of Timer() to debug line prefix.
      ACPICA: acpihelp: Add UUID support, restructure some existing files.
      ACPICA: Utilities: Fix local printf issue.
      ACPICA: Tables: Update for DMAR table changes.
      ACPICA: Remove some extraneous printf arguments.
      ACPICA: Update for comments/formatting. No functional changes.
      ACPICA: Disassembler: Add support for the ToUUID opererator (macro).
      ACPICA: Remove a redundant cast to acpi_size for ACPI_OFFSET() macro.
      ACPICA: Work around an ancient GCC bug.
      ACPI / processor: Make it possible to get local x2apic id via _MAT
      ...

commit e7fda6c4c3c1a7d6996dd75fd84670fa0b5d448f
Merge: 08d69a2 953dec2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Aug 5 17:46:42 2014 -0700

    Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull timer and time updates from Thomas Gleixner:
     "A rather large update of timers, timekeeping & co
    
       - Core timekeeping code is year-2038 safe now for 32bit machines.
         Now we just need to fix all in kernel users and the gazillion of
         user space interfaces which rely on timespec/timeval :)
    
       - Better cache layout for the timekeeping internal data structures.
    
       - Proper nanosecond based interfaces for in kernel users.
    
       - Tree wide cleanup of code which wants nanoseconds but does hoops
         and loops to convert back and forth from timespecs.  Some of it
         definitely belongs into the ugly code museum.
    
       - Consolidation of the timekeeping interface zoo.
    
       - A fast NMI safe accessor to clock monotonic for tracing.  This is a
         long standing request to support correlated user/kernel space
         traces.  With proper NTP frequency correction it's also suitable
         for correlation of traces accross separate machines.
    
       - Checkpoint/restart support for timerfd.
    
       - A few NOHZ[_FULL] improvements in the [hr]timer code.
    
       - Code move from kernel to kernel/time of all time* related code.
    
       - New clocksource/event drivers from the ARM universe.  I'm really
         impressed that despite an architected timer in the newer chips SoC
         manufacturers insist on inventing new and differently broken SoC
         specific timers.
    
    [ Ed. "Impressed"? I don't think that word means what you think it means ]
    
       - Another round of code move from arch to drivers.  Looks like most
         of the legacy mess in ARM regarding timers is sorted out except for
         a few obnoxious strongholds.
    
       - The usual updates and fixlets all over the place"
    
    * 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (114 commits)
      timekeeping: Fixup typo in update_vsyscall_old definition
      clocksource: document some basic timekeeping concepts
      timekeeping: Use cached ntp_tick_length when accumulating error
      timekeeping: Rework frequency adjustments to work better w/ nohz
      timekeeping: Minor fixup for timespec64->timespec assignment
      ftrace: Provide trace clocks monotonic
      timekeeping: Provide fast and NMI safe access to CLOCK_MONOTONIC
      seqcount: Add raw_write_seqcount_latch()
      seqcount: Provide raw_read_seqcount()
      timekeeping: Use tk_read_base as argument for timekeeping_get_ns()
      timekeeping: Create struct tk_read_base and use it in struct timekeeper
      timekeeping: Restructure the timekeeper some more
      clocksource: Get rid of cycle_last
      clocksource: Move cycle_last validation to core code
      clocksource: Make delta calculation a function
      wireless: ath9k: Get rid of timespec conversions
      drm: vmwgfx: Use nsec based interfaces
      drm: i915: Use nsec based interfaces
      timekeeping: Provide ktime_get_raw()
      hangcheck-timer: Use ktime_get_ns()
      ...

commit 7b2a583afb4ab894f78bc0f8bd136e96b6499a7e
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Fri Jul 11 08:45:25 2014 +0100

    x86/efi: Enforce CONFIG_RELOCATABLE for EFI boot stub
    
    Without CONFIG_RELOCATABLE the early boot code will decompress the
    kernel to LOAD_PHYSICAL_ADDR. While this may have been fine in the BIOS
    days, that isn't going to fly with UEFI since parts of the firmware
    code/data may be located at LOAD_PHYSICAL_ADDR.
    
    Straying outside of the bounds of the regions we've explicitly requested
    from the firmware will cause all sorts of trouble. Bruno reports that
    his machine resets while trying to decompress the kernel image.
    
    We already go to great pains to ensure the kernel is loaded into a
    suitably aligned buffer, it's just that the address isn't necessarily
    LOAD_PHYSICAL_ADDR, because we can't guarantee that address isn't in-use
    by the firmware.
    
    Explicitly enforce CONFIG_RELOCATABLE for the EFI boot stub, so that we
    can load the kernel at any address with the correct alignment.
    
    Reported-by: Bruno Prémont <bonbons@linux-vserver.org>
    Tested-by: Bruno Prémont <bonbons@linux-vserver.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>

commit d782cebd6b39b4caab8a913180c0acfd6c33e9c2
Merge: 8556d44 c3107e3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Aug 4 17:21:59 2014 -0700

    Merge branch 'x86-ras-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull RAS updates from Ingo Molnar:
     "The main changes in this cycle are:
    
       - RAS tracing/events infrastructure, by Gong Chen.
    
       - Various generalizations of the APEI code to make it available to
         non-x86 architectures, by Tomasz Nowicki"
    
    * 'x86-ras-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/ras: Fix build warnings in <linux/aer.h>
      acpi, apei, ghes: Factor out ioremap virtual memory for IRQ and NMI context.
      acpi, apei, ghes: Make NMI error notification to be GHES architecture extension.
      apei, mce: Factor out APEI architecture specific MCE calls.
      RAS, extlog: Adjust init flow
      trace, eMCA: Add a knob to adjust where to save event log
      trace, RAS: Add eMCA trace event interface
      RAS, debugfs: Add debugfs interface for RAS subsystem
      CPER: Adjust code flow of some functions
      x86, MCE: Robustify mcheck_init_device
      trace, AER: Move trace into unified interface
      trace, RAS: Add basic RAS trace event
      x86, MCE: Kill CPU_POST_DEAD

commit 8556d44fee6ded9f4287d7ff7b5cc9d8635b0be0
Merge: ce47479 4c51cb0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Aug 4 17:20:08 2014 -0700

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 platform updates from Ingo Molnar:
     "The main changes in this cycle are:
    
       - Intel SOC driver updates, by Aubrey Li.
    
       - TS5500 platform updates, by Vivien Didelot"
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/pmc_atom: Silence shift wrapping warnings in pmc_sleep_tmr_show()
      x86/pmc_atom: Expose PMC device state and platform sleep state
      x86/pmc_atom: Eisable a few S0ix wake up events for S0ix residency
      x86/platform: New Intel Atom SOC power management controller driver
      x86/platform/ts5500: Add support for TS-5400 boards
      x86/platform/ts5500: Add a 'name' sysfs attribute
      x86/platform/ts5500: Use the DEVICE_ATTR_RO() macro

commit 76f09aa464a1913efd596dd0edbf88f932fde08c
Merge: e9c9eec 99a5603
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Aug 4 17:13:50 2014 -0700

    Merge branch 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull EFI changes from Ingo Molnar:
     "Main changes in this cycle are:
    
       - arm64 efi stub fixes, preservation of FP/SIMD registers across
         firmware calls, and conversion of the EFI stub code into a static
         library - Ard Biesheuvel
    
       - Xen EFI support - Daniel Kiper
    
       - Support for autoloading the efivars driver - Lee, Chun-Yi
    
       - Use the PE/COFF headers in the x86 EFI boot stub to request that
         the stub be loaded with CONFIG_PHYSICAL_ALIGN alignment - Michael
         Brown
    
       - Consolidate all the x86 EFI quirks into one file - Saurabh Tangri
    
       - Additional error logging in x86 EFI boot stub - Ulf Winkelvos
    
       - Support loading initrd above 4G in EFI boot stub - Yinghai Lu
    
       - EFI reboot patches for ACPI hardware reduced platforms"
    
    * 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (31 commits)
      efi/arm64: Handle missing virtual mapping for UEFI System Table
      arch/x86/xen: Silence compiler warnings
      xen: Silence compiler warnings
      x86/efi: Request desired alignment via the PE/COFF headers
      x86/efi: Add better error logging to EFI boot stub
      efi: Autoload efivars
      efi: Update stale locking comment for struct efivars
      arch/x86: Remove efi_set_rtc_mmss()
      arch/x86: Replace plain strings with constants
      xen: Put EFI machinery in place
      xen: Define EFI related stuff
      arch/x86: Remove redundant set_bit(EFI_MEMMAP) call
      arch/x86: Remove redundant set_bit(EFI_SYSTEM_TABLES) call
      efi: Introduce EFI_PARAVIRT flag
      arch/x86: Do not access EFI memory map if it is not available
      efi: Use early_mem*() instead of early_io*()
      arch/ia64: Define early_memunmap()
      x86/reboot: Add EFI reboot quirk for ACPI Hardware Reduced flag
      efi/reboot: Allow powering off machines using EFI
      efi/reboot: Add generic wrapper around EfiResetSystem()
      ...

commit b16d8c231e4d03fefc7de1b8b62bad5659ee8070
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Tue Aug 5 00:12:19 2014 +0100

    x86/efi: Fix 3DNow optimization build failure in EFI stub
    
    Building a 32-bit kernel with CONFIG_X86_USE_3DNOW and CONFIG_EFI_STUB
    leads to the following build error,
    
      drivers/firmware/efi/libstub/lib.a(efi-stub-helper.o): In function `efi_relocate_kernel':
      efi-stub-helper.c:(.text+0xda5): undefined reference to `_mmx_memcpy'
    
    This is due to the fact that the EFI boot stub pulls in the 3DNow
    optimized versions of the memcpy() prototype from
    arch/x86/include/asm/string_32.h, even though the _mmx_memcpy()
    implementation isn't available in the EFI stub.
    
    For now, predicate CONFIG_EFI_STUB on !CONFIG_X86_USE_3DNOW. This is
    most definitely a temporary fix. A complete solution will involve
    selectively including kernel headers/symbols into the early-boot
    execution environment of the EFI boot stub, i.e. something analogous to
    the way that the _SETUP symbol is used.
    
    Previous attempts have been made to fix this kind of problem, though
    none seem to have ever been merged,
    
      http://lkml.kernel.org/r/20120329104822.GA17233@x1.osrc.amd.com
    
    Clearly, this problem has been around for a long time.
    
    Reported-by: Ingo Molnar <mingo@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    Link: http://lkml.kernel.org/r/1407193939-27813-1-git-send-email-matt@console-pimps.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit b8c0aa46b3e86083721b57ed2eec6bd2c29ebfba
Merge: c7ed326 dc6f03f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Aug 4 11:50:00 2014 -0700

    Merge tag 'trace-3.17' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace
    
    Pull tracing updates from Steven Rostedt:
     "This pull request has a lot of work done.  The main thing is the
      changes to the ftrace function callback infrastructure.  It's
      introducing a way to allow different functions to call directly
      different trampolines instead of all calling the same "mcount" one.
    
      The only user of this for now is the function graph tracer, which
      always had a different trampoline, but the function tracer trampoline
      was called and did basically nothing, and then the function graph
      tracer trampoline was called.  The difference now, is that the
      function graph tracer trampoline can be called directly if a function
      is only being traced by the function graph trampoline.  If function
      tracing is also happening on the same function, the old way is still
      done.
    
      The accounting for this takes up more memory when function graph
      tracing is activated, as it needs to keep track of which functions it
      uses.  I have a new way that wont take as much memory, but it's not
      ready yet for this merge window, and will have to wait for the next
      one.
    
      Another big change was the removal of the ftrace_start/stop() calls
      that were used by the suspend/resume code that stopped function
      tracing when entering into suspend and resume paths.  The stop of
      ftrace was done because there was some function that would crash the
      system if one called smp_processor_id()! The stop/start was a big
      hammer to solve the issue at the time, which was when ftrace was first
      introduced into Linux.  Now ftrace has better infrastructure to debug
      such issues, and I found the problem function and labeled it with
      "notrace" and function tracing can now safely be activated all the way
      down into the guts of suspend and resume
    
      Other changes include clean ups of uprobe code, clean up of the
      trace_seq() code, and other various small fixes and clean ups to
      ftrace and tracing"
    
    * tag 'trace-3.17' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace: (57 commits)
      ftrace: Add warning if tramp hash does not match nr_trampolines
      ftrace: Fix trampoline hash update check on rec->flags
      ring-buffer: Use rb_page_size() instead of open coded head_page size
      ftrace: Rename ftrace_ops field from trampolines to nr_trampolines
      tracing: Convert local function_graph functions to static
      ftrace: Do not copy old hash when resetting
      tracing: let user specify tracing_thresh after selecting function_graph
      ring-buffer: Always run per-cpu ring buffer resize with schedule_work_on()
      tracing: Remove function_trace_stop and HAVE_FUNCTION_TRACE_MCOUNT_TEST
      s390/ftrace: remove check of obsolete variable function_trace_stop
      arm64, ftrace: Remove check of obsolete variable function_trace_stop
      Blackfin: ftrace: Remove check of obsolete variable function_trace_stop
      metag: ftrace: Remove check of obsolete variable function_trace_stop
      microblaze: ftrace: Remove check of obsolete variable function_trace_stop
      MIPS: ftrace: Remove check of obsolete variable function_trace_stop
      parisc: ftrace: Remove check of obsolete variable function_trace_stop
      sh: ftrace: Remove check of obsolete variable function_trace_stop
      sparc64,ftrace: Remove check of obsolete variable function_trace_stop
      tile: ftrace: Remove check of obsolete variable function_trace_stop
      ftrace: x86: Remove check of obsolete variable function_trace_stop
      ...

commit 93e5eadd1f6e7f45c31aa327c42ac52e4df5ff6f
Author: Li, Aubrey <aubrey.li@linux.intel.com>
Date:   Mon Jun 30 14:08:42 2014 +0800

    x86/platform: New Intel Atom SOC power management controller driver
    
    The Power Management Controller (PMC) controls many of the power
    management features present in the Atom SoC. This driver provides
    a native power off function via PMC PCI IO port.
    
    On some ACPI hardware-reduced platforms(e.g. ASUS-T100), ACPI sleep
    registers are not valid so that (*pm_power_off)() is not hooked by
    acpi_power_off(). The power off function in this driver is installed
    only when pm_power_off is NULL.
    
    Signed-off-by: Aubrey Li <aubrey.li@linux.intel.com>
    Link: http://lkml.kernel.org/r/53B0FEEA.3010805@linux.intel.com
    Signed-off-by: Lejun Zhu <lejun.zhu@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 09ec54429c6d10f87d1f084de53ae2c1c3a81108
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Jul 16 21:05:12 2014 +0000

    clocksource: Move cycle_last validation to core code
    
    The only user of the cycle_last validation is the x86 TSC. In order to
    provide NMI safe accessor functions for clock monotonic and
    monotonic_raw we need to do that in the core.
    
    We can't do the TSC specific
    
        if (now < cycle_last)
           	    now = cycle_last;
    
    for the other wrapping around clocksources, but TSC has
    CLOCKSOURCE_MASK(64) which actually does not mask out anything so if
    now is less than cycle_last the subtraction will give a negative
    result. So we can check for that in clocksource_delta() and return 0
    for that case.
    
    Implement and enable it for x86
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: John Stultz <john.stultz@linaro.org>

commit 24e4a8c3e8868874835b0f1ad6dd417341e99822
Author: John Stultz <john.stultz@linaro.org>
Date:   Wed Jul 16 21:03:53 2014 +0000

    ktime: Kill non-scalar ktime_t implementation for 2038
    
    The non-scalar ktime_t implementation is basically a timespec
    which has to be changed to support dates past 2038 on 32bit
    systems.
    
    This patch removes the non-scalar ktime_t implementation, forcing
    the scalar s64 nanosecond version on all architectures.
    
    This may have additional performance overhead on some 32bit
    systems when converting between ktime_t and timespec structures,
    however the majority of 32bit systems (arm and i386) were already
    using scalar ktime_t, so no performance regressions will be seen
    on those platforms.
    
    On affected platforms, I'm open to finding optimizations, including
    avoiding converting to timespecs where possible.
    
    [ tglx: We can now cleanup the ktime_t.tv64 mess, but thats a
      different issue and we can throw a coccinelle script at it ]
    
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: John Stultz <john.stultz@linaro.org>

commit 44a69f6195628f6f940566d133a72987559e102d
Author: Tomasz Nowicki <tomasz.nowicki@linaro.org>
Date:   Tue Jul 22 11:20:12 2014 +0200

    acpi, apei, ghes: Make NMI error notification to be GHES architecture extension.
    
    Currently APEI depends on x86 architecture. It is because of NMI hardware
    error notification of GHES which is currently supported by x86 only.
    However, many other APEI features can be still used perfectly by other
    architectures.
    
    This commit adds two symbols:
    1. HAVE_ACPI_APEI for those archs which support APEI.
    2. HAVE_ACPI_APEI_NMI which is used for NMI code isolation in ghes.c
       file. NMI related data and functions are grouped so they can be wrapped
       inside one #ifdef section. Appropriate function stubs are provided for
       !NMI case.
    
    Note there is no functional changes for x86 due to hard selected
    HAVE_ACPI_APEI and HAVE_ACPI_APEI_NMI symbols.
    
    Signed-off-by: Tomasz Nowicki <tomasz.nowicki@linaro.org>
    Acked-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Tony Luck <tony.luck@intel.com>

commit 46ba51ea8f8639da32c55744b35479fdfb4e7232
Author: Hanjun Guo <hanjun.guo@linaro.org>
Date:   Fri Jul 18 18:02:54 2014 +0800

    ACPI / processor: Introduce ARCH_MIGHT_HAVE_ACPI_PDC
    
    The use of _PDC is deprecated in ACPI 3.0 in favor of _OSC,
    as ARM platform is supported only in ACPI 5.0 or higher version,
    _PDC will not be used in ARM platform, so make Make _PDC only for
    platforms with Intel CPUs.
    
    Introduce ARCH_MIGHT_HAVE_ACPI_PDC and move _PDC related code in
    ACPI processor driver into a single file processor_pdc.c, make x86
    and ia64 select it when ACPI is enabled.
    
    This patch also use pr_* to replace printk to fix the checkpatch
    warning and factor acpi_processor_alloc_pdc() a little bit to
    avoid duplicate pr_err() code.
    
    Suggested-by: Robert Richter <rric@kernel.org>
    Signed-off-by: Hanjun Guo <hanjun.guo@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

commit 8a1664be0b922dd6afd60eca96a992ef5ec22c40
Author: Graeme Gregory <graeme.gregory@linaro.org>
Date:   Fri Jul 18 18:02:52 2014 +0800

    ACPI: add config for BIOS table scan
    
    With the addition of ARM64 that does not have a traditional BIOS to
    scan, add a config option which is selected on x86 (ia64 doesn't need
    it either, it is EFI/UEFI based system) to do the traditional BIOS
    scanning for tables.
    
    Signed-off-by: Graeme Gregory <graeme.gregory@linaro.org>
    Signed-off-by: Hanjun Guo <hanjun.guo@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

commit fdc841b58cf5268fa349eaf9f74fd9a8c6944a34
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Wed Jun 25 11:59:45 2014 -0400

    ftrace: x86: Remove check of obsolete variable function_trace_stop
    
    Nothing sets function_trace_stop to disable function tracing anymore.
    Remove the check for it in the arch code.
    
    Link: http://lkml.kernel.org/r/53C54D32.6000000@zytor.com
    
    Acked-by: H. Peter Anvin <hpa@linux.intel.com>
    Reviewed-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

commit 4badad352a6bb202ec68afa7a574c0bb961e5ebc
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Jun 6 19:53:16 2014 +0200

    locking/mutex: Disable optimistic spinning on some architectures
    
    The optimistic spin code assumes regular stores and cmpxchg() play nice;
    this is found to not be true for at least: parisc, sparc32, tile32,
    metag-lock1, arc-!llsc and hexagon.
    
    There is further wreckage, but this in particular seemed easy to
    trigger, so blacklist this.
    
    Opt in for known good archs.
    
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: David Miller <davem@davemloft.net>
    Cc: Chris Metcalf <cmetcalf@tilera.com>
    Cc: James Bottomley <James.Bottomley@hansenpartnership.com>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: Jason Low <jason.low2@hp.com>
    Cc: Waiman Long <waiman.long@hp.com>
    Cc: "James E.J. Bottomley" <jejb@parisc-linux.org>
    Cc: Paul McKenney <paulmck@linux.vnet.ibm.com>
    Cc: John David Anglin <dave.anglin@bell.net>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Davidlohr Bueso <davidlohr@hp.com>
    Cc: stable@vger.kernel.org
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-kernel@vger.kernel.org
    Cc: linuxppc-dev@lists.ozlabs.org
    Cc: sparclinux@vger.kernel.org
    Link: http://lkml.kernel.org/r/20140606175316.GV13930@laptop.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 022ee6c558fc933679e151f00f84332974147fa2
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Thu Jun 26 12:09:05 2014 +0200

    efi/x86: Move UEFI Runtime Services wrappers to generic code
    
    In order for other archs (such as arm64) to be able to reuse the virtual
    mode function call wrappers, move them to drivers/firmware/efi/runtime-wrappers.c.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>

commit d7f3d4781852f5160b939f526afbc21a813a0206
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Mon Jun 9 16:19:52 2014 +0800

    x86, irq: Introduce mechanisms to support dynamically allocate IRQ for IOAPIC
    
    Currently x86 support identity mapping between GSI(IOAPIC pin) and IRQ
    number, so continous IRQs at low end are statically allocated to IOAPICs
    at boot time. This design causes trouble to support IOAPIC hotplug.
    
    This patch implements basic mechanism to dynamically allocate IRQ on
    demand for IOAPIC pins by using irqdomain framework.
    
    It first adds several fields into struct ioapic to support irqdomain.
    Then it implements an algorithm to dynamically allocate IRQ number
    for IOAPIC pins on demand.
    
    Currently it supports three types of irqdomain:
    1) LEGACY: used to support IOAPIC hosting legacy IRQs and building
       identity mapping for legacy IRQs. A speical case, we dynamically
       allocate IRQ number for IOAPIC pin which has GSI number below
       nr_legacy_irqs() but isn't legacy IRQ. This is for backward
       compatibility and avoid regression.
    2) STRICT: build identity mapping between GSI and IRQ nubmer.
    3) DYNAMIC: dynamically allocate IRQ number for IOAPIC pin on demand.
    
    Legacy(ISA) IRQs is not managed by irqdomain because there may be
    multiple pins sharing the same IRQ number and current irqdomain only
    supports 1:1 mapping between pins and IRQ.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Grant Likely <grant.likely@linaro.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Len Brown <len.brown@intel.com>
    Cc: Pavel Machek <pavel@ucw.cz>
    Link: http://lkml.kernel.org/r/1402302011-23642-24-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 6084a6e23c971ef703229ee1aec68d01688578d6
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Mon Jun 9 16:19:46 2014 +0800

    x86: ce4100, irq: Make CE4100 depend on CONFIG_X86_IO_APIC
    
    Intel CE4100 platforms need IOAPIC support becasue some devices are
    always connected to the second IOAPIC, so make CONFIG_CE depends on
    CONFIG_X86_IO_APIC.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Grant Likely <grant.likely@linaro.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Link: http://lkml.kernel.org/r/1402302011-23642-18-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 24f2e0273f80ec262a772059e140a0adef35296d
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jun 13 13:30:36 2014 -0700

    x86, kaslr: boot-time selectable with hibernation
    
    Changes kASLR from being compile-time selectable (blocked by
    CONFIG_HIBERNATION), to being boot-time selectable (with hibernation
    available by default) via the "kaslr" kernel command line.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

commit c29deef32e3699e40da3e9e82267610de04e6b54
Merge: f9da455 bd01ec1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 12 18:48:15 2014 -0700

    Merge branch 'locking-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull more locking changes from Ingo Molnar:
     "This is the second round of locking tree updates for v3.16, offering
      large system scalability improvements:
    
     - optimistic spinning for rwsems, from Davidlohr Bueso.
    
     - 'qrwlocks' core code and x86 enablement, from Waiman Long and PeterZ"
    
    * 'locking-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, locking/rwlocks: Enable qrwlocks on x86
      locking/rwlocks: Introduce 'qrwlocks' - fair, queued rwlocks
      locking/mutexes: Documentation update/rewrite
      locking/rwsem: Fix checkpatch.pl warnings
      locking/rwsem: Fix warnings for CONFIG_RWSEM_GENERIC_SPINLOCK
      locking/rwsem: Support optimistic spinning

commit bd01ec1a13f9a327950c8e3080096446c7804753
Author: Waiman Long <Waiman.Long@hp.com>
Date:   Mon Feb 3 13:18:57 2014 +0100

    x86, locking/rwlocks: Enable qrwlocks on x86
    
    Make x86 use the fair rwlock_t.
    
    Implement the custom queue_write_unlock() for best performance.
    
    Signed-off-by: Waiman Long <Waiman.Long@hp.com>
    [peterz: near complete rewrite]
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Dave Jones <davej@redhat.com>
    Cc: Jeremy Fitzhardinge <jeremy@goop.org>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>
    Cc: "Paul E.McKenney" <paulmck@linux.vnet.ibm.com>
    Cc: linux-kernel@vger.kernel.org
    Cc: x86@kernel.org
    Link: http://lkml.kernel.org/n/tip-r1xuzmdysvuhl3h86n5fbxi7@git.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 2071b3e34fd33e496ebd7b90331ac5b3b0ac3b81
Merge: 9df0fe6 e6ab9a2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 5 07:46:15 2014 -0700

    Merge branch 'x86/espfix' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next
    
    Pull x86-64 espfix changes from Peter Anvin:
     "This is the espfix64 code, which fixes the IRET information leak as
      well as the associated functionality problem.  With this code applied,
      16-bit stack segments finally work as intended even on a 64-bit
      kernel.
    
      Consequently, this patchset also removes the runtime option that we
      added as an interim measure.
    
      To help the people working on Linux kernels for very small systems,
      this patchset also makes these compile-time configurable features"
    
    * 'x86/espfix' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      Revert "x86-64, modify_ldt: Make support for 16-bit segments a runtime option"
      x86, espfix: Make it possible to disable 16-bit support
      x86, espfix: Make espfix64 a Kconfig option, fix UML
      x86, espfix: Fix broken header guard
      x86, espfix: Move espfix definitions into a separate header file
      x86-32, espfix: Remove filter for espfix32 due to race
      x86-64, espfix: Don't leak bits 31:16 of %esp returning to 16-bit stack

commit 00170fdd0846df7cdb5ad421d3a340440f930b8f
Merge: d09cc36 3ff6db3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jun 4 16:55:13 2014 -0700

    Merge branch 'akpm' (patchbomb from Andrew) into next
    
    Merge misc updates from Andrew Morton:
    
     - a few fixes for 3.16.  Cc'ed to stable so they'll get there somehow.
    
     - various misc fixes and cleanups
    
     - most of the ocfs2 queue.  Review is slow...
    
     - most of MM.  The MM queue is pretty huge this time, but not much in
       the way of feature work.
    
     - some tweaks under kernel/
    
     - printk maintenance work
    
     - updates to lib/
    
     - checkpatch updates
    
     - tweaks to init/
    
    * emailed patches from Andrew Morton <akpm@linux-foundation.org>: (276 commits)
      fs/autofs4/dev-ioctl.c: add __init to autofs_dev_ioctl_init
      fs/ncpfs/getopt.c: replace simple_strtoul by kstrtoul
      init/main.c: remove an ifdef
      kthreads: kill CLONE_KERNEL, change kernel_thread(kernel_init) to avoid CLONE_SIGHAND
      init/main.c: add initcall_blacklist kernel parameter
      init/main.c: don't use pr_debug()
      fs/binfmt_flat.c: make old_reloc() static
      fs/binfmt_elf.c: fix bool assignements
      fs/efs: convert printk(KERN_DEBUG to pr_debug
      fs/efs: add pr_fmt / use __func__
      fs/efs: convert printk to pr_foo()
      scripts/checkpatch.pl: device_initcall is not the only __initcall substitute
      checkpatch: check stable email address
      checkpatch: warn on unnecessary void function return statements
      checkpatch: prefer kstrto<foo> to sscanf(buf, "%<lhuidx>", &bar);
      checkpatch: add warning for kmalloc/kzalloc with multiply
      checkpatch: warn on #defines ending in semicolon
      checkpatch: make --strict a default for files in drivers/net and net/
      checkpatch: always warn on missing blank line after variable declaration block
      checkpatch: fix wildcard DT compatible string checking
      ...

commit 2bf01f9f0cf07b231c90e5d56266e84fe17cec79
Author: Cyrill Gorcunov <gorcunov@openvz.org>
Date:   Wed Jun 4 16:08:16 2014 -0700

    mm: x86 pgtable: require X86_64 for soft-dirty tracker
    
    Tracking dirty status on 2 level pages requires very ugly macros and
    taking into account how old the machines who can operate without PAE
    mode only are, lets drop soft dirty tracker from them for code
    simplicity (note I can't drop all the macros from 2 level pages by now
    since _PAGE_BIT_PROTNONE and _PAGE_BIT_FILE are still used even without
    tracker).
    
    Linus proposed to completely rip off softdirty support on x86-32 (even
    with PAE) and since for CRIU we're not planning to support native x86-32
    mode, lets do that.
    
    (Softdirty tracker is relatively new feature which is mostly used by
    CRIU so I don't expect if such API change would cause problems for
    userspace).
    
    Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Peter Anvin <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Steven Noonan <steven@uplinklabs.net>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Pavel Emelyanov <xemul@parallels.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 9c5a3621427da68afe6a078cadf807d2c8cc1d12
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Wed Jun 4 16:06:50 2014 -0700

    x86: enable DMA CMA with swiotlb
    
    The DMA Contiguous Memory Allocator support on x86 is disabled when
    swiotlb config option is enabled.  So DMA CMA is always disabled on
    x86_64 because swiotlb is always enabled.  This attempts to support for
    DMA CMA with enabling swiotlb config option.
    
    The contiguous memory allocator on x86 is integrated in the function
    dma_generic_alloc_coherent() which is .alloc callback in nommu_dma_ops
    for dma_alloc_coherent().
    
    x86_swiotlb_alloc_coherent() which is .alloc callback in swiotlb_dma_ops
    tries to allocate with dma_generic_alloc_coherent() firstly and then
    swiotlb_alloc_coherent() is called as a fallback.
    
    The main part of supporting DMA CMA with swiotlb is that changing
    x86_swiotlb_free_coherent() which is .free callback in swiotlb_dma_ops
    for dma_free_coherent() so that it can distinguish memory allocated by
    dma_generic_alloc_coherent() from one allocated by
    swiotlb_alloc_coherent() and release it with dma_generic_free_coherent()
    which can handle contiguous memory.  This change requires making
    is_swiotlb_buffer() global function.
    
    This also needs to change .free callback in the dma_map_ops for amd_gart
    and sta2x11, because these dma_ops are also using
    dma_generic_alloc_coherent().
    
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Acked-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Acked-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Don Dutile <ddutile@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 4468dd76f51f8be75d4f04f1d721e379596e7262
Author: Mel Gorman <mgorman@suse.de>
Date:   Wed Jun 4 16:06:29 2014 -0700

    x86: require x86-64 for automatic NUMA balancing
    
    32-bit support for NUMA is an oddity on its own but with automatic NUMA
    balancing on top there is a reasonable risk that the CPUPID information
    cannot be stored in the page flags.  This patch removes support for
    automatic NUMA support on 32-bit x86.
    
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Peter Anvin <hpa@zytor.com>
    Cc: Fengguang Wu <fengguang.wu@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Steven Noonan <steven@uplinklabs.net>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Cc: Cyrill Gorcunov <gorcunov@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit c177c81e09e517bbf75b67762cdab1b83aba6976
Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
Date:   Wed Jun 4 16:05:35 2014 -0700

    hugetlb: restrict hugepage_migration_support() to x86_64
    
    Currently hugepage migration is available for all archs which support
    pmd-level hugepage, but testing is done only for x86_64 and there're
    bugs for other archs.  So to avoid breaking such archs, this patch
    limits the availability strictly to x86_64 until developers of other
    archs get interested in enabling this feature.
    
    Simply disabling hugepage migration on non-x86_64 archs is not enough to
    fix the reported problem where sys_move_pages() hits the BUG_ON() in
    follow_page(FOLL_GET), so let's fix this by checking if hugepage
    migration is supported in vma_migratable().
    
    Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Reported-by: Michael Ellerman <mpe@ellerman.id.au>
    Tested-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Hugh Dickins <hughd@google.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Russell King <rmk@arm.linux.org.uk>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: David Miller <davem@davemloft.net>
    Cc: <stable@vger.kernel.org>	[3.12+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit d09cc3659db494aca4b3bb2393c533fb4946b794
Merge: 82e627e c0ffa79
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jun 4 15:59:13 2014 -0700

    Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next
    
    Pull core irq updates from Thomas Gleixner:
     "The irq department delivers:
    
       - Another tree wide update to get rid of the horrible create_irq
         interface along with its even more horrible variants.  That also
         gets rid of the last leftovers of the initial sparse irq hackery.
         arch/driver specific changes have been either acked or ignored.
    
       - A fix for the spurious interrupt detection logic with threaded
         interrupts.
    
       - A new ARM SoC interrupt controller
    
       - The usual pile of fixes and improvements all over the place"
    
    * 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (40 commits)
      Documentation: brcmstb-l2: Add Broadcom STB Level-2 interrupt controller binding
      irqchip: brcmstb-l2: Add Broadcom Set Top Box Level-2 interrupt controller
      genirq: Improve documentation to match current implementation
      ARM: iop13xx: fix msi support with sparse IRQ
      genirq: Provide !SMP stub for irq_set_affinity_notifier()
      irqchip: armada-370-xp: Move the devicetree binding documentation
      irqchip: gic: Use mask field in GICC_IAR
      genirq: Remove dynamic_irq mess
      ia64: Use irq_init_desc
      genirq: Replace dynamic_irq_init/cleanup
      genirq: Remove irq_reserve_irq[s]
      genirq: Replace reserve_irqs in core code
      s390: Avoid call to irq_reserve_irqs()
      s390: Remove pointless arch_show_interrupts()
      s390: pci: Check return value of alloc_irq_desc() proper
      sh: intc: Remove pointless irq_reserve_irqs() invocation
      x86, irq: Remove pointless irq_reserve_irqs() call
      genirq: Make create/destroy_irq() ia64 private
      tile: Use SPARSE_IRQ
      tile: pci: Use irq_alloc/free_hwirq()
      ...

commit 4aef77b2fe373cdba461925589b9d1d4468ee016
Merge: e0d23cd 04725ad
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jun 3 15:46:38 2014 -0700

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into next
    
    Pull x86 IOSF platform updates from Ingo Molnar:
     "IOSF (Intel OnChip System Fabric) updates:
    
       - generalize the IOSF interface to allow mixed mode drivers: non-IOSF
         drivers to utilize of IOSF features on IOSF platforms.
    
       - add 'Quark X1000' IOSF/MBI support
    
       - clean up BayTrail and Quark PCI ID enumeration"
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, iosf: Add PCI ID macros for better readability
      x86, iosf: Add Quark X1000 PCI ID
      x86, iosf: Added Quark MBI identifiers
      x86, iosf: Make IOSF driver modular and usable by more drivers

commit 49eb7b0750d9483c74e9c14ae6ea1e9d62481c3c
Merge: 5142c33 9ce4f8f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jun 3 09:01:02 2014 -0700

    Merge tag 'tty-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty into next
    
    Pull tty/serial driver updates from Greg KH:
     "Here is the big tty / serial driver pull request for 3.16-rc1.
    
      A variety of different serial driver fixes and updates and additions,
      nothing huge, and no real major core tty changes at all.
    
      All have been in linux-next for a while"
    
    * tag 'tty-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty: (84 commits)
      Revert "serial: imx: remove the DMA wait queue"
      serial: kgdb_nmi: Improve console integration with KDB I/O
      serial: kgdb_nmi: Switch from tasklets to real timers
      serial: kgdb_nmi: Use container_of() to locate private data
      serial: cpm_uart: No LF conversion in put_poll_char()
      serial: sirf: Fix compilation failure
      console: Remove superfluous readonly check
      console: Use explicit pointer type for vc_uni_pagedir* fields
      vgacon: Fix & cleanup refcounting
      ARM: tty: Move HVC DCC assembly to arch/arm
      tty/hvc/hvc_console: Fix wakeup of HVC thread on hvc_kick()
      drivers/tty/n_hdlc.c: replace kmalloc/memset by kzalloc
      vt: emulate 8- and 24-bit colour codes.
      printk/of_serial: fix serial console cessation part way through boot.
      serial: 8250_dma: check the result of TX buffer mapping
      serial: uart: add hw flow control support configuration
      tty/serial: at91: add interrupts for modem control lines
      tty/serial: at91: use mctrl_gpio helpers
      tty/serial: Add GPIOLIB helpers for controlling modem lines
      ARM: at91: gpio: implement get_direction
      ...

commit b1ee544174fd0eb28a7770403b9577fd70f1cd3d
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed May 7 15:44:06 2014 +0000

    x86: Implement arch_setup/teardown_hwirq()
    
    This is just a cleanup to get rid of the create/destroy_irq variants
    which were designed in hell.
    
    The long term solution for x86 is to switch over to irq domains and
    cleanup the whole vector allocation mess.
    
    The generic irq_alloc_hwirqs() interface deliberately prevents
    multi-MSI vector allocation to further enforce the irq domain
    conversion (aside of the desire to support ioapic hotplug).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Grant Likely <grant.likely@linaro.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: x86@kernel.org
    Link: http://lkml.kernel.org/r/20140507154334.482904047@linutronix.de
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 9b17aeec232a5f0a61ce3952c2e728a0eeddda8b
Author: Alan <alan@acox1-desk.ger.corp.intel.com>
Date:   Mon May 12 16:55:35 2014 +0100

    goldfish: Allow 64bit builds
    
    We can now enable the 64bit option for the Goldfish 64bit emulator.
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b8f0c8780c71d78624f736d7849645b64cc88b7
Author: David E. Box <david.e.box@linux.intel.com>
Date:   Fri May 9 13:44:05 2014 -0700

    x86, iosf: Make IOSF driver modular and usable by more drivers
    
    Currently drivers that run on non-IOSF systems (Core/Xeon) can't use the IOSF
    driver on SOC's without selecting it which forces an unnecessary and limiting
    dependency. Provides dummy functions to allow these modules to conditionally
    use the driver on IOSF equipped platforms without impacting their ability to
    compile and load on non-IOSF platforms. Build default m to ensure availability
    on x86 SOC's.
    
    Signed-off-by: David E. Box <david.e.box@linux.intel.com>
    Link: http://lkml.kernel.org/r/1399668248-24199-2-git-send-email-david.e.box@linux.intel.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 34273f41d57ee8d854dcd2a1d754cbb546cb548f
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Sun May 4 10:36:22 2014 -0700

    x86, espfix: Make it possible to disable 16-bit support
    
    Embedded systems, which may be very memory-size-sensitive, are
    extremely unlikely to ever encounter any 16-bit software, so make it
    a CONFIG_EXPERT option to turn off support for any 16-bit software
    whatsoever.
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Link: http://lkml.kernel.org/r/1398816946-3351-1-git-send-email-hpa@linux.intel.com

commit 197725de65477bc8509b41388157c1a2283542bb
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Sun May 4 10:00:49 2014 -0700

    x86, espfix: Make espfix64 a Kconfig option, fix UML
    
    Make espfix64 a hidden Kconfig option.  This fixes the x86-64 UML
    build which had broken due to the non-existence of init_espfix_bsp()
    in UML: since UML uses its own Kconfig, this option does not appear in
    the UML build.
    
    This also makes it possible to make support for 16-bit segments a
    configuration option, for the people who want to minimize the size of
    the kernel.
    
    Reported-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Cc: Richard Weinberger <richard@nod.at>
    Link: http://lkml.kernel.org/r/1398816946-3351-1-git-send-email-hpa@linux.intel.com

commit d20642f0a32575605f152a1cb7753bdfca5fc94b
Author: Rob Herring <robh@kernel.org>
Date:   Fri Apr 18 17:19:54 2014 -0500

    x86: move FIX_EARLYCON_MEM kconfig into x86
    
    In preparation to support FIX_EARLYCON_MEM on other arches, make the
    option per arch.
    
    Signed-off-by: Rob Herring <robh@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: x86@kernel.org
    Cc: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b747172dce6e0905ab173afbaffebb7a11d89bd
Merge: b7e70ca 312103d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Apr 12 12:38:53 2014 -0700

    Merge git://git.infradead.org/users/eparis/audit
    
    Pull audit updates from Eric Paris.
    
    * git://git.infradead.org/users/eparis/audit: (28 commits)
      AUDIT: make audit_is_compat depend on CONFIG_AUDIT_COMPAT_GENERIC
      audit: renumber AUDIT_FEATURE_CHANGE into the 1300 range
      audit: do not cast audit_rule_data pointers pointlesly
      AUDIT: Allow login in non-init namespaces
      audit: define audit_is_compat in kernel internal header
      kernel: Use RCU_INIT_POINTER(x, NULL) in audit.c
      sched: declare pid_alive as inline
      audit: use uapi/linux/audit.h for AUDIT_ARCH declarations
      syscall_get_arch: remove useless function arguments
      audit: remove stray newline from audit_log_execve_info() audit_panic() call
      audit: remove stray newlines from audit_log_lost messages
      audit: include subject in login records
      audit: remove superfluous new- prefix in AUDIT_LOGIN messages
      audit: allow user processes to log from another PID namespace
      audit: anchor all pid references in the initial pid namespace
      audit: convert PPIDs to the inital PID namespace.
      pid: get pid_t ppid of task in init_pid_ns
      audit: rename the misleading audit_get_context() to audit_take_context()
      audit: Add generic compat syscall support
      audit: Add CONFIG_HAVE_ARCH_AUDITSYSCALL
      ...

commit 5b7c73e00968c7fdf908c3ced31e1cc83c01ba14
Author: Mark Salter <msalter@redhat.com>
Date:   Mon Apr 7 15:39:49 2014 -0700

    x86: use generic early_ioremap
    
    Move x86 over to the generic early ioremap implementation.
    
    Signed-off-by: Mark Salter <msalter@redhat.com>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Cc: Borislav Petkov <borislav.petkov@amd.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 467cbd207abdbfe29514b5804a22661ab6e80dc6
Merge: 7125764 b5660ba
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Apr 2 13:15:58 2014 -0700

    Merge branch 'x86-nuke-platforms-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 old platform removal from Peter Anvin:
     "This patchset removes support for several completely obsolete
      platforms, where the maintainers either have completely vanished or
      acked the removal.  For some of them it is questionable if there even
      exists functional specimens of the hardware"
    
    Geert Uytterhoeven apparently thought this was a April Fool's pull request ;)
    
    * 'x86-nuke-platforms-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, platforms: Remove NUMAQ
      x86, platforms: Remove SGI Visual Workstation
      x86, apic: Remove support for IBM Summit/EXA chipset
      x86, apic: Remove support for ia32-based Unisys ES7000

commit c6f21243ce1e8d81ad8361da4d2eaa5947b667c4
Merge: 9447dc4 37c9755
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Apr 2 12:26:43 2014 -0700

    Merge branch 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 vdso changes from Peter Anvin:
     "This is the revamp of the 32-bit vdso and the associated cleanups.
    
      This adds timekeeping support to the 32-bit vdso that we already have
      in the 64-bit vdso.  Although 32-bit x86 is legacy, it is likely to
      remain in the embedded space for a very long time to come.
    
      This removes the traditional COMPAT_VDSO support; the configuration
      variable is reused for simply removing the 32-bit vdso, which will
      produce correct results but obviously suffer a performance penalty.
      Only one beta version of glibc was affected, but that version was
      unfortunately included in one OpenSUSE release.
    
      This is not the end of the vdso cleanups.  Stefani and Andy have
      agreed to continue work for the next kernel cycle; in fact Andy has
      already produced another set of cleanups that came too late for this
      cycle.
    
      An incidental, but arguably important, change is that this ensures
      that unused space in the VVAR page is properly zeroed.  It wasn't
      before, and would contain whatever garbage was left in memory by BIOS
      or the bootloader.  Since the VVAR page is accessible to user space
      this had the potential of information leaks"
    
    * 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (23 commits)
      x86, vdso: Fix the symbol versions on the 32-bit vDSO
      x86, vdso, build: Don't rebuild 32-bit vdsos on every make
      x86, vdso: Actually discard the .discard sections
      x86, vdso: Fix size of get_unmapped_area()
      x86, vdso: Finish removing VDSO32_PRELINK
      x86, vdso: Move more vdso definitions into vdso.h
      x86: Load the 32-bit vdso in place, just like the 64-bit vdsos
      x86, vdso32: handle 32 bit vDSO larger one page
      x86, vdso32: Disable stack protector, adjust optimizations
      x86, vdso: Zero-pad the VVAR page
      x86, vdso: Add 32 bit VDSO time support for 64 bit kernel
      x86, vdso: Add 32 bit VDSO time support for 32 bit kernel
      x86, vdso: Patch alternatives in the 32-bit VDSO
      x86, vdso: Introduce VVAR marco for vdso32
      x86, vdso: Cleanup __vdso_gettimeofday()
      x86, vdso: Replace VVAR(vsyscall_gtod_data) by gtod macro
      x86, vdso: __vdso_clock_gettime() cleanup
      x86, vdso: Revamp vclock_gettime.c
      mm: Add new func _install_special_mapping() to mmap.c
      x86, vdso: Make vsyscall_gtod_data handling x86 generic
      ...

commit 158e0d3621683ee0cdfeeba56f0e5ddd97ae984f
Merge: 675c354 7209930
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Apr 1 16:28:19 2014 -0700

    Merge tag 'driver-core-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core
    
    Pull driver core and sysfs updates from Greg KH:
     "Here's the big driver core / sysfs update for 3.15-rc1.
    
      Lots of kernfs updates to make it useful for other subsystems, and a
      few other tiny driver core patches.
    
      All have been in linux-next for a while"
    
    * tag 'driver-core-3.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core: (42 commits)
      Revert "sysfs, driver-core: remove unused {sysfs|device}_schedule_callback_owner()"
      kernfs: cache atomic_write_len in kernfs_open_file
      numa: fix NULL pointer access and memory leak in unregister_one_node()
      Revert "driver core: synchronize device shutdown"
      kernfs: fix off by one error.
      kernfs: remove duplicate dir.c at the top dir
      x86: align x86 arch with generic CPU modalias handling
      cpu: add generic support for CPU feature based module autoloading
      sysfs: create bin_attributes under the requested group
      driver core: unexport static function create_syslog_header
      firmware: use power efficient workqueue for unloading and aborting fw load
      firmware: give a protection when map page failed
      firmware: google memconsole driver fixes
      firmware: fix google/gsmi duplicate efivars_sysfs_init()
      drivers/base: delete non-required instances of include <linux/init.h>
      kernfs: fix kernfs_node_from_dentry()
      ACPI / platform: drop redundant ACPI_HANDLE check
      kernfs: fix hash calculation in kernfs_rename_ns()
      kernfs: add CONFIG_KERNFS
      sysfs, kobject: add sysfs wrapper for kernfs_enable_ns()
      ...

commit 7a017721283d3fd011a41884fd8e99beae8fe831
Author: AKASHI Takahiro <takahiro.akashi@linaro.org>
Date:   Tue Feb 25 18:16:24 2014 +0900

    audit: Add CONFIG_HAVE_ARCH_AUDITSYSCALL
    
    Currently AUDITSYSCALL has a long list of architecture depencency:
           depends on AUDIT && (X86 || PARISC || PPC || S390 || IA64 || UML ||
    		SPARC64 || SUPERH || (ARM && AEABI && !OABI_COMPAT) || ALPHA)
    The purpose of this patch is to replace it with HAVE_ARCH_AUDITSYSCALL
    for simplicity.
    
    Signed-off-by: AKASHI Takahiro <takahiro.akashi@linaro.org>
    Acked-by: Will Deacon <will.deacon@arm.com> (arm)
    Acked-by: Richard Guy Briggs <rgb@redhat.com> (audit)
    Acked-by: Matt Turner <mattst88@gmail.com> (alpha)
    Acked-by: Michael Ellerman <mpe@ellerman.id.au> (powerpc)
    Signed-off-by: Eric Paris <eparis@redhat.com>

commit d2312e3379d581d2c3603357a0181046448e1de3
Author: Stefani Seibold <stefani@seibold.net>
Date:   Mon Mar 17 23:22:01 2014 +0100

    x86, vdso: Make vsyscall_gtod_data handling x86 generic
    
    This patch move the vsyscall_gtod_data handling out of vsyscall_64.c
    into an additonal file vsyscall_gtod.c to make the functionality
    available for x86 32 bit kernel.
    
    It also adds a new vsyscall_32.c which setup the VVAR page.
    
    Reviewed-by: Andy Lutomirski <luto@amacapital.net>
    Signed-off-by: Stefani Seibold <stefani@seibold.net>
    Link: http://lkml.kernel.org/r/1395094933-14252-2-git-send-email-stefani@seibold.net
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit b0b49f2673f011cad7deeabf7a683b388c351278
Author: Andy Lutomirski <luto@amacapital.net>
Date:   Thu Mar 13 16:01:26 2014 -0700

    x86, vdso: Remove compat vdso support
    
    The compat vDSO is a complicated hack that's needed to maintain
    compatibility with a small range of glibc versions.
    
    This removes it and replaces it with a much simpler hack: a config
    option to disable the 32-bit vDSO by default.
    
    This also changes the default value of CONFIG_COMPAT_VDSO to n --
    users configuring kernels from scratch almost certainly want that
    choice.
    
    Signed-off-by: Andy Lutomirski <luto@amacapital.net>
    Link: http://lkml.kernel.org/r/4bb4690899106eb11430b1186d5cc66ca9d1660c.1394751608.git.luto@amacapital.net
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 7d453eee36ae4cf30fc2f2faae54f634c4f863b7
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Fri Jan 10 18:52:06 2014 +0000

    x86/efi: Wire up CONFIG_EFI_MIXED
    
    Add the Kconfig option and bump the kernel header version so that boot
    loaders can check whether the handover code is available if they want.
    
    The xloadflags field in the bzImage header is also updated to reflect
    that the kernel supports both entry points by setting both of
    XLF_EFI_HANDOVER_32 and XLF_EFI_HANDOVER_64 when CONFIG_EFI_MIXED=y.
    XLF_CAN_BE_LOADED_ABOVE_4G is disabled so that the kernel text is
    guaranteed to be addressable with 32-bits.
    
    Note that no boot loaders should be using the bits set in xloadflags to
    decide which entry point to jump to. The entire scheme is based on the
    concept that 32-bit bootloaders always jump to ->handover_offset and
    64-bit loaders always jump to ->handover_offset + 512. We set both bits
    merely to inform the boot loader that it's safe to use the native
    handover offset even if the machine type in the PE/COFF header claims
    otherwise.
    
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>

commit b5660ba76b41af69a0c09d434927bb4b4cadd4b1
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Tue Feb 25 12:14:06 2014 -0800

    x86, platforms: Remove NUMAQ
    
    The NUMAQ support seems to be unmaintained, remove it.
    
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: David Rientjes <rientjes@google.com>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Link: http://lkml.kernel.org/r/n/530CFD6C.7040705@zytor.com

commit c5f9ee3d665a7660b296aa1e91949ae3376f0d07
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Tue Feb 25 12:05:34 2014 -0800

    x86, platforms: Remove SGI Visual Workstation
    
    The SGI Visual Workstation seems to be dead; remove support so we
    don't have to continue maintaining it.
    
    Cc: Andrey Panin <pazke@donpac.ru>
    Cc: Michael Reed <mdr@sgi.com>
    Link: http://lkml.kernel.org/r/530CFD6C.7040705@zytor.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 2b9c1f03278ab7cd421f14ce24dee39091ecb064
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Sat Feb 8 13:34:10 2014 +0100

    x86: align x86 arch with generic CPU modalias handling
    
    The x86 CPU feature modalias handling existed before it was reimplemented
    generically. This patch aligns the x86 handling so that it
    (a) reuses some more code that is now generic;
    (b) uses the generic format for the modalias module metadata entry, i.e., it
        now uses 'cpu:type:x86,venVVVVfamFFFFmodMMMM:feature:,XXXX,YYYY' instead of
        the 'x86cpu:vendor:VVVV:family:FFFF:model:MMMM:feature:,XXXX,YYYY' that was
        used before.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Acked-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cf6c94591bbf3dbe3bf9573a6551328ad76d885
Author: David Rientjes <rientjes@google.com>
Date:   Tue Feb 11 18:11:13 2014 -0800

    x86, apic: Remove support for IBM Summit/EXA chipset
    
    There should no longer be any IBM x440 systems or those using the
    Summit/EXA chipset out in the wild, so remove support for it.
    
    We've done our due diligence in reaching out to any contact information
    listed for this chipset and no indication was given that it should be
    kept around.
    
    Signed-off-by: David Rientjes <rientjes@google.com>

commit 58f5d2d44883739e43d57334704b7f16f902e463
Author: David Rientjes <rientjes@google.com>
Date:   Tue Feb 11 17:47:24 2014 -0800

    x86, apic: Remove support for ia32-based Unisys ES7000
    
    There should no longer be any ia32-based Unisys ES7000 systems out in
    the wild, so remove support for it.
    
    We've done our due diligence in reaching out to any contact information
    listed for this system and no indication was given that it should be
    kept around.
    
    Signed-off-by: David Rientjes <rientjes@google.com>

commit a3b072cd180c12e8fe0ece9487b9065808327640
Merge: 75a1ba5 081cd62
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Fri Feb 7 11:27:30 2014 -0800

    Merge tag 'efi-urgent' into x86/urgent
    
     * Avoid WARN_ON() when mapping BGRT on Baytrail (EFI 32-bit).
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit edc6bc784028f2ef80dff0ff697363ff5a06e3a3
Author: David Cohen <david.a.cohen@linux.intel.com>
Date:   Tue Jan 21 10:41:39 2014 -0800

    x86/intel/mid: Fix X86_INTEL_MID dependencies
    
    This patch fixes the following warning:
    
      warning: (X86_INTEL_MID) selects INTEL_SCU_IPC which has unmet direct dependencies (X86 && X86_PLATFORM_DEVICES && X86_INTEL_MID)
    
    It happens because when selected, X86_INTEL_MID tries to select
    INTEL_SCU_IPC regardless all its dependencies are met or not.
    
    This patch fixes it by adding the missing X86_PLATFORM_DEVICES
    dependency to X86_INTEL_MID.
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Signed-off-by: David Cohen <david.a.cohen@linux.intel.com>
    Link: http://lkml.kernel.org/r/1390329699-20782-1-git-send-email-david.a.cohen@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 2b45e0f9f34f718725e093f4e335600811d7105a
Merge: a85eba8 15c8102
Author: Ingo Molnar <mingo@kernel.org>
Date:   Sat Jan 25 09:16:14 2014 +0100

    Merge branch 'linus' into x86/urgent
    
    Merge in the x86 changes to apply a fix.
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 1b59bab55e36082b1db3dc81bb32475616487a98
Merge: b788769 55df811
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 24 17:17:30 2014 -0800

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input
    
    Pull input subsystem updates from Dmitry Torokhov:
     "Just a swath of driver fixes and cleanups, no new drivers this time
      (although ALPS now supports one of the newer protocols, more to come)"
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input: (57 commits)
      Input: wacom - add support for DTU-1031
      Input: wacom - fix wacom->shared guards for dual input devices
      Input: edt_ft5x06 - use devm_* functions where appropriate
      Input: hyperv-keyboard - pass through 0xE1 prefix
      Input: logips2pp - fix spelling s/reciver/receiver/
      Input: delete non-required instances of include <linux/init.h>
      Input: twl4030-keypad - convert to using managed resources
      Input: twl6040-vibra - remove unneeded check for CONFIG_OF
      Input: twl4030-keypad - add device tree support
      Input: twl6040-vibra - add missing of_node_put
      Input: twl4030-vibra - add missing of_node_put
      Input: i8042 - cleanup SERIO_I8042 dependencies
      Input: i8042 - select ARCH_MIGHT_HAVE_PC_SERIO on x86
      Input: i8042 - select ARCH_MIGHT_HAVE_PC_SERIO on unicore32
      Input: i8042 - select ARCH_MIGHT_HAVE_PC_SERIO on sparc
      Input: i8042 - select ARCH_MIGHT_HAVE_PC_SERIO for SH_CAYMAN
      Input: i8042 - select ARCH_MIGHT_HAVE_PC_SERIO on powerpc
      Input: i8042 - select ARCH_MIGHT_HAVE_PC_SERIO on mips
      Input: i8042 - select ARCH_MIGHT_HAVE_PC_SERIO on IA64
      Input: i8042 - select ARCH_MIGHT_HAVE_PC_SERIO on ARM/Footbridge
      ...

commit 4a474157747ab7c4432ac269247e0e0e15f85584
Author: Robert Graffham <psquid@psquid.net>
Date:   Thu Jan 23 15:55:29 2014 -0800

    Kconfig: update flightly outdated CONFIG_SMP documentation
    
    Remove an outdated reference to "most personal computers" having only one
    CPU, and change the use of "singleprocessor" and "single processor" in
    CONFIG_SMP's documentation to "uniprocessor" across all arches where that
    documentation is present.
    
    Signed-off-by: Robert Graffham <psquid@psquid.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit cf0744021c5d5de54d2c66e2020c6de2fe800264
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Thu Jan 23 15:54:39 2014 -0800

    firmware/dmi_scan: generalize for use by other archs
    
    This patch makes a couple of changes to the SMBIOS/DMI scanning
    code so it can be used on other archs (such as ARM and arm64):
    (a) wrap the calls to ioremap()/iounmap(), this allows the use of a
        flavor of ioremap() more suitable for random unaligned access;
    (b) allow the non-EFI fallback probe into hardcoded physical address
        0xF0000 to be disabled.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Acked-by: Grant Likely <grant.likely@linaro.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc "Luck, Tony" <tony.luck@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit bb1281f2aae08e5ef23eb0692c8833e95579cdf2
Merge: 4988abf c04e7da
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jan 22 21:21:55 2014 -0800

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial
    
    Pull trivial tree updates from Jiri Kosina:
     "Usual rocket science stuff from trivial.git"
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial: (39 commits)
      neighbour.h: fix comment
      sched: Fix warning on make htmldocs caused by wait.h
      slab: struct kmem_cache is protected by slab_mutex
      doc: Fix typo in USB Gadget Documentation
      of/Kconfig: Spelling s/one/once/
      mkregtable: Fix sscanf handling
      lp5523, lp8501: comment improvements
      thermal: rcar: comment spelling
      treewide: fix comments and printk msgs
      IXP4xx: remove '1 &&' from a condition check in ixp4xx_restart()
      Documentation: update /proc/uptime field description
      Documentation: Fix size parameter for snprintf
      arm: fix comment header and macro name
      asm-generic: uaccess: Spelling s/a ny/any/
      mtd: onenand: fix comment header
      doc: driver-model/platform.txt: fix a typo
      drivers: fix typo in DEVTMPFS_MOUNT Kconfig help text
      doc: Fix typo (acces_process_vm -> access_process_vm)
      treewide: Fix typos in printk
      drivers/gpu/drm/qxl/Kconfig: reformat the help text
      ...

commit f4bcd8ccddb02833340652e9f46f5127828eb79d
Merge: 7fe67a1 da2b6fb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jan 20 14:45:50 2014 -0800

    Merge branch 'x86-kaslr-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 kernel address space randomization support from Peter Anvin:
     "This enables kernel address space randomization for x86"
    
    * 'x86-kaslr-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, kaslr: Clarify RANDOMIZE_BASE_MAX_OFFSET
      x86, kaslr: Remove unused including <linux/version.h>
      x86, kaslr: Use char array to gain sizeof sanity
      x86, kaslr: Add a circular multiply for better bit diffusion
      x86, kaslr: Mix entropy sources together as needed
      x86/relocs: Add percpu fixup for GNU ld 2.23
      x86, boot: Rename get_flags() and check_flags() to *_cpuflags()
      x86, kaslr: Raise the maximum virtual address to -1 GiB on x86_64
      x86, kaslr: Report kernel offset on panic
      x86, kaslr: Select random position from e820 maps
      x86, kaslr: Provide randomness functions
      x86, kaslr: Return location from decompress_kernel
      x86, boot: Move CPU flags out of cpucheck
      x86, relocs: Add more per-cpu gold special cases

commit 74e8ee8262c3f93bbc41804037b43f07b95897bb
Merge: 8bd6964 ca1e631
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jan 20 12:09:31 2014 -0800

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull Intel SoC changes from Ingo Molnar:
     "Improved Intel SoC platform support"
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, tsc, apic: Unbreak static (MSR) calibration when CONFIG_X86_LOCAL_APIC=n
      x86, tsc: Add static (MSR) TSC calibration on Intel Atom SoCs
      arch: x86: New MailBox support driver for Intel SOC's

commit 2bb2c5e235e8459de5761f89bc2bcb2efd2b6b45
Merge: 4500cf6 9c07912
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jan 20 12:07:54 2014 -0800

    Merge branch 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 microcode loader updates from Ingo Molnar:
     "There are two main changes in this tree:
    
       - AMD microcode early loading fixes
       - some microcode loader source files reorganization"
    
    * 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, microcode: Move to a proper location
      x86, microcode, AMD: Fix early ucode loading
      x86, microcode: Share native MSR accessing variants
      x86, ramdisk: Export relocated ramdisk VA

commit 4500cf60dbe4b7f514d11b24c3e1edfda2a6d69d
Merge: 972d5e7 ee87c75
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jan 20 12:06:50 2014 -0800

    Merge branch 'x86-intel-mid-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull Intel MID updates from Ingo Molnar:
     "This tree improves Intel MID (Mobile Internet Device) platform
      support:
    
       - Merrifield platform support (David Cohen)
       - Clovertrail platform support (Kuppuswamy Sathyanarayanan)
       - Various cleanups and fixes (David Cohen)"
    
    * 'x86-intel-mid-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, intel_mid: Replace memcpy with struct assignment
      x86, intel-mid: Return proper error code from get_gpio_by_name()
      x86, intel-mid: Check get_gpio_by_name() error code on platform code
      x86, intel-mid: sfi_handle_*_dev() should check for pdata error code
      x86, intel-mid: Remove deprecated X86_MDFLD and X86_WANT_INTEL_MID configs
      x86, intel-mid: Add Merrifield platform support
      x86, intel-mid: Add Clovertrail platform support
      x86, intel-mid: Move Medfield code out of intel-mid.c core file

commit b8989db9d82465bf38a48a4d3ef32e7d8afc4d08
Author: Alan <gnomes@lxorguk.ukuu.org.uk>
Date:   Mon Jan 20 18:01:56 2014 +0000

    x86, doc, kconfig: Fix dud URL for Microcode data
    
    The actual data lives in the Intel download center, and that ought to also
    be a reliable way to continue to find it. Unfortunately the actual URL
    needed for doing it directly is about a foot long so give instructions.
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Link: http://lkml.kernel.org/r/20140120180056.7173.62222.stgit@alan.etchedpixels.co.uk
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 4cb9b00f42e07830310319a07e6c91413ee8153e
Author: David Cohen <david.a.cohen@linux.intel.com>
Date:   Mon Dec 16 17:37:26 2013 -0800

    x86, intel-mid: Remove deprecated X86_MDFLD and X86_WANT_INTEL_MID configs
    
    We want to support all Intel MID (Mobile Internet Device) platforms
    with a single config selection. This patch removes deprecated
    CONFIG_X86_MDFLD and X86_WANT_INTEL_MID options in favor of having
    CONFIG_X86_INTEL_MID only.
    
    Signed-off-by: David Cohen <david.a.cohen@linux.intel.com>
    Link: http://lkml.kernel.org/r/1387244246-20714-1-git-send-email-david.a.cohen@linux.intel.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit da2b6fb990cf782b18952f534ec7323453bc4fc9
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Dec 10 12:27:45 2013 -0800

    x86, kaslr: Clarify RANDOMIZE_BASE_MAX_OFFSET
    
    The help text for RANDOMIZE_BASE_MAX_OFFSET was confusing. This has been
    clarified, and updated to be an export-only tunable.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: http://lkml.kernel.org/r/20131210202745.GA2961@www.outflux.net
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit bad5fa631fca5466401cd4a48e30cc1f1cb6101e
Author: Borislav Petkov <bp@suse.de>
Date:   Sun Dec 1 18:09:58 2013 +0100

    x86, microcode: Move to a proper location
    
    We've grown a bunch of microcode loader files all prefixed with
    "microcode_". They should be under cpu/ because this is strictly
    CPU-related functionality so do that and drop the prefix since they're
    in their own directory now which gives that prefix. :)
    
    While at it, drop MICROCODE_INTEL_LIB config item and stash the
    functionality under CONFIG_MICROCODE_INTEL as it was its only user.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Tested-by: Aravind Gopalakrishnan <Aravind.Gopalakrishnan@amd.com>

commit 46184415368a6095d5da33991c5e011f1084353d
Author: David E. Box <david.e.box@linux.intel.com>
Date:   Wed Jan 8 13:27:51 2014 -0800

    arch: x86: New MailBox support driver for Intel SOC's
    
    Current Intel SOC cores use a MailBox Interface (MBI) to provide access to
    configuration registers on devices (called units) connected to the system
    fabric. This is a support driver that implements access to this interface on
    those platforms that can enumerate the device using PCI. Initial support is for
    BayTrail, for which port definitons are provided. This is a requirement for
    implementing platform specific features (e.g. RAPL driver requires this to
    perform platform specific power management using the registers in PUNIT).
    Dependant modules should select IOSF_MBI in their respective Kconfig
    configuraiton. Serialized access is handled by all exported routines with
    spinlocks.
    
    The API includes 3 functions for access to unit registers:
    
    int iosf_mbi_read(u8 port, u8 opcode, u32 offset, u32 *mdr)
    int iosf_mbi_write(u8 port, u8 opcode, u32 offset, u32 mdr)
    int iosf_mbi_modify(u8 port, u8 opcode, u32 offset, u32 mdr, u32 mask)
    
    port:	indicating the unit being accessed
    opcode:	the read or write port specific opcode
    offset:	the register offset within the port
    mdr:	the register data to be read, written, or modified
    mask:	bit locations in mdr to change
    
    Returns nonzero on error
    
    Note: GPU code handles access to the GFX unit. Therefore access to that unit
    with this driver is disallowed to avoid conflicts.
    
    Signed-off-by: David E. Box <david.e.box@linux.intel.com>
    Link: http://lkml.kernel.org/r/1389216471-734-1-git-send-email-david.e.box@linux.intel.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Matthew Garrett <mjg59@srcf.ucam.org>

commit 5e2c18c0ed708e2a53f3e0673a786b6df2fb56fb
Author: Mark Salter <msalter@redhat.com>
Date:   Wed Jan 1 11:34:16 2014 -0800

    Input: i8042 - select ARCH_MIGHT_HAVE_PC_SERIO on x86
    
    Architectures which might use an i8042 for serial IO to keyboard,
    mouse, etc should select ARCH_MIGHT_HAVE_PC_SERIO.
    
    Signed-off-by: Mark Salter <msalter@redhat.com>
    Acked-by: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

commit 19952a92037e752f9d3bbbad552d596f9a56e146
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Dec 19 11:35:58 2013 -0800

    stackprotector: Unify the HAVE_CC_STACKPROTECTOR logic between architectures
    
    Instead of duplicating the CC_STACKPROTECTOR Kconfig and
    Makefile logic in each architecture, switch to using
    HAVE_CC_STACKPROTECTOR and keep everything in one place. This
    retains the x86-specific bug verification scripts.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Michal Marek <mmarek@suse.cz>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Shawn Guo <shawn.guo@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-mips@linux-mips.org
    Cc: linux-arch@vger.kernel.org
    Link: http://lkml.kernel.org/r/1387481759-14535-2-git-send-email-keescook@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit e23c34bb41da65f354fb7eee04300c56ee48f60c
Merge: b481c2c 319e2e3
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Thu Dec 19 15:08:03 2013 +0100

    Merge branch 'master' into for-next
    
    Sync with Linus' tree to be able to apply fixes on top of newer things
    in tree (efi-stub).
    
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit be5e610c0fd6ef772cafb9e0bd4128134804aef3
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Nov 18 18:27:06 2013 +0100

    math64: Add mul_u64_u32_shr()
    
    Introduce mul_u64_u32_shr() as proposed by Andy a while back; it
    allows using 64x64->128 muls on 64bit archs and recent GCC
    which defines __SIZEOF_INT128__ and __int128.
    
    (This new method will be used by the scheduler.)
    
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Cc: fweisbec@gmail.com
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Link: http://lkml.kernel.org/n/tip-hxjoeuzmrcaumR0uZwjpe2pv@git.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 5065a706c1784f2dd661cd43c1ac2b4ae92d0afa
Author: Masanari Iida <standby24x7@gmail.com>
Date:   Sat Nov 30 21:38:43 2013 +0900

    treewide: Fix typo in Kconfig
    
    Correct spelling typo in Kconfig.
    
    Signed-off-by: Masanari Iida <standby24x7@gmail.com>
    Acked-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit f13399f033ae3d49e1808bacabd83d116844c94e
Merge: 049ffa8 b2c32b3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 15 14:05:15 2013 -0800

    Merge tag 'for-linus' of git://linux-c6x.org/git/projects/linux-c6x-upstreaming
    
    Pull Kconfig cleanups from Mark Salter:
     "Remove some unused config options from C6X and clean up PC_PARPORT
      dependencies.  The latter was discussed here:
    
        https://lkml.org/lkml/2013/10/8/12"
    
    * tag 'for-linus' of git://linux-c6x.org/git/projects/linux-c6x-upstreaming:
      c6x: remove unused COMMON_CLKDEV Kconfig parameter
      Kconfig cleanup (PARPORT_PC dependencies)
      x86: select ARCH_MIGHT_HAVE_PC_PARPORT
      unicore32: select ARCH_MIGHT_HAVE_PC_PARPORT
      sparc: select ARCH_MIGHT_HAVE_PC_PARPORT
      sh: select ARCH_MIGHT_HAVE_PC_PARPORT
      powerpc: select ARCH_MIGHT_HAVE_PC_PARPORT
      parisc: select ARCH_MIGHT_HAVE_PC_PARPORT
      mips: select ARCH_MIGHT_HAVE_PC_PARPORT
      microblaze: select ARCH_MIGHT_HAVE_PC_PARPORT
      m68k: select ARCH_MIGHT_HAVE_PC_PARPORT
      ia64: select ARCH_MIGHT_HAVE_PC_PARPORT
      arm: select ARCH_MIGHT_HAVE_PC_PARPORT
      alpha: select ARCH_MIGHT_HAVE_PC_PARPORT
      c6x: remove unused parameter in Kconfig

commit 0a06ff068f1255bcd7965ab07bc0f4adc3eb639a
Author: Christoph Hellwig <hch@infradead.org>
Date:   Thu Nov 14 14:32:07 2013 -0800

    kernel: remove CONFIG_USE_GENERIC_SMP_HELPERS
    
    We've switched over every architecture that supports SMP to it, so
    remove the new useless config variable.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Cc: Jan Kara <jack@suse.cz>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 9491846fca57e9326b6673716c386b76fc13ebca
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Nov 14 14:31:10 2013 -0800

    x86, mm: enable split page table lock for PMD level
    
    Enable PMD split page table lock for X86_64 and PAE.
    
    [akpm@linux-foundation.org: coding-style fixes]
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Tested-by: Alex Thorlton <athorlton@sgi.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: "Eric W . Biederman" <ebiederm@xmission.com>
    Cc: "Paul E . McKenney" <paulmck@linux.vnet.ibm.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Jones <davej@redhat.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Robin Holt <robinmholt@gmail.com>
    Cc: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Hugh Dickins <hughd@google.com>
    Reviewed-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 5e30025a319910695f5010dc0fb53a23299da14d
Merge: 7971e23 90d3839
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Nov 14 16:30:30 2013 +0900

    Merge branch 'core-locking-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull core locking changes from Ingo Molnar:
     "The biggest changes:
    
       - add lockdep support for seqcount/seqlocks structures, this
         unearthed both bugs and required extra annotation.
    
       - move the various kernel locking primitives to the new
         kernel/locking/ directory"
    
    * 'core-locking-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (21 commits)
      block: Use u64_stats_init() to initialize seqcounts
      locking/lockdep: Mark __lockdep_count_forward_deps() as static
      lockdep/proc: Fix lock-time avg computation
      locking/doc: Update references to kernel/mutex.c
      ipv6: Fix possible ipv6 seqlock deadlock
      cpuset: Fix potential deadlock w/ set_mems_allowed
      seqcount: Add lockdep functionality to seqcount/seqlock structures
      net: Explicitly initialize u64_stats_sync structures for lockdep
      locking: Move the percpu-rwsem code to kernel/locking/
      locking: Move the lglocks code to kernel/locking/
      locking: Move the rwsem code to kernel/locking/
      locking: Move the rtmutex code to kernel/locking/
      locking: Move the semaphore core to kernel/locking/
      locking: Move the spinlock code to kernel/locking/
      locking: Move the lockdep code to kernel/locking/
      locking: Move the mutex code to kernel/locking/
      hung_task debugging: Add tracepoint to report the hang
      x86/locking/kconfig: Update paravirt spinlock Kconfig description
      lockstat: Report avg wait and hold times
      lockdep, x86/alternatives: Drop ancient lockdep fixup message
      ...

commit f9300eaaac1ca300083ad41937923a90cc3a2394
Merge: 7f2dc5c faddf2f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Nov 14 13:41:48 2013 +0900

    Merge tag 'pm+acpi-3.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
    
    Pull ACPI and power management updates from Rafael J Wysocki:
    
     - New power capping framework and the the Intel Running Average Power
       Limit (RAPL) driver using it from Srinivas Pandruvada and Jacob Pan.
    
     - Addition of the in-kernel switching feature to the arm_big_little
       cpufreq driver from Viresh Kumar and Nicolas Pitre.
    
     - cpufreq support for iMac G5 from Aaro Koskinen.
    
     - Baytrail processors support for intel_pstate from Dirk Brandewie.
    
     - cpufreq support for Midway/ECX-2000 from Mark Langsdorf.
    
     - ARM vexpress/TC2 cpufreq support from Sudeep KarkadaNagesha.
    
     - ACPI power management support for the I2C and SPI bus types from Mika
       Westerberg and Lv Zheng.
    
     - cpufreq core fixes and cleanups from Viresh Kumar, Srivatsa S Bhat,
       Stratos Karafotis, Xiaoguang Chen, Lan Tianyu.
    
     - cpufreq drivers updates (mostly fixes and cleanups) from Viresh
       Kumar, Aaro Koskinen, Jungseok Lee, Sudeep KarkadaNagesha, Lukasz
       Majewski, Manish Badarkhe, Hans-Christian Egtvedt, Evgeny Kapaev.
    
     - intel_pstate updates from Dirk Brandewie and Adrian Huang.
    
     - ACPICA update to version 20130927 includig fixes and cleanups and
       some reduction of divergences between the ACPICA code in the kernel
       and ACPICA upstream in order to improve the automatic ACPICA patch
       generation process.  From Bob Moore, Lv Zheng, Tomasz Nowicki, Naresh
       Bhat, Bjorn Helgaas, David E Box.
    
     - ACPI IPMI driver fixes and cleanups from Lv Zheng.
    
     - ACPI hotplug fixes and cleanups from Bjorn Helgaas, Toshi Kani, Zhang
       Yanfei, Rafael J Wysocki.
    
     - Conversion of the ACPI AC driver to the platform bus type and
       multiple driver fixes and cleanups related to ACPI from Zhang Rui.
    
     - ACPI processor driver fixes and cleanups from Hanjun Guo, Jiang Liu,
       Bartlomiej Zolnierkiewicz, Mathieu Rhéaume, Rafael J Wysocki.
    
     - Fixes and cleanups and new blacklist entries related to the ACPI
       video support from Aaron Lu, Felipe Contreras, Lennart Poettering,
       Kirill Tkhai.
    
     - cpuidle core cleanups from Viresh Kumar and Lorenzo Pieralisi.
    
     - cpuidle drivers fixes and cleanups from Daniel Lezcano, Jingoo Han,
       Bartlomiej Zolnierkiewicz, Prarit Bhargava.
    
     - devfreq updates from Sachin Kamat, Dan Carpenter, Manish Badarkhe.
    
     - Operation Performance Points (OPP) core updates from Nishanth Menon.
    
     - Runtime power management core fix from Rafael J Wysocki and update
       from Ulf Hansson.
    
     - Hibernation fixes from Aaron Lu and Rafael J Wysocki.
    
     - Device suspend/resume lockup detection mechanism from Benoit Goby.
    
     - Removal of unused proc directories created for various ACPI drivers
       from Lan Tianyu.
    
     - ACPI LPSS driver fix and new device IDs for the ACPI platform scan
       handler from Heikki Krogerus and Jarkko Nikula.
    
     - New ACPI _OSI blacklist entry for Toshiba NB100 from Levente Kurusa.
    
     - Assorted fixes and cleanups related to ACPI from Andy Shevchenko, Al
       Stone, Bartlomiej Zolnierkiewicz, Colin Ian King, Dan Carpenter,
       Felipe Contreras, Jianguo Wu, Lan Tianyu, Yinghai Lu, Mathias Krause,
       Liu Chuansheng.
    
     - Assorted PM fixes and cleanups from Andy Shevchenko, Thierry Reding,
       Jean-Christophe Plagniol-Villard.
    
    * tag 'pm+acpi-3.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (386 commits)
      cpufreq: conservative: fix requested_freq reduction issue
      ACPI / hotplug: Consolidate deferred execution of ACPI hotplug routines
      PM / runtime: Use pm_runtime_put_sync() in __device_release_driver()
      ACPI / event: remove unneeded NULL pointer check
      Revert "ACPI / video: Ignore BIOS initial backlight value for HP 250 G1"
      ACPI / video: Quirk initial backlight level 0
      ACPI / video: Fix initial level validity test
      intel_pstate: skip the driver if ACPI has power mgmt option
      PM / hibernate: Avoid overflow in hibernate_preallocate_memory()
      ACPI / hotplug: Do not execute "insert in progress" _OST
      ACPI / hotplug: Carry out PCI root eject directly
      ACPI / hotplug: Merge device hot-removal routines
      ACPI / hotplug: Make acpi_bus_hot_remove_device() internal
      ACPI / hotplug: Simplify device ejection routines
      ACPI / hotplug: Fix handle_root_bridge_removal()
      ACPI / hotplug: Refuse to hot-remove all objects with disabled hotplug
      ACPI / scan: Start matching drivers after trying scan handlers
      ACPI: Remove acpi_pci_slot_init() headers from internal.h
      ACPI / blacklist: fix name of ThinkPad Edge E530
      PowerCap: Fix build error with option -Werror=format-security
      ...
    
    Conflicts:
    	arch/arm/mach-omap2/opp.c
    	drivers/Kconfig
    	drivers/spi/spi.c

commit a653f3563c51c7bb7de63d607bef09d3baddaeb8
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Nov 11 14:28:39 2013 -0800

    x86, kaslr: Mix entropy sources together as needed
    
    Depending on availability, mix the RDRAND and RDTSC entropy together with
    XOR. Only when neither is available should the i8254 be used. Update
    the Kconfig documentation to reflect this. Additionally, since bits
    used for entropy is masked elsewhere, drop the needless masking in
    the get_random_long(). Similarly, use the entire TSC, not just the low
    32 bits.
    
    Finally, to improve the starting entropy, do a simple hashing of a
    build-time versions string and the boot-time boot_params structure for
    some additional level of unpredictability.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: http://lkml.kernel.org/r/20131111222839.GA28616@www.outflux.net
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 339a4b72c83dc7d8b29f43f7417add791e201ad3
Merge: dba538f ced3c42
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Nov 12 11:15:12 2013 +0900

    Merge branch 'x86-iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 iommu changes from Ingo Molnar:
     "Make it easier to turn off the old AMD GART code"
    
    * 'x86-iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/iommu: Clean up the CONFIG_GART_IOMMU config option a bit
      x86/iommu: Don't make AMD_GART depend on EXPERT and default y

commit 69019d77c71472428a5d67ab8bb7cfa9145000d0
Merge: 6df1e7f 88392e9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Nov 12 10:48:30 2013 +0900

    Merge branch 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 EFI changes from Ingo Molnar:
     "Main changes:
    
       - Add support for earlyprintk=efi which uses the EFI framebuffer.
         Very useful for debugging boot problems.
    
       - EFI stub support for large memory maps (more than 128 entries)
    
       - EFI ARM support - this was mostly done by generalizing x86 <-> ARM
         platform differences, such as by moving x86 EFI code into
         drivers/firmware/efi/ and sharing it with ARM.
    
       - Documentation updates
    
       - misc fixes"
    
    * 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (26 commits)
      x86/efi: Add EFI framebuffer earlyprintk support
      boot, efi: Remove redundant memset()
      x86/efi: Fix config_table_type array termination
      x86 efi: bugfix interrupt disabling sequence
      x86: EFI stub support for large memory maps
      efi: resolve warnings found on ARM compile
      efi: Fix types in EFI calls to match EFI function definitions.
      efi: Renames in handle_cmdline_files() to complete generalization.
      efi: Generalize handle_ramdisks() and rename to handle_cmdline_files().
      efi: Allow efi_free() to be called with size of 0
      efi: use efi_get_memory_map() to get final map for x86
      efi: generalize efi_get_memory_map()
      efi: Rename __get_map() to efi_get_memory_map()
      efi: Move unicode to ASCII conversion to shared function.
      efi: Generalize relocate_kernel() for use by other architectures.
      efi: Move relocate_kernel() to shared file.
      efi: Enforce minimum alignment of 1 page on allocations.
      efi: Rename memory allocation/free functions
      efi: Add system table pointer argument to shared functions.
      efi: Move common EFI stub code from x86 arch code to common location
      ...

commit 6df1e7f2e96721dfdbfd8a034e52bc81916f978c
Merge: d96d8aa b53b5ed
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Nov 12 10:46:43 2013 +0900

    Merge branch 'x86-cpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 cpu changes from Ingo Molnar:
     "The biggest change that stands out is the increase of the
      CONFIG_NR_CPUS range from 4096 to 8192 - as real hardware out there
      already went beyond 4k CPUs ...
    
      We only allow more than 512 CPUs if offstack cpumasks are enabled.
    
      CONFIG_MAXSMP=y remains to be the 'you are nuts!' extreme testcase,
      which now means a max of 8192 CPUs"
    
    * 'x86-cpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/cpu: Increase max CPU count to 8192
      x86/cpu: Allow higher NR_CPUS values
      x86/cpu: Always print SMP information in /proc/cpuinfo
      x86/cpu: Track legacy CPU model data only on 32-bit kernels

commit 1006fae359cc810c16354805c0cffbb6ffee602e
Merge: 70fdcb8 5702941
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Nov 12 10:02:59 2013 +0900

    Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull IRQ changes from Ingo Molnar:
     "The biggest change this cycle are the softirq/hardirq stack
      interaction and nesting fixes, cleanups and reorganizations from
      Frederic.  This is the longer followup story to the softirq nesting
      fix that is already upstream (commit ded797547548: "irq: Force hardirq
      exit's softirq processing on its own stack")"
    
    * 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      irqchip: bcm2835: Convert to use IRQCHIP_DECLARE macro
      powerpc: Tell about irq stack coverage
      x86: Tell about irq stack coverage
      irq: Optimize softirq stack selection in irq exit
      irq: Justify the various softirq stack choices
      irq: Improve a bit softirq debugging
      irq: Optimize call to softirq on hardirq exit
      irq: Consolidate do_softirq() arch overriden implementations
      x86/irq: Correct comment about i8259 initialization

commit b53b5eda8194214928c8243d711a75dbf51809fc
Author: Josh Boyer <jwboyer@redhat.com>
Date:   Tue Nov 5 09:38:16 2013 -0500

    x86/cpu: Increase max CPU count to 8192
    
    The MAXSMP option is intended to enable silly large numbers of
    CPUs for testing purposes.  The current value of 4096 isn't very
    silly any longer as there are actual SGI machines that approach
    6096 CPUs when taking HT into account.
    
    Increase the value to a nice round 8192 to account for this and
    allow for short term future increases.
    
    Signed-off-by: Josh Boyer <jwboyer@fedoraproject.org>
    Cc: prarit@redhat.com
    Cc: Russ Anderson <rja@sgi.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Link: http://lkml.kernel.org/r/20131105143816.GK9944@hansolo.jdub.homelinux.org
    [ Tweaked it so that MAXSMP simply sets the maximum of the normal range. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit bb61ccc7dbcbc1ed4600bef5610d99ec91fd7032
Author: Josh Boyer <jwboyer@redhat.com>
Date:   Tue Nov 5 09:37:29 2013 -0500

    x86/cpu: Allow higher NR_CPUS values
    
    The current range for SMP configs is 2 - 512 CPUs, or a full
    4096 in the case of MAXSMP.  There are machines that have 1024
    CPUs in them today and configuring a kernel for that means you
    are forced to set MAXSMP.  This adds additional unnecessary
    overhead.  While that overhead might be considered tiny for
    large machines, it isn't necessarily so if you are building a
    kernel that runs across a wide variety of machines.
    
    To cover the range of more common machines today, we allow
    NR_CPUS to be up to 4096 when CPUMASK_OFFSTACK is enabled.
    
    Signed-off-by: Josh Boyer <jwboyer@fedoraproject.org>
    Cc: prarit@redhat.com
    Cc: Russ Anderson <rja@sgi.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Link: http://lkml.kernel.org/r/20131105143728.GJ9944@hansolo.jdub.homelinux.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 97c53b402fcadb50201c23914f614bf8430d9c20
Merge: 6a716c9 5e01dc7
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Nov 6 06:39:45 2013 +0100

    Merge tag 'v3.12' into core/locking to pick up mutex upates
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 5c2aae8355f7ec1341d5c473c500a77bbfa7f701
Merge: 3fbc4d6 16ff816
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Oct 28 01:12:41 2013 +0100

    Merge branch 'acpi-hotplug'
    
    * acpi-hotplug:
      ACPI / memhotplug: Use defined marco METHOD_NAME__STA
      ACPI / hotplug: Use kobject_init_and_add() instead of _init() and _add()
      ACPI / hotplug: Don't set kobject parent pointer explicitly
      ACPI / hotplug: Set kobject name via kobject_add(), not kobject_set_name()
      hotplug, powerpc, x86: Remove cpu_hotplug_driver_lock()
      hotplug / x86: Disable ARCH_CPU_PROBE_RELEASE on x86
      hotplug / x86: Add hotplug lock to missing places
      hotplug / x86: Fix online state in cpu0 debug interface

commit 4c4e4f61368164f326fe59e2156c70d7faa72c17
Author: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>
Date:   Mon Oct 21 21:35:08 2013 +0530

    x86/locking/kconfig: Update paravirt spinlock Kconfig description
    
    Since the paravirt spinlock optimizations went into the v3.12 kernel
    we have a very good performance benefit for paravirtualized KVM / Xen
    kernels. Also we no longer suffer from 5% side effect on native
    kernel that is mentioned in the Kconfig entry.
    
    So update the Kconfig entry accordingly.
    
    pvspinlock benefit on KVM link:
    
      https://lkml.org/lkml/2013/8/6/178
    
    Attilio's tests on native kernel impact:
    
      http://blog.xen.org/index.php/2012/05/11/benchmarking-the-new-pv-ticketlock-implementation/
    
    Signed-off-by: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>
    Cc: <konrad.wilk@oracle.com>
    Cc: <linux@eikelenboom.it>
    Cc: <gleb@redhat.com>
    Cc: <pbonzini@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Link: http://lkml.kernel.org/r/1382371508-3843-1-git-send-email-raghavendra.kt@linux.vnet.ibm.com
    [ Updated the changelog. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 77fbbc81127d2a26e4e53e018987d6af13829298
Author: Mark Salter <msalter@redhat.com>
Date:   Mon Oct 7 22:18:07 2013 -0400

    x86: select ARCH_MIGHT_HAVE_PC_PARPORT
    
    Architectures which support CONFIG_PARPORT_PC should select
    ARCH_MIGHT_HAVE_PC_PARPORT.
    
    Signed-off-by: Mark Salter <msalter@redhat.com>
    Acked-by: Ingo Molnar <mingo@redhat.com>
    CC: Thomas Gleixner <tglx@linutronix.de>
    CC: "H. Peter Anvin" <hpa@zytor.com>
    CC: x86@kernel.org

commit 80030e3d8ec6414790a5ec67ae4c5eeee82aba98
Author: Borislav Petkov <bp@suse.de>
Date:   Sun Oct 13 18:36:29 2013 +0200

    x86/microcode: Correct Kconfig dependencies
    
    I have a randconfig here which has enabled only
    
      CONFIG_MICROCODE=y
      CONFIG_MICROCODE_OLD_INTERFACE=y
    
    with both
    
      # CONFIG_MICROCODE_INTEL is not set
      # CONFIG_MICROCODE_AMD is not set
    
    off. Which makes building the microcode functionality a little
    pointless. Don't do that in such cases then.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: http://lkml.kernel.org/r/1381682189-14470-1-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 6145cfe394a7f138f6b64491c5663f97dba12450
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Oct 10 17:18:18 2013 -0700

    x86, kaslr: Raise the maximum virtual address to -1 GiB on x86_64
    
    On 64-bit, this raises the maximum location to -1 GiB (from -1.5 GiB),
    the upper limit currently, since the kernel fixmap page mappings need
    to be moved to use the other 1 GiB (which would be the theoretical
    limit when building with -mcmodel=kernel).
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: http://lkml.kernel.org/r/1381450698-28710-7-git-send-email-keescook@chromium.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 8ab3820fd5b2896d66da7bb2a906bc382e63e7bc
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Oct 10 17:18:14 2013 -0700

    x86, kaslr: Return location from decompress_kernel
    
    This allows decompress_kernel to return a new location for the kernel to
    be relocated to. Additionally, enforces CONFIG_PHYSICAL_START as the
    minimum relocation position when building with CONFIG_RELOCATABLE.
    
    With CONFIG_RANDOMIZE_BASE set, the choose_kernel_location routine
    will select a new location to decompress the kernel, though here it is
    presently a no-op. The kernel command line option "nokaslr" is introduced
    to bypass these routines.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: http://lkml.kernel.org/r/1381450698-28710-3-git-send-email-keescook@chromium.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit ced3c42c9fcba049ec9c76c8461ac194cafb20ba
Author: Ingo Molnar <mingo@kernel.org>
Date:   Sun Oct 6 11:45:20 2013 +0200

    x86/iommu: Clean up the CONFIG_GART_IOMMU config option a bit
    
    Improve the explanation of this config option.
    
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Borislav Petkov <borislav.petkov@amd.com>
    Link: http://lkml.kernel.org/n/tip-gUMmysvsbl3mccbyf6olmxqg@git.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 38901f1c1cae241fd4e3c5e63fcc690b921734b1
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Oct 4 14:37:56 2013 -0700

    x86/iommu: Don't make AMD_GART depend on EXPERT and default y
    
    The AMD_GART driver was made EXPERT/EMBEDDED a long time
    ago to avoid unbootable 64bit systems with 32bit only devices.
    
    This was before swiotlb was there, which does the job
    of this fallback today. SWIOTLB is always on, so systems
    should always boot.
    
    The drawback is that every system has to compile that
    driver in (it cannot be a module).
    
    Also:
     - Newer AMD CPUs (the APUs) don't seem to have AMD_GART support
       at all anymore.
    
     - Newer AMD platforms have a much better real IOMMU
    
     - The AMD GART driver was never very good (lots of overhead,
       e.g. in flushing due to some workarounds) and it's doubtful it's
       really better than SWIOTLB.
    
     - On older K8 systems it didn't even work with all chipsets.
    
     - The 32bit device bounce buffer case should be rare/
       non performance critical these days anyways.
    
     - On non AMD systems it is not needed at all.
    
    So drop the EXPERT dependency on AMD_GART and remove the
    default y. The driver can be still compiled in, just
    it's an explicit decision now, and people who don't want
    it can unselect it.
    
    I also clarified the description a bit.
    
    This allows to save ~8K text on most modern x86-64 systems.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Acked-by: Borislav Petkov <bp@suse.de>
    Link: http://lkml.kernel.org/r/1380922676-23007-1-git-send-email-andi@firstfloor.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 0dbc6078c06bc002bfacf95f33960b1901c663f5
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Thu Oct 3 11:59:14 2013 +0200

    x86, build, pci: Fix PCI_MSI build on !SMP
    
    Commit ebd97be635 ('PCI: remove ARCH_SUPPORTS_MSI kconfig option')
    removed the ARCH_SUPPORTS_MSI option which architectures could select
    to indicate that they support MSI. Now, all architectures are supposed
    to build fine when MSI support is enabled: instead of having the
    architecture tell *when* MSI support can be used, it's up to the
    architecture code to ensure that MSI support can be enabled.
    
    On x86, commit ebd97be635 removed the following line:
    
      select ARCH_SUPPORTS_MSI if (X86_LOCAL_APIC && X86_IO_APIC)
    
    Which meant that MSI support was only available when the local APIC
    and I/O APIC were enabled. While this is always true on SMP or x86-64,
    it is not necessarily the case on i386 !SMP.
    
    The below patch makes sure that the local APIC and I/O APIC support is
    always enabled when MSI support is enabled. To do so, it:
    
     * Ensures the X86_UP_APIC option is not visible when PCI_MSI is
       enabled. This is the option that allows, on UP machines, to enable
       or not the APIC support. It is already not visible on SMP systems,
       or x86-64 systems, for example. We're simply also making it
       invisible on i386 MSI systems.
    
     * Ensures that the X86_LOCAL_APIC and X86_IO_APIC options are 'y'
       when PCI_MSI is enabled.
    
    Notice that this change requires a change in drivers/iommu/Kconfig to
    avoid a recursive Kconfig dependencey. The AMD_IOMMU option selects
    PCI_MSI, but was depending on X86_IO_APIC. This dependency is no
    longer needed: as soon as PCI_MSI is selected, the presence of
    X86_IO_APIC is guaranteed. Moreover, the AMD_IOMMU already depended on
    X86_64, which already guaranteed that X86_IO_APIC was enabled, so this
    dependency was anyway redundant.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Link: http://lkml.kernel.org/r/1380794354-9079-1-git-send-email-thomas.petazzoni@free-electrons.com
    Reported-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit a2cd11f7d58a3a5390ee4cbcd8cff634a4d59173
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue Sep 24 17:18:36 2013 +0200

    x86: Tell about irq stack coverage
    
    x86-64 runs irq_exit() under the irq stack. So it can afford
    to run softirqs in hardirq exit without the need to switch
    the stacks. The hardirq stack is good enough for that.
    
    Now x86-64 runs softirqs in the hardirq stack anyway, so what we
    mostly skip is some needless per cpu refcounting updates there.
    
    x86-32 is not concerned because it only runs the irq handler on
    the irq stack.
    
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@au1.ibm.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul Mackerras <paulus@au1.ibm.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: James E.J. Bottomley <jejb@parisc-linux.org>
    Cc: Helge Deller <deller@gmx.de>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Andrew Morton <akpm@linux-foundation.org>

commit 4172fe2f8a479e2237459918edc83b027efa8808
Author: Roy Franz <roy.franz@linaro.org>
Date:   Sun Sep 22 15:45:25 2013 -0700

    EFI stub documentation updates
    
    Move efi-stub.txt out of x86 directory and into common directory
    in preparation for adding ARM EFI stub support.
    
    Signed-off-by: Roy Franz <roy.franz@linaro.org>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>

commit 1cad5e9a3978d182aa9b0e909fb0379da5ba45af
Author: Toshi Kani <toshi.kani@hp.com>
Date:   Thu Aug 29 18:22:08 2013 -0600

    hotplug / x86: Disable ARCH_CPU_PROBE_RELEASE on x86
    
    Commit d7c53c9e enabled ARCH_CPU_PROBE_RELEASE on x86 in order to
    serialize CPU online/offline operations.  Although it is the config
    option to enable CPU hotplug test interfaces, probe & release, it is
    also the option to enable cpu_hotplug_driver_lock() as well.  Therefore,
    this option had to be enabled on x86 with dummy arch_cpu_probe() and
    arch_cpu_release().
    
    Since then, lock_device_hotplug() was introduced to serialize CPU
    online/offline & hotplug operations.  Therefore, this config option
    is no longer required for the serialization.  This patch disables
    this config option on x86 and revert the changes made by commit
    d7c53c9e.
    
    Signed-off-by: Toshi Kani <toshi.kani@hp.com>
    Acked-by: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

commit f42bcf1aa84a4c4348d53ac3013eff2b642987e5
Merge: 9d2cd70 0f53143
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 18 11:26:17 2013 -0500

    Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 fixes from Ingo Molnar:
     "Misc fixes"
    
    * 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/intel/lpss: Add pin control support to Intel low power subsystem
      perf/x86/intel: Mark MEM_LOAD_UOPS_MISS_RETIRED as precise on SNB
      x86: Remove now-unused save_rest()
      x86/smpboot: Fix announce_cpu() to printk() the last "OK" properly

commit 0f531431d3de88efb4234d6c0ce22089ec035a38
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Sep 13 17:02:29 2013 +0300

    x86/intel/lpss: Add pin control support to Intel low power subsystem
    
    x86 chips with LPSS (low power subsystem) such as Lynxpoint and
    Baytrail have SoC like peripheral support and controllable pins.
    
    At the moment, Baytrail needs the pinctrl-baytrail driver to let
    peripherals control their gpio resources, but more pincontrol
    functions such as pin muxing and grouping are possible to add
    later.
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Link: http://lkml.kernel.org/r/1379080949-21734-1-git-send-email-mathias.nyman@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 0244ad004a54e39308d495fee0a2e637f8b5c317
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Fri Aug 30 09:39:53 2013 +0200

    Remove GENERIC_HARDIRQ config option
    
    After the last architecture switched to generic hard irqs the config
    options HAVE_GENERIC_HARDIRQS & GENERIC_HARDIRQS and the related code
    for !CONFIG_GENERIC_HARDIRQS can be removed.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

commit b4b50fd78b1e31989940dfc647e64453d0f7176a
Merge: dccfd1e4 f97c43b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Sep 6 13:30:06 2013 -0700

    Merge tag 'soc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc
    
    Pull ARM SoC platform changes from Olof Johansson:
     "This branch contains mostly additions and changes to platform
      enablement and SoC-level drivers.  Since there's sometimes a
      dependency on device-tree changes, there's also a fair amount of
      those in this branch.
    
      Pieces worth mentioning are:
    
       - Mbus driver for Marvell platforms, allowing kernel configuration
         and resource allocation of on-chip peripherals.
       - Enablement of the mbus infrastructure from Marvell PCI-e drivers.
       - Preparation of MSI support for Marvell platforms.
       - Addition of new PCI-e host controller driver for Tegra platforms
       - Some churn caused by sharing of macro names between i.MX 6Q and 6DL
         platforms in the device tree sources and header files.
       - Various suspend/PM updates for Tegra, including LP1 support.
       - Versatile Express support for MCPM, part of big little support.
       - Allwinner platform support for A20 and A31 SoCs (dual and quad
         Cortex-A7)
       - OMAP2+ support for DRA7, a new Cortex-A15-based SoC.
    
      The code that touches other architectures are patches moving MSI
      arch-specific functions over to weak symbols and removal of
      ARCH_SUPPORTS_MSI, acked by PCI maintainers"
    
    * tag 'soc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (266 commits)
      tegra-cpuidle: provide stub when !CONFIG_CPU_IDLE
      PCI: tegra: replace devm_request_and_ioremap by devm_ioremap_resource
      ARM: tegra: Drop ARCH_SUPPORTS_MSI and sort list
      ARM: dts: vf610-twr: enable i2c0 device
      ARM: dts: i.MX51: Add one more I2C2 pinmux entry
      ARM: dts: i.MX51: Move pins configuration under "iomuxc" label
      ARM: dtsi: imx6qdl-sabresd: Add USB OTG vbus pin to pinctrl_hog
      ARM: dtsi: imx6qdl-sabresd: Add USB host 1 VBUS regulator
      ARM: dts: imx27-phytec-phycore-som: Enable AUDMUX
      ARM: dts: i.MX27: Disable AUDMUX in the template
      ARM: dts: wandboard: Add support for SDIO bcm4329
      ARM: i.MX5 clocks: Remove optional clock setup (CKIH1) from i.MX51 template
      ARM: dts: imx53-qsb: Make USBH1 functional
      ARM i.MX6Q: dts: Enable I2C1 with EEPROM and PMIC on Phytec phyFLEX-i.MX6 Ouad module
      ARM i.MX6Q: dts: Enable SPI NOR flash on Phytec phyFLEX-i.MX6 Ouad module
      ARM: dts: imx6qdl-sabresd: Add touchscreen support
      ARM: imx: add ocram clock for imx53
      ARM: dts: imx: ocram size is different between imx6q and imx6dl
      ARM: dts: imx27-phytec-phycore-som: Fix regulator settings
      ARM: dts: i.MX27: Remove clock name from CPU node
      ...

commit 816434ec4a674fcdb3c2221a6dffdc8f34020550
Merge: f357a82 36bd621
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 4 11:55:10 2013 -0700

    Merge branch 'x86-spinlocks-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 spinlock changes from Ingo Molnar:
     "The biggest change here are paravirtualized ticket spinlocks (PV
      spinlocks), which bring a nice speedup on various benchmarks.
    
      The KVM host side will come to you via the KVM tree"
    
    * 'x86-spinlocks-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/kvm/guest: Fix sparse warning: "symbol 'klock_waiting' was not declared as static"
      kvm: Paravirtual ticketlocks support for linux guests running on KVM hypervisor
      kvm guest: Add configuration support to enable debug information for KVM Guests
      kvm uapi: Add KICK_CPU and PV_UNHALT definition to uapi
      xen, pvticketlock: Allow interrupts to be enabled while blocking
      x86, ticketlock: Add slowpath logic
      jump_label: Split jumplabel ratelimit
      x86, pvticketlock: When paravirtualizing ticket locks, increment by 2
      x86, pvticketlock: Use callee-save for lock_spinning
      xen, pvticketlocks: Add xen_nopvspin parameter to disable xen pv ticketlocks
      xen, pvticketlock: Xen implementation for PV ticket locks
      xen: Defer spinlock setup until boot CPU setup
      x86, ticketlock: Collapse a layer of functions
      x86, ticketlock: Don't inline _spin_unlock when using paravirt spinlocks
      x86, spinlock: Replace pv spinlocks with pv ticketlocks

commit cb3e4330e697dffaf3d9cefebc9c7e7d39c89f2e
Merge: aafcd5d 30e46b5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 4 09:39:26 2013 -0700

    Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 mm changes from Ingo Molnar:
     "Misc smaller fixes:
    
       - a parse_setup_data() boot crash fix
    
       - a memblock and an __early_ioremap cleanup
    
       - turn the always-on CONFIG_ARCH_MEMORY_PROBE=y into a configurable
         option and turn it off - it's an unrobust debug facility, it
         shouldn't be enabled by default"
    
    * 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86: avoid remapping data in parse_setup_data()
      x86: Use memblock_set_current_limit() to set limit for memblock.
      mm: Remove unused variable idx0 in __early_ioremap()
      mm/hotplug, x86: Disable ARCH_MEMORY_PROBE by default

commit aafcd5d75797ac423f6a03ce1f801933d4b114dc
Merge: 6832d96 a021506
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 4 09:38:10 2013 -0700

    Merge branch 'x86-kaslr-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 relocation changes from Ingo Molnar:
     "This tree contains a single change, ELF relocation handling in C - one
      of the kernel randomization patches that makes sense even without
      randomization present upstream"
    
    * 'x86-kaslr-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, relocs: Move ELF relocation handling to C

commit 228abe73ad67665d71eacd6a8a347dd76b0115ae
Merge: 1f9c52e 765d5b9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 4 09:12:17 2013 -0700

    Merge branch 'x86-fb-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 fb changes from Ingo Molnar:
     "This tree includes preparatory patches for SimpleDRM driver support,
      by David Herrmann.  They clean up x86 framebuffer support by creating
      simplefb devices wherever possible.  More background can be found at
    
         http://lwn.net/Articles/558104/"
    
    * 'x86-fb-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      fbdev: fbcon: select VT_HW_CONSOLE_BINDING
      fbdev: efifb: bind to efi-framebuffer
      fbdev: vesafb: bind to platform-framebuffer device
      fbdev: simplefb: add common x86 RGB formats
      x86: sysfb: move EFI quirks from efifb to sysfb
      x86: provide platform-devices for boot-framebuffers
      fbdev: simplefb: mark as fw and allocate apertures
      fbdev: simplefb: add init through platform_data

commit 0d99b7087324978b09b59d8c7a0736214c4a42b1
Merge: 4689550 ae23bff 61bf86a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 4 08:25:35 2013 -0700

    Merge branches 'perf-urgent-for-linus' and 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull perf changes from Ingo Molnar:
     "As a first remark I'd like to point out that the obsolete '-f'
      (--force) option, which has not done anything for several releases,
      has been removed from 'perf record' and related utilities.  Everyone
      please update muscle memory accordingly! :-)
    
      Main changes on the perf kernel side:
    
       - Performance optimizations:
            . for trace events, by Steve Rostedt.
            . for time values, by Peter Zijlstra
    
       - New hardware support:
            . for Intel Silvermont (22nm Atom) CPUs, by Zheng Yan
            . for Intel SNB-EP uncore PMUs, by Zheng Yan
    
       - Enhanced hardware support:
            . for Intel uncore PMUs: add filter support for QPI boxes, by Zheng Yan
    
       - Core perf events code enhancements and fixes:
            . for full-nohz feature handling, by Frederic Weisbecker
            . for group events, by Jiri Olsa
            . for call chains, by Frederic Weisbecker
            . for event stream parsing, by Adrian Hunter
    
       - New ABI details:
            . Add attr->mmap2 attribute, by Stephane Eranian
            . Add PERF_EVENT_IOC_ID ioctl to return event ID, by Jiri Olsa
            . Export u64 time_zero on the mmap header page to allow TSC
              calculation, by Adrian Hunter
            . Add dummy software event, by Adrian Hunter.
            . Add a new PERF_SAMPLE_IDENTIFIER to make samples always
              parseable, by Adrian Hunter.
            . Make Power7 events available via sysfs, by Runzhen Wang.
    
       - Code cleanups and refactorings:
            . for nohz-full, by Frederic Weisbecker
            . for group events, by Jiri Olsa
    
       - Documentation updates:
            . for perf_event_type, by Peter Zijlstra
    
      Main changes on the perf tooling side (some of these tooling changes
      utilize the above kernel side changes):
    
       - Lots of 'perf trace' enhancements:
    
            . Make 'perf trace' command line arguments consistent with
              'perf record', by David Ahern.
    
            . Allow specifying syscalls a la strace, by Arnaldo Carvalho de Melo.
    
            . Add --verbose and -o/--output options, by Arnaldo Carvalho de Melo.
    
            . Support ! in -e expressions, to filter a list of syscalls,
              by Arnaldo Carvalho de Melo.
    
            . Arg formatting improvements to allow masking arguments in
              syscalls such as futex and open, where the some arguments are
              ignored and thus should not be printed depending on other args,
              by Arnaldo Carvalho de Melo.
    
            . Beautify futex open, openat, open_by_handle_at, lseek and futex
              syscalls, by Arnaldo Carvalho de Melo.
    
            . Add option to analyze events in a file versus live, so that
              one can do:
    
               [root@zoo ~]# perf record -a -e raw_syscalls:* sleep 1
               [ perf record: Woken up 0 times to write data ]
               [ perf record: Captured and wrote 25.150 MB perf.data (~1098836 samples) ]
               [root@zoo ~]# perf trace -i perf.data -e futex --duration 1
                  17.799 ( 1.020 ms): 7127 futex(uaddr: 0x7fff3f6c6674, op: 393, val: 1, utime: 0x7fff3f6c6470, ua
                 113.344 (95.429 ms): 7127 futex(uaddr: 0x7fff3f6c6674, op: 393, val: 1, utime: 0x7fff3f6c6470, uaddr2: 0x7fff3f6c6648, val3: 4294967
                 133.778 ( 1.042 ms): 18004 futex(uaddr: 0x7fff3f6c6674, op: 393, val: 1, utime: 0x7fff3f6c6470, uaddr2: 0x7fff3f6c6648, val3: 429496
               [root@zoo ~]#
    
              By David Ahern.
    
            . Honor target pid / tid options when analyzing a file, by David Ahern.
    
            . Introduce better formatting of syscall arguments, including so
              far beautifiers for mmap, madvise, syscall return values,
              by Arnaldo Carvalho de Melo.
    
            . Handle HUGEPAGE defines in the mmap beautifier, by David Ahern.
    
       - 'perf report/top' enhancements:
    
            . Do annotation using /proc/kcore and /proc/kallsyms when
              available, removing the forced need for a vmlinux file kernel
              assembly annotation. This also improves this use case because
              vmlinux has just the initial kernel image, not what is actually
              in use after various code patchings by things like alternatives.
              By Adrian Hunter.
    
            . Add --ignore-callees=<regex> option to collapse undesired parts
              of call graphs, by Greg Price.
    
            . Simplify symbol filtering by doing it at machine class level,
              by Adrian Hunter.
    
            . Add support for callchains in the gtk UI, by Namhyung Kim.
    
            . Add --objdump option to 'perf top', by Sukadev Bhattiprolu.
    
       - 'perf kvm' enhancements:
    
            . Add option to print only events that exceed a specified time
              duration, by David Ahern.
    
            . Improve stack trace printing, by David Ahern.
    
            . Update documentation of the live command, by David Ahern
    
            . Add perf kvm stat live mode that combines aspects of 'perf kvm
              stat' record and report, by David Ahern.
    
            . Add option to analyze specific VM in perf kvm stat report, by
              David Ahern.
    
            . Do not require /lib/modules/* on a guest, by Jason Wessel.
    
       - 'perf script' enhancements:
    
            . Fix symbol offset computation for some dsos, by David Ahern.
    
            . Fix named threads support, by David Ahern.
    
            . Don't install scripting files files when perl/python support
              is disabled, by Arnaldo Carvalho de Melo.
    
       - 'perf test' enhancements:
    
            . Add various improvements and fixes to the "vmlinux matches
              kallsyms" 'perf test' entry, related to the /proc/kcore
              annotation feature. By Adrian Hunter.
    
            . Add sample parsing test, by Adrian Hunter.
    
            . Add test for reading object code, by Adrian Hunter.
    
            . Add attr record group sampling test, by Jiri Olsa.
    
            . Misc testing infrastructure improvements and other details,
              by Jiri Olsa.
    
       - 'perf list' enhancements:
    
            . Skip unsupported hardware events, by Namhyung Kim.
    
            . List pmu events, by Andi Kleen.
    
       - 'perf diff' enhancements:
    
            . Add support for more than two files comparison, by Jiri Olsa.
    
       - 'perf sched' enhancements:
    
            . Various improvements, including removing reliance on some
              scheduler tracepoints that provide the same information as the
              PERF_RECORD_{FORK,EXIT} events. By David Ahern.
    
            . Remove odd build stall by moving a large struct initialization
              from a local variable to a global one, by Namhyung Kim.
    
       - 'perf stat' enhancements:
    
            . Add --initial-delay option to skip measuring for a defined
              startup phase, by Andi Kleen.
    
       - Generic perf tooling infrastructure/plumbing changes:
    
            . Tidy up sample parsing validation, by Adrian Hunter.
    
            . Fix up jobserver setup in libtraceevent Makefile.
              by Arnaldo Carvalho de Melo.
    
            . Debug improvements, by Adrian Hunter.
    
            . Fix correlation of samples coming after PERF_RECORD_EXIT event,
              by David Ahern.
    
            . Improve robustness of the topology parsing code,
              by Stephane Eranian.
    
            . Add group leader sampling, that allows just one event in a group
              to sample while the other events have just its values read,
              by Jiri Olsa.
    
            . Add support for a new modifier "D", which requests that the
              event, or group of events, be pinned to the PMU.
              By Michael Ellerman.
    
            . Support callchain sorting based on addresses, by Andi Kleen
    
            . Prep work for multi perf data file storage, by Jiri Olsa.
    
            . libtraceevent cleanups, by Namhyung Kim.
    
      And lots and lots of other fixes and code reorganizations that did not
      make it into the list, see the shortlog, diffstat and the Git log for
      details!"
    
    [ Also merge a leftover from the 3.11 cycle ]
    
    * 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      perf: Prevent race in unthrottling code
    
    * 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (237 commits)
      perf trace: Tell arg formatters the arg index
      perf trace: Add beautifier for open's flags arg
      perf trace: Add beautifier for lseek's whence arg
      perf tools: Fix symbol offset computation for some dsos
      perf list: Skip unsupported events
      perf tests: Add 'keep tracking' test
      perf tools: Add support for PERF_COUNT_SW_DUMMY
      perf: Add a dummy software event to keep tracking
      perf trace: Add beautifier for futex 'operation' parm
      perf trace: Allow syscall arg formatters to mask args
      perf: Convert kmalloc_node(...GFP_ZERO...) to kzalloc_node()
      perf: Export struct perf_branch_entry to userspace
      perf: Add attr->mmap2 attribute to an event
      perf/x86: Add Silvermont (22nm Atom) support
      perf/x86: use INTEL_UEVENT_EXTRA_REG to define MSR_OFFCORE_RSP_X
      perf trace: Handle missing HUGEPAGE defines
      perf trace: Honor target pid / tid options when analyzing a file
      perf trace: Add option to analyze events in a file versus live
      perf evlist: Add tracepoint lookup by name
      perf tests: Add a sample parsing test
      ...

commit 542a086ac72fb193cbc1b996963a572269e57743
Merge: 1d1fdd9 1eeeef1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Sep 3 11:37:15 2013 -0700

    Merge tag 'driver-core-3.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core
    
    Pull driver core patches from Greg KH:
     "Here's the big driver core pull request for 3.12-rc1.
    
      Lots of tiny changes here fixing up the way sysfs attributes are
      created, to try to make drivers simpler, and fix a whole class race
      conditions with creations of device attributes after the device was
      announced to userspace.
    
      All the various pieces are acked by the different subsystem
      maintainers"
    
    * tag 'driver-core-3.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core: (119 commits)
      firmware loader: fix pending_fw_head list corruption
      drivers/base/memory.c: introduce help macro to_memory_block
      dynamic debug: line queries failing due to uninitialized local variable
      sysfs: sysfs_create_groups returns a value.
      debugfs: provide debugfs_create_x64() when disabled
      rbd: convert bus code to use bus_groups
      firmware: dcdbas: use binary attribute groups
      sysfs: add sysfs_create/remove_groups for when SYSFS is not enabled
      driver core: add #include <linux/sysfs.h> to core files.
      HID: convert bus code to use dev_groups
      Input: serio: convert bus code to use drv_groups
      Input: gameport: convert bus code to use drv_groups
      driver core: firmware: use __ATTR_RW()
      driver core: core: use DEVICE_ATTR_RO
      driver core: bus: use DRIVER_ATTR_WO()
      driver core: create write-only attribute macros for devices and drivers
      sysfs: create __ATTR_WO()
      driver-core: platform: convert bus code to use dev_groups
      workqueue: convert bus code to use dev_groups
      MEI: convert bus code to use dev_groups
      ...

commit bc08b449ee14ace4d869adaa1bb35a44ce68d775
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 2 12:12:15 2013 -0700

    lockref: implement lockless reference count updates using cmpxchg()
    
    Instead of taking the spinlock, the lockless versions atomically check
    that the lock is not taken, and do the reference count update using a
    cmpxchg() loop.  This is semantically identical to doing the reference
    count update protected by the lock, but avoids the "wait for lock"
    contention that you get when accesses to the reference count are
    contended.
    
    Note that a "lockref" is absolutely _not_ equivalent to an atomic_t.
    Even when the lockref reference counts are updated atomically with
    cmpxchg, the fact that they also verify the state of the spinlock means
    that the lockless updates can never happen while somebody else holds the
    spinlock.
    
    So while "lockref_put_or_lock()" looks a lot like just another name for
    "atomic_dec_and_lock()", and both optimize to lockless updates, they are
    fundamentally different: the decrement done by atomic_dec_and_lock() is
    truly independent of any lock (as long as it doesn't decrement to zero),
    so a locked region can still see the count change.
    
    The lockref structure, in contrast, really is a *locked* reference
    count.  If you hold the spinlock, the reference count will be stable and
    you can modify the reference count without using atomics, because even
    the lockless updates will see and respect the state of the lock.
    
    In order to enable the cmpxchg lockless code, the architecture needs to
    do three things:
    
     (1) Make sure that the "arch_spinlock_t" and an "unsigned int" can fit
         in an aligned u64, and have a "cmpxchg()" implementation that works
         on such a u64 data type.
    
     (2) define a helper function to test for a spinlock being unlocked
         ("arch_spin_value_unlocked()")
    
     (3) select the "ARCH_USE_CMPXCHG_LOCKREF" config variable in its
         Kconfig file.
    
    This enables it for x86-64 (but not 32-bit, we'd need to make sure
    cmpxchg() turns into the proper cmpxchg8b in order to enable it for
    32-bit mode).
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit bf2206957c7228d047fd50d07da8f1d92d0bc686
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Tue Aug 20 21:38:03 2013 +0200

    Kconfig: Remove hotplug enable hints in CONFIG_KEXEC help texts
    
    commit 40b313608ad4ea655addd2ec6cdd106477ae8e15 ("Finally eradicate
    CONFIG_HOTPLUG") removed remaining references to CONFIG_HOTPLUG, but missed
    a few plain English references in the CONFIG_KEXEC help texts.
    
    Remove them, too.
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Acked-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebd97be635bff43239f391a49c78b98818c589fe
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Fri Aug 9 22:27:07 2013 +0200

    PCI: remove ARCH_SUPPORTS_MSI kconfig option
    
    Now that we have weak versions for each of the PCI MSI architecture
    functions, we can actually build the MSI support for all platforms,
    regardless of whether they provide or not architecture-specific
    versions of those functions. For this reason, the ARCH_SUPPORTS_MSI
    hidden kconfig boolean becomes useless, and this patch gets rid of it.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Tested-by: Daniel Price <daniel.price@gmail.com>
    Tested-by: Thierry Reding <thierry.reding@gmail.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: linuxppc-dev@lists.ozlabs.org
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: linux390@de.ibm.com
    Cc: linux-s390@vger.kernel.org
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: x86@kernel.org
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: linux-ia64@vger.kernel.org
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: David S. Miller <davem@davemloft.net>
    Cc: sparclinux@vger.kernel.org
    Cc: Chris Metcalf <cmetcalf@tilera.com>
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>

commit 1e20eb8557cdabf76473b09572be8aa8a2bb9bc0
Author: Srivatsa Vaddagiri <vatsa@linux.vnet.ibm.com>
Date:   Fri Aug 9 19:52:01 2013 +0530

    kvm guest: Add configuration support to enable debug information for KVM Guests
    
    Signed-off-by: Srivatsa Vaddagiri <vatsa@linux.vnet.ibm.com>
    Link: http://lkml.kernel.org/r/1376058122-8248-14-git-send-email-raghavendra.kt@linux.vnet.ibm.com
    Signed-off-by: Suzuki Poulose <suzuki@in.ibm.com>
    Signed-off-by: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>
    Acked-by: Gleb Natapov <gleb@redhat.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 8db732668a48e93d00d881517a08136e8fa71000
Author: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>
Date:   Fri Aug 9 19:51:50 2013 +0530

    x86, ticketlock: Don't inline _spin_unlock when using paravirt spinlocks
    
    The code size expands somewhat, and its better to just call
    a function rather than inline it.
    
    Thanks Jeremy for original version of ARCH_NOINLINE_SPIN_UNLOCK config patch,
    which is simplified.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Raghavendra K T <raghavendra.kt@linux.vnet.ibm.com>
    Link: http://lkml.kernel.org/r/1376058122-8248-3-git-send-email-raghavendra.kt@linux.vnet.ibm.com
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit a02150610776f66b40257624822a879311592bb2
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Jul 8 09:15:17 2013 -0700

    x86, relocs: Move ELF relocation handling to C
    
    Moves the relocation handling into C, after decompression. This requires
    that the decompressed size is passed to the decompression routine as
    well so that relocations can be found. Only kernels that need relocation
    support will use the code (currently just x86_32), but this is laying
    the ground work for 64-bit using it in support of KASLR.
    
    Based on work by Neill Clift and Michael Davidson.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: http://lkml.kernel.org/r/20130708161517.GA4832@www.outflux.net
    Acked-by: Zhang Yanfei <zhangyanfei@cn.fujitsu.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit e3263ab389a7bc9398c3d366819d6f39b9cfd677
Author: David Herrmann <dh.herrmann@gmail.com>
Date:   Fri Aug 2 14:05:22 2013 +0200

    x86: provide platform-devices for boot-framebuffers
    
    The current situation regarding boot-framebuffers (VGA, VESA/VBE, EFI) on
    x86 causes troubles when loading multiple fbdev drivers. The global
    "struct screen_info" does not provide any state-tracking about which
    drivers use the FBs. request_mem_region() theoretically works, but
    unfortunately vesafb/efifb ignore it due to quirks for broken boards.
    
    Avoid this by creating a platform framebuffer devices with a pointer
    to the "struct screen_info" as platform-data. Drivers can now create
    platform-drivers and the driver-core will refuse multiple drivers being
    active simultaneously.
    
    We keep the screen_info available for backwards-compatibility. Drivers
    can be converted in follow-up patches.
    
    Different devices are created for VGA/VESA/EFI FBs to allow multiple
    drivers to be loaded on distro kernels. We create:
     - "vesa-framebuffer" for VBE/VESA graphics FBs
     - "efi-framebuffer" for EFI FBs
     - "platform-framebuffer" for everything else
    This allows to load vesafb, efifb and others simultaneously and each
    picks up only the supported FB types.
    
    Apart from platform-framebuffer devices, this also introduces a
    compatibility option for "simple-framebuffer" drivers which recently got
    introduced for OF based systems. If CONFIG_X86_SYSFB is selected, we
    try to match the screen_info against a simple-framebuffer supported
    format. If we succeed, we create a "simple-framebuffer" device instead
    of a platform-framebuffer.
    This allows to reuse the simplefb.c driver across architectures and also
    to introduce a SimpleDRM driver. There is no need to have vesafb.c,
    efifb.c, simplefb.c and more just to have architecture specific quirks
    in their setup-routines.
    
    Instead, we now move the architecture specific quirks into x86-setup and
    provide a generic simple-framebuffer. For backwards-compatibility (if
    strange formats are used), we still allow vesafb/efifb to be loaded
    simultaneously and pick up all remaining devices.
    
    Signed-off-by: David Herrmann <dh.herrmann@gmail.com>
    Link: http://lkml.kernel.org/r/1375445127-15480-4-git-send-email-dh.herrmann@gmail.com
    Tested-by: Stephen Warren <swarren@nvidia.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit a0842b704b0f7c2d925473676f2012ea5dc39976
Author: Toshi Kani <toshi.kani@hp.com>
Date:   Fri Jul 19 11:47:48 2013 -0600

    mm/hotplug, x86: Disable ARCH_MEMORY_PROBE by default
    
    CONFIG_ARCH_MEMORY_PROBE enables the
    /sys/devices/system/memory/probe interface, which allows a given
    memory address to be hot-added as follows:
    
     # echo start_address_of_new_memory > /sys/devices/system/memory/probe
    
    (See Documentation/memory-hotplug.txt for more details.)
    
    This probe interface is required on powerpc. On x86, however,
    ACPI notifies a memory hotplug event to the kernel, which
    performs its hotplug operation as the result.
    
    Therefore, regular users do not need this interface on x86. This probe
    interface is also error-prone and misleading that the kernel blindly
    adds a given memory address without checking if the memory is present
    on the system; no probing is done despite of its name.
    
    The kernel crashes when a user requests to online a memory block
    that is not present on the system. This interface is currently
    used for testing as it can fake a hotplug event.
    
    This patch disables CONFIG_ARCH_MEMORY_PROBE by default on x86,
    adds its Kconfig menu entry on x86, and clarifies its use in
    Documentation/ memory-hotplug.txt.
    
    Signed-off-by: Toshi Kani <toshi.kani@hp.com>
    Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
    Cc: linux-mm@kvack.org
    Cc: dave@sr71.net
    Cc: isimatu.yasuaki@jp.fujitsu.com
    Cc: tangchen@cn.fujitsu.com
    Cc: vasilis.liaskovitis@profitbricks.com
    Link: http://lkml.kernel.org/r/1374256068-26016-1-git-send-email-toshi.kani@hp.com
    [ Edited it slightly. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit ea8596bb2d8d37957f3e92db9511c50801689180
Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Date:   Thu Jul 18 20:47:53 2013 +0900

    kprobes/x86: Remove unused text_poke_smp() and text_poke_smp_batch() functions
    
    Since introducing the text_poke_bp() for all text_poke_smp*()
    callers, text_poke_smp*() are now unused. This patch basically
    reverts:
    
      3d55cc8a058e ("x86: Add text_poke_smp for SMP cross modifying code")
      7deb18dcf047 ("x86: Introduce text_poke_smp_batch() for batch-code modifying")
    
    and related commits.
    
    This patch also fixes a Kconfig dependency issue on STOP_MACHINE
    in the case of CONFIG_SMP && !CONFIG_MODULE_UNLOAD.
    
    Signed-off-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Reviewed-by: Jiri Kosina <jkosina@suse.cz>
    Cc: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Jason Baron <jbaron@akamai.com>
    Cc: yrl.pp-manager.tt@hitachi.com
    Cc: Borislav Petkov <bpetkov@suse.de>
    Link: http://lkml.kernel.org/r/20130718114753.26675.18714.stgit@mhiramat-M0-7522
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit f9b493ac9b833fd9dd3bbd50460adb33f29e1238
Author: Kyungsik Lee <kyungsik.lee@lge.com>
Date:   Mon Jul 8 16:01:48 2013 -0700

    arm: add support for LZ4-compressed kernel
    
    Integrates the LZ4 decompression code to the arm pre-boot code.
    
    Signed-off-by: Kyungsik Lee <kyungsik.lee@lge.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Russell King <rmk@arm.linux.org.uk>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Florian Fainelli <florian@openwrt.org>
    Cc: Yann Collet <yann.collet.73@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit e61aca5158a84932cf9fbbcbf8aef9cef63f5026
Merge: da67db4 92aef8fb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 4 11:25:51 2013 -0700

    Merge branch 'kconfig-diet' from Dave Hansen
    
    Merge Kconfig menu diet patches from Dave Hansen:
     "I think the "Kernel Hacking" menu has gotten a bit out of hand.  It is
      over 120 lines long on my system with everything enabled and options
      are scattered around it haphazardly.
    
            http://sr71.net/~dave/linux/kconfig-horror.png
    
      Let's try to introduce some sanity.  This set takes that 120 lines
      down to 55 and makes it vastly easier to find some things.  It's a
      start.
    
      This set stands on its own, but there is plenty of room for follow-up
      patches.  The arch-specific debug options still end up getting stuck
      in the top-level "kernel hacking" menu.  OPTIMIZE_INLINING, for
      instance, could obviously go in to the "compiler options" menu, but
      the fact that it is defined in arch/ in a separate Kconfig file keeps
      it on its own for the moment.
    
      The Signed-off-by's in here look funky.  I changed employers while
      working on this set, so I have signoffs from both email addresses"
    
    * emailed patches from Dave Hansen <dave@sr71.net>:
      hang and lockup detection menu
      kconfig: consolidate printk options
      group locking debugging options
      consolidate compilation option configs
      consolidate runtime testing configs
      order memory debugging Kconfig options
      consolidate per-arch stack overflow debugging options

commit d1a1dc0be866219f7a613c6368c6a036b8eefe03
Author: Dave Hansen <dave@linux.vnet.ibm.com>
Date:   Mon Jul 1 13:04:42 2013 -0700

    consolidate per-arch stack overflow debugging options
    
    Original posting:
    
    	http://lkml.kernel.org/r/20121214184202.F54094D9@kernel.stglabs.ibm.com
    
    Several architectures have similar stack debugging config options.
    They all pretty much do the same thing, some with slightly
    differing help text.
    
    This patch changes the architectures to instead enable a Kconfig
    boolean, and then use that boolean in the generic Kconfig.debug
    to present the actual menu option.  This removes a bunch of
    duplication and adds consistency across arches.
    
    Signed-off-by: Dave Hansen <dave@linux.vnet.ibm.com>
    Reviewed-by: H. Peter Anvin <hpa@zytor.com>
    Reviewed-by: James Hogan <james.hogan@imgtec.com>
    Acked-by: Chris Metcalf <cmetcalf@tilera.com> [for tile]
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit fdf90abc00979fb2d61dbdba9e855200e236142b
Author: Alexandre Bounine <alexandre.bounine@idt.com>
Date:   Wed Jul 3 15:08:56 2013 -0700

    rapidio: add modular build option for the subsystem core
    
    Add a configuration option to build RapidIO subsystem core code as a
    loadable kernel module.  Currently this option is available only for
    x86-based platforms, with the additional patch for PowerPC planned to be
    provided later.
    
    This patch replaces kernel command line parameter "riohdid=" with its
    module-specific analog "rapidio.hdid=".
    
    Signed-off-by: Alexandre Bounine <alexandre.bounine@idt.com>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Cc: Li Yang <leoli@freescale.com>
    Cc: Kumar Gala <galak@kernel.crashing.org>
    Cc: Andre van Herk <andre.van.herk@Prodrive.nl>
    Cc: Micha Nelissen <micha.nelissen@Prodrive.nl>
    Cc: Stef van Os <stef.van.os@Prodrive.nl>
    Cc: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 0f8975ec4db2c8b5bd111b211292ca9be0feb6b8
Author: Pavel Emelyanov <xemul@parallels.com>
Date:   Wed Jul 3 15:01:20 2013 -0700

    mm: soft-dirty bits for user memory changes tracking
    
    The soft-dirty is a bit on a PTE which helps to track which pages a task
    writes to.  In order to do this tracking one should
    
      1. Clear soft-dirty bits from PTEs ("echo 4 > /proc/PID/clear_refs)
      2. Wait some time.
      3. Read soft-dirty bits (55'th in /proc/PID/pagemap2 entries)
    
    To do this tracking, the writable bit is cleared from PTEs when the
    soft-dirty bit is.  Thus, after this, when the task tries to modify a
    page at some virtual address the #PF occurs and the kernel sets the
    soft-dirty bit on the respective PTE.
    
    Note, that although all the task's address space is marked as r/o after
    the soft-dirty bits clear, the #PF-s that occur after that are processed
    fast.  This is so, since the pages are still mapped to physical memory,
    and thus all the kernel does is finds this fact out and puts back
    writable, dirty and soft-dirty bits on the PTE.
    
    Another thing to note, is that when mremap moves PTEs they are marked
    with soft-dirty as well, since from the user perspective mremap modifies
    the virtual memory at mremap's new address.
    
    Signed-off-by: Pavel Emelyanov <xemul@parallels.com>
    Cc: Matt Mackall <mpm@selenic.com>
    Cc: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>
    Cc: Glauber Costa <glommer@parallels.com>
    Cc: Marcelo Tosatti <mtosatti@redhat.com>
    Cc: KOSAKI Motohiro <kosaki.motohiro@gmail.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 1873e50028ce87dd9014049c86d71a898fa02166
Merge: fb2af00 aa729dc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 3 10:31:38 2013 -0700

    Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/cmarinas/linux-aarch64
    
    Pull ARM64 updates from Catalin Marinas:
     "Main features:
       - KVM and Xen ports to AArch64
       - Hugetlbfs and transparent huge pages support for arm64
       - Applied Micro X-Gene Kconfig entry and dts file
       - Cache flushing improvements
    
      For arm64 huge pages support, there are x86 changes moving part of
      arch/x86/mm/hugetlbpage.c into mm/hugetlb.c to be re-used by arm64"
    
    * tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/cmarinas/linux-aarch64: (66 commits)
      arm64: Add initial DTS for APM X-Gene Storm SOC and APM Mustang board
      arm64: Add defines for APM ARMv8 implementation
      arm64: Enable APM X-Gene SOC family in the defconfig
      arm64: Add Kconfig option for APM X-Gene SOC family
      arm64/Makefile: provide vdso_install target
      ARM64: mm: THP support.
      ARM64: mm: Raise MAX_ORDER for 64KB pages and THP.
      ARM64: mm: HugeTLB support.
      ARM64: mm: Move PTE_PROT_NONE bit.
      ARM64: mm: Make PAGE_NONE pages read only and no-execute.
      ARM64: mm: Restore memblock limit when map_mem finished.
      mm: thp: Correct the HPAGE_PMD_ORDER check.
      x86: mm: Remove general hugetlb code from x86.
      mm: hugetlb: Copy general hugetlb code from x86 to mm.
      x86: mm: Remove x86 version of huge_pmd_share.
      mm: hugetlb: Copy huge_pmd_share from x86 to mm.
      arm64: KVM: document kernel object mappings in HYP
      arm64: KVM: MAINTAINERS update
      arm64: KVM: userspace API documentation
      arm64: KVM: enable initialization of a 32bit vcpu
      ...

commit 52e8ad9066b57510e600acc4bbc4455a81732c6c
Merge: 1982269 cb7b802
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jul 2 16:29:48 2013 -0700

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 platform updates from Ingo Molnar:
     "Two changes:
    
       - A Kconfig dependency fix/cleanup
    
       - Introduce the 'make kvmconfig' KVM configuration helper utility
         that turns the current .config into a KVM-bootable config.  Useful
         for debugging specific native kernel configs that have no KVM
         config options enabled on VM setups."
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/platform: Make X86_GOLDFISH depend on X86_EXTENDED_PLATFORM
      x86/platform: Add kvmconfig to the phony targets
      x86, platform, kvm, kconfig: Turn existing .config's into KVM-capable configs

commit fdd78889aad2ec85b2f5a8ed232215dca7a22a3b
Merge: d652df0 9608d33b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jul 2 16:28:10 2013 -0700

    Merge branch 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 microcode loading update from Ingo Molnar:
     "Two main changes that improve microcode loading on AMD CPUs:
    
       - Add support for all-in-one binary microcode files that concatenate
         the microcode images of multiple processor families, by Jacob Shin
    
       - Add early microcode loading (embedded in the initrd) support, also
         by Jacob Shin"
    
    * 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, microcode, amd: Another early loading fixup
      x86, microcode, amd: Allow multiple families' bin files appended together
      x86, microcode, amd: Make find_ucode_in_initrd() __init
      x86, microcode, amd: Fix warnings and errors on with CONFIG_MICROCODE=m
      x86, microcode, amd: Early microcode patch loading support for AMD
      x86, microcode, amd: Refactor functions to prepare for early loading
      x86, microcode: Vendor abstract out save_microcode_in_initrd()
      x86, microcode, intel: Correct typo in printk

commit cb7b80237a9f41edf2ebd899bc6a443db05578c5
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon Jun 24 01:05:25 2013 +0100

    x86/platform: Make X86_GOLDFISH depend on X86_EXTENDED_PLATFORM
    
    All non-PC platforms are supposed to be dependent on this
    option.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Cc: Jun Nakajima <jnakajim@gmail.com>
    Link: http://lkml.kernel.org/n/tip-Bcihhqhstm67fchjnkxoiJbu@git.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit b5aef682e00c424bb2f55639168083b61803a012
Merge: 90f89081 9e895ac
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Jun 24 15:14:43 2013 -0700

    Merge 3.10-rc7 into driver-core-next
    
    We want the firmware merge fixes, and other bits, in here now.
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1603990ea626668c78527376d9ec084d634202d
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Jun 18 12:33:40 2013 -0700

    x86: fix build error and kconfig for ia32_emulation and binfmt
    
    Fix kconfig warning and build errors on x86_64 by selecting BINFMT_ELF
    when COMPAT_BINFMT_ELF is being selected.
    
    warning: (IA32_EMULATION) selects COMPAT_BINFMT_ELF which has unmet direct dependencies (COMPAT && BINFMT_ELF)
    
    fs/built-in.o: In function `elf_core_dump':
    compat_binfmt_elf.c:(.text+0x3e093): undefined reference to `elf_core_extra_phdrs'
    compat_binfmt_elf.c:(.text+0x3ebcd): undefined reference to `elf_core_extra_data_size'
    compat_binfmt_elf.c:(.text+0x3eddd): undefined reference to `elf_core_write_extra_phdrs'
    compat_binfmt_elf.c:(.text+0x3f004): undefined reference to `elf_core_write_extra_data'
    
    [ hpa: This was sent to me for -next but it is a low risk build fix ]
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: http://lkml.kernel.org/r/51C0B614.5000708@infradead.org
    Cc: <stable@vger.kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 53313b2c9130a54dece8595c5a77fd787f340433
Author: Steve Capper <steve.capper@linaro.org>
Date:   Tue Apr 30 08:03:42 2013 +0100

    x86: mm: Remove general hugetlb code from x86.
    
    huge_pte_alloc, huge_pte_offset and follow_huge_p[mu]d have
    already been copied over to mm.
    
    This patch removes the x86 copies of these functions and activates
    the general ones by enabling:
    CONFIG_ARCH_WANT_GENERAL_HUGETLB
    
    Signed-off-by: Steve Capper <steve.capper@linaro.org>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Acked-by: Andrew Morton <akpm@linux-foundation.org>

commit cfe28c5d63d86b558a1bf1990db7a0aa55b2dec9
Author: Steve Capper <steve.capper@linaro.org>
Date:   Mon Apr 29 14:29:48 2013 +0100

    x86: mm: Remove x86 version of huge_pmd_share.
    
    The huge_pmd_share code has been copied over to mm/hugetlb.c to
    make it accessible to other architectures.
    
    Remove the x86 copy of the huge_pmd_share code and enable the
    ARCH_WANT_HUGE_PMD_SHARE config flag. That way we reference the
    general one.
    
    Signed-off-by: Steve Capper <steve.capper@linaro.org>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Acked-by: Andrew Morton <akpm@linux-foundation.org>

commit 40b313608ad4ea655addd2ec6cdd106477ae8e15
Author: Stephen Rothwell <sfr@canb.auug.org.au>
Date:   Tue May 21 13:49:35 2013 +1000

    Finally eradicate CONFIG_HOTPLUG
    
    Ever since commit 45f035ab9b8f ("CONFIG_HOTPLUG should be always on"),
    it has been basically impossible to build a kernel with CONFIG_HOTPLUG
    turned off.  Remove all the remaining references to it.
    
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Doug Thompson <dougthompson@xmission.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Steven Whitehouse <swhiteho@redhat.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: "Rafael J. Wysocki" <rjw@sisk.pl>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Acked-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Acked-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b3389ac21b5e557b957f1497d0ff22bf733e8c3
Author: Jacob Shin <jacob.shin@amd.com>
Date:   Fri May 31 01:53:24 2013 -0500

    x86, microcode, amd: Fix warnings and errors on with CONFIG_MICROCODE=m
    
    Fix section mismatch warnings on microcode_amd_early.
    Compile error occurs when CONFIG_MICROCODE=m, change so that early
    loading depends on microcode_core.
    
    Reported-by: Yinghai Lu <yinghai@kernel.org>
    Reported-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Jacob Shin <jacob.shin@amd.com>
    Link: http://lkml.kernel.org/r/20130531150241.GA12006@jshin-Toonie
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 757885e94a22bcc82beb9b1445c95218cb20ceab
Author: Jacob Shin <jacob.shin@amd.com>
Date:   Thu May 30 14:09:19 2013 -0500

    x86, microcode, amd: Early microcode patch loading support for AMD
    
    Add early microcode patch loading support for AMD.
    
    Signed-off-by: Jacob Shin <jacob.shin@amd.com>
    Link: http://lkml.kernel.org/r/1369940959-2077-5-git-send-email-jacob.shin@amd.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>

commit cc51bf6e6d8b03bd459818492e0bc3bef09dcd74
Merge: 37cae5e b4f711e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 15 14:05:17 2013 -0700

    Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull timer fixes from Thomas Gleixner:
    
     - Cure for not using zalloc in the first place, which leads to random
       crashes with CPUMASK_OFF_STACK.
    
     - Revert a user space visible change which broke udev
    
     - Add a missing cpu_online early return introduced by the new full
       dyntick conversions
    
     - Plug a long standing race in the timer wheel cpu hotplug code.
       Sigh...
    
     - Cleanup NOHZ per cpu data on cpu down to prevent stale data on cpu
       up.
    
    * 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      time: Revert ALWAYS_USE_PERSISTENT_CLOCK compile time optimizaitons
      timer: Don't reinitialize the cpu base lock during CPU_UP_PREPARE
      tick: Don't invoke tick_nohz_stop_sched_tick() if the cpu is offline
      tick: Cleanup NOHZ per cpu data on cpu down
      tick: Use zalloc_cpumask_var for allocating offstack cpumasks

commit b4f711ee03d28f776fd2324fd0bd999cc428e4d2
Author: John Stultz <john.stultz@linaro.org>
Date:   Wed Apr 24 11:32:56 2013 -0700

    time: Revert ALWAYS_USE_PERSISTENT_CLOCK compile time optimizaitons
    
    Kay Sievers noted that the ALWAYS_USE_PERSISTENT_CLOCK config,
    which enables some minor compile time optimization to avoid
    uncessary code in mostly the suspend/resume path could cause
    problems for userland.
    
    In particular, the dependency for RTC_HCTOSYS on
    !ALWAYS_USE_PERSISTENT_CLOCK, which avoids setting the time
    twice and simplifies suspend/resume, has the side effect
    of causing the /sys/class/rtc/rtcN/hctosys flag to always be
    zero, and this flag is commonly used by udev to setup the
    /dev/rtc symlink to /dev/rtcN, which can cause pain for
    older applications.
    
    While the udev rules could use some work to be less fragile,
    breaking userland should strongly be avoided. Additionally
    the compile time optimizations are fairly minor, and the code
    being optimized is likely to be reworked in the future, so
    lets revert this change.
    
    Reported-by: Kay Sievers <kay@vrfy.org>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Cc: stable <stable@vger.kernel.org> #3.9
    Cc: Feng Tang <feng.tang@intel.com>
    Cc: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Link: http://lkml.kernel.org/r/1366828376-18124-1-git-send-email-john.stultz@linaro.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 5647ac0ad4f355817b788372a01cb293ed63bde4
Merge: 1763e73 f4c5405
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 9 09:59:16 2013 -0700

    Merge tag 'gpio-for-linus' of git://git.secretlab.ca/git/linux
    
    Pull removal of GENERIC_GPIO from Grant Likely:
     "GENERIC_GPIO now synonymous with GPIOLIB.  There are no longer any
      valid cases for enableing GENERIC_GPIO without GPIOLIB, even though it
      is possible to do so which has been causing confusion and breakage.
      This branch does the work to completely eliminate GENERIC_GPIO."
    
    * tag 'gpio-for-linus' of git://git.secretlab.ca/git/linux:
      gpio: update gpio Chinese documentation
      Remove GENERIC_GPIO config option
      Convert selectors of GENERIC_GPIO to GPIOLIB
      blackfin: force use of gpiolib
      m68k: coldfire: use gpiolib
      mips: pnx833x: remove requirement for GENERIC_GPIO
      openrisc: default GENERIC_GPIO to false
      avr32: default GENERIC_GPIO to false
      xtensa: remove explicit selection of GENERIC_GPIO
      sh: replace CONFIG_GENERIC_GPIO by CONFIG_GPIOLIB
      powerpc: remove redundant GENERIC_GPIO selection
      unicore32: default GENERIC_GPIO to false
      unicore32: remove unneeded select GENERIC_GPIO
      arm: plat-orion: use GPIO driver on CONFIG_GPIOLIB
      arm: remove redundant GENERIC_GPIO selection
      mips: alchemy: require gpiolib
      mips: txx9: change GENERIC_GPIO to GPIOLIB
      mips: loongson: use GPIO driver on CONFIG_GPIOLIB
      mips: remove redundant GENERIC_GPIO select

commit 446f24d1199e8a546ba7c97da3fbb9a505a94795
Author: Stephen Boyd <sboyd@codeaurora.org>
Date:   Tue Apr 30 15:28:42 2013 -0700

    Kconfig: consolidate CONFIG_DEBUG_STRICT_USER_COPY_CHECKS
    
    The help text for this config is duplicated across the x86, parisc, and
    s390 Kconfig.debug files.  Arnd Bergman noted that the help text was
    slightly misleading and should be fixed to state that enabling this
    option isn't a problem when using pre 4.4 gcc.
    
    To simplify the rewording, consolidate the text into lib/Kconfig.debug
    and modify it there to be more explicit about when you should say N to
    this config.
    
    Also, make the text a bit more generic by stating that this option
    enables compile time checks so we can cover architectures which emit
    warnings vs.  ones which emit errors.  The details of how an
    architecture decided to implement the checks isn't as important as the
    concept of compile time checking of copy_from_user() calls.
    
    While we're doing this, remove all the copy_from_user_overflow() code
    that's duplicated many times and place it into lib/ so that any
    architecture supporting this option can get the function for free.
    
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Acked-by: Helge Deller <deller@gmx.de>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Chris Metcalf <cmetcalf@tilera.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 1e2f5b598aa56c3978c2e623f72e9656a565c6c9
Merge: f9b3bcf 4d681be
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Apr 30 08:41:21 2013 -0700

    Merge branch 'x86-paravirt-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 paravirt update from Ingo Molnar:
     "Various paravirtualization related changes - the biggest one makes
      guest support optional via CONFIG_HYPERVISOR_GUEST"
    
    * 'x86-paravirt-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, wakeup, sleep: Use pvops functions for changing GDT entries
      x86, xen, gdt: Remove the pvops variant of store_gdt.
      x86-32, gdt: Store/load GDT for ACPI S3 or hibernation/resume path is not needed
      x86-64, gdt: Store/load GDT for ACPI S3 or hibernate/resume path is not needed.
      x86: Make Linux guest support optional
      x86, Kconfig: Move PARAVIRT_DEBUG into the paravirt menu

commit ab86e974f04b1cd827a9c7c35273834ebcd9ab38
Merge: 8700c95 6f7a05d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Apr 30 08:15:40 2013 -0700

    Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull core timer updates from Ingo Molnar:
     "The main changes in this cycle's merge are:
    
       - Implement shadow timekeeper to shorten in kernel reader side
         blocking, by Thomas Gleixner.
    
       - Posix timers enhancements by Pavel Emelyanov:
    
       - allocate timer ID per process, so that exact timer ID allocations
         can be re-created be checkpoint/restore code.
    
       - debuggability and tooling (/proc/PID/timers, etc.) improvements.
    
       - suspend/resume enhancements by Feng Tang: on certain new Intel Atom
         processors (Penwell and Cloverview), there is a feature that the
         TSC won't stop in S3 state, so the TSC value won't be reset to 0
         after resume.  This can be taken advantage of by the generic via
         the CLOCK_SOURCE_SUSPEND_NONSTOP flag: instead of using the RTC to
         recover/approximate sleep time, the main (and precise) clocksource
         can be used.
    
       - Fix /proc/timer_list for 4096 CPUs by Nathan Zimmer: on so many
         CPUs the file goes beyond 4MB of size and thus the current
         simplistic seqfile approach fails.  Convert /proc/timer_list to a
         proper seq_file with its own iterator.
    
       - Cleanups and refactorings of the core timekeeping code by John
         Stultz.
    
       - International Atomic Clock time is managed by the NTP code
         internally currently but not exposed externally.  Separate the TAI
         code out and add CLOCK_TAI support and TAI support to the hrtimer
         and posix-timer code, by John Stultz.
    
       - Add deep idle support enhacement to the broadcast clockevents core
         timer code, by Daniel Lezcano: add an opt-in CLOCK_EVT_FEAT_DYNIRQ
         clockevents feature (which will be utilized by future clockevents
         driver updates), which allows the use of IRQ affinities to avoid
         spurious wakeups of idle CPUs - the right CPU with an expiring
         timer will be woken.
    
       - Add new ARM bcm281xx clocksource driver, by Christian Daudt
    
       - ... various other fixes and cleanups"
    
    * 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (52 commits)
      clockevents: Set dummy handler on CPU_DEAD shutdown
      timekeeping: Update tk->cycle_last in resume
      posix-timers: Remove unused variable
      clockevents: Switch into oneshot mode even if broadcast registered late
      timer_list: Convert timer list to be a proper seq_file
      timer_list: Split timer_list_show_tickdevices
      posix-timers: Show sigevent info in proc file
      posix-timers: Introduce /proc/PID/timers file
      posix timers: Allocate timer id per process (v2)
      timekeeping: Make sure to notify hrtimers when TAI offset changes
      hrtimer: Fix ktime_add_ns() overflow on 32bit architectures
      hrtimer: Add expiry time overflow check in hrtimer_interrupt
      timekeeping: Shorten seq_count region
      timekeeping: Implement a shadow timekeeper
      timekeeping: Delay update of clock->cycle_last
      timekeeping: Store cycle_last value in timekeeper struct as well
      ntp: Remove ntp_lock, using the timekeeping locks to protect ntp state
      timekeeping: Simplify tai updating from do_adjtimex
      timekeeping: Hold timekeepering locks in do_adjtimex and hardpps
      timekeeping: Move ADJ_SETOFFSET to top level do_adjtimex()
      ...

commit 8700c95adb033843fc163d112b9d21d4fda78018
Merge: 16fa94b d190e81
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Apr 30 07:50:17 2013 -0700

    Merge branch 'smp-hotplug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull SMP/hotplug changes from Ingo Molnar:
     "This is a pretty large, multi-arch series unifying and generalizing
      the various disjunct pieces of idle routines that architectures have
      historically copied from each other and have grown in random, wildly
      inconsistent and sometimes buggy directions:
    
       101 files changed, 455 insertions(+), 1328 deletions(-)
    
      this went through a number of review and test iterations before it was
      committed, it was tested on various architectures, was exposed to
      linux-next for quite some time - nevertheless it might cause problems
      on architectures that don't read the mailing lists and don't regularly
      test linux-next.
    
      This cat herding excercise was motivated by the -rt kernel, and was
      brought to you by Thomas "the Whip" Gleixner."
    
    * 'smp-hotplug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (40 commits)
      idle: Remove GENERIC_IDLE_LOOP config switch
      um: Use generic idle loop
      ia64: Make sure interrupts enabled when we "safe_halt()"
      sparc: Use generic idle loop
      idle: Remove unused ARCH_HAS_DEFAULT_IDLE
      bfin: Fix typo in arch_cpu_idle()
      xtensa: Use generic idle loop
      x86: Use generic idle loop
      unicore: Use generic idle loop
      tile: Use generic idle loop
      tile: Enter idle with preemption disabled
      sh: Use generic idle loop
      score: Use generic idle loop
      s390: Use generic idle loop
      powerpc: Use generic idle loop
      parisc: Use generic idle loop
      openrisc: Use generic idle loop
      mn10300: Use generic idle loop
      mips: Use generic idle loop
      microblaze: Use generic idle loop
      ...

commit 6402c7dc2a19c19bd8cdc7d80878b850da418942
Merge: 77c675b 60d509f
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Apr 24 20:33:46 2013 +0200

    Merge branch 'linus' into timers/core
    Reason: Get upstream fixes before adding conflicting code.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit c0a9f451e4e7ecd2ad1a6c27ea5c31d0226bdddf
Merge: 74c3e3f 8c58bf3
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Fri Apr 19 17:09:03 2013 -0700

    Merge remote-tracking branch 'efi/urgent' into x86/urgent
    
    Matt Fleming (1):
          x86, efivars: firmware bug workarounds should be in platform
          code
    
    Matthew Garrett (3):
          Move utf16 functions to kernel core and rename
          efi: Pass boot services variable info to runtime code
          efi: Distinguish between "remaining space" and actually used
          space
    
    Richard Weinberger (2):
          x86,efi: Check max_size only if it is non-zero.
          x86,efi: Implement efi_no_storage_paranoia parameter
    
    Sergey Vlasov (2):
          x86/Kconfig: Make EFI select UCS2_STRING
          efi: Export efi_query_variable_store() for efivars.ko
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit d190e8195b90bc1e65c494fe08e54e9e581bfd16
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Apr 17 10:33:13 2013 +0200

    idle: Remove GENERIC_IDLE_LOOP config switch
    
    All archs are converted over. Remove the config switch and the
    fallback code.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit f6ce5002629e08eaa777ced3872a98f76845143e
Author: Sergey Vlasov <vsu@altlinux.ru>
Date:   Tue Apr 16 18:31:08 2013 +0400

    x86/Kconfig: Make EFI select UCS2_STRING
    
    The commit "efi: Distinguish between "remaining space" and actually used
    space" added usage of ucs2_*() functions to arch/x86/platform/efi/efi.c,
    but the only thing which selected UCS2_STRING was EFI_VARS, which is
    technically optional and can be built as a module.
    
    Signed-off-by: Sergey Vlasov <vsu@altlinux.ru>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>

commit 7fd2bf3d325478e6715cce3ede7de641ff596183
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Thu Mar 28 05:07:46 2013 -0700

    Remove GENERIC_GPIO config option
    
    GENERIC_GPIO has been made equivalent to GPIOLIB in architecture code
    and all driver code has been switch to depend on GPIOLIB. It is thus
    safe to have GENERIC_GPIO removed.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Acked-by: Linus Walleij <linus.walleij@linaro.org>
    Acked-by: Grant Likely <grant.likely@secretlab.ca>

commit 781b0e870c72be8a24c074073547e74e7b9bffd6
Author: Paul Bolle <pebolle@tiscali.nl>
Date:   Thu Mar 21 13:41:23 2013 +0100

    idle: Remove unused ARCH_HAS_DEFAULT_IDLE
    
    The Kconfig symbol ARCH_HAS_DEFAULT_IDLE is unused. Commit
    a0bfa1373859e9d11dc92561a8667588803e42d8 ("cpuidle: stop
    depending on pm_idle") removed the only place were it was
    actually used. But it did not remove its Kconfig entries (for sh
    and x86). Remove those two entries now.
    
    Signed-off-by: Paul Bolle <pebolle@tiscali.nl>
    Cc: Len Brown <len.brown@intel.com>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Link: http://lkml.kernel.org/r/1363869683.1390.134.camel@x61.thuisdomein
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 7d1a941731fabf27e5fb6edbebb79fe856edb4e5
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Mar 21 22:50:03 2013 +0100

    x86: Use generic idle loop
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Paul McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Reviewed-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Cc: Magnus Damm <magnus.damm@gmail.com>
    Link: http://lkml.kernel.org/r/20130321215235.486594473@linutronix.de
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86@kernel.org

commit 3195ef59cb42cda3aeeb24a7fd2ba1b900c4a3cc
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Thu Feb 14 12:02:54 2013 -0500

    x86: Do full rtc synchronization with ntp
    
    Every 11 minutes ntp attempts to update the x86 rtc with the current
    system time.  Currently, the x86 code only updates the rtc if the system
    time is within +/-15 minutes of the current value of the rtc. This
    was done originally to avoid setting the RTC if the RTC was in localtime
    mode (common with Windows dualbooting).  Other architectures do a full
    synchronization and now that we have better infrastructure to detect
    when the RTC is in localtime, there is no reason that x86 should be
    software limited to a 30 minute window.
    
    This patch changes the behavior of the kernel to do a full synchronization
    (year, month, day, hour, minute, and second) of the rtc when ntp requests
    a synchronization between the system time and the rtc.
    
    I've used the RTC library functions in this patchset as they do all the
    required bounds checking.
    
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: x86@kernel.org
    Cc: Matt Fleming <matt.fleming@intel.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: linux-efi@vger.kernel.org
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    [jstultz: Tweak commit message, fold in build fix found by fengguang
    Also add select RTC_LIB to X86, per new dependency, as found by prarit]
    Signed-off-by: John Stultz <john.stultz@linaro.org>

commit 4febd95a8a85dd38b1a71fcf9726e19c7fd20039
Author: Stephen Rothwell <sfr@canb.auug.org.au>
Date:   Thu Mar 7 15:48:16 2013 +1100

    Select VIRT_TO_BUS directly where needed
    
    In commit 887cbce0adea ("arch Kconfig: centralise ARCH_NO_VIRT_TO_BUS")
    I introduced the config sybmol HAVE_VIRT_TO_BUS and selected that where
    needed.  I am not sure what I was thinking.  Instead, just directly
    select VIRT_TO_BUS where it is needed.
    
    Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 6276a074c6519946c527f03e2ab69770a62652d9
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Mar 4 21:20:21 2013 +0100

    x86: Make Linux guest support optional
    
    Put all config options needed to run Linux as a guest behind a
    CONFIG_HYPERVISOR_GUEST menu so that they don't get built-in by default
    but be selectable by the user. Also, make all units which depend on
    x86_hyper, depend on this new symbol so that compilation doesn't fail
    when CONFIG_HYPERVISOR_GUEST is disabled but those units assume its
    presence.
    
    Sort options in the new HYPERVISOR_GUEST menu, adapt config text and
    drop redundant select.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: http://lkml.kernel.org/r/1362428421-9244-3-git-send-email-bp@alien8.de
    Cc: Dmitry Torokhov <dtor@vmware.com>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 2c59cad6941cb55990fa6e19d84ae027c46991ee
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Mar 4 21:20:20 2013 +0100

    x86, Kconfig: Move PARAVIRT_DEBUG into the paravirt menu
    
    This should be under the PARAVIRT_GUEST menu.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: http://lkml.kernel.org/r/1362428421-9244-2-git-send-email-bp@alien8.de
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 887cbce0adead8dc394157b8e53603ed001a3060
Author: Stephen Rothwell <sfr@canb.auug.org.au>
Date:   Wed Feb 27 17:05:48 2013 -0800

    arch Kconfig: centralise CONFIG_ARCH_NO_VIRT_TO_BUS
    
    Change it to CONFIG_HAVE_VIRT_TO_BUS and set it in all architecures
    that already provide virt_to_bus().
    
    Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Reviewed-by: James Hogan <james.hogan@imgtec.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: H Hartley Sweeten <hartleys@visionengravers.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: Vineet Gupta <Vineet.Gupta1@synopsys.com>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Cc: <linux-arch@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 9e2d59ad580d590134285f361a0e80f0e98c0207
Merge: 5ce1a70 235b802
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Feb 23 18:50:11 2013 -0800

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal
    
    Pull signal handling cleanups from Al Viro:
     "This is the first pile; another one will come a bit later and will
      contain SYSCALL_DEFINE-related patches.
    
       - a bunch of signal-related syscalls (both native and compat)
         unified.
    
       - a bunch of compat syscalls switched to COMPAT_SYSCALL_DEFINE
         (fixing several potential problems with missing argument
         validation, while we are at it)
    
       - a lot of now-pointless wrappers killed
    
       - a couple of architectures (cris and hexagon) forgot to save
         altstack settings into sigframe, even though they used the
         (uninitialized) values in sigreturn; fixed.
    
       - microblaze fixes for delivery of multiple signals arriving at once
    
       - saner set of helpers for signal delivery introduced, several
         architectures switched to using those."
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal: (143 commits)
      x86: convert to ksignal
      sparc: convert to ksignal
      arm: switch to struct ksignal * passing
      alpha: pass k_sigaction and siginfo_t using ksignal pointer
      burying unused conditionals
      make do_sigaltstack() static
      arm64: switch to generic old sigaction() (compat-only)
      arm64: switch to generic compat rt_sigaction()
      arm64: switch compat to generic old sigsuspend
      arm64: switch to generic compat rt_sigqueueinfo()
      arm64: switch to generic compat rt_sigpending()
      arm64: switch to generic compat rt_sigprocmask()
      arm64: switch to generic sigaltstack
      sparc: switch to generic old sigsuspend
      sparc: COMPAT_SYSCALL_DEFINE does all sign-extension as well as SYSCALL_DEFINE
      sparc: kill sign-extending wrappers for native syscalls
      kill sparc32_open()
      sparc: switch to use of generic old sigaction
      sparc: switch sys_compat_rt_sigaction() to COMPAT_SYSCALL_DEFINE
      mips: switch to generic sys_fork() and sys_clone()
      ...

commit c47f39e3b75e1138823984ad5079547c7a41b726
Merge: 0cc9129 da76f64
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Feb 22 19:22:52 2013 -0800

    Merge branch 'x86/microcode' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 microcode loading update from Peter Anvin:
     "This patchset lets us update the CPU microcode very, very early in
      initialization if the BIOS fails to do so (never happens, right?)
    
      This is handy for dealing with things like the Atom erratum where we
      have to run without PSE because microcode loading happens too late.
    
      As I mentioned in the x86/mm push request it depends on that
      infrastructure but it is otherwise a standalone feature."
    
    * 'x86/microcode' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/Kconfig: Make early microcode loading a configuration feature
      x86/mm/init.c: Copy ucode from initrd image to kernel memory
      x86/head64.c: Early update ucode in 64-bit
      x86/head_32.S: Early update ucode in 32-bit
      x86/microcode_intel_early.c: Early update ucode on Intel's CPU
      x86/tlbflush.h: Define __native_flush_tlb_global_irq_disabled()
      x86/microcode_intel_lib.c: Early update ucode on Intel's CPU
      x86/microcode_core_early.c: Define interfaces for early loading ucode
      x86/common.c: load ucode in 64 bit or show loading ucode info in 32 bit on AP
      x86/common.c: Make have_cpuid_p() a global function
      x86/microcode_intel.h: Define functions and macros for early loading ucode
      x86, doc: Documentation for early microcode loading

commit 2ef14f465b9e096531343f5b734cffc5f759f4a6
Merge: cb715a8 0da3e7f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Feb 21 18:06:55 2013 -0800

    Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 mm changes from Peter Anvin:
     "This is a huge set of several partly interrelated (and concurrently
      developed) changes, which is why the branch history is messier than
      one would like.
    
      The *really* big items are two humonguous patchsets mostly developed
      by Yinghai Lu at my request, which completely revamps the way we
      create initial page tables.  In particular, rather than estimating how
      much memory we will need for page tables and then build them into that
      memory -- a calculation that has shown to be incredibly fragile -- we
      now build them (on 64 bits) with the aid of a "pseudo-linear mode" --
      a #PF handler which creates temporary page tables on demand.
    
      This has several advantages:
    
      1. It makes it much easier to support things that need access to data
         very early (a followon patchset uses this to load microcode way
         early in the kernel startup).
    
      2. It allows the kernel and all the kernel data objects to be invoked
         from above the 4 GB limit.  This allows kdump to work on very large
         systems.
    
      3. It greatly reduces the difference between Xen and native (Xen's
         equivalent of the #PF handler are the temporary page tables created
         by the domain builder), eliminating a bunch of fragile hooks.
    
      The patch series also gets us a bit closer to W^X.
    
      Additional work in this pull is the 64-bit get_user() work which you
      were also involved with, and a bunch of cleanups/speedups to
      __phys_addr()/__pa()."
    
    * 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (105 commits)
      x86, mm: Move reserving low memory later in initialization
      x86, doc: Clarify the use of asm("%edx") in uaccess.h
      x86, mm: Redesign get_user with a __builtin_choose_expr hack
      x86: Be consistent with data size in getuser.S
      x86, mm: Use a bitfield to mask nuisance get_user() warnings
      x86/kvm: Fix compile warning in kvm_register_steal_time()
      x86-32: Add support for 64bit get_user()
      x86-32, mm: Remove reference to alloc_remap()
      x86-32, mm: Remove reference to resume_map_numa_kva()
      x86-32, mm: Rip out x86_32 NUMA remapping code
      x86/numa: Use __pa_nodebug() instead
      x86: Don't panic if can not alloc buffer for swiotlb
      mm: Add alloc_bootmem_low_pages_nopanic()
      x86, 64bit, mm: hibernate use generic mapping_init
      x86, 64bit, mm: Mark data/bss/brk to nx
      x86: Merge early kernel reserve for 32bit and 64bit
      x86: Add Crash kernel low reservation
      x86, kdump: Remove crashkernel range find limit for 64bit
      memblock: Add memblock_mem_size()
      x86, boot: Not need to check setup_header version for setup_data
      ...

commit cb715a836642e0ec69350670d1c2f800f3e2d2e4
Merge: 27ea6df 2e32b71
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Feb 21 18:03:39 2013 -0800

    Merge branch 'x86-cpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 cpu updates from Peter Anvin:
     "This is a corrected attempt at the x86/cpu branch, this time with the
      fixes in that makes it not break on KVM (current or past), or any
      other virtualizer which traps on this configuration.
    
      Again, the biggest change here is enabling the WC+ memory type on AMD
      processors, if the BIOS doesn't."
    
    * 'x86-cpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, kvm: Add MSR_AMD64_BU_CFG2 to the list of ignored MSRs
      x86, cpu, amd: Fix WC+ workaround for older virtual hosts
      x86, AMD: Enable WC+ memory type on family 10 processors
      x86, AMD: Clean up init_amd()
      x86/process: Change %8s to %s for pr_warn() in release_thread()
      x86/cpu/hotplug: Remove CONFIG_EXPERIMENTAL dependency

commit 06991c28f37ad68e5c03777f5c3b679b56e3dac1
Merge: 460dc1e 74fef7a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Feb 21 12:05:51 2013 -0800

    Merge tag 'driver-core-3.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core
    
    Pull driver core patches from Greg Kroah-Hartman:
     "Here is the big driver core merge for 3.9-rc1
    
      There are two major series here, both of which touch lots of drivers
      all over the kernel, and will cause you some merge conflicts:
    
       - add a new function called devm_ioremap_resource() to properly be
         able to check return values.
    
       - remove CONFIG_EXPERIMENTAL
    
      Other than those patches, there's not much here, some minor fixes and
      updates"
    
    Fix up trivial conflicts
    
    * tag 'driver-core-3.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core: (221 commits)
      base: memory: fix soft/hard_offline_page permissions
      drivercore: Fix ordering between deferred_probe and exiting initcalls
      backlight: fix class_find_device() arguments
      TTY: mark tty_get_device call with the proper const values
      driver-core: constify data for class_find_device()
      firmware: Ignore abort check when no user-helper is used
      firmware: Reduce ifdef CONFIG_FW_LOADER_USER_HELPER
      firmware: Make user-mode helper optional
      firmware: Refactoring for splitting user-mode helper code
      Driver core: treat unregistered bus_types as having no devices
      watchdog: Convert to devm_ioremap_resource()
      thermal: Convert to devm_ioremap_resource()
      spi: Convert to devm_ioremap_resource()
      power: Convert to devm_ioremap_resource()
      mtd: Convert to devm_ioremap_resource()
      mmc: Convert to devm_ioremap_resource()
      mfd: Convert to devm_ioremap_resource()
      media: Convert to devm_ioremap_resource()
      iommu: Convert to devm_ioremap_resource()
      drm: Convert to devm_ioremap_resource()
      ...

commit 8793422fd9ac5037f5047f80473007301df3689f
Merge: b3cdda2 10baf04
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Feb 20 11:26:56 2013 -0800

    Merge tag 'pm+acpi-3.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
    
    Pull ACPI and power management updates from Rafael Wysocki:
    
     - Rework of the ACPI namespace scanning code from Rafael J.  Wysocki
       with contributions from Bjorn Helgaas, Jiang Liu, Mika Westerberg,
       Toshi Kani, and Yinghai Lu.
    
     - ACPI power resources handling and ACPI device PM update from Rafael
       J Wysocki.
    
     - ACPICA update to version 20130117 from Bob Moore and Lv Zheng with
       contributions from Aaron Lu, Chao Guan, Jesper Juhl, and Tim Gardner.
    
     - Support for Intel Lynxpoint LPSS from Mika Westerberg.
    
     - cpuidle update from Len Brown including Intel Haswell support, C1
       state for intel_idle, removal of global pm_idle.
    
     - cpuidle fixes and cleanups from Daniel Lezcano.
    
     - cpufreq fixes and cleanups from Viresh Kumar and Fabio Baltieri with
       contributions from Stratos Karafotis and Rickard Andersson.
    
     - Intel P-states driver for Sandy Bridge processors from Dirk
       Brandewie.
    
     - cpufreq driver for Marvell Kirkwood SoCs from Andrew Lunn.
    
     - cpufreq fixes related to ordering issues between acpi-cpufreq and
       powernow-k8 from Borislav Petkov and Matthew Garrett.
    
     - cpufreq support for Calxeda Highbank processors from Mark Langsdorf
       and Rob Herring.
    
     - cpufreq driver for the Freescale i.MX6Q SoC and cpufreq-cpu0 update
       from Shawn Guo.
    
     - cpufreq Exynos fixes and cleanups from Jonghwan Choi, Sachin Kamat,
       and Inderpal Singh.
    
     - Support for "lightweight suspend" from Zhang Rui.
    
     - Removal of the deprecated power trace API from Paul Gortmaker.
    
     - Assorted updates from Andreas Fleig, Colin Ian King, Davidlohr Bueso,
       Joseph Salisbury, Kees Cook, Li Fei, Nishanth Menon, ShuoX Liu,
       Srinivas Pandruvada, Tejun Heo, Thomas Renninger, and Yasuaki
       Ishimatsu.
    
    * tag 'pm+acpi-3.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm: (267 commits)
      PM idle: remove global declaration of pm_idle
      unicore32 idle: delete stray pm_idle comment
      openrisc idle: delete pm_idle
      mn10300 idle: delete pm_idle
      microblaze idle: delete pm_idle
      m32r idle: delete pm_idle, and other dead idle code
      ia64 idle: delete pm_idle
      cris idle: delete idle and pm_idle
      ARM64 idle: delete pm_idle
      ARM idle: delete pm_idle
      blackfin idle: delete pm_idle
      sparc idle: rename pm_idle to sparc_idle
      sh idle: rename global pm_idle to static sh_idle
      x86 idle: rename global pm_idle to static x86_idle
      APM idle: register apm_cpu_idle via cpuidle
      cpufreq / intel_pstate: Add kernel command line option disable intel_pstate.
      cpufreq / intel_pstate: Change to disallow module build
      tools/power turbostat: display SMI count by default
      intel_idle: export both C1 and C1E
      ACPI / hotplug: Fix concurrency issues and memory leaks
      ...

commit f98982ce80f9ce6db0fe841c1844cbae0a2700fb
Merge: 29d5052 7d02912
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Feb 19 20:11:07 2013 -0800

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 platform changes from Ingo Molnar:
    
     - Support for the Technologic Systems TS-5500 platform, by Vivien
       Didelot
    
     - Improved NUMA support on AMD systems:
    
       Add support for federated systems where multiple memory controllers
       can exist and see each other over multiple PCI domains.  This
       basically means that AMD node ids can be more than 8 now and the code
       handling this is taught to incorporate PCI domain into those IDs.
    
     - Support for the Goldfish virtual Android emulator, by Jun Nakajima,
       Intel, Google, et al.
    
     - Misc fixlets.
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86: Add TS-5500 platform support
      x86/srat: Simplify memory affinity init error handling
      x86/apb/timer: Remove unnecessary "if"
      goldfish: platform device for x86
      amd64_edac: Fix type usage in NB IDs and memory ranges
      amd64_edac: Fix PCI function lookup
      x86, AMD, NB: Use u16 for northbridge IDs in amd_get_nb_id
      x86, AMD, NB: Add multi-domain support

commit 121027a7a64a12e9e5c0289f12473ff11678a812
Merge: 5abcd76 63a3f60
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Feb 19 19:12:03 2013 -0800

    Merge branch 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull two x86 kernel build changes from Ingo Molnar:
     "The first change modifies how 'make oldconfig' works on cross-bitness
      situations on x86.  It was felt the new behavior of preserving the
      bitness of the .config is more logical.  This is a leftover of the
      merge.
    
      The second change eliminates a Perl warning.  (There's another, more
      complete fix resulting of this warning fix, which second fix in flight
      to you via the kbuild tree, which will remove the timeconst.pl script
      altogether.)"
    
    * 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      timeconst.pl: Eliminate Perl warning
      x86: Default to ARCH=x86 to avoid overriding CONFIG_64BIT

commit a57ed93600f2dab64e859d524c3320fe0922e99d
Merge: 5800700 5e2a044
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Feb 19 19:09:42 2013 -0800

    Merge branch 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86/asm changes from Ingo Molnar:
     "The biggest change (by line count) is the unification of the XOR code
      and then the introduction of an additional SSE based XOR assembly
      method.
    
      The other bigger change is the head_32.S rework/cleanup by Borislav
      Petkov.
    
      Last but not least there's the usual laundry list of small but
      dangerous (and hopefully perfectly tested) changes to subtle low level
      x86 code, plus cleanups."
    
    * 'x86-asm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, head_32: Give the 6 label a real name
      x86, head_32: Remove second CPUID detection from default_entry
      x86: Detect CPUID support early at boot
      x86, head_32: Remove i386 pieces
      x86: Require MOVBE feature in cpuid when we use it
      x86: Enable ARCH_USE_BUILTIN_BSWAP
      x86/xor: Add alternative SSE implementation only prefetching once per 64-byte line
      x86/xor: Unify SSE-base xor-block routines
      x86: Fix a typo
      x86/mm: Fix the argument passed to sync_global_pgds()
      x86/mm: Convert update_mmu_cache() and update_mmu_cache_pmd() to functions
      ix86: Tighten asmlinkage_protect() constraints

commit 266d7ad7f4fe2f44b91561f5b812115c1b3018ab
Merge: bcbd818 36dfbbf
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Feb 19 19:05:45 2013 -0800

    Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull timer changes from Ingo Molnar:
     "Main changes:
    
       - ntp: Add CONFIG_RTC_SYSTOHC: a generic RTC driver facility
         complementing the existing CONFIG_RTC_HCTOSYS, which uses NTP to
         keep the hardware clock updated.
    
       - posix-timers: Fix clock_adjtime to always return timex data on
         success.  This is changing the ABI, but no breakage was expected
         and found - caution is warranted nevertheless.
    
       - platform persistent clock improvements/cleanups.
    
       - clockevents: refactor timer broadcast handling to be more generic
         and less duplicated with matching architecture code (mostly ARM
         motivated.)
    
       - various fixes and cleanups"
    
    * 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      timers/x86/hpet: Use HPET_COUNTER to specify the hpet counter in vread_hpet()
      posix-cpu-timers: Fix nanosleep task_struct leak
      clockevents: Fix generic broadcast for FEAT_C3STOP
      time, Fix setting of hardware clock in NTP code
      hrtimer: Prevent hrtimer_enqueue_reprogram race
      clockevents: Add generic timer broadcast function
      clockevents: Add generic timer broadcast receiver
      timekeeping: Switch HAS_PERSISTENT_CLOCK to ALWAYS_USE_PERSISTENT_CLOCK
      x86/time/rtc: Don't print extended CMOS year when reading RTC
      x86: Select HAS_PERSISTENT_CLOCK on x86
      timekeeping: Add CONFIG_HAS_PERSISTENT_CLOCK option
      rtc: Skip the suspend/resume handling if persistent clock exist
      timekeeping: Add persistent_clock_exist flag
      posix-timers: Fix clock_adjtime to always return timex data on success
      Round the calculated scale factor in set_cyc2ns_scale()
      NTP: Add a CONFIG_RTC_SYSTOHC configuration
      MAINTAINERS: Update John Stultz's email
      time: create __getnstimeofday for WARNless calls

commit 8f55cea410dbc56114bb71a3742032070c8108d0
Merge: b7133a9 e259514
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Feb 19 17:49:41 2013 -0800

    Merge branch 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull perf changes from Ingo Molnar:
     "There are lots of improvements, the biggest changes are:
    
      Main kernel side changes:
    
       - Improve uprobes performance by adding 'pre-filtering' support, by
         Oleg Nesterov.
    
       - Make some POWER7 events available in sysfs, equivalent to what was
         done on x86, from Sukadev Bhattiprolu.
    
       - tracing updates by Steve Rostedt - mostly misc fixes and smaller
         improvements.
    
       - Use perf/event tracing to report PCI Express advanced errors, by
         Tony Luck.
    
       - Enable northbridge performance counters on AMD family 15h, by Jacob
         Shin.
    
       - This tracing commit:
    
            tracing: Remove the extra 4 bytes of padding in events
    
         changes the ABI.  All involved parties (PowerTop in particular)
         seem to agree that it's safe to do now with the introduction of
         libtraceevent, but the devil is in the details ...
    
      Main tooling side changes:
    
       - Add 'event group view', from Namyung Kim:
    
         To use it, 'perf record' should group events when recording.  And
         then perf report parses the saved group relation from file header
         and prints them together if --group option is provided.  You can
         use the 'perf evlist' command to see event group information:
    
            $ perf record -e '{ref-cycles,cycles}' noploop 1
            [ perf record: Woken up 2 times to write data ]
            [ perf record: Captured and wrote 0.385 MB perf.data (~16807 samples) ]
    
            $ perf evlist --group
            {ref-cycles,cycles}
    
         With this example, default perf report will show you each event
         separately.
    
         You can use --group option to enable event group view:
    
            $ perf report --group
            ...
            # group: {ref-cycles,cycles}
            # ========
            # Samples: 7K of event 'anon group { ref-cycles, cycles }'
            # Event count (approx.): 6876107743
            #
            #         Overhead  Command      Shared Object                      Symbol
            # ................  .......  .................  ..........................
                99.84%  99.76%  noploop  noploop            [.] main
                 0.07%   0.00%  noploop  ld-2.15.so         [.] strcmp
                 0.03%   0.00%  noploop  [kernel.kallsyms]  [k] timerqueue_del
                 0.03%   0.03%  noploop  [kernel.kallsyms]  [k] sched_clock_cpu
                 0.02%   0.00%  noploop  [kernel.kallsyms]  [k] account_user_time
                 0.01%   0.00%  noploop  [kernel.kallsyms]  [k] __alloc_pages_nodemask
                 0.00%   0.00%  noploop  [kernel.kallsyms]  [k] native_write_msr_safe
                 0.00%   0.11%  noploop  [kernel.kallsyms]  [k] _raw_spin_lock
                 0.00%   0.06%  noploop  [kernel.kallsyms]  [k] find_get_page
                 0.00%   0.02%  noploop  [kernel.kallsyms]  [k] rcu_check_callbacks
                 0.00%   0.02%  noploop  [kernel.kallsyms]  [k] __current_kernel_time
    
         As you can see the Overhead column now contains both of ref-cycles
         and cycles and header line shows group information also - 'anon
         group { ref-cycles, cycles }'.  The output is sorted by period of
         group leader first.
    
       - Initial GTK+ annotate browser, from Namhyung Kim.
    
       - Add option for runtime switching perf data file in perf report,
         just press 's' and a menu with the valid files found in the current
         directory will be presented, from Feng Tang.
    
       - Add support to display whole group data for raw columns, from Jiri
         Olsa.
    
       - Add per processor socket count aggregation in perf stat, from
         Stephane Eranian.
    
       - Add interval printing in 'perf stat', from Stephane Eranian.
    
       - 'perf test' improvements
    
       - Add support for wildcards in tracepoint system name, from Jiri
         Olsa.
    
       - Add anonymous huge page recognition, from Joshua Zhu.
    
       - perf build-id cache now can show DSOs present in a perf.data file
         that are not in the cache, to integrate with build-id servers being
         put in place by organizations such as Fedora.
    
       - perf top now shares more of the evsel config/creation routines with
         'record', paving the way for further integration like 'top'
         snapshots, etc.
    
       - perf top now supports DWARF callchains.
    
       - Fix mmap limitations on 32-bit, fix from David Miller.
    
       - 'perf bench numa mem' NUMA performance measurement suite
    
       - ... and lots of fixes, performance improvements, cleanups and other
         improvements I failed to list - see the shortlog and git log for
         details."
    
    * 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (270 commits)
      perf/x86/amd: Enable northbridge performance counters on AMD family 15h
      perf/hwbp: Fix cleanup in case of kzalloc failure
      perf tools: Fix build with bison 2.3 and older.
      perf tools: Limit unwind support to x86 archs
      perf annotate: Make it to be able to skip unannotatable symbols
      perf gtk/annotate: Fail early if it can't annotate
      perf gtk/annotate: Show source lines with gray color
      perf gtk/annotate: Support multiple event annotation
      perf ui/gtk: Implement basic GTK2 annotation browser
      perf annotate: Fix warning message on a missing vmlinux
      perf buildid-cache: Add --update option
      uprobes/perf: Avoid uprobe_apply() whenever possible
      uprobes/perf: Teach trace_uprobe/perf code to use UPROBE_HANDLER_REMOVE
      uprobes/perf: Teach trace_uprobe/perf code to pre-filter
      uprobes/perf: Teach trace_uprobe/perf code to track the active perf_event's
      uprobes: Introduce uprobe_apply()
      perf: Introduce hw_perf_event->tp_target and ->tp_list
      uprobes/perf: Always increment trace_uprobe->nhit
      uprobes/tracing: Kill uprobe_trace_consumer, embed uprobe_consumer into trace_uprobe
      uprobes/tracing: Introduce is_trace_uprobe_enabled()
      ...

commit b7133a9a103655cda254987a3c0975fd9d8c443f
Merge: e84cf5d 36a5df8
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Feb 19 17:47:58 2013 -0800

    Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull irq core changes from Ingo Molnar:
     "The biggest changes are the IRQ-work and printk changes from Frederic
      Weisbecker, which prepare the code for 'full dynticks' (the ability to
      stop or slow down the periodic tick arbitrarily, not just in idle time
      as today):
    
       - Don't stop tick with irq works pending.  This fix is generally
         useful and concerns archs that can't raise self IPIs.
    
       - Flush irq works before CPU offlining.
    
       - Introduce "lazy" irq works that can wait for the next tick to be
         executed, unless it's stopped.
    
       - Implement klogd wake up using irq work.  This removes the ad-hoc
         printk_tick()/printk_needs_cpu() hooks and make it working even in
         dynticks mode.
    
       - Cleanups and fixes."
    
    * 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      genirq: Export enable/disable_percpu_irq()
      arch Kconfig: Remove references to IRQ_PER_CPU
      irq_work: Remove return value from the irq_work_queue() function
      genirq: Avoid deadlock in spurious handling
      printk: Wake up klogd using irq_work
      irq_work: Make self-IPIs optable
      irq_work: Warn if there's still work on cpu_down
      irq_work: Flush work on CPU_DYING
      irq_work: Don't stop the tick with pending works
      nohz: Add API to check tick state
      irq_work: Remove CONFIG_HAVE_IRQ_WORK
      irq_work: Fix racy check on work pending flag
      irq_work: Fix racy IRQ_WORK_BUSY flag setting

commit 10baf04e95fbf7eb6089410220a547211dd2ffa7
Merge: fdbe094 ca62cf5
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Feb 18 22:34:11 2013 +0100

    Merge branch 'release' of git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux
    
    * 'release' of git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux: (35 commits)
      PM idle: remove global declaration of pm_idle
      unicore32 idle: delete stray pm_idle comment
      openrisc idle: delete pm_idle
      mn10300 idle: delete pm_idle
      microblaze idle: delete pm_idle
      m32r idle: delete pm_idle, and other dead idle code
      ia64 idle: delete pm_idle
      cris idle: delete idle and pm_idle
      ARM64 idle: delete pm_idle
      ARM idle: delete pm_idle
      blackfin idle: delete pm_idle
      sparc idle: rename pm_idle to sparc_idle
      sh idle: rename global pm_idle to static sh_idle
      x86 idle: rename global pm_idle to static x86_idle
      APM idle: register apm_cpu_idle via cpuidle
      tools/power turbostat: display SMI count by default
      intel_idle: export both C1 and C1E
      cpuidle: remove vestage definition of cpuidle_state_usage.driver_data
      x86 idle: remove 32-bit-only "no-hlt" parameter, hlt_works_ok flag
      x86 idle: remove mwait_idle() and "idle=mwait" cmdline param
      ...
    
    Conflicts:
    	arch/x86/kernel/process.c (with PM / tracing commit 43720bd)
    	drivers/acpi/processor_idle.c (with ACPICA commit 4f84291)

commit dd8af076262cc1ff85a8d5e0c5b1a4716d19fe25
Author: Len Brown <len.brown@intel.com>
Date:   Sat Feb 9 21:10:04 2013 -0500

    APM idle: register apm_cpu_idle via cpuidle
    
    Update APM to register its local idle routine with cpuidle.
    
    This allows us to stop exporting pm_idle to modules on x86.
    
    The Kconfig sub-option, APM_CPU_IDLE, now depends on on CPU_IDLE.
    
    Compile-tested only.
    
    Signed-off-by: Len Brown <len.brown@intel.com>
    Reviewed-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Cc: Jiri Kosina <jkosina@suse.cz>

commit d64008a8f30e0b381b292788ec6f3ee509b3bb40
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun Nov 25 23:12:10 2012 -0500

    burying unused conditionals
    
    __ARCH_WANT_SYS_RT_SIGACTION,
    __ARCH_WANT_SYS_RT_SIGSUSPEND,
    __ARCH_WANT_COMPAT_SYS_RT_SIGSUSPEND,
    __ARCH_WANT_COMPAT_SYS_SCHED_RR_GET_INTERVAL - not used anymore
    CONFIG_GENERIC_{SIGALTSTACK,COMPAT_RT_SIG{ACTION,QUEUEINFO,PENDING,PROCMASK}} -
    can be assumed always set.

commit 8ecba5af948cb58bf6d5eb1537c0df53cbc319c4
Merge: 2b9b6d8 836dc9e
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Tue Feb 12 15:47:45 2013 -0800

    Merge tag 'v3.8-rc7' into x86/asm
    
    Merge in the updates to head_32.S from the previous urgent branch, as
    upcoming patches will make further changes.
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 17b1639b30e080dc577cbffe7a08d063708ec789
Merge: a9834cb e375325
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Feb 11 13:21:27 2013 +0100

    Merge branch 'acpi-lpss'
    
    * acpi-lpss:
      ACPI / platform: create LPSS clocks if Lynxpoint devices are found during scan
      clk: x86: add support for Lynxpoint LPSS clocks
      x86: add support for Intel Low Power Subsystem
      ACPI / platform: fix comment about the platform device name
      ACPI: add support for CSRT table

commit 90889a635a9b5488624bccce3ff6b2eec68c007b
Merge: a903743 6f16eeb
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Feb 4 11:03:03 2013 +0100

    Merge branch 'fortglx/3.9/time' of git://git.linaro.org/people/jstultz/linux into timers/core
    
    Trivial conflict in arch/x86/Kconfig
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 5b3eb3ade4444c3b1419ffa23598a57f6f4bf494
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue Dec 25 19:14:55 2012 -0500

    x86: switch to generic old sigaction
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit 29fd448084e2da6d19ab675cf01d4a65fe2fcc44
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue Dec 25 18:42:26 2012 -0500

    x86: switch to generic compat rt_sigaction()
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit 15ce1f7154c80693cec4f8a5309e8c8a06fb2541
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue Dec 25 16:09:20 2012 -0500

    x86,um: switch to generic old sigsuspend()
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit 7b83d1a297ac1afda2bb9a9979ca73173148623f
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue Dec 25 15:26:55 2012 -0500

    x86: switch to generic compat rt_sigqueueinfo()
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit f45adb0499dedd4082b46522e7b166cff5dc64eb
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue Dec 25 14:46:17 2012 -0500

    x86: switch to generic compat rt_sigpending()
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit f03574f2d5b2d6229dcdf2d322848065f72953c7
Author: Dave Hansen <dave@linux.vnet.ibm.com>
Date:   Wed Jan 30 16:56:16 2013 -0800

    x86-32, mm: Rip out x86_32 NUMA remapping code
    
    This code was an optimization for 32-bit NUMA systems.
    
    It has probably been the cause of a number of subtle bugs over
    the years, although the conditions to excite them would have
    been hard to trigger.  Essentially, we remap part of the kernel
    linear mapping area, and then sometimes part of that area gets
    freed back in to the bootmem allocator.  If those pages get
    used by kernel data structures (say mem_map[] or a dentry),
    there's no big deal.  But, if anyone ever tried to use the
    linear mapping for these pages _and_ cared about their physical
    address, bad things happen.
    
    For instance, say you passed __GFP_ZERO to the page allocator
    and then happened to get handed one of these pages, it zero the
    remapped page, but it would make a pte to the _old_ page.
    There are probably a hundred other ways that it could screw
    with things.
    
    We don't need to hang on to performance optimizations for
    these old boxes any more.  All my 32-bit NUMA systems are long
    dead and buried, and I probably had access to more than most
    people.
    
    This code is causing real things to break today:
    
    	https://lkml.org/lkml/2013/1/9/376
    
    I looked in to actually fixing this, but it requires surgery
    to way too much brittle code, as well as stuff like
    per_cpu_ptr_to_phys().
    
    [ hpa: Cc: this for -stable, since it is a memory corruption issue.
      However, an alternative is to simply mark NUMA as depends BROKEN
      rather than EXPERIMENTAL in the X86_32 subclause... ]
    
    Link: http://lkml.kernel.org/r/20130131005616.1C79F411@kernel.stglabs.ibm.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: <stable@vger.kernel.org>

commit da76f64e7eb28b718501d15c1b79af560b7ca4ea
Author: Fenghua Yu <fenghua.yu@intel.com>
Date:   Thu Dec 20 23:44:32 2012 -0800

    x86/Kconfig: Make early microcode loading a configuration feature
    
    MICROCODE_INTEL_LIB, MICROCODE_INTEL_EARLY, and MICROCODE_EARLY are three new
    configurations to enable or disable the feature.
    
    Signed-off-by: Fenghua Yu <fenghua.yu@intel.com>
    Link: http://lkml.kernel.org/r/1356075872-3054-13-git-send-email-fenghua.yu@intel.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 6f16eebe1ff82176339a0439c98ebec9768b0ee2
Author: John Stultz <john.stultz@linaro.org>
Date:   Fri Jan 25 17:08:12 2013 -0800

    timekeeping: Switch HAS_PERSISTENT_CLOCK to ALWAYS_USE_PERSISTENT_CLOCK
    
    Jason pointed out the HAS_PERSISTENT_CLOCK name isn't
    quite accurate for the config, as some systems may have
    the persistent_clock in some cases, but not always.
    
    So change the config name to the more clear
    ALWAYS_USE_PERSISTENT_CLOCK.
    
    Signed-off-by: John Stultz <john.stultz@linaro.org>

commit 83a57a4de1a222c351667ef9a0fedaac1295e85b
Author: David Woodhouse <dwmw2@infradead.org>
Date:   Thu Dec 20 01:16:20 2012 +0000

    x86: Enable ARCH_USE_BUILTIN_BSWAP
    
    With -mmovbe enabled (implicit with -march=atom), this allows the
    compiler to use the movbe instruction. This doesn't have a significant
    effect on code size (unlike on PowerPC), because the movbe instruction
    actually takes as many bytes to encode as a simple mov and a bswap. But
    for Atom in particular I believe it should give a performance win over
    the mov+bswap alternative. That was kind of why movbe was invented in
    the first place, after all...
    
    I've done basic functionality testing with IPv6 and Legacy IP, but no
    performance testing. The EFI firmware on my test box unfortunately no
    longer starts up.
    
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
    Link: http://lkml.kernel.org/r/1355966180.18919.102.camel@shinybook.infradead.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 7d0291256ca99cbb6124f63228003329e7a64b21
Author: Vivien Didelot <vivien.didelot@savoirfairelinux.com>
Date:   Fri Jan 4 16:18:14 2013 -0500

    x86: Add TS-5500 platform support
    
    The Technologic Systems TS-5500 is an x86-based (AMD Elan SC520)
    single board computer. This driver registers most of its devices
    and exposes sysfs attributes for information such as jumpers'
    state or presence of some of its options.
    
    This driver currently registers the TS-5500 platform, its
    on-board LED, 2 pin blocks (GPIO) and its analog/digital
    converter. It can be extended to support other Technologic
    Systems products, such as the TS-5600.
    
    Signed-off-by: Vivien Didelot <vivien.didelot@savoirfairelinux.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Savoir-faire Linux Inc. <kernel@savoirfairelinux.com>
    Link: http://lkml.kernel.org/r/1357334294-12760-1-git-send-email-vivien.didelot@savoirfairelinux.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit ed8e47fefc668c1a90d90382517a77ff332a916c
Author: Randy Dunlap <rdunlap@xenotime.net>
Date:   Tue Dec 18 12:22:17 2012 -0800

    x86/olpc: Fix olpc-xo1-sci.c build errors
    
    Fix build errors when CONFIG_INPUT=m.  This is not pretty, but
    all of the OLPC kconfig options are bool instead of tristate.
    
      arch/x86/built-in.o: In function `send_lid_state':
        olpc-xo1-sci.c:(.text+0x1d323): undefined reference to `input_event'
        olpc-xo1-sci.c:(.text+0x1d338): undefined reference to `input_event'
      ...
    
    In the long run, fixing this driver kconfig to be tristate
    instead of bool would be a very good change.
    
    Signed-off-by: Randy Dunlap <rdunlap@xenotime.net>
    Cc: Andres Salomon <dilinger@queued.net>
    Cc: Chris Ball <cjb@laptop.org>
    Cc: Jon Nettleton <jon.nettleton@gmail.com>
    Cc: Daniel Drake <dsd@laptop.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 786133f6e8ff94aaa78cd6b7844d04c227098327
Merge: befddb2 6147a9d
Author: Ingo Molnar <mingo@kernel.org>
Date:   Thu Jan 24 12:48:41 2013 +0100

    Merge branch 'core/irq_work' of git://git.kernel.org/pub/scm/linux/kernel/git/frederic/linux-dynticks into irq/core
    
    irq_work fixes and cleanups, in preparation for full dyntics support.
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 2c922cd07a0ada4d68e22453c972a5d77be8f20d
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Jan 22 13:01:19 2013 -0800

    x86/cpu/hotplug: Remove CONFIG_EXPERIMENTAL dependency
    
    The CONFIG_EXPERIMENTAL config item has not carried much meaning
    for a while now and is almost always enabled by default. As
    agreed during the Linux kernel summit, remove it from any
    "depends on" lines in Kconfigs.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Link: http://lkml.kernel.org/r/20130122210119.GA311@www.outflux.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 3d48aab1d5035fac04fe2fbce63eedc345c0e92e
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Fri Jan 18 13:45:59 2013 +0000

    x86: add support for Intel Low Power Subsystem
    
    We are starting to see traditional SoC peripherals also in the x86 world in
    chips like Intel Lynxpoint. Typically we already have a Linux driver for
    the peripheral but it takes advantage of the common clk framework to
    control and retrieve information about the peripheral clock.
    
    So far there hasn't been a standard way on x86 to pass information such as
    clock rate from whatever the configuration system is used to the driver,
    but instead different variations have emerged, like adding this information
    to the platform data.
    
    Solve this by adding a new config option X86_INTEL_LPSS. If this is
    selected we enable common clk framework (and everything else) that is
    needed to support the Intel LPSS drivers.
    
    Enabling common clk framework on x86 was originally proposed by Mark Brown.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

commit ddd70cf93d784af3698c86315aa0ded87ca0a0c5
Author: Jun Nakajima <jnakajim@gmail.com>
Date:   Mon Jan 21 17:23:09 2013 +0000

    goldfish: platform device for x86
    
    Based on code by Jun Nakajima but stripped of all the old x86 mach-foo
    stuff and turned into a single file for the Goldfish virtual bus layer.
    
    The actual created platform device and bus enumeration is portable between the
    ARM and x86 Goldfish emulations.
    
    Signed-off-by: Sheng Yang <sheng@linux.intel.com>
    Link: http://lkml.kernel.org/r/20130121172205.19517.22535.stgit@bob.linux.org.uk
    Signed-off-by: Yunhong Jiang <yunhong.jiang@intel.com>
    Signed-off-by: Xiaohui Xin <xiaohui.xin@intel.com>
    Signed-off-by: Jun Nakajima <jun.nakajima@intel.com>
    Signed-off-by: Bruce Beare <bruce.j.beare@intel.com>
    [Ported to 3.7 and reorganised so that we can keep most of the code
     shared properly]
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Matthew Garrett <mjg59@srcf.ucam.org>

commit e7dbfe349d12eabb7783b117e0c115f6f3d9ef9e
Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Date:   Fri Sep 28 17:15:20 2012 +0900

    kprobes/x86: Move ftrace-based kprobe code into kprobes-ftrace.c
    
    Split ftrace-based kprobes code from kprobes, and introduce
    CONFIG_(HAVE_)KPROBES_ON_FTRACE Kconfig flags.
    For the cleanup reason, this also moves kprobe_ftrace check
    into skip_singlestep.
    
    Link: http://lkml.kernel.org/r/20120928081520.3560.25624.stgit@ltc138.sdl.hitachi.co.jp
    
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Signed-off-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

commit 06aeaaeabf69da4a3e86df532425640f51b01cef
Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Date:   Fri Sep 28 17:15:17 2012 +0900

    ftrace: Move ARCH_SUPPORTS_FTRACE_SAVE_REGS in Kconfig
    
    Move SAVE_REGS support flag into Kconfig and rename
    it to CONFIG_DYNAMIC_FTRACE_WITH_REGS. This also introduces
    CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS which indicates
    the architecture depending part of ftrace has a code
    that saves full registers.
    On the other hand, CONFIG_DYNAMIC_FTRACE_WITH_REGS indicates
    the code is enabled.
    
    Link: http://lkml.kernel.org/r/20120928081516.3560.72534.stgit@ltc138.sdl.hitachi.co.jp
    
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Signed-off-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

commit e90c83f757fffdacec8b3c5eee5617dcc038338f
Author: John Stultz <john.stultz@linaro.org>
Date:   Tue Jan 15 19:45:19 2013 +0000

    x86: Select HAS_PERSISTENT_CLOCK on x86
    
    Select HAS_PERSISTENT_CLOCK on x86 to simplify RTC options
    and allow the compiler to remove unused code.
    
    Signed-off-by: John Stultz <john.stultz@linaro.org>

commit 6ea3038648da400cd3412925ff453041a7bd38d3
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Oct 2 11:16:47 2012 -0700

    arch/x86: remove depends on CONFIG_EXPERIMENTAL
    
    The CONFIG_EXPERIMENTAL config item has not carried much meaning for a
    while now and is almost always enabled by default. As agreed during the
    Linux kernel summit, remove it from any "depends on" lines in Kconfigs.
    
    CC: Thomas Gleixner <tglx@linutronix.de>
    CC: Ingo Molnar <mingo@redhat.com>
    CC: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: Ingo Molnar <mingo@kernel.org>

commit 54d46ea993744c5408e39ce0cb4851e13cbea716
Merge: f59dc2b 50ececc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Dec 20 18:05:28 2012 -0800

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal
    
    Pull signal handling cleanups from Al Viro:
     "sigaltstack infrastructure + conversion for x86, alpha and um,
      COMPAT_SYSCALL_DEFINE infrastructure.
    
      Note that there are several conflicts between "unify
      SS_ONSTACK/SS_DISABLE definitions" and UAPI patches in mainline;
      resolution is trivial - just remove definitions of SS_ONSTACK and
      SS_DISABLED from arch/*/uapi/asm/signal.h; they are all identical and
      include/uapi/linux/signal.h contains the unified variant."
    
    Fixed up conflicts as per Al.
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal:
      alpha: switch to generic sigaltstack
      new helpers: __save_altstack/__compat_save_altstack, switch x86 and um to those
      generic compat_sys_sigaltstack()
      introduce generic sys_sigaltstack(), switch x86 and um to it
      new helper: compat_user_stack_pointer()
      new helper: restore_altstack()
      unify SS_ONSTACK/SS_DISABLE definitions
      new helper: current_user_stack_pointer()
      missing user_stack_pointer() instances
      Bury the conditionals from kernel_thread/kernel_execve series
      COMPAT_SYSCALL_DEFINE: infrastructure

commit ffee0de411fd4f74f3b788892eeb075abbf26c52
Author: David Woodhouse <dwmw2@infradead.org>
Date:   Thu Dec 20 21:51:55 2012 +0000

    x86: Default to ARCH=x86 to avoid overriding CONFIG_64BIT
    
    It is easy to waste a bunch of time when one takes a 32-bit .config
    from a test machine and try to build it on a faster 64-bit system, and
    its existing setting of CONFIG_64BIT=n gets *changed* to match the
    build host.  Similarly, if one has an existing build tree it is easy
    to trash an entire build tree that way.
    
    This is because the default setting for $ARCH when discovered from
    'uname' is one of the legacy pre-x86-merge values (i386 or x86_64),
    which effectively force the setting of CONFIG_64BIT to match. We should
    default to ARCH=x86 instead, finally completing the merge that we
    started so long ago.
    
    This patch preserves the behaviour of the legacy ARCH settings for commands
    such as:
    
       make ARCH=x86_64 randconfig
       make ARCH=i386 randconfig
    
    ... since making the value of CONFIG_64BIT actually random in that situation
    is not desirable.
    
    In time, perhaps we can retire this legacy use of the old ARCH= values.
    We already have a way to override values for *any* config option, using
    $KCONFIG_ALLCONFIG, so it could be argued that we don't necessarily need
    to keep ARCH={i386,x86_64} around as a special case just for overriding
    CONFIG_64BIT.
    
    We'd probably at least want to add a way to override config options from
    the command line ('make CONFIG_FOO=y oldconfig') before we talk about doing
    that though.
    
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
    Link: http://lkml.kernel.org/r/1356040315.3198.51.camel@shinybook.infradead.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 6bf9adfc90370b695cb111116e15fdc0e1906270
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Dec 14 14:09:47 2012 -0500

    introduce generic sys_sigaltstack(), switch x86 and um to it
    
    Conditional on CONFIG_GENERIC_SIGALTSTACK; architectures that do not
    select it are completely unaffected
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit ae903caae267154de7cf8576b130ff474630596b
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Dec 14 12:44:11 2012 -0500

    Bury the conditionals from kernel_thread/kernel_execve series
    
    All architectures have
    	CONFIG_GENERIC_KERNEL_THREAD
    	CONFIG_GENERIC_KERNEL_EXECVE
    	__ARCH_WANT_SYS_EXECVE
    None of them have __ARCH_WANT_KERNEL_EXECVE and there are only two callers
    of kernel_execve() (which is a trivial wrapper for do_execve() now) left.
    Kill the conditionals and make both callers use do_execve().
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit 3d59eebc5e137bd89c6351e4c70e90ba1d0dc234
Merge: 11520e5 4fc3f1d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Dec 16 14:33:25 2012 -0800

    Merge tag 'balancenuma-v11' of git://git.kernel.org/pub/scm/linux/kernel/git/mel/linux-balancenuma
    
    Pull Automatic NUMA Balancing bare-bones from Mel Gorman:
     "There are three implementations for NUMA balancing, this tree
      (balancenuma), numacore which has been developed in tip/master and
      autonuma which is in aa.git.
    
      In almost all respects balancenuma is the dumbest of the three because
      its main impact is on the VM side with no attempt to be smart about
      scheduling.  In the interest of getting the ball rolling, it would be
      desirable to see this much merged for 3.8 with the view to building
      scheduler smarts on top and adapting the VM where required for 3.9.
    
      The most recent set of comparisons available from different people are
    
        mel:    https://lkml.org/lkml/2012/12/9/108
        mingo:  https://lkml.org/lkml/2012/12/7/331
        tglx:   https://lkml.org/lkml/2012/12/10/437
        srikar: https://lkml.org/lkml/2012/12/10/397
    
      The results are a mixed bag.  In my own tests, balancenuma does
      reasonably well.  It's dumb as rocks and does not regress against
      mainline.  On the other hand, Ingo's tests shows that balancenuma is
      incapable of converging for this workloads driven by perf which is bad
      but is potentially explained by the lack of scheduler smarts.  Thomas'
      results show balancenuma improves on mainline but falls far short of
      numacore or autonuma.  Srikar's results indicate we all suffer on a
      large machine with imbalanced node sizes.
    
      My own testing showed that recent numacore results have improved
      dramatically, particularly in the last week but not universally.
      We've butted heads heavily on system CPU usage and high levels of
      migration even when it shows that overall performance is better.
      There are also cases where it regresses.  Of interest is that for
      specjbb in some configurations it will regress for lower numbers of
      warehouses and show gains for higher numbers which is not reported by
      the tool by default and sometimes missed in treports.  Recently I
      reported for numacore that the JVM was crashing with
      NullPointerExceptions but currently it's unclear what the source of
      this problem is.  Initially I thought it was in how numacore batch
      handles PTEs but I'm no longer think this is the case.  It's possible
      numacore is just able to trigger it due to higher rates of migration.
    
      These reports were quite late in the cycle so I/we would like to start
      with this tree as it contains much of the code we can agree on and has
      not changed significantly over the last 2-3 weeks."
    
    * tag 'balancenuma-v11' of git://git.kernel.org/pub/scm/linux/kernel/git/mel/linux-balancenuma: (50 commits)
      mm/rmap, migration: Make rmap_walk_anon() and try_to_unmap_anon() more scalable
      mm/rmap: Convert the struct anon_vma::mutex to an rwsem
      mm: migrate: Account a transhuge page properly when rate limiting
      mm: numa: Account for failed allocations and isolations as migration failures
      mm: numa: Add THP migration for the NUMA working set scanning fault case build fix
      mm: numa: Add THP migration for the NUMA working set scanning fault case.
      mm: sched: numa: Delay PTE scanning until a task is scheduled on a new node
      mm: sched: numa: Control enabling and disabling of NUMA balancing if !SCHED_DEBUG
      mm: sched: numa: Control enabling and disabling of NUMA balancing
      mm: sched: Adapt the scanning rate if a NUMA hinting fault does not migrate
      mm: numa: Use a two-stage filter to restrict pages being migrated for unlikely task<->node relationships
      mm: numa: migrate: Set last_nid on newly allocated page
      mm: numa: split_huge_page: Transfer last_nid on tail page
      mm: numa: Introduce last_nid to the page frame
      sched: numa: Slowly increase the scanning period as NUMA faults are handled
      mm: numa: Rate limit setting of pte_numa if node is saturated
      mm: numa: Rate limit the amount of memory that is migrated between nodes
      mm: numa: Structures for Migrate On Fault per NUMA migration rate limiting
      mm: numa: Migrate pages handled during a pmd_numa hinting fault
      mm: numa: Migrate on reference policy
      ...

commit 193c0d682525987db59ac3a24531a77e4947aa95
Merge: 8b0cab1 1cb73f8
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Dec 13 12:14:47 2012 -0800

    Merge tag 'for-3.8' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
    
    Pull PCI update from Bjorn Helgaas:
     "Host bridge hotplug:
       - Untangle _PRT from struct pci_bus (Bjorn Helgaas)
       - Request _OSC control before scanning root bus (Taku Izumi)
       - Assign resources when adding host bridge (Yinghai Lu)
       - Remove root bus when removing host bridge (Yinghai Lu)
       - Remove _PRT during hot remove (Yinghai Lu)
    
      SRIOV
        - Add sysfs knobs to control numVFs (Don Dutile)
    
      Power management
       - Notify devices when power resource turned on (Huang Ying)
    
      Bug fixes
       - Work around broken _SEG on HP xw9300 (Bjorn Helgaas)
       - Keep runtime PM enabled for unbound PCI devices (Huang Ying)
       - Fix Optimus dual-GPU runtime D3 suspend issue (Dave Airlie)
       - Fix xen frontend shutdown issue (David Vrabel)
       - Work around PLX PCI 9050 BAR alignment erratum (Ian Abbott)
    
      Miscellaneous
       - Add GPL license for drivers/pci/ioapic (Andrew Cooks)
       - Add standard PCI-X, PCIe ASPM register #defines (Bjorn Helgaas)
       - NumaChip remote PCI support (Daniel Blueman)
       - Fix PCIe Link Capabilities Supported Link Speed definition (Jingoo
         Han)
       - Convert dev_printk() to dev_info(), etc (Joe Perches)
       - Add support for non PCI BAR ROM data (Matthew Garrett)
       - Add x86 support for host bridge translation offset (Mike Yoknis)
       - Report success only when every driver supports AER (Vijay
         Pandarathil)"
    
    Fix up trivial conflicts.
    
    * tag 'for-3.8' of git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci: (48 commits)
      PCI: Use phys_addr_t for physical ROM address
      x86/PCI: Add NumaChip remote PCI support
      ath9k: Use standard #defines for PCIe Capability ASPM fields
      iwlwifi: Use standard #defines for PCIe Capability ASPM fields
      iwlwifi: collapse wrapper for pcie_capability_read_word()
      iwlegacy: Use standard #defines for PCIe Capability ASPM fields
      iwlegacy: collapse wrapper for pcie_capability_read_word()
      cxgb3: Use standard #defines for PCIe Capability ASPM fields
      PCI: Add standard PCIe Capability Link ASPM field names
      PCI/portdrv: Use PCI Express Capability accessors
      PCI: Use standard PCIe Capability Link register field names
      x86: Use PCI setup data
      PCI: Add support for non-BAR ROMs
      PCI: Add pcibios_add_device
      EFI: Stash ROMs if they're not in the PCI BAR
      PCI: Add and use standard PCI-X Capability register names
      PCI/PM: Keep runtime PM enabled for unbound PCI devices
      xen-pcifront: Handle backend CLOSED without CLOSING
      PCI: SRIOV control and status via sysfs (documentation)
      PCI/AER: Report success only when every device has AER-aware driver
      ...

commit 9977d9b379cb77e0f67bd6f4563618106e58e11d
Merge: cf4af01 541880d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Dec 12 12:22:13 2012 -0800

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal
    
    Pull big execve/kernel_thread/fork unification series from Al Viro:
     "All architectures are converted to new model.  Quite a bit of that
      stuff is actually shared with architecture trees; in such cases it's
      literally shared branch pulled by both, not a cherry-pick.
    
      A lot of ugliness and black magic is gone (-3KLoC total in this one):
    
       - kernel_thread()/kernel_execve()/sys_execve() redesign.
    
         We don't do syscalls from kernel anymore for either kernel_thread()
         or kernel_execve():
    
         kernel_thread() is essentially clone(2) with callback run before we
         return to userland, the callbacks either never return or do
         successful do_execve() before returning.
    
         kernel_execve() is a wrapper for do_execve() - it doesn't need to
         do transition to user mode anymore.
    
         As a result kernel_thread() and kernel_execve() are
         arch-independent now - they live in kernel/fork.c and fs/exec.c
         resp.  sys_execve() is also in fs/exec.c and it's completely
         architecture-independent.
    
       - daemonize() is gone, along with its parts in fs/*.c
    
       - struct pt_regs * is no longer passed to do_fork/copy_process/
         copy_thread/do_execve/search_binary_handler/->load_binary/do_coredump.
    
       - sys_fork()/sys_vfork()/sys_clone() unified; some architectures
         still need wrappers (ones with callee-saved registers not saved in
         pt_regs on syscall entry), but the main part of those suckers is in
         kernel/fork.c now."
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal: (113 commits)
      do_coredump(): get rid of pt_regs argument
      print_fatal_signal(): get rid of pt_regs argument
      ptrace_signal(): get rid of unused arguments
      get rid of ptrace_signal_deliver() arguments
      new helper: signal_pt_regs()
      unify default ptrace_signal_deliver
      flagday: kill pt_regs argument of do_fork()
      death to idle_regs()
      don't pass regs to copy_process()
      flagday: don't pass regs to copy_thread()
      bfin: switch to generic vfork, get rid of pointless wrappers
      xtensa: switch to generic clone()
      openrisc: switch to use of generic fork and clone
      unicore32: switch to generic clone(2)
      score: switch to generic fork/vfork/clone
      c6x: sanitize copy_thread(), get rid of clone(2) wrapper, switch to generic clone()
      take sys_fork/sys_vfork/sys_clone prototypes to linux/syscalls.h
      mn10300: switch to generic fork/vfork/clone
      h8300: switch to generic fork/vfork/clone
      tile: switch to generic clone()
      ...
    
    Conflicts:
    	arch/microblaze/include/asm/Kbuild

commit 743aa456c1834f76982af44e8b71d1a0b2a82e21
Merge: a05a4e2 11af32b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Dec 11 19:59:32 2012 -0800

    Merge branch 'x86-nuke386-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull "Nuke 386-DX/SX support" from Ingo Molnar:
     "This tree removes ancient-386-CPUs support and thus zaps quite a bit
      of complexity:
    
        24 files changed, 56 insertions(+), 425 deletions(-)
    
      ... which complexity has plagued us with extra work whenever we wanted
      to change SMP primitives, for years.
    
      Unfortunately there's a nostalgic cost: your old original 386 DX33
      system from early 1991 won't be able to boot modern Linux kernels
      anymore.  Sniff."
    
    I'm not sentimental.  Good riddance.
    
    * 'x86-nuke386-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, 386 removal: Document Nx586 as a 386 and thus unsupported
      x86, cleanups: Simplify sync_core() in the case of no CPUID
      x86, 386 removal: Remove CONFIG_X86_POPAD_OK
      x86, 386 removal: Remove CONFIG_X86_WP_WORKS_OK
      x86, 386 removal: Remove CONFIG_INVLPG
      x86, 386 removal: Remove CONFIG_BSWAP
      x86, 386 removal: Remove CONFIG_XADD
      x86, 386 removal: Remove CONFIG_CMPXCHG
      x86, 386 removal: Remove CONFIG_M386 from Kconfig

commit 74b84233458e9db7c160cec67638efdbec748ca9
Merge: 5074474 a71c8bc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Dec 11 19:56:33 2012 -0800

    Merge branch 'x86-bsp-hotplug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 BSP hotplug changes from Ingo Molnar:
     "This tree enables CPU#0 (the boot processor) to be onlined/offlined on
      x86, just like any other CPU.  Enabled on Intel CPUs for now.
    
      Allowing this required the identification and fixing of latent CPU#0
      assumptions (such as CPU#0 initializations, etc.) in the x86
      architecture code, plus the identification of barriers to
      BSP-offlining, such as active PIC interrupts which can only be
      serviced on the BSP.
    
      It's behind a default-off option, and there's a debug option that
      allows the automatic testing of this feature.
    
      The motivation of this feature is to allow and prepare for true
      CPU-hotplug hardware support: recent changes to MCE support enable us
      to detect a deteriorating but not yet hard-failing L1/L2 cache on a
      CPU that could be soft-unplugged - or a failing L3 cache on a
      multi-socket system.
    
      Note that true hardware hot-plug is not yet fully enabled by this,
      because that requires a special platform wakeup sequence to be sent to
      the freshly powered up CPU#0.  Future patches for this are planned,
      once such a platform exists.  Chicken and egg"
    
    * 'x86-bsp-hotplug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, topology: Debug CPU0 hotplug
      x86/i387.c: Initialize thread xstate only on CPU0 only once
      x86, hotplug: Handle retrigger irq by the first available CPU
      x86, hotplug: The first online processor saves the MTRR state
      x86, hotplug: During CPU0 online, enable x2apic, set_numa_node.
      x86, hotplug: Wake up CPU0 via NMI instead of INIT, SIPI, SIPI
      x86-32, hotplug: Add start_cpu0() entry point to head_32.S
      x86-64, hotplug: Add start_cpu0() entry point to head_64.S
      kernel/cpu.c: Add comment for priority in cpu_hotplug_pm_callback
      x86, hotplug, suspend: Online CPU0 for suspend or hibernate
      x86, hotplug: Support functions for CPU0 online/offline
      x86, topology: Don't offline CPU0 if any PIC irq can not be migrated out of it
      x86, Kconfig: Add config switch for CPU0 hotplug
      doc: Add x86 CPU0 online/offline feature

commit 507447473756e316f3f182324071389a51736a83
Merge: 0019fab 6e87f9b7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Dec 11 19:55:58 2012 -0800

    Merge branch 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 boot changes from Ingo Molnar:
     "Two small changes: a cleanup and allow CONFIG_X86_MPPARSE to be turned
      off on SFI as well."
    
    * 'x86-boot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      arch/x86/Kconfig: Allow turning off CONFIG_X86_MPPARSE when either ACPI or SFI is present
      x86/boot/doc: Fix grammar and typo in boot.txt

commit cbee9f88ec1b8dd6b58f25f54e4f52c82ed77690
Author: Peter Zijlstra <a.p.zijlstra@chello.nl>
Date:   Thu Oct 25 14:16:43 2012 +0200

    mm: numa: Add fault driven placement and migration
    
    NOTE: This patch is based on "sched, numa, mm: Add fault driven
    	placement and migration policy" but as it throws away all the policy
    	to just leave a basic foundation I had to drop the signed-offs-by.
    
    This patch creates a bare-bones method for setting PTEs pte_numa in the
    context of the scheduler that when faulted later will be faulted onto the
    node the CPU is running on.  In itself this does nothing useful but any
    placement policy will fundamentally depend on receiving hints on placement
    from fault context and doing something intelligent about it.
    
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Acked-by: Rik van Riel <riel@redhat.com>

commit f9726bfd4b14401d294207a70c7c0c4be8a8c6cc
Author: Daniel J Blueman <daniel@numascale-asia.com>
Date:   Fri Dec 7 14:24:32 2012 -0700

    x86/PCI: Add NumaChip remote PCI support
    
    Add NumaChip-specific PCI access mechanism via MMCONFIG cycles, but
    preventing access to AMD Northbridges which shouldn't respond.
    
    Signed-off-by: Daniel J Blueman <daniel@numascale-asia.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

commit 91d1aa43d30505b0b825db8898ffc80a8eca96c7
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue Nov 27 19:33:25 2012 +0100

    context_tracking: New context tracking susbsystem
    
    Create a new subsystem that probes on kernel boundaries
    to keep track of the transitions between level contexts
    with two basic initial contexts: user or kernel.
    
    This is an abstraction of some RCU code that use such tracking
    to implement its userspace extended quiescent state.
    
    We need to pull this up from RCU into this new level of indirection
    because this tracking is also going to be used to implement an "on
    demand" generic virtual cputime accounting. A necessary step to
    shutdown the tick while still accounting the cputime.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Li Zhong <zhong@linux.vnet.ibm.com>
    Cc: Gilad Ben-Yossef <gilad@benyossef.com>
    Reviewed-by: Steven Rostedt <rostedt@goodmis.org>
    [ paulmck: fix whitespace error and email address. ]
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>

commit 7ac468b1300f35143a9b5b100e3970ca7ae1d9b8
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Wed Nov 28 11:50:25 2012 -0800

    x86, 386 removal: Remove CONFIG_XADD
    
    All 486+ CPUs support XADD, so remove the fallback 386 support
    code.
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Link: http://lkml.kernel.org/r/1354132230-21854-4-git-send-email-hpa@linux.intel.com

commit eb068e781020cf491333c773fb41820b57bfada4
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Wed Nov 28 11:50:23 2012 -0800

    x86, 386 removal: Remove CONFIG_M386 from Kconfig
    
    Remove the CONFIG_M386 symbol from Kconfig so that it cannot be
    selected.
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Link: http://lkml.kernel.org/r/1354132230-21854-2-git-send-email-hpa@linux.intel.com

commit 1d4b4b2994b5fc208963c0b795291f8c1f18becf
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Oct 22 22:34:11 2012 -0400

    x86, um: switch to generic fork/vfork/clone
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit 6147a9d8070e1c9d16d57eb53a14942b95b28dc4
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Fri Oct 19 16:53:18 2012 -0400

    irq_work: Remove CONFIG_HAVE_IRQ_WORK
    
    irq work can run on any arch even without IPI
    support because of the hook on update_process_times().
    
    So lets remove HAVE_IRQ_WORK because it doesn't reflect
    any backend requirement.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>

commit a71c8bc5dfefbbf80ef90739791554ef7ea4401b
Author: Fenghua Yu <fenghua.yu@intel.com>
Date:   Tue Nov 13 11:32:51 2012 -0800

    x86, topology: Debug CPU0 hotplug
    
    CONFIG_DEBUG_HOTPLUG_CPU0 is for debugging the CPU0 hotplug feature. The switch
    offlines CPU0 as soon as possible and boots userspace up with CPU0 offlined.
    User can online CPU0 back after boot time. The default value of the switch is
    off.
    
    To debug CPU0 hotplug, you need to enable CPU0 offline/online feature by either
    turning on CONFIG_BOOTPARAM_HOTPLUG_CPU0 during compilation or giving
    cpu0_hotplug kernel parameter at boot.
    
    It's safe and early place to take down CPU0 after all hotplug notifiers
    are installed and SMP is booted.
    
    Please note that some applications or drivers, e.g. some versions of udevd,
    during boot time may put CPU0 online again in this CPU0 hotplug debug mode.
    
    In this debug mode, setup_local_APIC() may report a warning on max_loops<=0
    when CPU0 is onlined back after boot time. This is because pending interrupt in
    IRR can not move to ISR. The warning is not CPU0 specfic and it can happen on
    other CPUs as well. It is harmless except the first CPU0 online takes a bit
    longer time. And so this debug mode is useful to expose this issue. I'll send
    a seperate patch to fix this generic warning issue.
    
    Signed-off-by: Fenghua Yu <fenghua.yu@intel.com>
    Link: http://lkml.kernel.org/r/1352835171-3958-15-git-send-email-fenghua.yu@intel.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 80aa1dff65717e7518647d4e27d1d3dcea5818e6
Author: Fenghua Yu <fenghua.yu@intel.com>
Date:   Tue Nov 13 11:32:39 2012 -0800

    x86, Kconfig: Add config switch for CPU0 hotplug
    
    New config switch CONFIG_BOOTPARAM_HOTPLUG_CPU0 sets default state of whether
    the CPU0 hotplug is on or off.
    
    If the switch is off, CPU0 is not hotpluggable by default. But the CPU0 hotplug
    feature can still be turned on by kernel parameter cpu0_hotplug at boot.
    
    If the switch is on, CPU0 is always hotpluggable.
    
    The default value of the switch is off.
    
    Signed-off-by: Fenghua Yu <fenghua.yu@intel.com>
    Link: http://lkml.kernel.org/r/1352835171-3958-3-git-send-email-fenghua.yu@intel.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 6e87f9b7e48e165cb8e6092b9abe682e7065614a
Author: Bin Gao <bin.gao@linux.intel.com>
Date:   Thu Oct 25 09:35:44 2012 -0700

    arch/x86/Kconfig: Allow turning off CONFIG_X86_MPPARSE when either ACPI or SFI is present
    
    MPS tables are not needed for systems that have proper ACPI
    support. This is also true for systems that have SFI in place.
    
    So this patch allows the configuration (turning off) of
    CONFIG_X86_MPPARSE when either ACPI or SFI is present.
    
    Signed-off-by: Bin Gao <bin.gao@intel.com>
    Cc: Len Brown <len.brown@intel.com>
    Cc: Bin Gao <bin.gao@linux.intel.com>
    Link: http://lkml.kernel.org/r/20121025163544.GB38477@bingao-desk1.fm.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit d25282d1c9b9bc4cda7f9d3c0205108e99aa7a9d
Merge: b6eea87 dbadc17
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Oct 14 13:39:34 2012 -0700

    Merge branch 'modules-next' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux
    
    Pull module signing support from Rusty Russell:
     "module signing is the highlight, but it's an all-over David Howells frenzy..."
    
    Hmm "Magrathea: Glacier signing key". Somebody has been reading too much HHGTTG.
    
    * 'modules-next' of git://git.kernel.org/pub/scm/linux/kernel/git/rusty/linux: (37 commits)
      X.509: Fix indefinite length element skip error handling
      X.509: Convert some printk calls to pr_devel
      asymmetric keys: fix printk format warning
      MODSIGN: Fix 32-bit overflow in X.509 certificate validity date checking
      MODSIGN: Make mrproper should remove generated files.
      MODSIGN: Use utf8 strings in signer's name in autogenerated X.509 certs
      MODSIGN: Use the same digest for the autogen key sig as for the module sig
      MODSIGN: Sign modules during the build process
      MODSIGN: Provide a script for generating a key ID from an X.509 cert
      MODSIGN: Implement module signature checking
      MODSIGN: Provide module signing public keys to the kernel
      MODSIGN: Automatically generate module signing keys if missing
      MODSIGN: Provide Kconfig options
      MODSIGN: Provide gitignore and make clean rules for extra files
      MODSIGN: Add FIPS policy
      module: signature checking hook
      X.509: Add a crypto key parser for binary (DER) X.509 certificates
      MPILIB: Provide a function to read raw data into an MPI
      X.509: Add an ASN.1 decoder
      X.509: Add simple ASN.1 grammar compiler
      ...

commit 4e21fc138bfd7fe625ff5dc81541399aaf9d429b
Merge: 8418263 5522be6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 13 10:05:52 2012 +0900

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal
    
    Pull third pile of kernel_execve() patches from Al Viro:
     "The last bits of infrastructure for kernel_thread() et.al., with
      alpha/arm/x86 use of those.  Plus sanitizing the asm glue and
      do_notify_resume() on alpha, fixing the "disabled irq while running
      task_work stuff" breakage there.
    
      At that point the rest of kernel_thread/kernel_execve/sys_execve work
      can be done independently for different architectures.  The only
      pending bits that do depend on having all architectures converted are
      restrictred to fs/* and kernel/* - that'll obviously have to wait for
      the next cycle.
    
      I thought we'd have to wait for all of them done before we start
      eliminating the longjump-style insanity in kernel_execve(), but it
      turned out there's a very simple way to do that without flagday-style
      changes."
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal:
      alpha: switch to saner kernel_execve() semantics
      arm: switch to saner kernel_execve() semantics
      x86, um: convert to saner kernel_execve() semantics
      infrastructure for saner ret_from_kernel_thread semantics
      make sure that kernel_thread() callbacks call do_exit() themselves
      make sure that we always have a return path from kernel_execve()
      ppc: eeh_event should just use kthread_run()
      don't bother with kernel_thread/kernel_execve for launching linuxrc
      alpha: get rid of switch_stack argument of do_work_pending()
      alpha: don't bother passing switch_stack separately from regs
      alpha: take SIGPENDING/NOTIFY_RESUME loop into signal.c
      alpha: simplify TIF_NEED_RESCHED handling

commit 22e2430d60dbdfcdd732a086e9ef2dbd74c266d1
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Wed Oct 10 21:35:42 2012 -0400

    x86, um: convert to saner kernel_execve() semantics
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit 42859eea96ba6beabfb0369a1eeffa3c7d2bd9cb
Merge: f59b51f f322220
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Oct 10 12:02:25 2012 +0900

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal
    
    Pull generic execve() changes from Al Viro:
     "This introduces the generic kernel_thread() and kernel_execve()
      functions, and switches x86, arm, alpha, um and s390 over to them."
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal: (26 commits)
      s390: convert to generic kernel_execve()
      s390: switch to generic kernel_thread()
      s390: fold kernel_thread_helper() into ret_from_fork()
      s390: fold execve_tail() into start_thread(), convert to generic sys_execve()
      um: switch to generic kernel_thread()
      x86, um/x86: switch to generic sys_execve and kernel_execve
      x86: split ret_from_fork
      alpha: introduce ret_from_kernel_execve(), switch to generic kernel_execve()
      alpha: switch to generic kernel_thread()
      alpha: switch to generic sys_execve()
      arm: get rid of execve wrapper, switch to generic execve() implementation
      arm: optimized current_pt_regs()
      arm: introduce ret_from_kernel_execve(), switch to generic kernel_execve()
      arm: split ret_from_fork, simplify kernel_thread() [based on patch by rmk]
      generic sys_execve()
      generic kernel_execve()
      new helper: current_pt_regs()
      preparation for generic kernel_thread()
      um: kill thread->forking
      um: let signal_delivered() do SIGTRAP on singlestepping into handler
      ...

commit 15626062f4a98279c59a2a5208c496cf65cbf8c0
Author: Gerald Schaefer <gerald.schaefer@de.ibm.com>
Date:   Mon Oct 8 16:30:04 2012 -0700

    thp, x86: introduce HAVE_ARCH_TRANSPARENT_HUGEPAGE
    
    Cleanup patch in preparation for transparent hugepage support on s390.
    Adding new architectures to the TRANSPARENT_HUGEPAGE config option can
    make the "depends" line rather ugly, like "depends on (X86 || (S390 &&
    64BIT)) && MMU".
    
    This patch adds a HAVE_ARCH_TRANSPARENT_HUGEPAGE instead.  x86 already has
    MMU "def_bool y", so the MMU check is superfluous there and
    HAVE_ARCH_TRANSPARENT_HUGEPAGE can be selected in arch/x86/Kconfig.
    
    Signed-off-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Hillf Danton <dhillf@gmail.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 7ac57a89de958fbb5271dc504d0c25e34dbeec32
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Mon Oct 8 16:28:16 2012 -0700

    Kconfig: clean up the "#if defined(arch)" list for exception-trace sysctl entry
    
    Introduce SYSCTL_EXCEPTION_TRACE config option and selec it in the
    architectures requiring support for the "exception-trace" debug_table
    entry in kernel/sysctl.c.
    
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Chris Metcalf <cmetcalf@tilera.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit b69ec42b1b194cc88f04b3fbcda8d3f93182d6c3
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Mon Oct 8 16:28:11 2012 -0700

    Kconfig: clean up the long arch list for the DEBUG_KMEMLEAK config option
    
    Introduce HAVE_DEBUG_KMEMLEAK config option and select it in corresponding
    architecture Kconfig files.  DEBUG_KMEMLEAK now only depends on
    HAVE_DEBUG_KMEMLEAK.
    
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Michal Simek <monstr@monstr.eu>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Chris Metcalf <cmetcalf@tilera.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit af1839eb4bd4fe079a125eb199205fceb6ae19e6
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Mon Oct 8 16:28:08 2012 -0700

    Kconfig: clean up the long arch list for the UID16 config option
    
    Introduce HAVE_UID16 config option and select it in corresponding
    architecture Kconfig files.  UID16 now only depends on HAVE_UID16.
    
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Acked-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Mike Frysinger <vapier@gentoo.org>
    Cc: Mikael Starvik <starvik@axis.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Jeff Dike <jdike@addtoit.com>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit ecefbd94b834fa32559d854646d777c56749ef1c
Merge: ce57e98 3d11df7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 4 09:30:33 2012 -0700

    Merge tag 'kvm-3.7-1' of git://git.kernel.org/pub/scm/virt/kvm/kvm
    
    Pull KVM updates from Avi Kivity:
     "Highlights of the changes for this release include support for vfio
      level triggered interrupts, improved big real mode support on older
      Intels, a streamlines guest page table walker, guest APIC speedups,
      PIO optimizations, better overcommit handling, and read-only memory."
    
    * tag 'kvm-3.7-1' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (138 commits)
      KVM: s390: Fix vcpu_load handling in interrupt code
      KVM: x86: Fix guest debug across vcpu INIT reset
      KVM: Add resampling irqfds for level triggered interrupts
      KVM: optimize apic interrupt delivery
      KVM: MMU: Eliminate pointless temporary 'ac'
      KVM: MMU: Avoid access/dirty update loop if all is well
      KVM: MMU: Eliminate eperm temporary
      KVM: MMU: Optimize is_last_gpte()
      KVM: MMU: Simplify walk_addr_generic() loop
      KVM: MMU: Optimize pte permission checks
      KVM: MMU: Update accessed and dirty bits after guest pagetable walk
      KVM: MMU: Move gpte_access() out of paging_tmpl.h
      KVM: MMU: Optimize gpte_access() slightly
      KVM: MMU: Push clean gpte write protection out of gpte_access()
      KVM: clarify kvmclock documentation
      KVM: make processes waiting on vcpu mutex killable
      KVM: SVM: Make use of asm.h
      KVM: VMX: Make use of asm.h
      KVM: VMX: Make lto-friendly
      KVM: x86: lapic: Clean up find_highest_vector() and count_vectors()
      ...
    
    Conflicts:
    	arch/s390/include/asm/processor.h
    	arch/x86/kvm/i8259.c

commit 15385dfe7e0fa6866b204dd0d14aec2cc48fc0a7
Merge: a57d985 b2cc2a0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 1 13:59:17 2012 -0700

    Merge branch 'x86-smap-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86/smap support from Ingo Molnar:
     "This adds support for the SMAP (Supervisor Mode Access Prevention) CPU
      feature on Intel CPUs: a hardware feature that prevents unintended
      user-space data access from kernel privileged code.
    
      It's turned on automatically when possible.
    
      This, in combination with SMEP, makes it even harder to exploit kernel
      bugs such as NULL pointer dereferences."
    
    Fix up trivial conflict in arch/x86/kernel/entry_64.S due to newly added
    includes right next to each other.
    
    * 'x86-smap-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, smep, smap: Make the switching functions one-way
      x86, suspend: On wakeup always initialize cr4 and EFER
      x86-32: Start out eflags and cr4 clean
      x86, smap: Do not abuse the [f][x]rstor_checking() functions for user space
      x86-32, smap: Add STAC/CLAC instructions to 32-bit kernel entry
      x86, smap: Reduce the SMAP overhead for signal handling
      x86, smap: A page fault due to SMAP is an oops
      x86, smap: Turn on Supervisor Mode Access Prevention
      x86, smap: Add STAC and CLAC instructions to control user space access
      x86, uaccess: Merge prototypes for clear_user/__clear_user
      x86, smap: Add a header file with macros for STAC/CLAC
      x86, alternative: Add header guards to <asm/alternative-asm.h>
      x86, alternative: Use .pushsection/.popsection
      x86, smap: Add CR4 bit for SMAP
      x86-32, mm: The WP test should be done on a kernel page

commit b3eda8d05c1afe722dc19be3fee7eeadc75e25e2
Merge: a5fa7b7 bd13178
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 1 11:15:17 2012 -0700

    Merge branch 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86/microcode changes from Ingo Molnar:
     "The biggest changes are to AMD microcode patching: add code for
      caching all microcode patches which belong to the current family on
      which we're running, in the kernel.
    
      We look up the patch needed for each core from the cache at
      patch-application time instead of holding a single patch per-system"
    
    * 'x86-microcode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, microcode, AMD: Fix use after free in free_cache()
      x86, microcode, AMD: Rewrite patch application procedure
      x86, microcode, AMD: Add a small, per-family patches cache
      x86, microcode, AMD: Add reverse equiv table search
      x86, microcode: Add a refresh firmware flag to ->request_microcode_fw
      x86, microcode, AMD: Read CPUID(1).EAX on the correct cpu
      x86, microcode, AMD: Check before applying a patch
      x86, microcode, AMD: Remove useless get_ucode_data wrapper
      x86, microcode: Straighten out Kconfig text
      x86, microcode: Cleanup cpu hotplug notifier callback
      x86, microcode: Drop uci->mc check on resume path
      x86, microcode: Save an indentation level in reload_for_cpu

commit 7687b80a4f5a178fe292d071c91ebf273ebe12db
Merge: ac07f5c 39ba501
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 1 11:12:13 2012 -0700

    Merge branch 'x86-mce-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86/MCE update from Ingo Molnar:
     "Various MCE robustness enhancements.
    
      One of the changes adds CMCI (Corrected Machine Check Interrupt) poll
      mode on Intel Nehalem+ CPUs, which mode is automatically entered when
      the rate of messages is too high - and exited once the storm is over.
    
      An MCE events storm will roughly look like this:
    
       [ 5342.740616] mce: [Hardware Error]: Machine check events logged
       [ 5342.746501] mce: [Hardware Error]: Machine check events logged
       [ 5342.757971] CMCI storm detected: switching to poll mode
       [ 5372.674957] CMCI storm subsided: switching to interrupt mode
    
      This should make such events more survivable"
    
    * 'x86-mce-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/mce: Provide boot argument to honour bios-set CMCI threshold
      x86, MCE: Remove unused defines
      x86, mce: Enable MCA support by default
      x86/mce: Add CMCI poll mode
      x86/mce: Make cmci_discover() quiet
      x86: mce: Remove the frozen cases in the hotplug code
      x86: mce: Split timer init
      x86: mce: Serialize mce injection
      x86: mce: Disable preemption when calling raise_local()

commit 67b1f348c95e48aa80a58fbdca93a702b5afa69c
Merge: da83479 3120e25
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 1 10:47:11 2012 -0700

    Merge branch 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86/build changes from Ingo Molnar:
     "defconfig and kconfig cleanups/fixes"
    
    * 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/Kconfig: Clean up Kconfig defaults
      x86/Kconfig: Turn off DEBUG_NX_TEST module in defconfigs
      x86/Kconfig: Turn off CONFIG_BLK_DEV_RAM
      x86/Kconfig: Disable CONFIG_CRC_T10DIF in defconfigs
      x86/Kconfig: Switch to ext4 in defconfigs
      x86/Kconfig: Update defconfigs to current results of "make savedefconfig"

commit 0b981cb94bc63a2d0e5eccccdca75fe57643ffce
Merge: 4cba333 fdf9c35
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 1 10:43:39 2012 -0700

    Merge branch 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull scheduler changes from Ingo Molnar:
     "Continued quest to clean up and enhance the cputime code by Frederic
      Weisbecker, in preparation for future tickless kernel features.
    
      Other than that, smallish changes."
    
    Fix up trivial conflicts due to additions next to each other in arch/{x86/}Kconfig
    
    * 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (24 commits)
      cputime: Make finegrained irqtime accounting generally available
      cputime: Gather time/stats accounting config options into a single menu
      ia64: Reuse system and user vtime accounting functions on task switch
      ia64: Consolidate user vtime accounting
      vtime: Consolidate system/idle context detection
      cputime: Use a proper subsystem naming for vtime related APIs
      sched: cpu_power: enable ARCH_POWER
      sched/nohz: Clean up select_nohz_load_balancer()
      sched: Fix load avg vs. cpu-hotplug
      sched: Remove __ARCH_WANT_INTERRUPTS_ON_CTXSW
      sched: Fix nohz_idle_balance()
      sched: Remove useless code in yield_to()
      sched: Add time unit suffix to sched sysctl knobs
      sched/debug: Limit sd->*_idx range on sysctl
      sched: Remove AFFINE_WAKEUPS feature flag
      s390: Remove leftover account_tick_vtime() header
      cputime: Consolidate vtime handling on context switch
      sched: Move cputime code to its own file
      cputime: Generalize CONFIG_VIRT_CPU_ACCOUNTING
      tile: Remove SD_PREFER_LOCAL leftover
      ...

commit 7e92daaefa68e5ef1e1732e45231e73adbb724e7
Merge: 7a68294 1d787d3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 1 10:28:49 2012 -0700

    Merge branch 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull perf update from Ingo Molnar:
     "Lots of changes in this cycle as well, with hundreds of commits from
      over 30 contributors.  Most of the activity was on the tooling side.
    
      Higher level changes:
    
       - New 'perf kvm' analysis tool, from Xiao Guangrong.
    
       - New 'perf trace' system-wide tracing tool
    
       - uprobes fixes + cleanups from Oleg Nesterov.
    
       - Lots of patches to make perf build on Android out of box, from
         Irina Tirdea
    
       - Extend ftrace function tracing utility to be more dynamic for its
         users.  It allows for data passing to the callback functions, as
         well as reading regs as if a breakpoint were to trigger at function
         entry.
    
         The main goal of this patch series was to allow kprobes to use
         ftrace as an optimized probe point when a probe is placed on an
         ftrace nop.  With lots of help from Masami Hiramatsu, and going
         through lots of iterations, we finally came up with a good
         solution.
    
       - Add cpumask for uncore pmu, use it in 'stat', from Yan, Zheng.
    
       - Various tracing updates from Steve Rostedt
    
       - Clean up and improve 'perf sched' performance by elliminating lots
         of needless calls to libtraceevent.
    
       - Event group parsing support, from Jiri Olsa
    
       - UI/gtk refactorings and improvements from Namhyung Kim
    
       - Add support for non-tracepoint events in perf script python, from
         Feng Tang
    
       - Add --symbols to 'script', similar to the one in 'report', from
         Feng Tang.
    
      Infrastructure enhancements and fixes:
    
       - Convert the trace builtins to use the growing evsel/evlist
         tracepoint infrastructure, removing several open coded constructs
         like switch like series of strcmp to dispatch events, etc.
         Basically what had already been showcased in 'perf sched'.
    
       - Add evsel constructor for tracepoints, that uses libtraceevent just
         to parse the /format events file, use it in a new 'perf test' to
         make sure the libtraceevent format parsing regressions can be more
         readily caught.
    
       - Some strange errors were happening in some builds, but not on the
         next, reported by several people, problem was some parser related
         files, generated during the build, didn't had proper make deps, fix
         from Eric Sandeen.
    
       - Introduce struct and cache information about the environment where
         a perf.data file was captured, from Namhyung Kim.
    
       - Fix handling of unresolved samples when --symbols is used in
         'report', from Feng Tang.
    
       - Add union member access support to 'probe', from Hyeoncheol Lee.
    
       - Fixups to die() removal, from Namhyung Kim.
    
       - Render fixes for the TUI, from Namhyung Kim.
    
       - Don't enable annotation in non symbolic view, from Namhyung Kim.
    
       - Fix pipe mode in 'report', from Namhyung Kim.
    
       - Move related stats code from stat to util/, will be used by the
         'stat' kvm tool, from Xiao Guangrong.
    
       - Remove die()/exit() calls from several tools.
    
       - Resolve vdso callchains, from Jiri Olsa
    
       - Don't pass const char pointers to basename, so that we can
         unconditionally use libgen.h and thus avoid ifdef BIONIC lines,
         from David Ahern
    
       - Refactor hist formatting so that it can be reused with the GTK
         browser, From Namhyung Kim
    
       - Fix build for another rbtree.c change, from Adrian Hunter.
    
       - Make 'perf diff' command work with evsel hists, from Jiri Olsa.
    
       - Use the only field_sep var that is set up: symbol_conf.field_sep,
         fix from Jiri Olsa.
    
       - .gitignore compiled python binaries, from Namhyung Kim.
    
       - Get rid of die() in more libtraceevent places, from Namhyung Kim.
    
       - Rename libtraceevent 'private' struct member to 'priv' so that it
         works in C++, from Steven Rostedt
    
       - Remove lots of exit()/die() calls from tools so that the main perf
         exit routine can take place, from David Ahern
    
       - Fix x86 build on x86-64, from David Ahern.
    
       - {int,str,rb}list fixes from Suzuki K Poulose
    
       - perf.data header fixes from Namhyung Kim
    
       - Allow user to indicate objdump path, needed in cross environments,
         from Maciek Borzecki
    
       - Fix hardware cache event name generation, fix from Jiri Olsa
    
       - Add round trip test for sw, hw and cache event names, catching the
         problem Jiri fixed, after Jiri's patch, the test passes
         successfully.
    
       - Clean target should do clean for lib/traceevent too, fix from David
         Ahern
    
       - Check the right variable for allocation failure, fix from Namhyung
         Kim
    
       - Set up evsel->tp_format regardless of evsel->name being set
         already, fix from Namhyung Kim
    
       - Oprofile fixes from Robert Richter.
    
       - Remove perf_event_attr needless version inflation, from Jiri Olsa
    
       - Introduce libtraceevent strerror like error reporting facility,
         from Namhyung Kim
    
       - Add pmu mappings to perf.data header and use event names from cmd
         line, from Robert Richter
    
       - Fix include order for bison/flex-generated C files, from Ben
         Hutchings
    
       - Build fixes and documentation corrections from David Ahern
    
       - Assorted cleanups from Robert Richter
    
       - Let O= makes handle relative paths, from Steven Rostedt
    
       - perf script python fixes, from Feng Tang.
    
       - Initial bash completion support, from Frederic Weisbecker
    
       - Allow building without libelf, from Namhyung Kim.
    
       - Support DWARF CFI based unwind to have callchains when %bp based
         unwinding is not possible, from Jiri Olsa.
    
       - Symbol resolution fixes, while fixing support PPC64 files with an
         .opt ELF section was the end goal, several fixes for code that
         handles all architectures and cleanups are included, from Cody
         Schafer.
    
       - Assorted fixes for Documentation and build in 32 bit, from Robert
         Richter
    
       - Cache the libtraceevent event_format associated to each evsel
         early, so that we avoid relookups, i.e.  calling pevent_find_event
         repeatedly when processing tracepoint events.
    
         [ This is to reduce the surface contact with libtraceevents and
            make clear what is that the perf tools needs from that lib: so
            far parsing the common and per event fields.  ]
    
       - Don't stop the build if the audit libraries are not installed, fix
         from Namhyung Kim.
    
       - Fix bfd.h/libbfd detection with recent binutils, from Markus
         Trippelsdorf.
    
       - Improve warning message when libunwind devel packages not present,
         from Jiri Olsa"
    
    * 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (282 commits)
      perf trace: Add aliases for some syscalls
      perf probe: Print an enum type variable in "enum variable-name" format when showing accessible variables
      perf tools: Check libaudit availability for perf-trace builtin
      perf hists: Add missing period_* fields when collapsing a hist entry
      perf trace: New tool
      perf evsel: Export the event_format constructor
      perf evsel: Introduce rawptr() method
      perf tools: Use perf_evsel__newtp in the event parser
      perf evsel: The tracepoint constructor should store sys:name
      perf evlist: Introduce set_filter() method
      perf evlist: Renane set_filters method to apply_filters
      perf test: Add test to check we correctly parse and match syscall open parms
      perf evsel: Handle endianity in intval method
      perf evsel: Know if byte swap is needed
      perf tools: Allow handling a NULL cpu_map as meaning "all cpus"
      perf evsel: Improve tracepoint constructor setup
      tools lib traceevent: Fix error path on pevent_parse_event
      perf test: Fix build failure
      trace: Move trace event enable from fs_initcall to core_initcall
      tracing: Add an option for disabling markers
      ...

commit 7076aada1040de4ed79a5977dbabdb5e5ea5e249
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Sep 10 16:44:54 2012 -0400

    x86: split ret_from_fork
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

commit 786d35d45cc40b2a51a18f73e14e135d47fdced7
Author: David Howells <dhowells@redhat.com>
Date:   Fri Sep 28 14:31:03 2012 +0930

    Make most arch asm/module.h files use asm-generic/module.h
    
    Use the mapping of Elf_[SPE]hdr, Elf_Addr, Elf_Sym, Elf_Dyn, Elf_Rel/Rela,
    ELF_R_TYPE() and ELF_R_SYM() to either the 32-bit version or the 64-bit version
    into asm-generic/module.h for all arches bar MIPS.
    
    Also, use the generic definition mod_arch_specific where possible.
    
    To this end, I've defined three new config bools:
    
     (*) HAVE_MOD_ARCH_SPECIFIC
    
         Arches define this if they don't want to use the empty generic
         mod_arch_specific struct.
    
     (*) MODULES_USE_ELF_RELA
    
         Arches define this if their modules can contain RELA records.  This causes
         the Elf_Rela mapping to be emitted and allows apply_relocate_add() to be
         defined by the arch rather than have the core emit an error message.
    
     (*) MODULES_USE_ELF_REL
    
         Arches define this if their modules can contain REL records.  This causes
         the Elf_Rel mapping to be emitted and allows apply_relocate() to be
         defined by the arch rather than have the core emit an error message.
    
    Note that it is possible to allow both REL and RELA records: m68k and mips are
    two arches that do this.
    
    With this, some arch asm/module.h files can be deleted entirely and replaced
    with a generic-y marker in the arch Kbuild file.
    
    Additionally, I have removed the bits from m32r and score that handle the
    unsupported type of relocation record as that's now handled centrally.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

commit edf55fda35c7dc7f2d9241c3abaddaf759b457c6
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Wed Jul 11 20:26:39 2012 +0200

    x86: Exit RCU extended QS on notify resume
    
    do_notify_resume() may be called on irq or exception
    exit. But at that time the exception has already called
    rcu_user_enter() and the irq has already called rcu_irq_exit().
    
    Since it can use RCU read side critical section, we must call
    rcu_user_exit() before doing anything there. Then we must call
    back rcu_user_enter() after this function because we know we are
    going to userspace from there.
    
    This complete support for userspace RCU extended quiescent state
    in x86-64.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Alessio Igor Bogani <abogani@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Avi Kivity <avi@redhat.com>
    Cc: Chris Metcalf <cmetcalf@tilera.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Geoff Levand <geoff@infradead.org>
    Cc: Gilad Ben Yossef <gilad@benyossef.com>
    Cc: Hakan Akkan <hakanakkan@gmail.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Josh Triplett <josh@joshtriplett.org>
    Cc: Kevin Hilman <khilman@ti.com>
    Cc: Max Krasnyansky <maxk@qualcomm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephen Hemminger <shemminger@vyatta.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Sven-Thorsten Dietrich <thebigcorporation@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Reviewed-by: Josh Triplett <josh@joshtriplett.org>

commit fdf9c356502ae02238efcdf90cefd7b473a63fd4
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Sun Sep 9 14:56:31 2012 +0200

    cputime: Make finegrained irqtime accounting generally available
    
    There is no known reason for this option to be unavailable on other
    archs than x86. They just need to call enable_sched_clock_irqtime()
    if they have a sufficiently finegrained clock to make it working.
    
    Move it to the general option and let the user choose between
    it and pure tick based or virtual cputime accounting.
    
    Note that virtual cputime accounting already performs a finegrained
    irqtime accounting. CONFIG_IRQ_TIME_ACCOUNTING is a kind of middle ground
    between tick and virtual based accounting. So CONFIG_IRQ_TIME_ACCOUNTING
    and CONFIG_VIRT_CPU_ACCOUNTING are mutually exclusive choices.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>

commit 51ae4a2d775e1ee456282d7c60e49693d0a8555d
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Fri Sep 21 12:43:10 2012 -0700

    x86, smap: Add a header file with macros for STAC/CLAC
    
    The STAC/CLAC instructions are only available with SMAP, but on the
    other hand they aren't needed if SMAP is not available, or before we
    start to run userspace, so construct them as alternatives which start
    out as noops and are enabled by the alternatives mechanism.
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Link: http://lkml.kernel.org/r/1348256595-29119-7-git-send-email-hpa@linux.intel.com

commit e57dbaf77f372ac461b5b0b353c65efae9739a00
Author: Borislav Petkov <borislav.petkov@amd.com>
Date:   Tue Sep 13 15:23:21 2011 +0200

    x86, mce: Enable MCA support by default
    
    MCA is the basic support for hardware error logging and reporting, and
    it is majorly unwise to run without it so enable machine check software
    support by default on x86.
    
    Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
    Acked-by: Tony Luck <tony.luck@intel.com>

commit 3120e25efdc0834c88e1c0f8394e2087444f8c19
Author: Jan Beulich <JBeulich@suse.com>
Date:   Mon Sep 10 12:41:45 2012 +0100

    x86/Kconfig: Clean up Kconfig defaults
    
    The main goal here is to have the resulting .config no carry any
    options that aren't enabled and can't be (i.e such where the
    default is "no" and can't be changed), so that if any such
    option later gets a user visible prompt, the user will actually
    be prompted on a "make ...oldconfig" rather than keeping the
    previously invisible option disabled.
    
    There's a little bit of other trivial cleanup mixed in here.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Link: http://lkml.kernel.org/r/504DEE19020000780009A285@nat28.tlf.novell.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 4454d32749465ffa77d82bc1fdd196d6dedc544b
Author: Joe Millenbach <jmillenbach@gmail.com>
Date:   Sun Sep 2 17:38:20 2012 -0700

    x86/kconfig: Remove outdated reference to Intel CPUs in CONFIG_SWIOTLB
    
    Deleted the no longer valid example of which x86 CPUs lack a
    hardware IOMMU, and moved the "If unsure..." statement to a new
    line to follow the style of surrounding options.
    
    Signed-off-by: Joe Millenbach <jmillenbach@gmail.com>
    Reviewed-by: Josh Triplett <josh@joshtriplett.org>
    Cc: team-fjord@googlegroups.com
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Link: http://lkml.kernel.org/r/1346632700-29113-1-git-send-email-jmillenbach@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit d57c5d51a30152f3175d2344cb6395f08bf8ee0c
Author: Steven Rostedt <srostedt@redhat.com>
Date:   Wed Feb 9 13:32:18 2011 -0500

    ftrace/x86: Add support for -mfentry to x86_64
    
    If the kernel is compiled with gcc 4.6.0 which supports -mfentry,
    then use that instead of mcount.
    
    With mcount, frame pointers are forced with the -pg option and we
    get something like:
    
    <can_vma_merge_before>:
           55                      push   %rbp
           48 89 e5                mov    %rsp,%rbp
           53                      push   %rbx
           41 51                   push   %r9
           e8 fe 6a 39 00          callq  ffffffff81483d00 <mcount>
           31 c0                   xor    %eax,%eax
           48 89 fb                mov    %rdi,%rbx
           48 89 d7                mov    %rdx,%rdi
           48 33 73 30             xor    0x30(%rbx),%rsi
           48 f7 c6 ff ff ff f7    test   $0xfffffffff7ffffff,%rsi
    
    With -mfentry, frame pointers are no longer forced and the call looks
    like this:
    
    <can_vma_merge_before>:
           e8 33 af 37 00          callq  ffffffff81461b40 <__fentry__>
           53                      push   %rbx
           48 89 fb                mov    %rdi,%rbx
           31 c0                   xor    %eax,%eax
           48 89 d7                mov    %rdx,%rdi
           41 51                   push   %r9
           48 33 73 30             xor    0x30(%rbx),%rsi
           48 f7 c6 ff ff ff f7    test   $0xfffffffff7ffffff,%rsi
    
    This adds the ftrace hook at the beginning of the function before a
    frame is set up, and allows the function callbacks to be able to access
    parameters. As kprobes now can use function tracing (at least on x86)
    this speeds up the kprobe hooks that are at the beginning of the
    function.
    
    Link: http://lkml.kernel.org/r/20120807194100.130477900@goodmis.org
    
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

commit 90993cdd1800dc6ef9587431a0c625b978584e81
Author: Marcelo Tosatti <mtosatti@redhat.com>
Date:   Thu Aug 16 17:00:19 2012 -0300

    x86: KVM guest: merge CONFIG_KVM_CLOCK into CONFIG_KVM_GUEST
    
    The distinction between CONFIG_KVM_CLOCK and CONFIG_KVM_GUEST is
    not so clear anymore, as demonstrated by recent bugs caused by poor
    handling of on/off combinations of these options.
    
    Merge CONFIG_KVM_CLOCK into CONFIG_KVM_GUEST.
    
    Reported-By: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
    Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

commit e43f6e67ec1c142550860bbe0b51166c5ee4cac8
Author: Borislav Petkov <borislav.petkov@amd.com>
Date:   Wed Aug 1 19:17:01 2012 +0200

    x86, microcode: Straighten out Kconfig text
    
    Update and clarify Kconfig help text along with menu names.
    
    Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
    Link: http://lkml.kernel.org/r/1344361461-10076-6-git-send-email-bp@amd64.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit c5ebcedb566ef17bda7b02686e0d658a7bb42ee7
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Tue Aug 7 15:20:40 2012 +0200

    perf: Add ability to attach user stack dump to sample
    
    Introducing PERF_SAMPLE_STACK_USER sample type bit to trigger the dump
    of the user level stack on sample. The size of the dump is specified by
    sample_stack_user value.
    
    Being able to dump parts of the user stack, starting from the stack
    pointer, will be useful to make a post mortem dwarf CFI based stack
    unwinding.
    
    Added HAVE_PERF_USER_STACK_DUMP config option to determine if the
    architecture provides user stack dump on perf event samples.  This needs
    access to the user stack pointer which is not unified across
    architectures. Enabling this for x86 architecture.
    
    Signed-off-by: Jiri Olsa <jolsa@redhat.com>
    Original-patch-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: "Frank Ch. Eigler" <fche@redhat.com>
    Cc: Arun Sharma <asharma@fb.com>
    Cc: Benjamin Redelings <benjamin.redelings@nescent.org>
    Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Frank Ch. Eigler <fche@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Robert Richter <robert.richter@amd.com>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Tom Zanussi <tzanussi@gmail.com>
    Cc: Ulrich Drepper <drepper@gmail.com>
    Link: http://lkml.kernel.org/r/1344345647-11536-6-git-send-email-jolsa@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

commit c5e63197db519bae1c33e41ea0342a50f39e7a93
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Tue Aug 7 15:20:36 2012 +0200

    perf: Unified API to record selective sets of arch registers
    
    This brings a new API to help the selective dump of registers on event
    sampling, and its implementation for x86 arch.
    
    Added HAVE_PERF_REGS config option to determine if the architecture
    provides perf registers ABI.
    
    The information about desired registers will be passed in u64 mask.
    It's up to the architecture to map the registers into the mask bits.
    
    For the x86 arch implementation, both 32 and 64 bit registers bits are
    defined within single enum to ensure 64 bit system can provide register
    dump for compat task if needed in the future.
    
    Original-patch-by: Frederic Weisbecker <fweisbec@gmail.com>
    [ Added missing linux/errno.h include ]
    Signed-off-by: Jiri Olsa <jolsa@redhat.com>
    Cc: "Frank Ch. Eigler" <fche@redhat.com>
    Cc: Arun Sharma <asharma@fb.com>
    Cc: Benjamin Redelings <benjamin.redelings@nescent.org>
    Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Frank Ch. Eigler <fche@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Robert Richter <robert.richter@amd.com>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Tom Zanussi <tzanussi@gmail.com>
    Cc: Ulrich Drepper <drepper@gmail.com>
    Link: http://lkml.kernel.org/r/1344345647-11536-2-git-send-email-jolsa@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

commit 1ca0049f2c8b28611f30798aa75858763c9fcbea
Merge: ddc5057 eaf4ce6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Aug 3 10:59:36 2012 -0700

    Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 fixes from Ingo Molnar:
     "Various fixes"
    
    * 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86-64, kcmp: The kcmp system call can be common
      arch/x86/kernel/kdebugfs.c: Ensure a consistent return value in error case
      x86/mce: Add quirk for instruction recovery on Sandy Bridge processors
      x86/mce: Move MCACOD defines from mce-severity.c to <asm/mce.h>
      x86/ioapic: Fix NULL pointer dereference on CPU hotplug after disabling irqs
      x86, nops: Missing break resulting in incorrect selection on Intel
      x86: CONFIG_CC_STACKPROTECTOR=y is no longer experimental

commit c1d7e01d7877a397655277a920aeaa3830ed9461
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Jul 30 14:42:46 2012 -0700

    ipc: use Kconfig options for __ARCH_WANT_[COMPAT_]IPC_PARSE_VERSION
    
    Rather than #define the options manually in the architecture code, add
    Kconfig options for them and select them there instead.  This also allows
    us to select the compat IPC version parsing automatically for platforms
    using the old compat IPC interface.
    
    Reported-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Chris Metcalf <cmetcalf@tilera.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 7463449b8287162454d7e00bf7fd2c64f72c1dc8
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Mon Jul 30 14:41:09 2012 -0700

    atomic64_test: simplify the #ifdef for atomic64_dec_if_positive() test
    
    Introduce CONFIG_ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE and use this instead
    of the multitude of #if defined() checks in atomic64_test.c
    
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 2a8ac745e3171889d364235b8203342e28526d2c
Author: Jean Delvare <jdelvare@suse.de>
Date:   Fri Jul 6 16:08:25 2012 +0200

    x86: CONFIG_CC_STACKPROTECTOR=y is no longer experimental
    
    This feature has been around for over 5 years now, and has no
    CONFIG_EXPERIMENTAL dependency anymore, so remove the '(EXPERIMENTAL)'
    tag from the help text as well.
    
    Signed-off-by: Jean Delvare <jdelvare@suse.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Link: http://lkml.kernel.org/r/1341583705.4655.18.camel@amber.site
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 0c7596621e313bfcfbacb288e768c7150f5de9e0
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Fri Mar 16 12:03:13 2012 +0000

    x86, efi: Add EFI boot stub documentation
    
    Since we can't expect every user to read the EFI boot stub code it
    seems prudent to have a couple of paragraphs explaining what it is and
    how it works.
    
    The "initrd=" option in particular is tricky because it only
    understands absolute EFI-style paths (backslashes as directory
    separators), and until now this hasn't been documented anywhere. This
    has tripped up a couple of users.
    
    Cc: Matthew Garrett <mjg@redhat.com>
    Cc: Randy Dunlap <rdunlap@xenotime.net>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    Link: http://lkml.kernel.org/r/1331907517-3985-4-git-send-email-matt@console-pimps.org
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 5723aa993d83803157c22327e90cd59e3dcbe879
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 26 11:09:53 2012 -0700

    x86: use the new generic strnlen_user() function
    
    This throws away the old x86-specific functions in favor of the generic
    optimized version.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 4ae73f2d53255c388d50bf83c1681112a6f9cba1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 26 10:14:39 2012 -0700

    x86: use generic strncpy_from_user routine
    
    The generic strncpy_from_user() is not really optimal, since it is
    designed to work on both little-endian and big-endian.  And on
    little-endian you can simplify much of the logic to find the first zero
    byte, since little-endian arithmetic doesn't have to worry about the
    carry bit propagating into earlier bytes (only later bytes, which we
    don't care about).
    
    But I have patches to make the generic routines use the architecture-
    specific <asm/word-at-a-time.h> infrastructure, so that we can regain
    the little-endian optimizations.  But before we do that, switch over to
    the generic routines to make the patches each do just one well-defined
    thing.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit d484864dd96e1830e7689510597707c1df8cd681
Merge: be87cfb 0f51596
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri May 25 09:18:59 2012 -0700

    Merge branch 'for-linus' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping
    
    Pull CMA and ARM DMA-mapping updates from Marek Szyprowski:
     "These patches contain two major updates for DMA mapping subsystem
      (mainly for ARM architecture).  First one is Contiguous Memory
      Allocator (CMA) which makes it possible for device drivers to allocate
      big contiguous chunks of memory after the system has booted.
    
      The main difference from the similar frameworks is the fact that CMA
      allows to transparently reuse the memory region reserved for the big
      chunk allocation as a system memory, so no memory is wasted when no
      big chunk is allocated.  Once the alloc request is issued, the
      framework migrates system pages to create space for the required big
      chunk of physically contiguous memory.
    
      For more information one can refer to nice LWN articles:
    
       - 'A reworked contiguous memory allocator':
    		http://lwn.net/Articles/447405/
    
       - 'CMA and ARM':
    		http://lwn.net/Articles/450286/
    
       - 'A deep dive into CMA':
    		http://lwn.net/Articles/486301/
    
       - and the following thread with the patches and links to all previous
         versions:
    		https://lkml.org/lkml/2012/4/3/204
    
      The main client for this new framework is ARM DMA-mapping subsystem.
    
      The second part provides a complete redesign in ARM DMA-mapping
      subsystem.  The core implementation has been changed to use common
      struct dma_map_ops based infrastructure with the recent updates for
      new dma attributes merged in v3.4-rc2.  This allows to use more than
      one implementation of dma-mapping calls and change/select them on the
      struct device basis.  The first client of this new infractructure is
      dmabounce implementation which has been completely cut out of the
      core, common code.
    
      The last patch of this redesign update introduces a new, experimental
      implementation of dma-mapping calls on top of generic IOMMU framework.
      This lets ARM sub-platform to transparently use IOMMU for DMA-mapping
      calls if one provides required IOMMU hardware.
    
      For more information please refer to the following thread:
    		http://www.spinics.net/lists/arm-kernel/msg175729.html
    
      The last patch merges changes from both updates and provides a
      resolution for the conflicts which cannot be avoided when patches have
      been applied on the same files (mainly arch/arm/mm/dma-mapping.c)."
    
    Acked by Andrew Morton <akpm@linux-foundation.org>:
     "Yup, this one please.  It's had much work, plenty of review and I
      think even Russell is happy with it."
    
    * 'for-linus' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping: (28 commits)
      ARM: dma-mapping: use PMD size for section unmap
      cma: fix migration mode
      ARM: integrate CMA with DMA-mapping subsystem
      X86: integrate CMA with DMA-mapping subsystem
      drivers: add Contiguous Memory Allocator
      mm: trigger page reclaim in alloc_contig_range() to stabilise watermarks
      mm: extract reclaim code from __alloc_pages_direct_reclaim()
      mm: Serialize access to min_free_kbytes
      mm: page_isolation: MIGRATE_CMA isolation functions added
      mm: mmzone: MIGRATE_CMA migration type added
      mm: page_alloc: change fallbacks array handling
      mm: page_alloc: introduce alloc_contig_range()
      mm: compaction: export some of the functions
      mm: compaction: introduce isolate_freepages_range()
      mm: compaction: introduce map_pages()
      mm: compaction: introduce isolate_migratepages_range()
      mm: page_alloc: remove trailing whitespace
      ARM: dma-mapping: add support for IOMMU mapper
      ARM: dma-mapping: use alloc, mmap, free from dma_ops
      ARM: dma-mapping: remove redundant code and do the cleanup
      ...
    
    Conflicts:
    	arch/x86/include/asm/dma-mapping.h

commit c7523a7c88db637d66841018532cb4b3ab6ab0a8
Merge: 2f78d8e b80fe10
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 24 13:29:46 2012 -0700

    Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull timer updates from Thomas Gleixner.
    
    Various trivial conflict fixups in arch Kconfig due to addition of
    unrelated entries nearby.  And one slightly more subtle one for sparc32
    (new user of GENERIC_CLOCKEVENTS), fixed up as per Thomas.
    
    * 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (31 commits)
      timekeeping: Fix a few minor newline issues.
      time: remove obsolete declaration
      ntp: Fix a stale comment and a few stray newlines.
      ntp: Correct TAI offset during leap second
      timers: Fixup the Kconfig consolidation fallout
      x86: Use generic time config
      unicore32: Use generic time config
      um: Use generic time config
      tile: Use generic time config
      sparc: Use: generic time config
      sh: Use generic time config
      score: Use generic time config
      s390: Use generic time config
      openrisc: Use generic time config
      powerpc: Use generic time config
      mn10300: Use generic time config
      mips: Use generic time config
      microblaze: Use generic time config
      m68k: Use generic time config
      m32r: Use generic time config
      ...

commit 654443e20dfc0617231f28a07c96a979ee1a0239
Merge: 2c01e7b 9cba26e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 24 11:39:34 2012 -0700

    Merge branch 'perf-uprobes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull user-space probe instrumentation from Ingo Molnar:
     "The uprobes code originates from SystemTap and has been used for years
      in Fedora and RHEL kernels.  This version is much rewritten, reviews
      from PeterZ, Oleg and myself shaped the end result.
    
      This tree includes uprobes support in 'perf probe' - but SystemTap
      (and other tools) can take advantage of user probe points as well.
    
      Sample usage of uprobes via perf, for example to profile malloc()
      calls without modifying user-space binaries.
    
      First boot a new kernel with CONFIG_UPROBE_EVENT=y enabled.
    
      If you don't know which function you want to probe you can pick one
      from 'perf top' or can get a list all functions that can be probed
      within libc (binaries can be specified as well):
    
    	$ perf probe -F -x /lib/libc.so.6
    
      To probe libc's malloc():
    
    	$ perf probe -x /lib64/libc.so.6 malloc
    	Added new event:
    	probe_libc:malloc    (on 0x7eac0)
    
      You can now use it in all perf tools, such as:
    
    	perf record -e probe_libc:malloc -aR sleep 1
    
      Make use of it to create a call graph (as the flat profile is going to
      look very boring):
    
    	$ perf record -e probe_libc:malloc -gR make
    	[ perf record: Woken up 173 times to write data ]
    	[ perf record: Captured and wrote 44.190 MB perf.data (~1930712
    
    	$ perf report | less
    
    	  32.03%            git  libc-2.15.so   [.] malloc
    	                    |
    	                    --- malloc
    
    	  29.49%            cc1  libc-2.15.so   [.] malloc
    	                    |
    	                    --- malloc
    	                       |
    	                       |--0.95%-- 0x208eb1000000000
    	                       |
    	                       |--0.63%-- htab_traverse_noresize
    
    	  11.04%             as  libc-2.15.so   [.] malloc
    	                     |
    	                     --- malloc
    	                        |
    
    	   7.15%             ld  libc-2.15.so   [.] malloc
    	                     |
    	                     --- malloc
    	                        |
    
    	   5.07%             sh  libc-2.15.so   [.] malloc
    	                     |
    	                     --- malloc
    	                        |
    	   4.99%  python-config  libc-2.15.so   [.] malloc
    	          |
    	          --- malloc
    	             |
    	   4.54%           make  libc-2.15.so   [.] malloc
    	                   |
    	                   --- malloc
    	                      |
    	                      |--7.34%-- glob
    	                      |          |
    	                      |          |--93.18%-- 0x41588f
    	                      |          |
    	                      |           --6.82%-- glob
    	                      |                     0x41588f
    
    	   ...
    
      Or:
    
    	$ perf report -g flat | less
    
    	# Overhead        Command  Shared Object      Symbol
    	# ........  .............  .............  ..........
    	#
    	  32.03%            git  libc-2.15.so   [.] malloc
    	          27.19%
    	              malloc
    
    	  29.49%            cc1  libc-2.15.so   [.] malloc
    	          24.77%
    	              malloc
    
    	  11.04%             as  libc-2.15.so   [.] malloc
    	          11.02%
    	              malloc
    
    	   7.15%             ld  libc-2.15.so   [.] malloc
    	           6.57%
    	              malloc
    
    	 ...
    
      The core uprobes design is fairly straightforward: uprobes probe
      points register themselves at (inode:offset) addresses of
      libraries/binaries, after which all existing (or new) vmas that map
      that address will have a software breakpoint injected at that address.
      vmas are COW-ed to preserve original content.  The probe points are
      kept in an rbtree.
    
      If user-space executes the probed inode:offset instruction address
      then an event is generated which can be recovered from the regular
      perf event channels and mmap-ed ring-buffer.
    
      Multiple probes at the same address are supported, they create a
      dynamic callback list of event consumers.
    
      The basic model is further complicated by the XOL speedup: the
      original instruction that is probed is copied (in an architecture
      specific fashion) and executed out of line when the probe triggers.
      The XOL area is a single vma per process, with a fixed number of
      entries (which limits probe execution parallelism).
    
      The API: uprobes are installed/removed via
      /sys/kernel/debug/tracing/uprobe_events, the API is integrated to
      align with the kprobes interface as much as possible, but is separate
      to it.
    
      Injecting a probe point is privileged operation, which can be relaxed
      by setting perf_paranoid to -1.
    
      You can use multiple probes as well and mix them with kprobes and
      regular PMU events or tracepoints, when instrumenting a task."
    
    Fix up trivial conflicts in mm/memory.c due to previous cleanup of
    unmap_single_vma().
    
    * 'perf-uprobes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (21 commits)
      perf probe: Detect probe target when m/x options are absent
      perf probe: Provide perf interface for uprobes
      tracing: Fix kconfig warning due to a typo
      tracing: Provide trace events interface for uprobes
      tracing: Extract out common code for kprobes/uprobes trace events
      tracing: Modify is_delete, is_return from int to bool
      uprobes/core: Decrement uprobe count before the pages are unmapped
      uprobes/core: Make background page replacement logic account for rss_stat counters
      uprobes/core: Optimize probe hits with the help of a counter
      uprobes/core: Allocate XOL slots for uprobes use
      uprobes/core: Handle breakpoint and singlestep exceptions
      uprobes/core: Rename bkpt to swbp
      uprobes/core: Make order of function parameters consistent across functions
      uprobes/core: Make macro names consistent
      uprobes: Update copyright notices
      uprobes/core: Move insn to arch specific structure
      uprobes/core: Remove uprobe_opcode_sz
      uprobes/core: Make instruction tables volatile
      uprobes: Move to kernel/events/
      uprobes/core: Clean up, refactor and improve the code
      ...

commit d5b4bb4d103cd601d8009f2d3a7e44586c9ae7cc
Merge: c80ddb5 bb8187d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 23 17:12:06 2012 -0700

    Merge branch 'delete-mca' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux
    
    Pull the MCA deletion branch from Paul Gortmaker:
     "It was good that we could support MCA machines back in the day, but
      realistically, nobody is using them anymore.  They were mostly limited
      to 386-sx 16MHz CPU and some 486 class machines and never more than
      64MB of RAM.  Even the enthusiast hobbyist community seems to have
      dried up close to ten years ago, based on what you can find searching
      various websites dedicated to the relatively short lived hardware.
    
      So lets remove the support relating to CONFIG_MCA.  There is no point
      carrying this forward, wasting cycles doing routine maintenance on it;
      wasting allyesconfig build time on validating it, wasting I/O on git
      grep'ping over it, and so on."
    
    Let's see if anybody screams.  It generally has compiled, and James
    Bottomley pointed out that there was a MCA extension from NCR that
    allowed for up to 4GB of memory and PPro-class machines.  So in *theory*
    there may be users out there.
    
    But even James (technically listed as a maintainer) doesn't actually
    have a system, and while Alan Cox claims to have a machine in his cellar
    that he offered to anybody who wants to take it off his hands, he didn't
    argue for keeping MCA support either.
    
    So we could bring it back.  But somebody had better speak up and talk
    about how they have actually been using said MCA hardware with modern
    kernels for us to do that.  And David already took the patch to delete
    all the networking driver code (commit a5e371f61ad3: "drivers/net:
    delete all code/drivers depending on CONFIG_MCA").
    
    * 'delete-mca' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux:
      MCA: delete all remaining traces of microchannel bus support.
      scsi: delete the MCA specific drivers and driver code
      serial: delete the MCA specific 8250 support.
      arm: remove ability to select CONFIG_MCA

commit 44bc40e1489622234169786b0ad5a1f4a01e1090
Merge: 02171b4 ead91d4
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 23 11:16:40 2012 -0700

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 platform changes from Ingo Molnar:
     "This tree includes assorted platform driver updates and a preparatory
      series for a platform with custom DMA remapping semantics (sta2x11 I/O
      hub)."
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/vsmp: Fix number of CPUs when vsmp is disabled
      keyboard: Use BIOS Keyboard variable to set Numlock
      x86/olpc/xo1/sci: Report RTC wakeup events
      x86/olpc/xo1/sci: Produce wakeup events for buttons and switches
      x86, platform: Initial support for sta2x11 I/O hub
      x86: Introduce CONFIG_X86_DMA_REMAP
      x86-32: Introduce CONFIG_X86_DEV_DMA_OPS

commit 02171b4a7c5b555d08c3321332e0c45776518276
Merge: 70311aa 20167d3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 23 11:06:59 2012 -0700

    Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 mm changes from Ingo Molnar:
     "This tree includes a micro-optimization that avoids cr3 switches
      during idling; it fixes corner cases and there's also small cleanups"
    
    Fix up trivial context conflict with the percpu_xx -> this_cpu_xx
    changes.
    
    * 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86-64: Fix accounting in kernel_physical_mapping_init()
      x86/tlb: Clean up and unify TLB_FLUSH_ALL definition
      x86: Drop obsolete ARCH_BOOTMEM support
      x86, tlb: Switch cr3 in leave_mm() only when needed
      x86/mm: Fix the size calculation of mapping tables

commit 269af9a1a08d368b46d72e74126564d04c354f7e
Merge: 8ca038d 8b5ad47
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 23 10:44:35 2012 -0700

    Merge branch 'x86-extable-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull exception table generation updates from Ingo Molnar:
     "The biggest change here is to allow the build-time sorting of the
      exception table, to speed up booting.  This is achieved by the
      architecture enabling BUILDTIME_EXTABLE_SORT.  This option is enabled
      for x86 and MIPS currently.
    
      On x86 a number of fixes and changes were needed to allow build-time
      sorting of the exception table, in particular a relocation invariant
      exception table format was needed.  This required the abstracting out
      of exception table protocol and the removal of 20 years of accumulated
      assumptions about the x86 exception table format.
    
      While at it, this tree also cleans up various other aspects of
      exception handling, such as early(er) exception handling for
      rdmsr_safe() et al.
    
      All in one, as the result of these changes the x86 exception code is
      now pretty nice and modern.  As an added bonus any regressions in this
      code will be early and violent crashes, so if you see any of those,
      you'll know whom to blame!"
    
    Fix up trivial conflicts in arch/{mips,x86}/Kconfig files due to nearby
    modifications of other core architecture options.
    
    * 'x86-extable-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (35 commits)
      Revert "x86, extable: Disable presorted exception table for now"
      scripts/sortextable: Handle relative entries, and other cleanups
      x86, extable: Switch to relative exception table entries
      x86, extable: Disable presorted exception table for now
      x86, extable: Add _ASM_EXTABLE_EX() macro
      x86, extable: Remove open-coded exception table entries in arch/x86/ia32/ia32entry.S
      x86, extable: Remove open-coded exception table entries in arch/x86/include/asm/xsave.h
      x86, extable: Remove open-coded exception table entries in arch/x86/include/asm/kvm_host.h
      x86, extable: Remove the now-unused __ASM_EX_SEC macros
      x86, extable: Remove open-coded exception table entries in arch/x86/xen/xen-asm_32.S
      x86, extable: Remove open-coded exception table entries in arch/x86/um/checksum_32.S
      x86, extable: Remove open-coded exception table entries in arch/x86/lib/usercopy_32.c
      x86, extable: Remove open-coded exception table entries in arch/x86/lib/putuser.S
      x86, extable: Remove open-coded exception table entries in arch/x86/lib/getuser.S
      x86, extable: Remove open-coded exception table entries in arch/x86/lib/csum-copy_64.S
      x86, extable: Remove open-coded exception table entries in arch/x86/lib/copy_user_nocache_64.S
      x86, extable: Remove open-coded exception table entries in arch/x86/lib/copy_user_64.S
      x86, extable: Remove open-coded exception table entries in arch/x86/lib/checksum_32.S
      x86, extable: Remove open-coded exception table entries in arch/x86/kernel/test_rodata.c
      x86, extable: Remove open-coded exception table entries in arch/x86/kernel/entry_64.S
      ...

commit 2ff2b289a695807e291e1ed9f639d8a3ba5f4254
Merge: 88d6ae8d 7378719
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue May 22 18:18:55 2012 -0700

    Merge branch 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull perf changes from Ingo Molnar:
     "Lots of changes:
    
       - (much) improved assembly annotation support in perf report, with
         jump visualization, searching, navigation, visual output
         improvements and more.
    
        - kernel support for AMD IBS PMU hardware features.  Notably 'perf
          record -e cycles:p' and 'perf top -e cycles:p' should work without
          skid now, like PEBS does on the Intel side, because it takes
          advantage of IBS transparently.
    
        - the libtracevents library: it is the first step towards unifying
          tracing tooling and perf, and it also gives a tracing library for
          external tools like powertop to rely on.
    
        - infrastructure: various improvements and refactoring of the UI
          modules and related code
    
        - infrastructure: cleanup and simplification of the profiling
          targets code (--uid, --pid, --tid, --cpu, --all-cpus, etc.)
    
        - tons of robustness fixes all around
    
        - various ftrace updates: speedups, cleanups, robustness
          improvements.
    
        - typing 'make' in tools/ will now give you a menu of projects to
          build and a short help text to explain what each does.
    
        - ... and lots of other changes I forgot to list.
    
      The perf record make bzImage + perf report regression you reported
      should be fixed."
    
    * 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (166 commits)
      tracing: Remove kernel_lock annotations
      tracing: Fix initial buffer_size_kb state
      ring-buffer: Merge separate resize loops
      perf evsel: Create events initially disabled -- again
      perf tools: Split term type into value type and term type
      perf hists: Fix callchain ip printf format
      perf target: Add uses_mmap field
      ftrace: Remove selecting FRAME_POINTER with FUNCTION_TRACER
      ftrace/x86: Have x86 ftrace use the ftrace_modify_all_code()
      ftrace: Make ftrace_modify_all_code() global for archs to use
      ftrace: Return record ip addr for ftrace_location()
      ftrace: Consolidate ftrace_location() and ftrace_text_reserved()
      ftrace: Speed up search by skipping pages by address
      ftrace: Remove extra helper functions
      ftrace: Sort all function addresses, not just per page
      tracing: change CPU ring buffer state from tracing_cpumask
      tracing: Check return value of tracing_dentry_percpu()
      ring-buffer: Reset head page before running self test
      ring-buffer: Add integrity check at end of iter read
      ring-buffer: Make addition of pages in ring buffer atomic
      ...

commit cb60e3e65c1b96a4d6444a7a13dc7dd48bc15a2b
Merge: 99262a3 ff2bb04
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 21 20:27:36 2012 -0700

    Merge branch 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security
    
    Pull security subsystem updates from James Morris:
     "New notable features:
       - The seccomp work from Will Drewry
       - PR_{GET,SET}_NO_NEW_PRIVS from Andy Lutomirski
       - Longer security labels for Smack from Casey Schaufler
       - Additional ptrace restriction modes for Yama by Kees Cook"
    
    Fix up trivial context conflicts in arch/x86/Kconfig and include/linux/filter.h
    
    * 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security: (65 commits)
      apparmor: fix long path failure due to disconnected path
      apparmor: fix profile lookup for unconfined
      ima: fix filename hint to reflect script interpreter name
      KEYS: Don't check for NULL key pointer in key_validate()
      Smack: allow for significantly longer Smack labels v4
      gfp flags for security_inode_alloc()?
      Smack: recursive tramsmute
      Yama: replace capable() with ns_capable()
      TOMOYO: Accept manager programs which do not start with / .
      KEYS: Add invalidation support
      KEYS: Do LRU discard in full keyrings
      KEYS: Permit in-place link replacement in keyring list
      KEYS: Perform RCU synchronisation on keys prior to key destruction
      KEYS: Announce key type (un)registration
      KEYS: Reorganise keys Makefile
      KEYS: Move the key config into security/keys/Kconfig
      KEYS: Use the compat keyctl() syscall wrapper on Sparc64 for Sparc32 compat
      Yama: remove an unused variable
      samples/seccomp: fix dependencies on arch macros
      Yama: add additional ptrace scopes
      ...

commit bf67f3a5c456a18f2e8d062f7e88506ef2cd9837
Merge: 226da0d 203dacb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 21 19:43:57 2012 -0700

    Merge branch 'smp-hotplug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull smp hotplug cleanups from Thomas Gleixner:
     "This series is merily a cleanup of code copied around in arch/* and
      not changing any of the real cpu hotplug horrors yet.  I wish I'd had
      something more substantial for 3.5, but I underestimated the lurking
      horror..."
    
    Fix up trivial conflicts in arch/{arm,sparc,x86}/Kconfig and
    arch/sparc/include/asm/thread_info_32.h
    
    * 'smp-hotplug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (79 commits)
      um: Remove leftover declaration of alloc_task_struct_node()
      task_allocator: Use config switches instead of magic defines
      sparc: Use common threadinfo allocator
      score: Use common threadinfo allocator
      sh-use-common-threadinfo-allocator
      mn10300: Use common threadinfo allocator
      powerpc: Use common threadinfo allocator
      mips: Use common threadinfo allocator
      hexagon: Use common threadinfo allocator
      m32r: Use common threadinfo allocator
      frv: Use common threadinfo allocator
      cris: Use common threadinfo allocator
      x86: Use common threadinfo allocator
      c6x: Use common threadinfo allocator
      fork: Provide kmemcache based thread_info allocator
      tile: Use common threadinfo allocator
      fork: Provide weak arch_release_[task_struct|thread_info] functions
      fork: Move thread info gfp flags to header
      fork: Remove the weak insanity
      sh: Remove cpu_idle_wait()
      ...

commit 764e0da14fd7ac2d259d98d34ece0a87d32306c9
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 21 23:16:18 2012 +0200

    timers: Fixup the Kconfig consolidation fallout
    
    Sigh, I missed to check which architecture Kconfig files actually
    include the core Kconfig file. There are a few which did not. So we
    broke them.
    
    Instead of adding the includes to those, we are better off to move the
    include to init/Kconfig like we did already with irqs and others.
    
    This does not change anything for the architectures using the old
    style periodic timer mode. It just solves the build wreckage there.
    
    For those architectures which use the clock events infrastructure it
    moves the include of the core Kconfig file to "General setup" which is
    a way more logical place than having it at random locations specified
    by the architecture specific Kconfigs.
    
    Reported-by: Ingo Molnar <mingo@kernel.org>
    Cc: Anna-Maria Gleixner <anna-maria@glx-um.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit e47b65b032f2997aa0a7392ecdf656c86d4d7561
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Mon May 21 20:45:37 2012 +0200

    net: drop NET dependency from HAVE_BPF_JIT
    
    There is no point having the NET dependency on the select target, as it
    forces all users to depend on NET to tell they support BPF_JIT.  Move
    the config option to the bottom of the file - this could be a nice place
    also for future "selectable" config symbols.
    
    Fix up all users to drop the dependency on NET now that it is not
    required to supress warnings for non-NET builds.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Acked-by: David Miller <davem@davemloft.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 0a2b9a6ea93650b8a00f9fd5ee8fdd25671e2df6
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu Dec 29 13:09:51 2011 +0100

    X86: integrate CMA with DMA-mapping subsystem
    
    This patch adds support for CMA to dma-mapping subsystem for x86
    architecture that uses common pci-dma/pci-nommu implementation. This
    allows to test CMA on KVM/QEMU and a lot of common x86 boxes.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com>
    CC: Michal Nazarewicz <mina86@mina86.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>

commit bdebaf80a02b854381fe212e0dac13c8c8edac57
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri May 18 16:45:44 2012 +0000

    x86: Use generic time config
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Anna-Maria Gleixner <anna-maria@glx-um.de>
    Link: http://lkml.kernel.org/r/20120518163104.630579708@glx-um.de
    Cc: x86@kernel.org

commit bb8187d35f820671d6dd76700d77a6b55f95e2c5
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Thu May 17 19:06:13 2012 -0400

    MCA: delete all remaining traces of microchannel bus support.
    
    Hardware with MCA bus is limited to 386 and 486 class machines
    that are now 20+ years old and typically with less than 32MB
    of memory.  A quick search on the internet, and you see that
    even the MCA hobbyist/enthusiast community has lost interest
    in the early 2000 era and never really even moved ahead from
    the 2.4 kernels to the 2.6 series.
    
    This deletes anything remaining related to CONFIG_MCA from core
    kernel code and from the x86 architecture.  There is no point in
    carrying this any further into the future.
    
    One complication to watch for is inadvertently scooping up
    stuff relating to machine check, since there is overlap in
    the TLA name space (e.g. arch/x86/boot/mca.c).
    
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: James Bottomley <JBottomley@Parallels.com>
    Cc: x86@kernel.org
    Acked-by: Ingo Molnar <mingo@elte.hu>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

commit 9cba26e66d09bf394ae5a739627a1dc8b7cae6f4
Merge: ec83db0 73eff9f
Author: Ingo Molnar <mingo@kernel.org>
Date:   Mon May 14 14:43:40 2012 +0200

    Merge branch 'perf/uprobes' of git://git.kernel.org/pub/scm/linux/kernel/git/acme/linux into perf/uprobes

commit ead91d4b8c3b1fb08a73aaa4a191230ecf717ee0
Author: Shai Fultheim <shai@scalemp.com>
Date:   Mon Apr 16 10:39:35 2012 +0300

    x86/vsmp: Fix number of CPUs when vsmp is disabled
    
    In case CONFIG_X86_VSMP is not set, limit the number of CPUs to
    the number of CPUs of the first board.
    
    Also make CONFIG_X86_VSMP depend on CONFIG_SMP, as there's
    little point in having a vsmp machine with a single CPU.
    
    Signed-off-by: Shai Fultheim <shai@scalemp.com>
    [ido@wizery.com: rebased, fixed minor coding-style issues]
    Signed-off-by: Ido Yariv <ido@wizery.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 85f7f656274fa0ba109dd8774db3887d42de5c6b
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 7 17:59:49 2012 +0000

    x86: Use kick_all_cpus_sync()
    
    Use kick_all_cpus_sync() and remove cpu_idle_wait().
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20120507175652.190382227@linutronix.de
    Cc: x86@kernel.org

commit a6359d1eec43d1fd6ffbac958149844873e0084f
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu May 3 09:03:02 2012 +0000

    init_task: Replace CONFIG_HAVE_GENERIC_INIT_TASK
    
    Now that all archs except ia64 are converted, replace the config and
    let the ia64 select CONFIG_ARCH_INIT_TASK
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20120503085035.867948914@linutronix.de

commit 45046892ef89c1e0caad66a03c8c1e14ad478d23
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu May 3 09:03:01 2012 +0000

    x86: Use generic init_task
    
    Same code. Use the generic version. The special Makefile treatment is
    pointless anyway as init_task.o contains only data which is handled by
    the linker script. So no point on being treated like head text.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20120503085035.739963562@linutronix.de
    Cc: x86@kernel.org

commit e419b4cc585680940bc42f8ca8a071d6023fb1bb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 3 10:16:43 2012 -0700

    vfs: make word-at-a-time accesses handle a non-existing page
    
    It turns out that there are more cases than CONFIG_DEBUG_PAGEALLOC that
    can have holes in the kernel address space: it seems to happen easily
    with Xen, and it looks like the AMD gart64 code will also punch holes
    dynamically.
    
    Actually hitting that case is still very unlikely, so just do the
    access, and take an exception and fix it up for the very unlikely case
    of it being a page-crosser with no next page.
    
    And hey, this abstraction might even help other architectures that have
    other issues with unaligned word accesses than the possible missing next
    page.  IOW, this could do the byte order magic too.
    
    Peter Anvin fixed a thinko in the shifting for the exception case.
    
    Reported-and-tested-by: Jana Saout <jana@saout.de>
    Cc:  Peter Anvin <hpa@zytor.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 4a6d70c9505fef1d8906b1d61db3de5d8ecf9454
Author: Steven Rostedt <srostedt@redhat.com>
Date:   Tue Apr 24 16:31:07 2012 -0400

    ftrace/x86: Remove the complex ftrace NMI handling code
    
    As ftrace function tracing would require modifying code that could
    be executed in NMI context, which is not stopped with stop_machine(),
    ftrace had to do a complex algorithm with various stages of setup
    and memory barriers to make it work.
    
    With the new breakpoint method, this is no longer required. The changes
    to the code can be done without any problem in NMI context, as well as
    without stop machine altogether. Remove the complex code as it is
    no longer needed.
    
    Also, a lot of the notrace annotations could be removed from the
    NMI code as it is now safe to trace them. With the exception of
    do_nmi itself, which does some special work to handle running in
    the debug stack. The breakpoint method can cause NMIs to double
    nest the debug stack if it's not setup properly, and that is done
    in do_nmi(), thus that function must not be traced.
    
    (Note the arch sh may want to do the same)
    
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

commit 7eb43a6d232bfa46464b501cd1987ec2d705d8cf
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Apr 20 13:05:48 2012 +0000

    x86: Use generic idle thread allocation
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
    Cc: Jeremy Fitzhardinge <jeremy@goop.org>
    Cc: x86@kernel.org
    Link: http://lkml.kernel.org/r/20120420124557.246929343@linutronix.de

commit 8b5ad472991796b2347464922c72de2ca5a028f3
Author: David Daney <ddaney@caviumnetworks.com>
Date:   Tue Apr 24 11:23:15 2012 -0700

    Revert "x86, extable: Disable presorted exception table for now"
    
    sortextable now works with relative entries, re-enable it.
    
    Signed-off-by: David Daney <ddaney@caviumnetworks.com>
    Link: http://lkml.kernel.org/r/1335291795-26693-3-git-send-email-ddaney.cavm@gmail.com
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit fa574a48a1e9706bba38188d3bf61ecb66546a77
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Fri Apr 20 17:11:17 2012 -0700

    x86, extable: Disable presorted exception table for now
    
    Disable presorting the exception table in preparation for changing the
    format.
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Cc: David Daney <david.daney@cavium.com>
    Link: http://lkml.kernel.org/r/CA%2B55aFyijf43qSu3N9nWHEBwaGbb7T2Oq9A=9EyR=Jtyqfq_cQ@mail.gmail.com

commit d405c60128a1973648058fa950a8960ec1f27e38
Author: David Daney <david.daney@cavium.com>
Date:   Thu Apr 19 14:59:59 2012 -0700

    x86: Select BUILDTIME_EXTABLE_SORT
    
    We can sort the exeception table at build time for x86, so let's do
    it.
    
    Signed-off-by: David Daney <david.daney@cavium.com>
    Link: http://lkml.kernel.org/r/1334872799-14589-6-git-send-email-ddaney.cavm@gmail.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 302616911da8e868d3f1a00dce517ca30b0e065d
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Fri Apr 6 14:47:35 2012 +0200

    x86: Drop obsolete ARCH_BOOTMEM support
    
    x86 unconditionally uses NO_BOOTMEM so there is no use
    of the HAVE_ARCH_BOOTMEM support as mm/bootmem.c is the
    only file referencing this symbol.
    
    bootmem_arch_preferred_node() is the function referred
    in the mm/bootmem.c code and can thuis be dropped too.
    
    x86 was the sole user of HAVE_ARCH_BOOTMEM - so there is
    an opportunity to clean up a little in mm/bootmem.c too
    if we do not expect other users to emerge.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: Tejun Heo <tj@kernel.org>
    Link: http://lkml.kernel.org/r/20120406124735.GA6920@merkur.ravnborg.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 6ac1ef482d7ae0c690f1640bf6eb818ff9a2d91e
Merge: 682968e a385ec4
Author: Ingo Molnar <mingo@kernel.org>
Date:   Sat Apr 14 13:18:27 2012 +0200

    Merge branch 'perf/core' into perf/uprobes
    
    Merge in latest upstream (and the latest perf development tree),
    to prepare for tooling changes, and also to pick up v3.4 MM
    changes that the uprobes code needs to take care of.
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit c6cfbeb4029610c8c330c312dcf4d514cc067554
Author: Will Drewry <wad@chromium.org>
Date:   Thu Apr 12 16:48:03 2012 -0500

    x86: Enable HAVE_ARCH_SECCOMP_FILTER
    
    Enable support for seccomp filter on x86:
    - syscall_get_arch()
    - syscall_get_arguments()
    - syscall_rollback()
    - syscall_set_return_value()
    - SIGSYS siginfo_t support
    - secure_computing is called from a ptrace_event()-safe context
    - secure_computing return value is checked (see below).
    
    SECCOMP_RET_TRACE and SECCOMP_RET_TRAP may result in seccomp needing to
    skip a system call without killing the process.  This is done by
    returning a non-zero (-1) value from secure_computing.  This change
    makes x86 respect that return value.
    
    To ensure that minimal kernel code is exposed, a non-zero return value
    results in an immediate return to user space (with an invalid syscall
    number).
    
    Signed-off-by: Will Drewry <wad@chromium.org>
    Reviewed-by: H. Peter Anvin <hpa@zytor.com>
    Acked-by: Eric Paris <eparis@redhat.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    
    v18: rebase and tweaked change description, acked-by
    v17: added reviewed by and rebased
    v..: all rebases since original introduction.
    Signed-off-by: James Morris <james.l.morris@oracle.com>

commit 83125a3a189ec34fb22a04e8efad69ae6d52674a
Author: Alessandro Rubini <rubini@gnudd.com>
Date:   Wed Apr 4 19:40:21 2012 +0200

    x86, platform: Initial support for sta2x11 I/O hub
    
    The "ConneXt" sta2x11 I/O Hub is a bridge from PCIe to AMBA, and is
    used as main chipset in some Atom boards.  The set of peripherals it
    exports live in an AMBA bus internal to the chip, so a custom
    remapping of addresses is needed. This is implemented by fixup calls
    for the PCI deivices, based on CONFIG_X86_DEV_DMA_OPS and
    CONFIG_X86_DMA_REMAP .
    
    Signed-off-by: Alessandro Rubini <rubini@gnudd.com>
    Link: http://lkml.kernel.org/r/ddca670ca8180e52d49b3fe642742ddd23ab2cb2.1333560789.git.rubini@gnudd.com
    Acked-by: Giancarlo Asnaghi <giancarlo.asnaghi@st.com>
    Cc: Alan Cox <alan@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit f7219a5300ba753b0c762d631763bd878b8bb00c
Author: Alessandro Rubini <rubini@gnudd.com>
Date:   Wed Apr 4 19:40:10 2012 +0200

    x86: Introduce CONFIG_X86_DMA_REMAP
    
    The default functions phys_to_dma, dma_to_phys implement identity
    mapping as fast inline functions.  Some systems, however, may need a
    custom function to implement its own mapping between CPU addresses and
    device addresses. This new configuration option allows the functions
    to be external when needed (such as for the ConneXt device)
    
    Signed-off-by: Alessandro Rubini <rubini@gnudd.com>
    Link: http://lkml.kernel.org/r/6e4329b772df675f1c442f68e59e844e4dd8c965.1333560789.git.rubini@gnudd.com
    Acked-by: Giancarlo Asnaghi <giancarlo.asnaghi@st.com>
    Cc: Alan Cox <alan@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 4692d77fc3c8978a36406a3cf9e8b899f86f68f1
Author: Alessandro Rubini <rubini@gnudd.com>
Date:   Wed Apr 4 19:39:58 2012 +0200

    x86-32: Introduce CONFIG_X86_DEV_DMA_OPS
    
    32-bit x86 systems may need their own DMA operations, so add
    a new config option, which is turned on for 64-bit systems. This
    patch has no functional effect but it paves the way for supporting
    the STA2x11 I/O Hub and possibly other chips.
    
    Signed-off-by: Alessandro Rubini <rubini@gnudd.com>
    Link: http://lkml.kernel.org/r/f79fcc1a2e17ef942e1b798b92aac43a80202532.1333560789.git.rubini@gnudd.com
    Acked-by: Giancarlo Asnaghi <giancarlo.asnaghi@st.com>
    Cc: Alan Cox <alan@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit a591afc01d9e48affbacb365558a31e53c85af45
Merge: 820d41c 31796ac
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Mar 29 18:12:23 2012 -0700

    Merge branch 'x86-x32-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x32 support for x86-64 from Ingo Molnar:
     "This tree introduces the X32 binary format and execution mode for x86:
      32-bit data space binaries using 64-bit instructions and 64-bit kernel
      syscalls.
    
      This allows applications whose working set fits into a 32 bits address
      space to make use of 64-bit instructions while using a 32-bit address
      space with shorter pointers, more compressed data structures, etc."
    
    Fix up trivial context conflicts in arch/x86/{Kconfig,vdso/vma.c}
    
    * 'x86-x32-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (71 commits)
      x32: Fix alignment fail in struct compat_siginfo
      x32: Fix stupid ia32/x32 inversion in the siginfo format
      x32: Add ptrace for x32
      x32: Switch to a 64-bit clock_t
      x32: Provide separate is_ia32_task() and is_x32_task() predicates
      x86, mtrr: Use explicit sizing and padding for the 64-bit ioctls
      x86/x32: Fix the binutils auto-detect
      x32: Warn and disable rather than error if binutils too old
      x32: Only clear TIF_X32 flag once
      x32: Make sure TS_COMPAT is cleared for x32 tasks
      fs: Remove missed ->fds_bits from cessation use of fd_set structs internally
      fs: Fix close_on_exec pointer in alloc_fdtable
      x32: Drop non-__vdso weak symbols from the x32 VDSO
      x32: Fix coding style violations in the x32 VDSO code
      x32: Add x32 VDSO support
      x32: Allow x32 to be configured
      x32: If configured, add x32 system calls to system call tables
      x32: Handle process creation
      x32: Signal-related system calls
      x86: Add #ifdef CONFIG_COMPAT to <asm/sys_ia32.h>
      ...

commit 12679a2d7e3bfbdc7586e3e86d1ca90c46659363
Merge: 1c03658 b0df898
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Mar 29 16:53:48 2012 -0700

    Merge branch 'for-linus' of git://git.linaro.org/people/rmk/linux-arm
    
    Pull more ARM updates from Russell King.
    
    This got a fair number of conflicts with the <asm/system.h> split, but
    also with some other sparse-irq and header file include cleanups.  They
    all looked pretty trivial, though.
    
    * 'for-linus' of git://git.linaro.org/people/rmk/linux-arm: (59 commits)
      ARM: fix Kconfig warning for HAVE_BPF_JIT
      ARM: 7361/1: provide XIP_VIRT_ADDR for no-MMU builds
      ARM: 7349/1: integrator: convert to sparse irqs
      ARM: 7259/3: net: JIT compiler for packet filters
      ARM: 7334/1: add jump label support
      ARM: 7333/2: jump label: detect %c support for ARM
      ARM: 7338/1: add support for early console output via semihosting
      ARM: use set_current_blocked() and block_sigmask()
      ARM: exec: remove redundant set_fs(USER_DS)
      ARM: 7332/1: extract out code patch function from kprobes
      ARM: 7331/1: extract out insn generation code from ftrace
      ARM: 7330/1: ftrace: use canonical Thumb-2 wide instruction format
      ARM: 7351/1: ftrace: remove useless memory checks
      ARM: 7316/1: kexec: EOI active and mask all interrupts in kexec crash path
      ARM: Versatile Express: add NO_IOPORT
      ARM: get rid of asm/irq.h in asm/prom.h
      ARM: 7319/1: Print debug info for SIGBUS in user faults
      ARM: 7318/1: gic: refactor irq_start assignment
      ARM: 7317/1: irq: avoid NULL check in for_each_irq_desc loop
      ARM: 7315/1: perf: add support for the Cortex-A7 PMU
      ...

commit 50483c3268918ee51a56d1baa39b9149d2d0d521
Merge: 7fda041 1631fce
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Mar 29 14:49:45 2012 -0700

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile
    
    Pull arch/tile (really asm-generic) update from Chris Metcalf:
     "These are a couple of asm-generic changes that apply to tile."
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile:
      compat: use sys_sendfile64() implementation for sendfile syscall
      [PATCH v3] ipc: provide generic compat versions of IPC syscalls

commit 61e5191c9d96268746bd57ed55d035678a1a2cf9
Merge: d2a2fc1 86924de
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Mar 28 14:20:23 2012 -0700

    Merge branch 'for_linus' of git://cavan.codon.org.uk/platform-drivers-x86
    
    Pull x86 platform driver updates from Matthew Garrett:
     "Some significant updates to samsung-laptop, additional hardware
      support for Toshibas, misc updates to various hardware and a new
      backlight driver for some Apple machines."
    
    Fix up trivial conflicts: geode Geos update happening next to net5501
    support, and MSIC thermal platform support added twice.
    
    * 'for_linus' of git://cavan.codon.org.uk/platform-drivers-x86: (77 commits)
      acer-wmi: add quirk table for video backlight vendor mode
      drivers/platform/x86/amilo-rfkill.c::amilo_rfkill_probe() avoid NULL deref
      samsung-laptop: unregister ACPI video module for some well known laptops
      acer-wmi: No wifi rfkill on Sony machines
      thinkpad-acpi: recognize Lenovo as version string in newer V-series BIOS
      asus-wmi: don't update power and brightness when using scalar
      eeepc-wmi: split et2012 specific hacks
      eeepc-wmi: refine quirks handling
      asus-nb-wmi: set panel_power correctly
      asus-wmi: move WAPF variable into quirks_entry
      asus-wmi: store backlight power status for AIO machine
      asus-wmi: add scalar board brightness adj. support
      samsung-laptop: cleanup return type: mode_t vs umode_t
      drivers, samsung-laptop: fix usage of isalnum
      drivers, samsung-laptop: fix initialization of sabi_data in sabi_set_commandb
      asus-wmi: on/off bit is not set when reading the value
      eeepc-wmi: add extra keymaps for EP121
      asus-nb-wmi: ignore useless keys
      acer-wmi: support Lenovo ideapad S205 Brazos wifi switch
      acer-wmi: fix out of input parameter size when set
      ...

commit 23904815461ba223a8baf7490051597fa054299b
Merge: 754b980 fa63030
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Mar 22 09:42:36 2012 -0700

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull x86 platform changes from Ingo Molnar.
    
    Removes the Moorestown platform that nobody ever used.
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/platform: Move APIC ID validity check into platform APIC code
      x86/olpc/xo15/sci: Enable lid close wakeup control
      x86/geode/net5501: Add platform driver for Soekris Engineering net5501
      x86/geode/alix2: Supplement driver to include GPIO button support
      x86/mid/powerbtn: Use MSIC read/write instead of ipc_scu
      x86/mid/thermal: Turn off thermistor
      x86/mid/thermal: Add msic_thermal alias
      x86/mid/thermal: Convert to use Intel MSIC API
      x86/mid/scu_ipc: Remove Moorestown support
      x86/mid: Kill off Moorestown
      x86/mrst: Add msic_thermal platform support
      x86/config: Select MSIC MFD driver on Intel Medfield platform
      x86/mid: Remove Intel Moorestown
      x86/mrst: Set ISA bus type for fake MP IRQs
      x86/ioapic: Use legacy_pic to set correct gsi-irq mapping

commit c207f3a43194e108dda43dc9a1ce507335cff6b9
Merge: c7c66c0 e7cc3ac
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Mar 21 10:27:19 2012 -0700

    Merge tag 'irqdomain-for-linus' of git://git.secretlab.ca/git/linux-2.6
    
    Pull irq_domain support for all architectures from Grant Likely:
     "Generialize powerpc's irq_host as irq_domain
    
      This branch takes the PowerPC irq_host infrastructure (reverse mapping
      from Linux IRQ numbers to hardware irq numbering), generalizes it,
      renames it to irq_domain, and makes it available to all architectures.
    
      Originally the plan has been to create an all-new irq_domain
      implementation which addresses some of the powerpc shortcomings such
      as not handling 1:1 mappings well, but doing that proved to be far
      more difficult and invasive than generalizing the working code and
      refactoring it in-place.  So, this branch rips out the 'new'
      irq_domain and replaces it with the modified powerpc version (in a
      fully bisectable way of course).  It converts all users over to the
      new API and makes irq_domain selectable on any architecture.
    
      No architecture is forced to enable irq_domain, but the infrastructure
      is required for doing OpenFirmware style irq translations.  It will
      even work on SPARC even though SPARC has it's own mechanism for
      translating irqs at boot time.  MIPS, microblaze, embedded x86 and c6x
      are converted too.
    
      The resulting irq_domain code is probably still too verbose and can be
      optimized more, but that can be done incrementally and is a task for
      follow-on patches."
    
    * tag 'irqdomain-for-linus' of git://git.secretlab.ca/git/linux-2.6: (31 commits)
      dt: fix twl4030 for non-dt compile on x86
      mfd: twl-core: Add IRQ_DOMAIN dependency
      devicetree: Add empty of_platform_populate() for !CONFIG_OF_ADDRESS (sparc)
      irq_domain: Centralize definition of irq_dispose_mapping()
      irq_domain/mips: Allow irq_domain on MIPS
      irq_domain/x86: Convert x86 (embedded) to use common irq_domain
      ppc-6xx: fix build failure in flipper-pic.c and hlwd-pic.c
      irq_domain/microblaze: Convert microblaze to use irq_domains
      irq_domain/powerpc: Replace custom xlate functions with library functions
      irq_domain/powerpc: constify irq_domain_ops
      irq_domain/c6x: Use library of xlate functions
      irq_domain/c6x: constify irq_domain structures
      irq_domain/c6x: Convert c6x to use generic irq_domain support.
      irq_domain: constify irq_domain_ops
      irq_domain: Create common xlate functions that device drivers can use
      irq_domain: Remove irq_domain_add_simple()
      irq_domain: Remove 'new' irq_domain in favour of the ppc one
      mfd: twl-core.c: Fix the number of interrupts managed by twl4030
      of/address: add empty static inlines for !CONFIG_OF
      irq_domain: Add support for base irq and hwirq in legacy mappings
      ...

commit 4a52246302f01596f0edf7b4a3e6425e23479192
Merge: 9f9d276 adc80ae
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 20 11:16:20 2012 -0700

    Merge tag 'driver-core-3.3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core
    
    Pull driver core patches for 3.4-rc1 from Greg KH:
     "Here's the big driver core merge for 3.4-rc1.
    
      Lots of various things here, sysfs fixes/tweaks (with the nlink
      breakage reverted), dynamic debugging updates, w1 drivers, hyperv
      driver updates, and a variety of other bits and pieces, full
      information in the shortlog."
    
    * tag 'driver-core-3.3' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core: (78 commits)
      Tools: hv: Support enumeration from all the pools
      Tools: hv: Fully support the new KVP verbs in the user level daemon
      Drivers: hv: Support the newly introduced KVP messages in the driver
      Drivers: hv: Add new message types to enhance KVP
      regulator: Support driver probe deferral
      Revert "sysfs: Kill nlink counting."
      uevent: send events in correct order according to seqnum (v3)
      driver core: minor comment formatting cleanups
      driver core: move the deferred probe pointer into the private area
      drivercore: Add driver probe deferral mechanism
      DS2781 Maxim Stand-Alone Fuel Gauge battery and w1 slave drivers
      w1_bq27000: Only one thread can access the bq27000 at a time.
      w1_bq27000 - remove w1_bq27000_write
      w1_bq27000: remove unnecessary NULL test.
      sysfs: Fix memory leak in sysfs_sd_setsecdata().
      intel_idle: Revert change of auto_demotion_disable_flags for Nehalem
      w1: Fix w1_bq27000
      driver-core: documentation: fix up Greg's email address
      powernow-k6: Really enable auto-loading
      powernow-k7: Fix CPU family number
      ...

commit 3197059af0762c191af23c0ce3fd6f8311c564e7
Author: Philip A. Prindeville <philipp@redfish-solutions.com>
Date:   Sat Jan 14 01:45:39 2012 -0700

    geos: Platform driver for Geos and Geos2 single-board computers.
    
    Trivial platform driver for Traverse Technologies Geos and Geos2
    single-board computers. Uses SMBIOS to identify platform.
    Based on progressive revisions of the leds-net5501 driver that
    was rewritten by Ed Wildgoose as a platform driver.
    
    Supports GPIO-based LEDs (3) and 1 polled button which is
    typically used for a soft reset.
    
    Signed-off-by: Philip Prindeville <philipp@redfish-solutions.com>
    Reviewed-by: Ed Wildgoose <ed@wildgooses.com>
    Acked-by: Andres Salomon <dilinger@queued.net>
    Cc: Richard Purdie <rpurdie@rpsys.net>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Matthew Garrett <mjg@redhat.com>

commit 48b25c43e6eebb6c0edf72935e8720385beca76b
Author: Chris Metcalf <cmetcalf@tilera.com>
Date:   Thu Mar 15 13:13:38 2012 -0400

    [PATCH v3] ipc: provide generic compat versions of IPC syscalls
    
    When using the "compat" APIs, architectures will generally want to
    be able to make direct syscalls to msgsnd(), shmctl(), etc., and
    in the kernel we would want them to be handled directly by
    compat_sys_xxx() functions, as is true for other compat syscalls.
    
    However, for historical reasons, several of the existing compat IPC
    syscalls do not do this.  semctl() expects a pointer to the fourth
    argument, instead of the fourth argument itself.  msgsnd(), msgrcv()
    and shmat() expect arguments in different order.
    
    This change adds an ARCH_WANT_OLD_COMPAT_IPC config option that can be
    set to preserve this behavior for ports that use it (x86, sparc, powerpc,
    s390, and mips).  No actual semantics are changed for those architectures,
    and there is only a minimal amount of code refactoring in ipc/compat.c.
    
    Newer architectures like tile (and perhaps future architectures such
    as arm64 and unicore64) should not select this option, and thus can
    avoid having any IPC-specific code at all in their architecture-specific
    compat layer.  In the same vein, if this option is not selected, IPC_64
    mode is assumed, since that's what the <asm-generic> headers expect.
    
    The workaround code in "tile" for msgsnd() and msgrcv() is removed
    with this change; it also fixes the bug that shmat() and semctl() were
    not being properly handled.
    
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>

commit c96a9876696d30783ad54399351a0bf3660db53f
Merge: d1f42e3 fde7d90
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Mar 14 09:48:16 2012 +0100

    Merge tag 'v3.3-rc7' into x86/platform
    
    Merge reason: Update to the almost-final v3.3 kernel.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit ef15eda98217f5183f457e7a2de8b79555ef908b
Merge: 5cb4ac3 ef334a2
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Mar 13 16:32:54 2012 +0100

    Merge branch 'x86/cleanups' into perf/uprobes
    
    Merge reason: We want to merge a dependent patch.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit bfcfaa77bdf0f775263e906015982a608df01c76
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 6 11:16:17 2012 -0800

    vfs: use 'unsigned long' accesses for dcache name comparison and hashing
    
    Ok, this is hacky, and only works on little-endian machines with goo
    unaligned handling.  And even then only with CONFIG_DEBUG_PAGEALLOC
    disabled, since it can access up to 7 bytes after the pathname.
    
    But it runs like a bat out of hell.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit da4e3302949f4a702f1ddfefe067762232d363d5
Author: Philip Prindeville <philipp@redfish-solutions.com>
Date:   Mon Mar 5 15:05:15 2012 -0800

    x86/geode/net5501: Add platform driver for Soekris Engineering net5501
    
    Add platform driver for the Soekris Engineering net5501 single-board
    computer.  Probes well-known locations in ROM for BIOS signature
    to confirm correct platform.  Registers 1 LED and 1 GPIO-based
    button (typically used for soft reset).
    
    Signed-off-by: Philip Prindeville <philipp@redfish-solutions.com>
    Acked-by: Alessandro Zummo <a.zummo@towertech.it>
    Cc: Richard Purdie <rpurdie@rpsys.net>
    Cc: Andres Salomon <dilinger@queued.net>
    Cc: Matthew Garrett <mjg@redhat.com>
    [ Removed Kconfig and Makefile detritus from drivers/leds/]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Link: http://lkml.kernel.org/n/tip-jv5uf34996juqh5syes8mn4h@git.kernel.org
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 0bf6276392e990dd0da0ccd8e10f42597d503f29
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Mon Feb 27 14:09:10 2012 -0800

    x32: Warn and disable rather than error if binutils too old
    
    If X32 is enabled in .config, but the binutils can't build it, issue a
    warning and disable the feature rather than erroring out.
    
    In order to support this, have CONFIG_X86_X32 be the option set in
    Kconfig, and CONFIG_X86_X32_ABI be the option set by the Makefile when
    it is enabled and binutils has been found to be functional.
    
    Requested-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: H. J. Lu <hjl.tools@gmail.com>
    Link: http://lkml.kernel.org/r/1329696488-16970-1-git-send-email-hpa@zytor.com

commit b4e518547da042fdc65bd4bdafd046fed13337d5
Author: Grant Likely <grant.likely@secretlab.ca>
Date:   Fri Dec 16 15:50:17 2011 -0700

    irq_domain/x86: Convert x86 (embedded) to use common irq_domain
    
    This patch removes the x86-specific definition of irq_domain and replaces
    it with the common implementation.
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: Rob Herring <rob.herring@calxeda.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>

commit 5fd92e65a68b813667bc8739f5fa463e5bfcd66d
Author: H. J. Lu <hjl.tools@gmail.com>
Date:   Sun Feb 19 10:40:03 2012 -0800

    x32: Allow x32 to be configured
    
    At this point, one should be able to build an x32 kernel.
    
    Note that for now we depend on CONFIG_IA32_EMULATION.  Long term, x32
    and IA32 should be detangled.
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 2b144498350860b6ee9dc57ff27a93ad488de5dc
Author: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Date:   Thu Feb 9 14:56:42 2012 +0530

    uprobes, mm, x86: Add the ability to install and remove uprobes breakpoints
    
    Add uprobes support to the core kernel, with x86 support.
    
    This commit adds the kernel facilities, the actual uprobes
    user-space ABI and perf probe support comes in later commits.
    
    General design:
    
    Uprobes are maintained in an rb-tree indexed by inode and offset
    (the offset here is from the start of the mapping). For a unique
    (inode, offset) tuple, there can be at most one uprobe in the
    rb-tree.
    
    Since the (inode, offset) tuple identifies a unique uprobe, more
    than one user may be interested in the same uprobe. This provides
    the ability to connect multiple 'consumers' to the same uprobe.
    
    Each consumer defines a handler and a filter (optional). The
    'handler' is run every time the uprobe is hit, if it matches the
    'filter' criteria.
    
    The first consumer of a uprobe causes the breakpoint to be
    inserted at the specified address and subsequent consumers are
    appended to this list.  On subsequent probes, the consumer gets
    appended to the existing list of consumers. The breakpoint is
    removed when the last consumer unregisters. For all other
    unregisterations, the consumer is removed from the list of
    consumers.
    
    Given a inode, we get a list of the mms that have mapped the
    inode. Do the actual registration if mm maps the page where a
    probe needs to be inserted/removed.
    
    We use a temporary list to walk through the vmas that map the
    inode.
    
    - The number of maps that map the inode, is not known before we
      walk the rmap and keeps changing.
    - extending vm_area_struct wasn't recommended, it's a
      size-critical data structure.
    - There can be more than one maps of the inode in the same mm.
    
    We add callbacks to the mmap methods to keep an eye on text vmas
    that are of interest to uprobes.  When a vma of interest is mapped,
    we insert the breakpoint at the right address.
    
    Uprobe works by replacing the instruction at the address defined
    by (inode, offset) with the arch specific breakpoint
    instruction. We save a copy of the original instruction at the
    uprobed address.
    
    This is needed for:
    
     a. executing the instruction out-of-line (xol).
     b. instruction analysis for any subsequent fixups.
     c. restoring the instruction back when the uprobe is unregistered.
    
    We insert or delete a breakpoint instruction, and this
    breakpoint instruction is assumed to be the smallest instruction
    available on the platform. For fixed size instruction platforms
    this is trivially true, for variable size instruction platforms
    the breakpoint instruction is typically the smallest (often a
    single byte).
    
    Writing the instruction is done by COWing the page and changing
    the instruction during the copy, this even though most platforms
    allow atomic writes of the breakpoint instruction. This also
    mirrors the behaviour of a ptrace() memory write to a PRIVATE
    file map.
    
    The core worker is derived from KSM's replace_page() logic.
    
    In essence, similar to KSM:
    
     a. allocate a new page and copy over contents of the page that
        has the uprobed vaddr
     b. modify the copy and insert the breakpoint at the required
        address
     c. switch the original page with the copy containing the
        breakpoint
     d. flush page tables.
    
    replace_page() is being replicated here because of some minor
    changes in the type of pages and also because Hugh Dickins had
    plans to improve replace_page() for KSM specific work.
    
    Instruction analysis on x86 is based on instruction decoder and
    determines if an instruction can be probed and determines the
    necessary fixups after singlestep.  Instruction analysis is done
    at probe insertion time so that we avoid having to repeat the
    same analysis every time a probe is hit.
    
    A lot of code here is due to the improvement/suggestions/inputs
    from Peter Zijlstra.
    
    Changelog:
    
    (v10):
     - Add code to clear REX.B prefix as suggested by Denys Vlasenko
       and Masami Hiramatsu.
    
    (v9):
     - Use insn_offset_modrm as suggested by Masami Hiramatsu.
    
    (v7):
    
     Handle comments from Peter Zijlstra:
    
     - Dont take reference to inode. (expect inode to uprobe_register to be sane).
     - Use PTR_ERR to set the return value.
     - No need to take reference to inode.
     - use PTR_ERR to return error value.
     - register and uprobe_unregister share code.
    
    (v5):
    
     - Modified del_consumer as per comments from Peter.
     - Drop reference to inode before dropping reference to uprobe.
     - Use i_size_read(inode) instead of inode->i_size.
     - Ensure uprobe->consumers is NULL, before __uprobe_unregister() is called.
     - Includes errno.h as recommended by Stephen Rothwell to fix a build issue
       on sparc defconfig
     - Remove restrictions while unregistering.
     - Earlier code leaked inode references under some conditions while
       registering/unregistering.
     - Continue the vma-rmap walk even if the intermediate vma doesnt
       meet the requirements.
     - Validate the vma found by find_vma before inserting/removing the
       breakpoint
     - Call del_consumer under mutex_lock.
     - Use hash locks.
     - Handle mremap.
     - Introduce find_least_offset_node() instead of close match logic in
       find_uprobe
     - Uprobes no more depends on MM_OWNER; No reference to task_structs
       while inserting/removing a probe.
     - Uses read_mapping_page instead of grab_cache_page so that the pages
       have valid content.
     - pass NULL to get_user_pages for the task parameter.
     - call SetPageUptodate on the new page allocated in write_opcode.
     - fix leaking a reference to the new page under certain conditions.
     - Include Instruction Decoder if Uprobes gets defined.
     - Remove const attributes for instruction prefix arrays.
     - Uses mm_context to know if the application is 32 bit.
    
    Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Also-written-by: Jim Keniston <jkenisto@us.ibm.com>
    Reviewed-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Roland McGrath <roland@hack.frob.com>
    Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Cc: Arnaldo Carvalho de Melo <acme@infradead.org>
    Cc: Anton Arapov <anton@redhat.com>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Denys Vlasenko <vda.linux@googlemail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linux-mm <linux-mm@kvack.org>
    Link: http://lkml.kernel.org/r/20120209092642.GE16600@linux.vnet.ibm.com
    [ Made various small edits to the commit log ]
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit bd1d462e13b278fc57752d0b9b15040e60e561a0
Merge: d5c38b1 62aa2b5
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Feb 2 11:24:44 2012 -0800

    Merge 3.3-rc2 into the driver-core-next branch.
    
    This was done to resolve a merge and build problem with the
    drivers/acpi/processor_driver.c file.
    
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fad12ac8c8c2591c7f4e61d19b6a9d76cd49fafa
Author: Thomas Renninger <trenn@suse.de>
Date:   Thu Jan 26 00:09:14 2012 +0100

    CPU: Introduce ARCH_HAS_CPU_AUTOPROBE and X86 parts
    
    This patch is based on Andi Kleen's work:
    Implement autoprobing/loading of modules serving CPU
    specific features (x86cpu autoloading).
    
    And Kay Siever's work to get rid of sysdev cpu structures
    and making use of struct device instead.
    
    Before, the cpuid driver had to be loaded to get the x86cpu
    autoloading feature. With this patch autoloading works through
    the /sys/devices/system/cpu object
    
    Cc: Kay Sievers <kay.sievers@vrfy.org>
    Cc: Dave Jones <davej@redhat.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: Len Brown <lenb@kernel.org>
    Acked-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Renninger <trenn@suse.de>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 15a713df4145ad2540f8d84c3f4de930806f6151
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Thu Jan 26 17:35:05 2012 +0000

    x86/config: Select MSIC MFD driver on Intel Medfield platform
    
    On Intel Medfield platform we use MSIC MFD driver to create
    necessary platform devices so it is essential to have the driver
    compiled into the kernel.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Cc: jacob.jun.pan@linux.intel.com
    Link: http://lkml.kernel.org/n/tip-7hp1otk4wf4mg5pqohcwt06w@git.kernel.org
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 1a8359e411eb5055405412a7da812dae63c64a55
Author: Alan Cox <alan@linux.intel.com>
Date:   Thu Jan 26 17:33:30 2012 +0000

    x86/mid: Remove Intel Moorestown
    
    All production devices operate in the Oaktrail configuration
    with legacy PC elements present and an ACPI BIOS. Continue
    stripping out the Moorestown elements from the tree leaving
    Medfield.
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Cc: jacob.jun.pan@linux.intel.com
    Link: http://lkml.kernel.org/n/tip-fvm1hgpq99jln6l0fbek68ik@git.kernel.org
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 3fe54564a61f72982032423d24041dca30617ca2
Author: Daniel J Blueman <daniel@numascale-asia.com>
Date:   Wed Jan 25 14:35:49 2012 +0800

    x86/numachip: Drop unnecessary conflict with EDAC
    
    EDAC detection no longer crashes multi-node systems, so don't
    conflict on it with NumaChip.
    
    Signed-off-by: Daniel J Blueman <daniel@numascale-asia.com>
    Cc: Steffen Persvold <sp@numascale.com>
    Link: http://lkml.kernel.org/r/1327473349-28395-1-git-send-email-daniel@numascale-asia.com
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 2ed86b16eabe4efbf80cc725a8cbb5310746a2fc
Author: Rob Herring <rob.herring@calxeda.com>
Date:   Wed Jan 25 20:02:40 2012 -0600

    irq: make SPARSE_IRQ an optionally hidden option
    
    On ARM, we don't want SPARSE_IRQ to be a user visible option. Make
    SPARSE_IRQ visible based on MAY_HAVE_SPARSE_IRQ instead of depending
    on HAVE_SPARSE_IRQ.
    
    With this, SPARSE_IRQ is not visible on C6X and ARM.
    
    Signed-off-by: Rob Herring <rob.herring@calxeda.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Mark Salter <msalter@redhat.com>
    Cc: Aurelien Jacquiot <a-jacquiot@ti.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-kernel@vger.kernel.org
    Cc: linux-c6x-dev@linux-c6x.org
    Cc: linuxppc-dev@lists.ozlabs.org
    Cc: linux-sh@vger.kernel.org

commit 282f445a779ed76fca9884fe377bf56a3088b208
Merge: 68f30fb 90a4c0f
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Thu Jan 19 12:56:50 2012 -0800

    Merge remote-tracking branch 'linus/master' into x86/urgent

commit 5ee71535440f034de1196b11f78cef81c4025c2b
Author: Randy Dunlap <rdunlap@xenotime.net>
Date:   Mon Jan 16 11:57:18 2012 -0800

    x86/kconfig: Move the ZONE_DMA entry under a menu
    
    Move the ZONE_DMA kconfig symbol under a menu item instead
    of having it listed before everything else in
    "make {xconfig | gconfig | nconfig | menuconfig}".
    
    This drops the first line of the top-level kernel config menu
    (in 3.2) below and moves it under "Processor type and features".
    
              [*] DMA memory allocation support
                  General setup  --->
              [*] Enable loadable module support  --->
              [*] Enable the block layer  --->
                  Processor type and features  --->
                  Power management and ACPI options  --->
                  Bus options (PCI etc.)  --->
                  Executable file formats / Emulations  --->
    
    Signed-off-by: Randy Dunlap <rdunlap@xenotime.net>
    Acked-by: David Rientjes <rientjes@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: linux-mm@kvack.org <linux-mm@kvack.org>
    Link: http://lkml.kernel.org/r/4F14811E.6090107@xenotime.net
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Cc: David Rientjes <rientjes@google.com>

commit 2565409fc0303f3ab8d66b8326702a687962a29b
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Thu Jan 12 17:17:33 2012 -0800

    mm,x86,um: move CMPXCHG_DOUBLE config option
    
    Move CMPXCHG_DOUBLE and rename it to HAVE_CMPXCHG_DOUBLE so architectures
    can simply select the option if it is supported.
    
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Acked-by: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 4156153c4daddf12dd386016f96a947a01e93bf4
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Thu Jan 12 17:17:30 2012 -0800

    mm,x86,um: move CMPXCHG_LOCAL config option
    
    Move CMPXCHG_LOCAL and rename it to HAVE_CMPXCHG_LOCAL so architectures
    can simply select the option if it is supported.
    
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Acked-by: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 43570fd2f47ba518145e9289f54cde3dba4c8b25
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Thu Jan 12 17:17:27 2012 -0800

    mm,slub,x86: decouple size of struct page from CONFIG_CMPXCHG_LOCAL
    
    While implementing cmpxchg_double() on s390 I realized that we don't set
    CONFIG_CMPXCHG_LOCAL despite the fact that we have support for it.
    
    However setting that option will increase the size of struct page by
    eight bytes on 64 bit, which we certainly do not want.  Also, it doesn't
    make sense that a present cpu feature should increase the size of struct
    page.
    
    Besides that it looks like the dependency to CMPXCHG_LOCAL is wrong and
    that it should depend on CMPXCHG_DOUBLE instead.
    
    This patch:
    
    If an architecture supports CMPXCHG_LOCAL this shouldn't result
    automatically in larger struct pages if the SLUB allocator is used.
    Instead introduce a new config option "HAVE_ALIGNED_STRUCT_PAGE" which
    can be selected if a double word aligned struct page is required.  Also
    update x86 Kconfig so that it should work as before.
    
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Acked-by: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 9fc5c3e3237e02a94f41cd1d2b4291593d29791d
Merge: 541048a 7c9c3a1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jan 11 19:13:40 2012 -0800

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/intel config: Fix the APB_TIMER selection
      x86/mrst: Add additional debug prints for pb_keys
      x86/intel config: Revamp configuration to allow for Moorestown and Medfield
      x86/intel/scu/ipc: Match the changes in the x86 configuration
      x86/apb: Fix configuration constraints
      x86: Fix INTEL_MID silly
      x86/Kconfig: Cyclone-timer depends on x86-summit
      x86: Reduce clock calibration time during slave cpu startup
      x86/config: Revamp configuration for MID devices
      x86/sfi: Kill the IRQ as id hack

commit bcede2f64a3b5cb50c0bdec1553ab480fd75d659
Merge: d0b9706 2d2da60f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jan 11 19:12:33 2012 -0800

    Merge branch 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    * 'x86-efi-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, efi: Break up large initrd reads
      x86, efi: EFI boot stub support
      efi: Add EFI file I/O data types
      efi.h: Add boottime->locate_handle search types
      efi.h: Add graphics protocol guids
      efi.h: Add allocation types for boottime->allocate_pages()
      efi.h: Add efi_image_loaded_t
      efi.h: Add struct definition for boot time services
      x86: Don't use magic strings for EFI loader signature
      x86: Add missing bzImage fields to struct setup_header

commit e343a895a9f342f239c5e3c5ffc6c0b1707e6244
Merge: 06792c4 193a667
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jan 10 18:04:27 2012 -0800

    Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost
    
    lib: use generic pci_iomap on all architectures
    
    Many architectures don't want to pull in iomap.c,
    so they ended up duplicating pci_iomap from that file.
    That function isn't trivial, and we are going to modify it
    https://lkml.org/lkml/2011/11/14/183
    so the duplication hurts.
    
    This reduces the scope of the problem significantly,
    by moving pci_iomap to a separate file and
    referencing that from all architectures.
    
    * tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost:
      alpha: drop pci_iomap/pci_iounmap from pci-noop.c
      mn10300: switch to GENERIC_PCI_IOMAP
      mn10300: add missing __iomap markers
      frv: switch to GENERIC_PCI_IOMAP
      tile: switch to GENERIC_PCI_IOMAP
      tile: don't panic on iomap
      sparc: switch to GENERIC_PCI_IOMAP
      sh: switch to GENERIC_PCI_IOMAP
      powerpc: switch to GENERIC_PCI_IOMAP
      parisc: switch to GENERIC_PCI_IOMAP
      mips: switch to GENERIC_PCI_IOMAP
      microblaze: switch to GENERIC_PCI_IOMAP
      arm: switch to GENERIC_PCI_IOMAP
      alpha: switch to GENERIC_PCI_IOMAP
      lib: add GENERIC_PCI_IOMAP
      lib: move GENERIC_IOMAP to lib/Kconfig
    
    Fix up trivial conflicts due to changes nearby in arch/{m68k,score}/Kconfig

commit e39f560239984c3098237ad94c9449b1494163f8
Author: David Daney <ddaney.cavm@gmail.com>
Date:   Tue Jan 10 15:10:21 2012 -0800

    fs: binfmt_elf: create Kconfig variable for PIE randomization
    
    Randomization of PIE load address is hard coded in binfmt_elf.c for X86
    and ARM.  Create a new Kconfig variable
    (CONFIG_ARCH_BINFMT_ELF_RANDOMIZE_PIE) for this and use it instead.  Thus
    architecture specific policy is pushed out of the generic binfmt_elf.c and
    into the architecture Kconfig files.
    
    X86 and ARM Kconfigs are modified to select the new variable so there is
    no change in behavior.  A follow on patch will select it for MIPS too.
    
    Signed-off-by: David Daney <david.daney@cavium.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit b4a133da2eaccb844a7beaef16ffd9c76a0d21d3
Merge: eb59c50 282e5aa
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jan 8 13:15:27 2012 -0800

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/apm
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/apm:
      x86: Kconfig: drop unknown symbol 'APM_MODULE'

commit 67b0243131150391125d8d0beb5359d7aec78b55
Merge: 376613e c284b42
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 6 13:58:21 2012 -0800

    Merge branch 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    * 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86: Skip cpus with apic-ids >= 255 in !x2apic_mode
      x86, x2apic: Allow "nox2apic" to disable x2apic mode setup by BIOS
      x86, x2apic: Fallback to xapic when BIOS doesn't setup interrupt-remapping
      x86, acpi: Skip acpi x2apic entries if the x2apic feature is not present
      x86, apic: Add probe() for apic_flat
      x86: Simplify code by removing a !SMP #ifdefs from 'struct cpuinfo_x86'
      x86: Convert per-cpu counter icr_read_retry_count into a member of irq_stat
      x86: Add per-cpu stat counter for APIC ICR read tries
      pci, x86/io-apic: Allow PCI_IOAPIC to be user configurable on x86
      x86: Fix the !CONFIG_NUMA build of the new CPU ID fixup code support
      x86: Add NumaChip support
      x86: Add x86_init platform override to fix up NUMA core numbering
      x86: Make flat_init_apic_ldr() available

commit 7c9c3a1e5fc8728e948b8fa3cbcfcfb86db3afda
Author: Alan Cox <alan@linux.intel.com>
Date:   Thu Dec 29 14:43:16 2011 +0000

    x86/intel config: Fix the APB_TIMER selection
    
    Seems Kconfig SELECT isn't selecting things hierarchically when
    selected.
    
    config APB_TIMER
           def_bool y if X86_INTEL_MID
           prompt "Intel MID APB Timer Support" if X86_INTEL_MID
           select DW_APB_TIMER
           depends on X86_INTEL_MID && SFI
    
    when we select APB_TIMER doesn't select DW_APB_TIMER so do it by
    hand.
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Link: http://lkml.kernel.org/n/tip-kpnaimplltk6d1lolusqj3ae@git.kernel.org
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 45aa0663cc408617b79a2b53f0a5f50e94688a48
Merge: 511585a 7bd0b0f
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Dec 20 12:14:26 2011 +0100

    Merge branch 'memblock-kill-early_node_map' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc into core/memblock

commit 6e5ed276374c329b93a968d640f4d26c8c05411b
Merge: d79a886 384703b
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sun Dec 18 10:35:16 2011 +0100

    Merge commit 'v3.2-rc6' into x86/platform

commit 933b9463a0ef75da681747b2dac06c1754465372
Author: Alan Cox <alan@linux.intel.com>
Date:   Sat Dec 17 17:43:40 2011 +0000

    x86/intel config: Revamp configuration to allow for Moorestown and Medfield
    
    This sets all up the other bits that need to be INTEL_MID
    specific rather than Moorestown specific.
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Link: http://lkml.kernel.org/r/20111217174318.7207.91543.stgit@bob.linux.org.uk
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit a0c3832a578c84d4a93c61e22cb09c99fa9447ea
Author: Alan Cox <alan@linux.intel.com>
Date:   Sat Dec 17 21:57:25 2011 +0000

    x86/apb: Fix configuration constraints
    
    The APB timer requires SFI, SCU and MID support
    
    Reported-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Link: http://lkml.kernel.org/r/20111217215719.3743.93550.stgit@bob.linux.org.uk
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 3e8f9451d3db669d7c0d8b330d4f5770149d90d5
Author: Alan Cox <alan@linux.intel.com>
Date:   Thu Dec 15 22:19:41 2011 +0000

    x86: Fix INTEL_MID silly
    
    Doh.. pass the brown paper bags - preferably filled with mince
    pies..
    
    This fixes occasional build failures.
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Link: http://lkml.kernel.org/n/tip-r0oc1knlvzuqr69artaeq8s8@git.kernel.org
    [ extended the changelog a bit ]
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 291f36325f9f252bd76ef5f603995f37e453fc60
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Mon Dec 12 21:27:52 2011 +0000

    x86, efi: EFI boot stub support
    
    There is currently a large divide between kernel development and the
    development of EFI boot loaders. The idea behind this patch is to give
    the kernel developers full control over the EFI boot process. As
    H. Peter Anvin put it,
    
    "The 'kernel carries its own stub' approach been very successful in
    dealing with BIOS, and would make a lot of sense to me for EFI as
    well."
    
    This patch introduces an EFI boot stub that allows an x86 bzImage to
    be loaded and executed by EFI firmware. The bzImage appears to the
    firmware as an EFI application. Luckily there are enough free bits
    within the bzImage header so that it can masquerade as an EFI
    application, thereby coercing the EFI firmware into loading it and
    jumping to its entry point. The beauty of this masquerading approach
    is that both BIOS and EFI boot loaders can still load and run the same
    bzImage, thereby allowing a single kernel image to work in any boot
    environment.
    
    The EFI boot stub supports multiple initrds, but they must exist on
    the same partition as the bzImage. Command-line arguments for the
    kernel can be appended after the bzImage name when run from the EFI
    shell, e.g.
    
    Shell> bzImage console=ttyS0 root=/dev/sdb initrd=initrd.img
    
    v7:
     - Fix checkpatch warnings.
    
    v6:
    
     - Try to allocate initrd memory just below hdr->inird_addr_max.
    
    v5:
    
     - load_options_size is UTF-16, which needs dividing by 2 to convert
       to the corresponding ASCII size.
    
    v4:
    
     - Don't read more than image->load_options_size
    
    v3:
    
     - Fix following warnings when compiling CONFIG_EFI_STUB=n
    
       arch/x86/boot/tools/build.c: In function ‘main’:
       arch/x86/boot/tools/build.c:138:24: warning: unused variable ‘pe_header’
       arch/x86/boot/tools/build.c:138:15: warning: unused variable ‘file_sz’
    
     - As reported by Matthew Garrett, some Apple machines have GOPs that
       don't have hardware attached. We need to weed these out by
       searching for ones that handle the PCIIO protocol.
    
     - Don't allocate memory if no initrds are on cmdline
     - Don't trust image->load_options_size
    
    Maarten Lankhorst noted:
     - Don't strip first argument when booted from efibootmgr
     - Don't allocate too much memory for cmdline
     - Don't update cmdline_size, the kernel considers it read-only
     - Don't accept '\n' for initrd names
    
    v2:
    
     - File alignment was too large, was 8192 should be 512. Reported by
       Maarten Lankhorst on LKML.
     - Added UGA support for graphics
     - Use VIDEO_TYPE_EFI instead of hard-coded number.
     - Move linelength assignment until after we've assigned depth
     - Dynamically fill out AddressOfEntryPoint in tools/build.c
     - Don't use magic number for GDT/TSS stuff. Requested by Andi Kleen
     - The bzImage may need to be relocated as it may have been loaded at
       a high address address by the firmware. This was required to get my
       macbook booting because the firmware loaded it at 0x7cxxxxxx, which
       triggers this error in decompress_kernel(),
    
    	if (heap > ((-__PAGE_OFFSET-(128<<20)-1) & 0x7fffffff))
    		error("Destination address too large");
    
    Cc: Mike Waychison <mikew@google.com>
    Cc: Matthew Garrett <mjg@redhat.com>
    Tested-by: Henrik Rydberg <rydberg@euromail.se>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    Link: http://lkml.kernel.org/r/1321383097.2657.9.camel@mfleming-mobl1.ger.corp.intel.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 0ee332c1451869963626bf9cac88f165a90990e1
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Dec 8 10:22:09 2011 -0800

    memblock: Kill early_node_map[]
    
    Now all ARCH_POPULATES_NODE_MAP archs select HAVE_MEBLOCK_NODE_MAP -
    there's no user of early_node_map[] left.  Kill early_node_map[] and
    replace ARCH_POPULATES_NODE_MAP with HAVE_MEMBLOCK_NODE_MAP.  Also,
    relocate for_each_mem_pfn_range() and helper from mm.h to memblock.h
    as page_alloc.c would no longer host an alternative implementation.
    
    This change is ultimately one to one mapping and shouldn't cause any
    observable difference; however, after the recent changes, there are
    some functions which now would fit memblock.c better than page_alloc.c
    and dependency on HAVE_MEMBLOCK_NODE_MAP instead of HAVE_MEMBLOCK
    doesn't make much sense on some of them.  Further cleanups for
    functions inside HAVE_MEMBLOCK_NODE_MAP in mm.h would be nice.
    
    -v2: Fix compile bug introduced by mis-spelling
     CONFIG_HAVE_MEMBLOCK_NODE_MAP to CONFIG_MEMBLOCK_HAVE_NODE_MAP in
     mmzone.h.  Reported by Stephen Rothwell.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Chen Liqin <liqin.chen@sunplusct.com>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: "H. Peter Anvin" <hpa@zytor.com>

commit 4e2b1c4f56227c742bbd2ea8e8f559567eb80c3f
Author: Alan Cox <alan@linux.intel.com>
Date:   Tue Dec 6 13:28:22 2011 +0000

    x86/intel_mid: Kconfig select fix
    
    If we select a symbol it should have a type declared first
    otherwise in some situations the config tools get upset. They
    are currently perhaps a bit too resilient which is why this
    wasn't noticed initially.
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Link: http://lkml.kernel.org/r/20111206132811.4041.32549.stgit@bob.linux.org.uk
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit dd13752537d36cc6c145cb040f71ce7acda31e6e
Author: Alan Cox <alan@linux.intel.com>
Date:   Mon Dec 5 23:14:39 2011 +0000

    x86/intel_mid: Fix the Kconfig for MID selection
    
    We currently fail to build on CONFIG_X86_INTEL_MID=y and
    CONFIG_X86_MRST unset.
    
    We could build all the bits to make generic MID work if you
    picked MID platform alone but that's really silly. Instead use
    select and two variables.
    
    This looks a bit daft right now but once we add a Medfield
    selection it'll start to look a good deal more sensible.
    
    Reported-by: Ingo Molnar <mingo@elte.hu>
    Reported-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Link: http://lkml.kernel.org/r/20111205231433.28811.51297.stgit@bob.linux.org.uk
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f9b15df466ba923a5832c9121ad8327ccf5483ef
Author: Alessandro Rubini <rubini@gnudd.com>
Date:   Sat Oct 29 00:48:42 2011 +0200

    x86/Kconfig: Cyclone-timer depends on x86-summit
    
    CONFIG_X86_CYCLONE_TIMER depends on CONFIG_X86_32_NON_STANDARD,
    which forces drivers/clocksource/cyclone.c to be compiled. The
    file doesn't do anything unless enabled by
    arch/x86/kernel/apic/summit_32.c
    
    Make CONFIG_X86_CYCLONE_TIMER depend by X86_SUMMIT instead, to
    avoid unnecessary code in other non-standard systems.
    
    Signed-off-by: Alessandro Rubini <rubini@gnudd.com>
    Cc: john stultz <johnstul@us.ibm.com>
    Link: http://lkml.kernel.org/r/20111028224842.GA7582@mail.gnudd.com
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 44b111b519160e33fdc41eadb39af86a24707edf
Author: Steffen Persvold <sp@numascale.com>
Date:   Tue Dec 6 00:07:26 2011 +0800

    x86: Add NumaChip support
    
    Adds support for Numascale NumaChip large-SMP systems. It is
    needed to enable the booting of more than ~168 cores.
    
    v2:
     - [Steffen] enumerate only accessible northbridges
     - [Daniel] rediffed and validated against 3.1-rc10
    
    v3:
     - [Daniel] use x86_init core numbering override
     - [Daniel] cleanups as per feedback
    
    v4:
     - [Daniel] use updated x86_cpuinit override
    
    v5:
     - drop disabling interrupts locally, as ISR write is atomic; drop delay
     - added read-mostly annotations where appropriate
     - require CONFIG_SMP, so drop conditional path
    
    Workload tested on 96 cores/16 sockets.
    
    Signed-off-by: Steffen Persvold <sp@numascale.com>
    Signed-off-by: Daniel J Blueman <daniel@numascale-asia.com>
    Cc: Jesse Barnes <jbarnes@virtuousgeek.org>
    Link: http://lkml.kernel.org/r/1323101246-2400-1-git-send-email-daniel@numascale-asia.com
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 1ea7c6737c8f68453f55c894b3d07d7f48fcbef8
Author: Alan Cox <alan@linux.intel.com>
Date:   Thu Nov 10 13:29:14 2011 +0000

    x86/config: Revamp configuration for MID devices
    
    This follows on from the patch applied in 3.2rc1 which creates
    an INTEL_MID configuration. We can now add the entry for
    Medfield specific code. After this is merged the final patch
    will be submitted which moves the rest of the device Kconfig
    dependancies to MRST/MEDFIELD/INTEL_MID as appropriate.
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit d4bbf7e7759afc172e2bfbc5c416324590049cdd
Merge: a150439 401d006
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Nov 28 09:46:22 2011 -0800

    Merge branch 'master' into x86/memblock
    
    Conflicts & resolutions:
    
    * arch/x86/xen/setup.c
    
    	dc91c728fd "xen: allow extra memory to be in multiple regions"
    	24aa07882b "memblock, x86: Replace memblock_x86_reserve/free..."
    
    	conflicted on xen_add_extra_mem() updates.  The resolution is
    	trivial as the latter just want to replace
    	memblock_x86_reserve_range() with memblock_reserve().
    
    * drivers/pci/intel-iommu.c
    
    	166e9278a3f "x86/ia64: intel-iommu: move to drivers/iommu/"
    	5dfe8660a3d "bootmem: Replace work_with_active_regions() with..."
    
    	conflicted as the former moved the file under drivers/iommu/.
    	Resolved by applying the chnages from the latter on the moved
    	file.
    
    * mm/Kconfig
    
    	6661672053a "memblock: add NO_BOOTMEM config symbol"
    	c378ddd53f9 "memblock, x86: Make ARCH_DISCARD_MEMBLOCK a config option"
    
    	conflicted trivially.  Both added config options.  Just
    	letting both add their own options resolves the conflict.
    
    * mm/memblock.c
    
    	d1f0ece6cdc "mm/memblock.c: small function definition fixes"
    	ed7b56a799c "memblock: Remove memblock_memory_can_coalesce()"
    
    	confliected.  The former updates function removed by the
    	latter.  Resolution is trivial.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>

commit 4673ca8eb3690832e76371371955a8b02e1f59d4
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Thu Nov 24 14:54:28 2011 +0200

    lib: move GENERIC_IOMAP to lib/Kconfig
    
    define GENERIC_IOMAP in a central location
    instead of all architectures. This will be helpful
    for the follow-up patch which makes it select
    other configs. Code is also a bit shorter this way.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>

commit 282e5aaba2a0cdfde4d2c2e34bc7438cd6f7a00f
Author: Paul Bolle <pebolle@tiscali.nl>
Date:   Thu Nov 17 11:41:31 2011 +0100

    x86: Kconfig: drop unknown symbol 'APM_MODULE'
    
    There's no Kconfig symbol APM_MODULE, so the check for it will always
    fail. There's no need to append _MODULE to tristate symbols anyhow,
    because the config tools will do the right thing automagically.
    
    Signed-off-by: Paul Bolle <pebolle@tiscali.nl>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit 02ebbbd481635fd3ce7018e5bb19c18c0f1e4561
Merge: addd8c9 536ec4f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Nov 6 18:54:53 2011 -0800

    Merge branch 'trivial' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild
    
    * 'trivial' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild:
      scsi: drop unused Kconfig symbol
      pci: drop unused Kconfig symbol
      stmmac: drop unused Kconfig symbol
      x86: drop unused Kconfig symbol
      powerpc: drop unused Kconfig symbols
      powerpc: 40x: drop unused Kconfig symbol
      mips: drop unused Kconfig symbols
      openrisc: drop unused Kconfig symbols
      arm: at91: drop unused Kconfig symbol
      samples: drop unused Kconfig symbol
      m32r: drop unused Kconfig symbol
      score: drop unused Kconfig symbols
      sh: drop unused Kconfig symbol
      um: drop unused Kconfig symbol
      sparc: drop unused Kconfig symbol
      alpha: drop unused Kconfig symbol
    
    Fix up trivial conflict in drivers/net/ethernet/stmicro/stmmac/Kconfig
    as per Michal: the STMMAC_DUAL_MAC config variable is still unused and
    should be deleted.

commit 4f4d7a9ba0b7cdbc518cc04930323b15411eee14
Author: Paul Bolle <pebolle@tiscali.nl>
Date:   Mon Oct 24 13:42:34 2011 +0200

    x86: drop unused Kconfig symbol
    
    Signed-off-by: Paul Bolle <pebolle@tiscali.nl>
    Acked-by: David Rientjes <rientjes@google.com>
    Signed-off-by: Michal Marek <mmarek@suse.cz>

commit 8e6d539e0fd0c2124a20a207da70f2af7a9ae52c
Merge: 8237eb9 49d859d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Oct 28 05:29:07 2011 -0700

    Merge branch 'x86-rdrand-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    * 'x86-rdrand-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, random: Verify RDRAND functionality and allow it to be disabled
      x86, random: Architectural inlines to get random integers with RDRAND
      random: Add support for architectural random hooks
    
    Fix up trivial conflicts in drivers/char/random.c: the architectural
    random hooks touched "get_random_int()" that was simplified to use MD5
    and not do the keyptr thing any more (see commit 6e5714eaf77d: "net:
    Compute protocol sequence numbers and fragment IDs using MD5").

commit a93f3e9f424ffb82b4983d2ebf8667ef20255015
Merge: 107095a d4f3e35
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Oct 28 05:04:26 2011 -0700

    Merge branch 'x86-geode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    * 'x86-geode-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86: geode: New PCEngines Alix system driver

commit 0791e98dd1cd1833547f814188b25b6c8c711ad5
Merge: edb34a4 141d55e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Oct 26 17:30:33 2011 +0200

    Merge branch 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    * 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86/irq: Standardize on CONFIG_SPARSE_IRQ=y
      x86, ioapic: Clean up ioapic/apic_id usage
      x86, ioapic: Factor out print_IO_APIC() to only print one io apic
      x86, ioapic: Print out irte with right ioapic index
      x86, ioapic: Split up setup_ioapic_entry()
      x86, ioapic: Pass struct irq_attr * to setup_ioapic_irq()
      apic, i386/bigsmp: Fix false warnings regarding logical APIC ID mismatches

commit 39adff5f69d6849ca22353a88058c9f8630528c0
Merge: 8a4a891 e35f95b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Oct 26 17:15:03 2011 +0200

    Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    * 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (23 commits)
      time, s390: Get rid of compile warning
      dw_apb_timer: constify clocksource name
      time: Cleanup old CONFIG_GENERIC_TIME references that snuck in
      time: Change jiffies_to_clock_t() argument type to unsigned long
      alarmtimers: Fix error handling
      clocksource: Make watchdog reset lockless
      posix-cpu-timers: Cure SMP accounting oddities
      s390: Use direct ktime path for s390 clockevent device
      clockevents: Add direct ktime programming function
      clockevents: Make minimum delay adjustments configurable
      nohz: Remove "Switched to NOHz mode" debugging messages
      proc: Consider NO_HZ when printing idle and iowait times
      nohz: Make idle/iowait counter update conditional
      nohz: Fix update_ts_time_stat idle accounting
      cputime: Clean up cputime_to_usecs and usecs_to_cputime macros
      alarmtimers: Rework RTC device selection using class interface
      alarmtimers: Add try_to_cancel functionality
      alarmtimers: Add more refined alarm state tracking
      alarmtimers: Remove period from alarm structure
      alarmtimers: Remove interval cap limit hack
      ...

commit 982653009b883ef1529089e3e6f1ae2fee41cbe2
Merge: 37d96c2 c020570
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Oct 26 16:11:53 2011 +0200

    Merge branch 'core-iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    * 'core-iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      x86, ioapic: Consolidate the explicit EOI code
      x86, ioapic: Restore the mask bit correctly in eoi_ioapic_irq()
      x86, kdump, ioapic: Reset remote-IRR in clear_IO_APIC
      iommu: Rename the DMAR and INTR_REMAP config options
      x86, ioapic: Define irq_remap_modify_chip_defaults()
      x86, msi, intr-remap: Use the ioapic set affinity routine
      iommu: Cleanup ifdefs in detect_intel_iommu()
      iommu: No need to set dmar_disabled in check_zero_address()
      iommu: Move IOMMU specific code to intel-iommu.c
      intr_remap: Call dmar_dev_scope_init() explicitly
      x86, x2apic: Enable the bios request for x2apic optout

commit 141d55e6cc590293ea1378f55b9ebd38f5024bf0
Author: Yinghai Lu <yinghai.lu@oracle.com>
Date:   Wed Oct 12 11:53:17 2011 -0700

    x86/irq: Standardize on CONFIG_SPARSE_IRQ=y
    
    Sparseirq got introduced in v2.6.28 and Thomas did a huge cleanup
    around v2.6.38 that eliminated basically all disadvantages
    of it.
    
    So we can remove non-sparseirq support now and simplify
    our IRQ degrees of freedom a bit.
    
    Suggested-and-acked-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Link: http://lkml.kernel.org/r/4E95E21D.6090200@oracle.com
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 395cf9691d72173d8cdaa613c5f0255f993af94b
Author: Paul Bolle <pebolle@tiscali.nl>
Date:   Mon Aug 15 02:02:26 2011 +0200

    doc: fix broken references
    
    There are numerous broken references to Documentation files (in other
    Documentation files, in comments, etc.). These broken references are
    caused by typo's in the references, and by renames or removals of the
    Documentation files. Some broken references are simply odd.
    
    Fix these broken references, sometimes by dropping the irrelevant text
    they were part of.
    
    Signed-off-by: Paul Bolle <pebolle@tiscali.nl>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit d4f3e350172a1dc769ed5e7f5bd540feb0c475d8
Author: Ed Wildgoose <git@wildgooses.com>
Date:   Tue Sep 20 14:00:12 2011 -0700

    x86: geode: New PCEngines Alix system driver
    
    This new driver replaces the old PCEngines Alix 2/3 LED driver with a
    new driver that controls the LEDs through the leds-gpio driver. The
    old driver accessed GPIOs directly, which created a conflict and
    prevented also loading the cs5535-gpio driver to read other GPIOs on
    the Alix board. With this new driver, we hook into leds-gpio which in
    turn uses GPIO to control the LEDs and therefore it's possible to
    control both the LEDs and access onboard GPIOs
    
    Driver is moved to platform/geode as requested by Grant and any other
    geode initialisation modules should move here also
    
    This driver is inspired by leds-net5501.c by Alessandro Zummo.
    
    Ideally, leds-net5501.c should also be moved to platform/geode.
    Additionally the driver relies on parts of the patch: 7f131cf3ed ("leds:
    leds-alix2c - take port address from MSR) by Daniel Mack to perform
    detection of the Alix board.
    
    [akpm@linux-foundation.org: include module.h]
    
    Signed-off-by: Ed Wildgoose <kernel@wildgooses.com>
    Cc: git@wildgooses.com
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Cc: Daniel Mack <daniel@caiaq.de>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Richard Purdie <rpurdie@rpsys.net>
    Reviewed-by: Grant Likely <grant.likely@secretlab.ca>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit d3f138106b4b40640dc667f0222fd9f137387b32
Author: Suresh Siddha <suresh.b.siddha@intel.com>
Date:   Tue Aug 23 17:05:25 2011 -0700

    iommu: Rename the DMAR and INTR_REMAP config options
    
    Change the CONFIG_DMAR to CONFIG_INTEL_IOMMU to be consistent
    with the other IOMMU options.
    
    Rename the CONFIG_INTR_REMAP to CONFIG_IRQ_REMAP to match the
    irq subsystem name.
    
    And define the CONFIG_DMAR_TABLE for the common ACPI DMAR
    routines shared by both CONFIG_INTEL_IOMMU and CONFIG_IRQ_REMAP.
    
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Cc: yinghai@kernel.org
    Cc: youquan.song@intel.com
    Cc: joerg.roedel@amd.com
    Cc: tony.luck@intel.com
    Cc: dwmw2@infradead.org
    Link: http://lkml.kernel.org/r/20110824001456.558630224@sbsiddha-desk.sc.intel.com
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit d1748302f70be7469809809283fe164156a34231
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Tue Aug 23 15:29:42 2011 +0200

    clockevents: Make minimum delay adjustments configurable
    
    The automatic increase of the min_delta_ns of a clockevents device
    should be done in the clockevents code as the minimum delay is an
    attribute of the clockevents device.
    
    In addition not all architectures want the automatic adjustment, on a
    massively virtualized system it can happen that the programming of a
    clock event fails several times in a row because the virtual cpu has
    been rescheduled quickly enough. In that case the minimum delay will
    erroneously be increased with no way back. The new config symbol
    GENERIC_CLOCKEVENTS_MIN_ADJUST is used to enable the automatic
    adjustment. The config option is selected only for x86.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: john stultz <johnstul@us.ibm.com>
    Link: http://lkml.kernel.org/r/20110823133142.494157493@de.ibm.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit d0e323b47057f4492b8fa22345f38d80a469bf8d
Merge: c027a47 c3e6088
Author: Len Brown <len.brown@intel.com>
Date:   Wed Aug 3 11:30:42 2011 -0400

    Merge branch 'apei' into apei-release
    
    Some trivial conflicts due to other various merges
    adding to the end of common lists sooner than this one.
    
    	arch/ia64/Kconfig
    	arch/powerpc/Kconfig
    	arch/x86/Kconfig
    	lib/Kconfig
    	lib/Makefile
    
    Signed-off-by: Len Brown <len.brown@intel.com>

commit df013ffb8119c89f062ab05b7f544704315db47b
Author: Huang Ying <ying.huang@intel.com>
Date:   Wed Jul 13 13:14:22 2011 +0800

    Add Kconfig option ARCH_HAVE_NMI_SAFE_CMPXCHG
    
    cmpxchg() is widely used by lockless code, including NMI-safe lockless
    code.  But on some architectures, the cmpxchg() implementation is not
    NMI-safe, on these architectures the lockless code may need a
    spin_trylock_irqsave() based implementation.
    
    This patch adds a Kconfig option: ARCH_HAVE_NMI_SAFE_CMPXCHG, so that
    NMI-safe lockless code can depend on it or provide different
    implementation according to it.
    
    On many architectures, cmpxchg is only NMI-safe for several specific
    operand sizes. So, ARCH_HAVE_NMI_SAFE_CMPXCHG define in this patch
    only guarantees cmpxchg is NMI-safe for sizeof(unsigned long).
    
    Signed-off-by: Huang Ying <ying.huang@intel.com>
    Acked-by: Mike Frysinger <vapier@gentoo.org>
    Acked-by: Paul Mundt <lethal@linux-sh.org>
    Acked-by: Hans-Christian Egtvedt <hans-christian.egtvedt@atmel.com>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Acked-by: Chris Metcalf <cmetcalf@tilera.com>
    Acked-by: Richard Henderson <rth@twiddle.net>
    CC: Mikael Starvik <starvik@axis.com>
    Acked-by: David Howells <dhowells@redhat.com>
    CC: Yoshinori Sato <ysato@users.sourceforge.jp>
    CC: Tony Luck <tony.luck@intel.com>
    CC: Hirokazu Takata <takata@linux-m32r.org>
    CC: Geert Uytterhoeven <geert@linux-m68k.org>
    CC: Michal Simek <monstr@monstr.eu>
    Acked-by: Ralf Baechle <ralf@linux-mips.org>
    CC: Kyle McMartin <kyle@mcmartin.ca>
    CC: Martin Schwidefsky <schwidefsky@de.ibm.com>
    CC: Chen Liqin <liqin.chen@sunplusct.com>
    CC: "David S. Miller" <davem@davemloft.net>
    CC: Ingo Molnar <mingo@redhat.com>
    CC: Chris Zankel <chris@zankel.net>
    Signed-off-by: Len Brown <len.brown@intel.com>

commit 628c6246d47b85f5357298601df2444d7f4dd3fd
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Sun Jul 31 13:59:29 2011 -0700

    x86, random: Architectural inlines to get random integers with RDRAND
    
    Architectural inlines to get random ints and longs using the RDRAND
    instruction.
    
    Intel has introduced a new RDRAND instruction, a Digital Random Number
    Generator (DRNG), which is functionally an high bandwidth entropy
    source, cryptographic whitener, and integrity monitor all built into
    hardware.  This enables RDRAND to be used directly, bypassing the
    kernel random number pool.
    
    For technical documentation, see:
    
    http://software.intel.com/en-us/articles/download-the-latest-bull-mountain-software-implementation-guide/
    
    In this patch, this is *only* used for the nonblocking random number
    pool.  RDRAND is a nonblocking source, similar to our /dev/urandom,
    and is therefore not a direct replacement for /dev/random.  The
    architectural hooks presented in the previous patch only feed the
    kernel internal users, which only use the nonblocking pool, and so
    this is not a problem.
    
    Since this instruction is available in userspace, there is no reason
    to have a /dev/hw_rng device driver for the purpose of feeding rngd.
    This is especially so since RDRAND is a nonblocking source, and needs
    additional whitening and reduction (see the above technical
    documentation for details) in order to be of "pure entropy source"
    quality.
    
    The CONFIG_EXPERT compile-time option can be used to disable this use
    of RDRAND.
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Originally-by: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Matt Mackall <mpm@selenic.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "Theodore Ts'o" <tytso@mit.edu>

commit f85f19de90a9997583bb26e6f1f9297a4e152c18
Merge: b993fdb 7b87c9d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 29 23:35:05 2011 -0700

    Merge branch 'linux-next' of git://git.kernel.org/pub/scm/linux/kernel/git/jbarnes/pci-2.6
    
    * 'linux-next' of git://git.kernel.org/pub/scm/linux/kernel/git/jbarnes/pci-2.6:
      PCI: remove printks about disabled bridge windows
      PCI: fold pci_calc_resource_flags() into decode_bar()
      PCI: treat mem BAR type "11" (reserved) as 32-bit, not 64-bit, BAR
      PCI: correct pcie_set_readrq write size
      PCI: pciehp: change wait time for valid configuration access
      x86/PCI: Preserve existing pci=bfsort whitelist for Dell systems
      PCI: ARI is a PCIe v2 feature
      x86/PCI: quirks: Use pci_dev->revision
      PCI: Make the struct pci_dev * argument of pci_fixup_irqs const.
      PCI hotplug: cpqphp: use pci_dev->vendor
      PCI hotplug: cpqphp: use pci_dev->subsystem_{vendor|device}
      x86/PCI: config space accessor functions should not ignore the segment argument
      PCI: Assign values to 'pci_obff_signal_type' enumeration constants
      x86/PCI: reduce severity of host bridge window conflict warnings
      PCI: enumerate the PCI device only removed out PCI hieratchy of OS when re-scanning PCI
      PCI: PCIe AER: add aer_recover_queue
      x86/PCI: select direct access mode for mmconfig option
      PCI hotplug: Rename is_ejectable which also exists in dock.c

commit fa8f53ace4af9470d8414427cb3dc3c0ffc4f182
Merge: 1d87c28 07d5b38
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jul 26 11:11:54 2011 -0700

    Merge branch 'x86-olpc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-olpc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, olpc-xo15-sci: Enable EC wakeup capability
      x86, olpc: Fix dependency on POWER_SUPPLY
      x86, olpc: Add XO-1.5 SCI driver
      x86, olpc: Add XO-1 RTC driver
      x86, olpc-xo1-sci: Propagate power supply/battery events
      x86, olpc-xo1-sci: Add lid switch functionality
      x86, olpc-xo1-sci: Add GPE handler and ebook switch functionality
      x86, olpc: EC SCI wakeup mask functionality
      x86, olpc: Add XO-1 SCI driver and power button control
      x86, olpc: Add XO-1 suspend/resume support
      x86, olpc: Rename olpc-xo1 to olpc-xo1-pm
      x86, olpc: Move CS5536-related constants to cs5535.h
      x86, olpc: Add missing elements to device tree

commit d3ec4844d449cf7af9e749f73ba2052fb7b72fc2
Merge: 0003230 df2e301
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jul 25 13:56:39 2011 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial: (43 commits)
      fs: Merge split strings
      treewide: fix potentially dangerous trailing ';' in #defined values/expressions
      uwb: Fix misspelling of neighbourhood in comment
      net, netfilter: Remove redundant goto in ebt_ulog_packet
      trivial: don't touch files that are removed in the staging tree
      lib/vsprintf: replace link to Draft by final RFC number
      doc: Kconfig: `to be' -> `be'
      doc: Kconfig: Typo: square -> squared
      doc: Konfig: Documentation/power/{pm => apm-acpi}.txt
      drivers/net: static should be at beginning of declaration
      drivers/media: static should be at beginning of declaration
      drivers/i2c: static should be at beginning of declaration
      XTENSA: static should be at beginning of declaration
      SH: static should be at beginning of declaration
      MIPS: static should be at beginning of declaration
      ARM: static should be at beginning of declaration
      rcu: treewide: Do not use rcu_read_lock_held when calling rcu_dereference_check
      Update my e-mail address
      PCIe ASPM: forcedly -> forcibly
      gma500: push through device driver tree
      ...
    
    Fix up trivial conflicts:
     - arch/arm/mach-ep93xx/dma-m2p.c (deleted)
     - drivers/gpio/gpio-ep93xx.c (renamed and context nearby)
     - drivers/net/r8169.c (just context changes)

commit d8d01a6378db6e3eeb8777a8769c69e455635dc3
Author: Daniel Drake <dsd@laptop.org>
Date:   Sun Jul 24 18:33:21 2011 +0100

    x86, olpc: Fix dependency on POWER_SUPPLY
    
    As reported by Randy Dunlap, CONFIG_POWER_SUPPLY=m caused a
    compile error:
    
      arch/x86/built-in.o: In function `battery_status_changed':
       olpc-xo15-sci.c:(.text+0x3acdd): undefined reference to `power_supply_get_by_name'
       olpc-xo15-sci.c:(.text+0x3ad04): undefined reference to `power_supply_changed'
    
    The SCI drivers, as bool, require POWER_SUPPLY to be builtin.
    Use select to make that a hard requirement and avoid this build
    failure.
    
    Reported-by: Randy Dunlap <rdunlap@xenotime.net>
    Acked-by: Randy Dunlap <rdunlap@xenotime.net>
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 5fabc487c96819dd12ddb9414835d170fd9cd6d5
Merge: c61264f 3f68b03
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jul 24 09:07:03 2011 -0700

    Merge branch 'kvm-updates/3.1' of git://git.kernel.org/pub/scm/virt/kvm/kvm
    
    * 'kvm-updates/3.1' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (143 commits)
      KVM: IOMMU: Disable device assignment without interrupt remapping
      KVM: MMU: trace mmio page fault
      KVM: MMU: mmio page fault support
      KVM: MMU: reorganize struct kvm_shadow_walk_iterator
      KVM: MMU: lockless walking shadow page table
      KVM: MMU: do not need atomicly to set/clear spte
      KVM: MMU: introduce the rules to modify shadow page table
      KVM: MMU: abstract some functions to handle fault pfn
      KVM: MMU: filter out the mmio pfn from the fault pfn
      KVM: MMU: remove bypass_guest_pf
      KVM: MMU: split kvm_mmu_free_page
      KVM: MMU: count used shadow pages on prepareing path
      KVM: MMU: rename 'pt_write' to 'emulate'
      KVM: MMU: cleanup for FNAME(fetch)
      KVM: MMU: optimize to handle dirty bit
      KVM: MMU: cache mmio info on page fault path
      KVM: x86: introduce vcpu_mmio_gva_to_gpa to cleanup the code
      KVM: MMU: do not update slot bitmap if spte is nonpresent
      KVM: MMU: fix walking shadow page table
      KVM guest: KVM Steal time registration
      ...

commit b4db920c7f524b2cd0f5ae7efbbbbfd2c76a27da
Merge: 7080d30 24a42ba 3e7cf5b 050438e 43605ef 3817505 df04967 14cb6dc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jul 23 10:38:21 2011 -0700

    Merge branches 'x86-detect-hyper-for-linus', 'x86-fpu-for-linus', 'x86-kexec-for-linus', 'x86-platform-for-linus', 'x86-quirks-for-linus', 'x86-tsc-for-linus' and 'x86-smpboot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-detect-hyper-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, hyper: Change hypervisor detection order
    
    * 'x86-fpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86-32, fpu: Fix DNA exception during check_fpu()
    
    * 'x86-kexec-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      kexec, x86: Fix incorrect jump back address if not preserving context
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, config: Introduce an INTEL_MID configuration
    
    * 'x86-quirks-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, quirks: Use pci_dev->revision
    
    * 'x86-tsc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86: tsc: Remove unneeded DMI-based blacklisting
    
    * 'x86-smpboot-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, boot: Wait for boot cpu to show up if nr_cpus limit is about to hit

commit 9d0715630ebf7bf70daa5e6d8db0e3061268c61e
Merge: c0c463d 06c3df4
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jul 23 10:34:47 2011 -0700

    Merge branch 'timers-clocksource-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'timers-clocksource-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      clocksource: apb: Share APB timer code with other platforms

commit 8e204874db000928e37199c2db82b7eb8966cc3c
Merge: 3e0b8df aafade2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 22 17:05:15 2011 -0700

    Merge branch 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86-64, vdso: Do not allocate memory for the vDSO
      clocksource: Change __ARCH_HAS_CLOCKSOURCE_DATA to a CONFIG option
      x86, vdso: Drop now wrong comment
      Document the vDSO and add a reference parser
      ia64: Replace clocksource.fsys_mmio with generic arch data
      x86-64: Move vread_tsc and vread_hpet into the vDSO
      clocksource: Replace vread with generic arch data
      x86-64: Add --no-undefined to vDSO build
      x86-64: Allow alternative patching in the vDSO
      x86: Make alternative instruction pointers relative
      x86-64: Improve vsyscall emulation CS and RIP handling
      x86-64: Emulate legacy vsyscalls
      x86-64: Fill unused parts of the vsyscall page with 0xcc
      x86-64: Remove vsyscall number 3 (venosys)
      x86-64: Map the HPET NX
      x86-64: Remove kernel.vsyscall64 sysctl
      x86-64: Give vvars their own page
      x86-64: Document some of entry_64.S
      x86-64: Fix alignment of jiffies variable

commit a99a7d1436f9375662f35ccac8f1a1e1b0302a11
Merge: bdc7ccf ded7c1e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 22 16:51:56 2011 -0700

    Merge branch 'timers-cleanup-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'timers-cleanup-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      mips: Fix i8253 clockevent fallout
      i8253: Cleanup outb/inb magic
      arm: Footbridge: Use common i8253 clockevent
      mips: Use common i8253 clockevent
      x86: Use common i8253 clockevent
      i8253: Create common clockevent implementation
      i8253: Export i8253_lock unconditionally
      pcpskr: MIPS: Make config dependencies finer grained
      pcspkr: Cleanup Kconfig dependencies
      i8253: Move remaining content and delete asm/i8253.h
      i8253: Consolidate definitions of PIT_LATCH
      x86: i8253: Consolidate definitions of global_clock_event
      i8253: Alpha, PowerPC: Remove unused asm/8253pit.h
      alpha: i8253: Cleanup remaining users of i8253pit.h
      i8253: Remove I8253_LOCK config
      i8253: Make pcsp sound driver use the shared i8253_lock
      i8253: Make pcspkr input driver use the shared i8253_lock
      i8253: Consolidate all kernel definitions of i8253_lock
      i8253: Unify all kernel declarations of i8253_lock
      i8253: Create linux/i8253.h and use it in all 8253 related files

commit 6d16d6d9bb6f93e6f8506cfb3e91795d6443d54f
Merge: 431bf99 b395fb3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 22 16:39:42 2011 -0700

    Merge branch 'core-iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'core-iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      iommu/core: Fix build with INTR_REMAP=y && CONFIG_DMAR=n
      iommu/amd: Don't use MSI address range for DMA addresses
      iommu/amd: Move missing parts to drivers/iommu
      iommu: Move iommu Kconfig entries to submenu
      x86/ia64: intel-iommu: move to drivers/iommu/
      x86: amd_iommu: move to drivers/iommu/
      msm: iommu: move to drivers/iommu/
      drivers: iommu: move to a dedicated folder
      x86/amd-iommu: Store device alias as dev_data pointer
      x86/amd-iommu: Search for existind dev_data before allocting a new one
      x86/amd-iommu: Allow dev_data->alias to be NULL
      x86/amd-iommu: Use only dev_data in low-level domain attach/detach functions
      x86/amd-iommu: Use only dev_data for dte and iotlb flushing routines
      x86/amd-iommu: Store ATS state in dev_data
      x86/amd-iommu: Store devid in dev_data
      x86/amd-iommu: Introduce global dev_data_list
      x86/amd-iommu: Remove redundant device_flush_dte() calls
      iommu-api: Add missing header file
    
    Fix up trivial conflicts (independent additions close to each other) in
    drivers/Makefile and include/linux/pci.h

commit 0aba496fc820d7c36775f2fd0ef81994e1af67a8
Author: Shaohua Li <shaohua.li@intel.com>
Date:   Fri May 27 14:59:39 2011 +0800

    x86/PCI: select direct access mode for mmconfig option
    
    Direct access is needed in mmconf mode too. There are two reasons:
    1. we need it to access first 256 bytes. We have bug before that
       using mmconf to access pci config space hangs system (when
       resizing BARs), so we use type1 config for legacy config space.
    2. when doing mmconfg bar checking, we need access ACPI _CRS,
       which might access PCI config space.
    
    Signed-off-by: Shaohua Li <shaohua.li@intel.com>
    Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>

commit ae7bd11b471931752e5609094ca0a49386590524
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Thu Jul 21 13:34:05 2011 -0700

    clocksource: Change __ARCH_HAS_CLOCKSOURCE_DATA to a CONFIG option
    
    The machinery for __ARCH_HAS_CLOCKSOURCE_DATA assumed a file in
    asm-generic would be the default for architectures without their own
    file in asm/, but that is not how it works.
    
    Replace it with a Kconfig option instead.
    
    Link: http://lkml.kernel.org/r/4E288AA6.7090804@zytor.com
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Cc: Andy Lutomirski <luto@mit.edu>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Tony Luck <tony.luck@intel.com>

commit 43605ef188cd39708ddc5e3adc47b337b6ebe40e
Author: Alan Cox <alan@linux.intel.com>
Date:   Tue Jul 12 17:49:29 2011 +0100

    x86, config: Introduce an INTEL_MID configuration
    
    We need to carve up the configuration between:
    
     - MID general
     - Moorestown specific
     - Medfield specific
     - Future devices
    
    As a base point create an INTEL_MID configuration property. We
    make the existing MRST configuration a sub-option. This means
    that the rest of the kernel config can still use X86_MRST checks
    without anything going backwards.
    
    After this is merged future patches will tidy up which devices
    are MID and which are X86_MRST, as well as add options for
    Medfield.
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Link: http://lkml.kernel.org/r/20110712164859.7642.84136.stgit@bob.linux.org.uk
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c378ddd53f9b8832a46fd4fec050a97fc2269858
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Jul 14 11:46:03 2011 +0200

    memblock, x86: Make ARCH_DISCARD_MEMBLOCK a config option
    
    From 6839454ae63f1eb21e515c10229ca95c22955fec Mon Sep 17 00:00:00 2001
    From: Tejun Heo <tj@kernel.org>
    Date: Thu, 14 Jul 2011 11:22:17 +0200
    
    Make ARCH_DISCARD_MEMBLOCK a config option so that it can be handled
    together with other MEMBLOCK options.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Link: http://lkml.kernel.org/r/20110714094603.GH3455@htj.dyndns.org
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 0608f70c78a384c2f225f2de226ca057a196f108
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Jul 14 11:44:23 2011 +0200

    x86: Use HAVE_MEMBLOCK_NODE_MAP
    
    From 5732e1247898d67cbf837585150fe9f68974671d Mon Sep 17 00:00:00 2001
    From: Tejun Heo <tj@kernel.org>
    Date: Thu, 14 Jul 2011 11:22:16 +0200
    
    Convert x86 to HAVE_MEMBLOCK_NODE_MAP.  The only difference in memory
    handling is that allocations can't no longer cross node boundaries
    whether they're node affine or not, which shouldn't matter at all.
    
    This conversion will enable further simplification of boot memory
    handling.
    
    -v2: Fix build failure on !NUMA configurations discovered by hpa.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Link: http://lkml.kernel.org/r/20110714094423.GG3455@htj.dyndns.org
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 095c0aa83e52d6c3dd7168610746703921f570af
Author: Glauber Costa <glommer@redhat.com>
Date:   Mon Jul 11 15:28:18 2011 -0400

    sched: adjust scheduler cpu power for stolen time
    
    This patch makes update_rq_clock() aware of steal time.
    The mechanism of operation is not different from irq_time,
    and follows the same principles. This lives in a CONFIG
    option itself, and can be compiled out independently of
    the rest of steal time reporting. The effect of disabling it
    is that the scheduler will still report steal time (that cannot be
    disabled), but won't use this information for cpu power adjustments.
    
    Everytime update_rq_clock_task() is invoked, we query information
    about how much time was stolen since last call, and feed it into
    sched_rt_avg_update().
    
    Although steal time reporting in account_process_tick() keeps
    track of the last time we read the steal clock, in prev_steal_time,
    this patch do it independently using another field,
    prev_steal_time_rq. This is because otherwise, information about time
    accounted in update_process_tick() would never reach us in update_rq_clock().
    
    Signed-off-by: Glauber Costa <glommer@redhat.com>
    Acked-by: Rik van Riel <riel@redhat.com>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Tested-by: Eric B Munson <emunson@mgebm.net>
    CC: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
    CC: Anthony Liguori <aliguori@us.ibm.com>
    Signed-off-by: Avi Kivity <avi@redhat.com>

commit 5da0ef9a8554a8d03dc880a53f213289fe7b576d
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Jul 11 10:34:32 2011 +0200

    x86: Disable AMD_NUMA for 32bit for now
    
    Commit 2706a0bf7b ("x86, NUMA: Enable CONFIG_AMD_NUMA on 32bit
    too") enabled AMD NUMA for 32bit too.  Unfortunately, SPARSEMEM
    on 32bit had rather coarse (512MiB) addr->node mapping
    granularity due to lack of space in page->flags.  This led to
    boot failure on certain AMD NUMA machines which had 128MiB
    alignment on nodes.
    
    Patches to properly detect this condition and reject NUMA
    configuration are posted[1] but deemed too pervasive for merge
    at this point (-rc6).  Disable AMD NUMA for 32bit for now and
    re-enable once the detection logic is merged.
    
    [1] http://thread.gmane.org/gmane.linux.kernel/1161279/focus=1162583
    
    Reported-by: Hans Rosenfeld <hans.rosenfeld@amd.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Conny Seidel <conny.seidel@amd.com>
    Link: http://lkml.kernel.org/r/20110711083432.GC943@htj.dyndns.org
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 2dc98fd3206f8106520eced769781a21a20707ca
Author: Michael Witten <mfwitten@gmail.com>
Date:   Fri Jul 8 21:11:16 2011 +0000

    doc: Konfig: Documentation/power/{pm => apm-acpi}.txt
    
    Signed-off-by: Michael Witten <mfwitten@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit a0f30f592d2d81e28f3ed7fea7f03246b0d55b75
Author: Daniel Drake <dsd@laptop.org>
Date:   Sat Jun 25 17:34:18 2011 +0100

    x86, olpc: Add XO-1.5 SCI driver
    
    Add a driver for the ACPI-based EC event interface found on the
    OLPC XO-1.5 laptop. This enables notification of battery/AC power events,
    and enables various devices to be used as wakeup sources through regular
    ACPI mechanisms.
    
    This driver can't be built as a module, because some drivers need to know
    at boot-time if SCI-based functionality is available via
    olpc_ec_wakeup_available().
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Link: http://lkml.kernel.org/r/1309019658-1712-12-git-send-email-dsd@laptop.org
    Acked-by: Andres Salomon <dilinger@queued.net>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit cfee95977bea090ae5ec4fd442ebd381792d46c4
Author: Daniel Drake <dsd@laptop.org>
Date:   Sat Jun 25 17:34:17 2011 +0100

    x86, olpc: Add XO-1 RTC driver
    
    Add a driver to configure the XO-1 RTC via CS5536 MSRs, to be used as a
    system wakeup source via olpc-xo1-pm.
    
    Device detection is based on finding the relevant device tree node.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Link: http://lkml.kernel.org/r/1309019658-1712-11-git-send-email-dsd@laptop.org
    Acked-by: Andres Salomon <dilinger@queued.net>
    Acked-by: Grant Likely <grant.likely@secretlab.ca>
    Reviewed-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: devicetree-discuss@lists.ozlabs.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit e1040ac693bac19eaeafbd6c5fd24d9429b5eeb8
Author: Daniel Drake <dsd@laptop.org>
Date:   Sat Jun 25 17:34:16 2011 +0100

    x86, olpc-xo1-sci: Propagate power supply/battery events
    
    EC events indicate change in AC power connectivity, battery state of
    charge, battery error, battery presence, etc. Send notifications to
    the power supply subsystem when changes are detected.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Link: http://lkml.kernel.org/r/1309019658-1712-10-git-send-email-dsd@laptop.org
    Acked-by: Andres Salomon <dilinger@queued.net>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 2cf2baea103f0a3d68b0f989d28df66f16dbc834
Author: Daniel Drake <dsd@laptop.org>
Date:   Sat Jun 25 17:34:15 2011 +0100

    x86, olpc-xo1-sci: Add lid switch functionality
    
    Configure the XO-1's lid switch GPIO to trigger an SCI interrupt,
    and correctly expose this input device which can be used as a wakeup
    source.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Link: http://lkml.kernel.org/r/1309019658-1712-9-git-send-email-dsd@laptop.org
    Acked-by: Andres Salomon <dilinger@queued.net>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 7bc74b3df73776fe06f3df9fafd2d2698e6ca28a
Author: Daniel Drake <dsd@laptop.org>
Date:   Sat Jun 25 17:34:14 2011 +0100

    x86, olpc-xo1-sci: Add GPE handler and ebook switch functionality
    
    The EC in the OLPC XO-1 delivers GPE events to provide various
    notifications. Add the basic code for GPE/EC event processing and
    enable the ebook switch, which can be used as a wakeup source.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Link: http://lkml.kernel.org/r/1309019658-1712-8-git-send-email-dsd@laptop.org
    Acked-by: Andres Salomon <dilinger@queued.net>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 7feda8e9f35ebb0e9f90e03acb02280bc137f784
Author: Daniel Drake <dsd@laptop.org>
Date:   Sat Jun 25 17:34:12 2011 +0100

    x86, olpc: Add XO-1 SCI driver and power button control
    
    The System Control Interrupt is used in the OLPC XO-1 to control various
    features of the laptop. Add the driver base and the power button
    functionality.
    
    This driver can't be built as a module, because functionality added in
    future patches means that some drivers need to know at boot-time whether
    SCI-based functionality is available.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Link: http://lkml.kernel.org/r/1309019658-1712-6-git-send-email-dsd@laptop.org
    Acked-by: Andres Salomon <dilinger@queued.net>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 97c4cb71c18fe045a763ff6681a8ebbbbbec0b2b
Author: Daniel Drake <dsd@laptop.org>
Date:   Sat Jun 25 17:34:11 2011 +0100

    x86, olpc: Add XO-1 suspend/resume support
    
    Add code needed for basic suspend/resume of the XO-1 laptop.
    Based on earlier work by Jordan Crouse, Andres Salomon, and others.
    
    This patch incorporates all earlier feedback from Thomas Gleixner. To
    clarify a certain point (now more obvious in the code itself):
    On resume, OpenFirmware returns execution to Linux in protected mode
    with a kernel-compatible GDT already set up. The changes and
    simplifications suggested have all been included.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Link: http://lkml.kernel.org/r/1309019658-1712-5-git-send-email-dsd@laptop.org
    Acked-by: Andres Salomon <dilinger@queued.net>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit a3128588b3c6be634a9013a375903e0b55668f0a
Author: Daniel Drake <dsd@laptop.org>
Date:   Sat Jun 25 17:34:10 2011 +0100

    x86, olpc: Rename olpc-xo1 to olpc-xo1-pm
    
    Based on earlier review comments, we'll no longer try to stick all of
    our XO-1 goodies in a single driver. We'll split it into a power management
    driver, and an EC/SCI driver.
    
    As a first step, rename olpc-xo1 to olpc-xo1-pm, and make it builtin
    instead of modular.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Link: http://lkml.kernel.org/r/1309019658-1712-4-git-send-email-dsd@laptop.org
    Acked-by: Andres Salomon <dilinger@queued.net>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 0a779c571314b7951ff12edac80aa0cbe7c12b6e
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jun 9 13:08:26 2011 +0000

    x86: Use common i8253 clockevent
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: John Stultz <john.stultz@linaro.org>
    Link: http://lkml.kernel.org/r/20110609130622.026152527@linutronix.de

commit 06c3df49521c1b112b777cc4946e5de057c814ba
Author: Jamie Iles <jamie@jamieiles.com>
Date:   Mon Jun 6 12:43:07 2011 +0100

    clocksource: apb: Share APB timer code with other platforms
    
    The APB timers are an IP block from Synopsys (DesignWare APB timers)
    and are also found in other systems including ARM SoC's.  This patch
    adds functions for creating clock_event_devices and clocksources from
    APB timers but does not do the resource allocation.  This is handled
    in a higher layer to allow the timers to be created from multiple
    methods such as platform_devices.
    
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Signed-off-by: Jamie Iles <jamie@jamieiles.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>

commit 166e9278a3f98bab29ebb3d685a81cfb11b98be0
Author: Ohad Ben-Cohen <ohad@wizery.com>
Date:   Fri Jun 10 21:42:27 2011 +0300

    x86/ia64: intel-iommu: move to drivers/iommu/
    
    This should ease finding similarities with different platforms,
    with the intention of solving problems once in a generic framework
    which everyone can use.
    
    Note: to move intel-iommu.c, the declaration of pci_find_upstream_pcie_bridge()
    has to move from drivers/pci/pci.h to include/linux/pci.h. This is handled
    in this patch, too.
    
    As suggested, also drop DMAR's EXPERIMENTAL tag while we're at it.
    
    Compile-tested on x86_64.
    
    Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

commit 29b68415e335ba9e0eb6057f9405aa4d9c23efe4
Author: Ohad Ben-Cohen <ohad@wizery.com>
Date:   Sun Jun 5 18:22:18 2011 +0300

    x86: amd_iommu: move to drivers/iommu/
    
    This should ease finding similarities with different platforms,
    with the intention of solving problems once in a generic framework
    which everyone can use.
    
    Compile-tested on x86_64.
    
    Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

commit ab493a0f0f55d28636ac860ea682d57b84257f10
Author: Ohad Ben-Cohen <ohad@wizery.com>
Date:   Thu Jun 2 02:48:05 2011 +0300

    drivers: iommu: move to a dedicated folder
    
    Create a dedicated folder for iommu drivers, and move the base
    iommu implementation over there.
    
    Grouping the various iommu drivers in a single location will help
    finding similar problems shared by different platforms, so they
    could be solved once, in the iommu framework, instead of solved
    differently (or duplicated) in each driver.
    
    Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

commit 8761f1ab717cac0616f8cf7ec589ae021c739113
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Wed Jun 1 19:05:09 2011 +0100

    pcspkr: Cleanup Kconfig dependencies
    
    Lenghty lists of the kind "depends on ARCH1 || ARCH2 ... || ARCH123" are
    usually either wrong or too coarse grained.  Or plain an ugly sin.
    
    [ tglx: Fixed up amigaone ]
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Cc: Richard Henderson <rth@twiddle.net>
    Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Cc: Matt Turner <mattst88@gmail.com>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: linux-alpha@vger.kernel.org
    Cc: linux-mips@linux-mips.org
    Cc: linuxppc-dev@lists.ozlabs.org
    Cc: Gerhard Pircher <gerhard_pircher@gmx.net>
    Link: http://lkml.kernel.org/r/20110601180610.984881988@duck.linux-mips.net
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 15f304b664c0d0a3e76ed3a9ce3615a86908babe
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Wed Jun 1 19:04:59 2011 +0100

    i8253: Consolidate all kernel definitions of i8253_lock
    
    Move them to drivers/clocksource/i8253.c and remove the
    implementations in arch/
    
    [ tglx: Avoid the extra file in lib - folded arch patches in. The
      export will become conditional in a later step ]
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Link: http://lkml.kernel.org/r/20110601180610.221426078@duck.linux-mips.net
    Cc: Russell King <linux@arm.linux.org.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 63e424c84429903c92a0f1e9654c31ccaf6694d0
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Thu May 26 16:26:10 2011 -0700

    arch: remove CONFIG_GENERIC_FIND_{NEXT_BIT,BIT_LE,LAST_BIT}
    
    By the previous style change, CONFIG_GENERIC_FIND_NEXT_BIT,
    CONFIG_GENERIC_FIND_BIT_LE, and CONFIG_GENERIC_FIND_LAST_BIT are not used
    to test for existence of find bitops anymore.
    
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Acked-by: Greg Ungerer <gerg@uclinux.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 0c63e38a129e7b1f625c6112439a4efc87b1635c
Merge: 0798b1d b0b349a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 25 16:52:50 2011 -0700

    Merge branch 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jdelvare/staging
    
    * 'hwmon-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jdelvare/staging:
      hwmon: New driver for the SMSC EMC6W201
      hwmon: (abituguru) Depend on DMI
      hwmon: (it87) Use request_muxed_region
      hwmon: (sch5627) Trigger Vbat measurements
      hwmon: (sch5627) Add sch5627_send_cmd function
      i8k: Integrate with the hwmon subsystem
      hwmon: (max6650) Properly support the MAX6650
      hwmon: (max6650) Drop device detection
      Move ACPI power meter driver to hwmon
      hwmon: (f71882fg) Add support for F71808A
      hwmon: (f71882fg) Split has_beep in fan_has_beep and temp_has_beep
      hwmon: (asc7621) Drop duplicate dependency
      hwmon: (jc42) Change detection class
      hwmon: Add driver for AMD family 15h processor power information
      hwmon: (k10temp) Add support for Fam15h (Bulldozer)
      hwmon: Use helper functions to set and get driver data
      i8k: Avoid lahf in 64-bit code

commit 949a9d70020defd7c241607ab3ed037ea88f551c
Author: Jean Delvare <khali@linux-fr.org>
Date:   Wed May 25 20:43:33 2011 +0200

    i8k: Integrate with the hwmon subsystem
    
    Let i8k create an hwmon class device so that libsensors will expose
    the CPU temperature and fan speeds to monitoring applications.
    
    Signed-off-by: Jean Delvare <khali@linux-fr.org>
    Acked-by: Guenter Roeck <guenter.roeck@ericsson.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Massimo Dal Zotto <dz@debian.org>

commit dbee8a0affd5e6eaa5d7c816c4bc233f6f110f50
Author: Roland Dreier <roland@purestorage.com>
Date:   Tue May 24 17:13:09 2011 -0700

    x86: remove 32-bit versions of readq()/writeq()
    
    The presense of a writeq() implementation on 32-bit x86 that splits the
    64-bit write into two 32-bit writes turns out to break the mpt2sas driver
    (and in general is risky for drivers as was discussed in
    <http://lkml.kernel.org/r/adaab6c1h7c.fsf@cisco.com>).  To fix this,
    revert 2c5643b1c5c7 ("x86: provide readq()/writeq() on 32-bit too") and
    follow-on cleanups.
    
    This unfortunately leads to pushing non-atomic definitions of readq() and
    write() to various x86-only drivers that in the meantime started using the
    definitions in the x86 version of <asm/io.h>.  However as discussed
    exhaustively, this is actually the right thing to do, because the right
    way to split a 64-bit transaction is hardware dependent and therefore
    belongs in the hardware driver (eg mpt2sas needs a spinlock to make sure
    no other accesses occur in between the two halves of the access).
    
    Build tested on 32- and 64-bit x86 allmodconfig.
    
    Link: http://lkml.kernel.org/r/x86-32-writeq-is-broken@mdm.bga.com
    Acked-by: Hitoshi Mitake <h.mitake@gmail.com>
    Cc: Kashyap Desai <Kashyap.Desai@lsi.com>
    Cc: Len Brown <lenb@kernel.org>
    Cc: Ravi Anand <ravi.anand@qlogic.com>
    Cc: Vikas Chaudhary <vikas.chaudhary@qlogic.com>
    Cc: Matthew Garrett <mjg@redhat.com>
    Cc: Jason Uhlenkott <juhlenko@akamai.com>
    Acked-by: James Bottomley <James.Bottomley@parallels.com>
    Acked-by: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 06f4e926d256d902dd9a53dcb400fd74974ce087
Merge: 8e7bfcb d935156
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri May 20 13:43:21 2011 -0700

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next-2.6
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next-2.6: (1446 commits)
      macvlan: fix panic if lowerdev in a bond
      tg3: Add braces around 5906 workaround.
      tg3: Fix NETIF_F_LOOPBACK error
      macvlan: remove one synchronize_rcu() call
      networking: NET_CLS_ROUTE4 depends on INET
      irda: Fix error propagation in ircomm_lmp_connect_response()
      irda: Kill set but unused variable 'bytes' in irlan_check_command_param()
      irda: Kill set but unused variable 'clen' in ircomm_connect_indication()
      rxrpc: Fix set but unused variable 'usage' in rxrpc_get_transport()
      be2net: Kill set but unused variable 'req' in lancer_fw_download()
      irda: Kill set but unused vars 'saddr' and 'daddr' in irlan_provider_connect_indication()
      atl1c: atl1c_resume() is only used when CONFIG_PM_SLEEP is defined.
      rxrpc: Fix set but unused variable 'usage' in rxrpc_get_peer().
      rxrpc: Kill set but unused variable 'local' in rxrpc_UDP_error_handler()
      rxrpc: Kill set but unused variable 'sp' in rxrpc_process_connection()
      rxrpc: Kill set but unused variable 'sp' in rxrpc_rotate_tx_window()
      pkt_sched: Kill set but unused variable 'protocol' in tc_classify()
      isdn: capi: Use pr_debug() instead of ifdefs.
      tg3: Update version to 3.119
      tg3: Apply rx_discards fix to 5719/5720
      ...
    
    Fix up trivial conflicts in arch/x86/Kconfig and net/mac80211/agg-tx.c
    as per Davem.

commit 08b5d06ec6cff1d952f13cfcffcbf41ff0ce2c86
Merge: 1358820 5d94e81
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 19 18:08:06 2011 -0700

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86: Introduce pci_map_biosrom()
      x86, olpc: Use device tree for platform identification

commit 13588209aa90d9c8e502750fc86160314555612f
Merge: ac2941f dc382fd
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 19 18:07:31 2011 -0700

    Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (50 commits)
      x86, mm: Allow ZONE_DMA to be configurable
      x86, NUMA: Trim numa meminfo with max_pfn in a separate loop
      x86, NUMA: Rename setup_node_bootmem() to setup_node_data()
      x86, NUMA: Enable emulation on 32bit too
      x86, NUMA: Enable CONFIG_AMD_NUMA on 32bit too
      x86, NUMA: Rename amdtopology_64.c to amdtopology.c
      x86, NUMA: Make numa_init_array() static
      x86, NUMA: Make 32bit use common NUMA init path
      x86, NUMA: Initialize and use remap allocator from setup_node_bootmem()
      x86-32, NUMA: Add @start and @end to init_alloc_remap()
      x86, NUMA: Remove long 64bit assumption from numa.c
      x86, NUMA: Enable build of generic NUMA init code on 32bit
      x86, NUMA: Move NUMA init logic from numa_64.c to numa.c
      x86-32, NUMA: Update numaq to use new NUMA init protocol
      x86-32, NUMA: Replace srat_32.c with srat.c
      x86-32, NUMA: implement temporary NUMA init shims
      x86, NUMA: Move numa_nodes_parsed to numa.[hc]
      x86-32, NUMA: Move get_memcfg_numa() into numa_32.c
      x86, NUMA: make srat.c 32bit safe
      x86, NUMA: rename srat_64.c to srat.c
      ...

commit 016281880439a8665ecf37514865742da58131d4
Merge: 17b1418 865be7a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 19 17:55:12 2011 -0700

    Merge branch 'x86-cpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-cpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, cpu: Fix detection of Celeron Covington stepping A1 and B0
      Documentation, ABI: Update L3 cache index disable text
      x86, AMD, cacheinfo: Fix L3 cache index disable checks
      x86, AMD, cacheinfo: Fix fallout caused by max3 conversion
      x86, cpu: Change NOP selection for certain Intel CPUs
      x86, cpu: Clean up and unify the NOP selection infrastructure
      x86, percpu: Use ASM_NOP4 instead of hardcoding P6_NOP4
      x86, cpu: Move AMD Elan Kconfig under "Processor family"
    
    Fix up trivial conflicts in alternative handling (commit dc326fca2b64
    "x86, cpu: Clean up and unify the NOP selection infrastructure" removed
    some hacky 5-byte instruction stuff, while commit d430d3d7e646 "jump
    label: Introduce static_branch() interface" renamed HAVE_JUMP_LABEL to
    CONFIG_JUMP_LABEL in the code that went away)

commit 0f1bdc1815c4cb29b3cd71a7091b478e426faa0b
Merge: 80fe02b a18f22a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 19 17:44:13 2011 -0700

    Merge branch 'timers-clocksource-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'timers-clocksource-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      clocksource: convert mips to generic i8253 clocksource
      clocksource: convert x86 to generic i8253 clocksource
      clocksource: convert footbridge to generic i8253 clocksource
      clocksource: add common i8253 PIT clocksource
      blackfin: convert to clocksource_register_hz
      mips: convert to clocksource_register_hz/khz
      sparc: convert to clocksource_register_hz/khz
      alpha: convert to clocksource_register_hz
      microblaze: convert to clocksource_register_hz/khz
      ia64: convert to clocksource_register_hz/khz
      x86: Convert remaining x86 clocksources to clocksource_register_hz/khz
      Make clocksource name const

commit cbdad8dc18b8ddd6c8b48c4ef26d46f00b5af923
Merge: 51509a2 86b9523
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 19 17:28:58 2011 -0700

    Merge branch 'core-iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'core-iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, gart: Rename pci-gart_64.c to amd_gart_64.c
      x86/amd-iommu: Use threaded interupt handler
      arch/x86/kernel/pci-iommu_table.c: Convert sprintf_symbol to %pS
      x86/amd-iommu: Add support for invalidate_all command
      x86/amd-iommu: Add extended feature detection
      x86/amd-iommu: Add ATS enable/disable code
      x86/amd-iommu: Add flag to indicate IOTLB support
      x86/amd-iommu: Flush device IOTLB if ATS is enabled
      x86/amd-iommu: Select PCI_IOV with AMD IOMMU driver
      PCI: Move ATS declarations in seperate header file
      dma-debug: print information about leaked entry
      x86/amd-iommu: Flush all internal TLBs when IOMMUs are enabled
      x86/amd-iommu: Rename iommu_flush_device
      x86/amd-iommu: Improve handling of full command buffer
      x86/amd-iommu: Rename iommu_flush* to domain_flush*
      x86/amd-iommu: Remove command buffer resetting logic
      x86/amd-iommu: Cleanup completion-wait handling
      x86/amd-iommu: Cleanup inv_pages command handling
      x86/amd-iommu: Move inv-dte command building to own function
      x86/amd-iommu: Move compl-wait command building to own function

commit 51509a283a908d73b20371addc67ee3ae7189934
Merge: 75f5076 6538df8
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 19 16:46:07 2011 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/suspend-2.6
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/suspend-2.6: (34 commits)
      PM: Introduce generic prepare and complete callbacks for subsystems
      PM: Allow drivers to allocate memory from .prepare() callbacks safely
      PM: Remove CONFIG_PM_VERBOSE
      Revert "PM / Hibernate: Reduce autotuned default image size"
      PM / Hibernate: Add sysfs knob to control size of memory for drivers
      PM / Wakeup: Remove useless synchronize_rcu() call
      kmod: always provide usermodehelper_disable()
      PM / ACPI: Remove acpi_sleep=s4_nonvs
      PM / Wakeup: Fix build warning related to the "wakeup" sysfs file
      PM: Print a warning if firmware is requested when tasks are frozen
      PM / Runtime: Rework runtime PM handling during driver removal
      Freezer: Use SMP barriers
      PM / Suspend: Do not ignore error codes returned by suspend_enter()
      PM: Fix build issue in clock_ops.c for CONFIG_PM_RUNTIME unset
      PM: Revert "driver core: platform_bus: allow runtime override of dev_pm_ops"
      OMAP1 / PM: Use generic clock manipulation routines for runtime PM
      PM: Remove sysdev suspend, resume and shutdown operations
      PM / PowerPC: Use struct syscore_ops instead of sysdevs for PM
      PM / UNICORE32: Use struct syscore_ops instead of sysdevs for PM
      PM / AVR32: Use struct syscore_ops instead of sysdevs for PM
      ...

commit bb0a56ecc4ba2a3db1b6ea6949c309886e3447d3
Author: Dave Jones <davej@redhat.com>
Date:   Thu May 19 18:51:07 2011 -0400

    [CPUFREQ] Move x86 drivers to drivers/cpufreq/
    
    Signed-off-by: Dave Jones <davej@redhat.com>

commit dc382fd5bcca7098a984705ed6ac880f539d068e
Author: David Rientjes <rientjes@google.com>
Date:   Mon May 16 13:54:10 2011 -0700

    x86, mm: Allow ZONE_DMA to be configurable
    
    ZONE_DMA is unnecessary for a large number of machines that do not
    require less than 32-bit DMA addressing, e.g. ISA legacy DMA or PCI
    cards with a restricted DMA address mask.
    
    This patch allows users to disable ZONE_DMA for x86 if they know they
    will not be using such devices with their kernel.
    
    This prevents the VM from unnecessarily reserving a ratio of memory
    (defaulting to 1/256th of system capacity) with lowmem_reserve_ratio
    for such allocations when it will never be used.
    
    Signed-off-by: David Rientjes <rientjes@google.com>
    Link: http://lkml.kernel.org/r/alpine.DEB.2.00.1105161353560.4353@chino.kir.corp.google.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 82491451dd25a3abe8496ddbd04ddb3f77d285c2
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Sun May 8 18:55:19 2011 +0100

    clocksource: convert x86 to generic i8253 clocksource
    
    Convert x86 i8253 clocksource code to use generic i8253 clocksource.
    
    Acked-by: John Stultz <john.stultz@linaro.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

commit 2e711c04dbbf7a7732a3f7073b1fc285d12b369d
Author: Rafael J. Wysocki <rjw@sisk.pl>
Date:   Tue Apr 26 19:15:07 2011 +0200

    PM: Remove sysdev suspend, resume and shutdown operations
    
    Since suspend, resume and shutdown operations in struct sysdev_class
    and struct sysdev_driver are not used any more, remove them.  Also
    drop sysdev_suspend(), sysdev_resume() and sysdev_shutdown() used
    for executing those operations and modify all of their users
    accordingly.  This reduces kernel code size quite a bit and reduces
    its complexity.
    
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Acked-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 9cddf15f18865c4f7124d829be41799f59aaa5cf
Author: Randy Dunlap <randy.dunlap@oracle.com>
Date:   Wed May 4 11:06:05 2011 -0700

    x86/net: only select BPF_JIT when NET is enabled
    
    Fix kconfig unmet dependency warning: HAVE_BPF_JIT depends on NET, so
    make the "select" of it depend on NET also.
    
    warning: (X86) selects HAVE_BPF_JIT which has unmet direct dependencies (NET)
    
    Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit 1b7e03ef7570568d2fb9e6640d7006a0edd728f6
Author: Tejun Heo <tj@kernel.org>
Date:   Mon May 2 17:24:48 2011 +0200

    x86, NUMA: Enable emulation on 32bit too
    
    Now that NUMA init path is unified, NUMA emulation can be enabled on
    32bit.  Make numa_emluation.c safe on 32bit by doing the followings.
    
    * Define MAX_DMA32_PFN on 32bit too.
    
    * Include bootmem.h for max_pfn declaration.
    
    * Use u64 explicitly and always use PFN_PHYS() when converting page
      number to address.
    
    * Avoid __udivdi3() generation on 32bit by doing number of pages
      calculation instead in split_nodes_interleave().
    
    And drop X86_64 dependency from Kconfig.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>

commit 2706a0bf7b02693ed88752df877f10c2206292ff
Author: Tejun Heo <tj@kernel.org>
Date:   Mon May 2 17:24:48 2011 +0200

    x86, NUMA: Enable CONFIG_AMD_NUMA on 32bit too
    
    Now that NUMA init path is unified, amdtopology can be enabled on
    32bit.  Make amdtopology.c safe on 32bit by explicitly using u64 and
    drop X86_64 dependency from Kconfig.
    
    Inclusion of bootmem.h is added for max_pfn declaration.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>

commit 0a14842f5a3c0e88a1e59fac5c3025db39721f74
Author: Eric Dumazet <eric.dumazet@gmail.com>
Date:   Wed Apr 20 09:27:32 2011 +0000

    net: filter: Just In Time compiler for x86-64
    
    In order to speedup packet filtering, here is an implementation of a
    JIT compiler for x86_64
    
    It is disabled by default, and must be enabled by the admin.
    
    echo 1 >/proc/sys/net/core/bpf_jit_enable
    
    It uses module_alloc() and module_free() to get memory in the 2GB text
    kernel range since we call helpers functions from the generated code.
    
    EAX : BPF A accumulator
    EBX : BPF X accumulator
    RDI : pointer to skb   (first argument given to JIT function)
    RBP : frame pointer (even if CONFIG_FRAME_POINTER=n)
    r9d : skb->len - skb->data_len (headlen)
    r8  : skb->data
    
    To get a trace of generated code, use :
    
    echo 2 >/proc/sys/net/core/bpf_jit_enable
    
    Example of generated code :
    
    # tcpdump -p -n -s 0 -i eth1 host 192.168.20.0/24
    
    flen=18 proglen=147 pass=3 image=ffffffffa00b5000
    JIT code: ffffffffa00b5000: 55 48 89 e5 48 83 ec 60 48 89 5d f8 44 8b 4f 60
    JIT code: ffffffffa00b5010: 44 2b 4f 64 4c 8b 87 b8 00 00 00 be 0c 00 00 00
    JIT code: ffffffffa00b5020: e8 24 7b f7 e0 3d 00 08 00 00 75 28 be 1a 00 00
    JIT code: ffffffffa00b5030: 00 e8 fe 7a f7 e0 24 00 3d 00 14 a8 c0 74 49 be
    JIT code: ffffffffa00b5040: 1e 00 00 00 e8 eb 7a f7 e0 24 00 3d 00 14 a8 c0
    JIT code: ffffffffa00b5050: 74 36 eb 3b 3d 06 08 00 00 74 07 3d 35 80 00 00
    JIT code: ffffffffa00b5060: 75 2d be 1c 00 00 00 e8 c8 7a f7 e0 24 00 3d 00
    JIT code: ffffffffa00b5070: 14 a8 c0 74 13 be 26 00 00 00 e8 b5 7a f7 e0 24
    JIT code: ffffffffa00b5080: 00 3d 00 14 a8 c0 75 07 b8 ff ff 00 00 eb 02 31
    JIT code: ffffffffa00b5090: c0 c9 c3
    
    BPF program is 144 bytes long, so native program is almost same size ;)
    
    (000) ldh      [12]
    (001) jeq      #0x800           jt 2    jf 8
    (002) ld       [26]
    (003) and      #0xffffff00
    (004) jeq      #0xc0a81400      jt 16   jf 5
    (005) ld       [30]
    (006) and      #0xffffff00
    (007) jeq      #0xc0a81400      jt 16   jf 17
    (008) jeq      #0x806           jt 10   jf 9
    (009) jeq      #0x8035          jt 10   jf 17
    (010) ld       [28]
    (011) and      #0xffffff00
    (012) jeq      #0xc0a81400      jt 16   jf 13
    (013) ld       [38]
    (014) and      #0xffffff00
    (015) jeq      #0xc0a81400      jt 16   jf 17
    (016) ret      #65535
    (017) ret      #0
    
    Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: Arnaldo Carvalho de Melo <acme@infradead.org>
    Cc: Ben Hutchings <bhutchings@solarflare.com>
    Cc: Hagen Paul Pfeifer <hagen@jauu.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit 9844b4e5dd1932e175a23d84ce09702bdf4b5689
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Tue Apr 5 09:22:56 2011 +0200

    x86/amd-iommu: Select PCI_IOV with AMD IOMMU driver
    
    In order to support ATS in the AMD IOMMU driver this patch
    makes sure that the generic support for ATS is compiled in.
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

commit ce9c99af8d4b3b0b9463654fd252d8640d804dc3
Author: Ian Campbell <ijc@hellion.org.uk>
Date:   Fri Apr 8 07:42:29 2011 +0100

    x86, cpu: Move AMD Elan Kconfig under "Processor family"
    
    Currently the option resides under X86_EXTENDED_PLATFORM due to historical
    nonstandard A20M# handling. However that is no longer the case and so Elan can
    be treated as part of the standard processor choice Kconfig option.
    
    Signed-off-by: Ian Campbell <ian.campbell@citrix.com>
    Link: http://lkml.kernel.org/r/1302245177.31620.47.camel@localhost.localdomain
    Cc: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 3b16651f806d35b5c404f2525fbce76afa3c9297
Author: Tejun Heo <tj@kernel.org>
Date:   Fri Apr 1 11:15:12 2011 +0200

    x86: Clean up memory model related configs in arch/x86/Kconfig
    
    * Remove bogus dependency on ARCH_SELECT_MEMORY_MODEL from
      ARCH_FLATMEM_ENABLE.  ENABLE configs don't interfere with
      SELECT_MEMORY_MODEL.  They just need to indicate whether the
      specific memory model is supported.
    
    * Relocate HAVE_ARCH_ALLOC_REMAP, ARCH_PROC_KCORE_TEXT and
      ARCH_SPARSEMEM_DEFAULT so that memory model related configs are
      together in consistent order.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Christoph Lameter <cl@linux.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>

commit 052936080c8fb2f791103995b21bd4018c8df886
Author: Tejun Heo <tj@kernel.org>
Date:   Fri Apr 1 11:15:12 2011 +0200

    x86-64, NUMA: Remove custom phys_to_nid() implementation
    
    phys_to_nid() maps physical address to NUMA node id.  This is
    implemented by building perfect hash in compute_hash_shift() during
    initialization.
    
    However, with SPARSE memory model, the nid is encoded in page flags.
    The perfect hash implementation was for DISCONTIG memory model which
    got removed years ago by b263295dbf (x86: 64-bit, make sparsemem
    vmemmap the only memory model).
    
    So, the perfect hash ends up being used only during initialization
    when the core SPARSE code already provides perfectly acceptable
    generic early_pfn_to_nid() implementation.
    
    Drop phys_to_nid() and use the generic ealry_pfn_to_nid() instead.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Christoph Lameter <cl@linux-foundation.org>
    Acked-by: Yinghai Lu <yinghai@kernel.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>

commit 16c29dafcc86024048f1dbb8349d31cb22c7c55a
Merge: dc50edd d47d81c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Mar 25 21:07:59 2011 -0700

    Merge branch 'syscore' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/suspend-2.6
    
    * 'syscore' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/suspend-2.6:
      Introduce ARCH_NO_SYSDEV_OPS config option (v2)
      cpufreq: Use syscore_ops for boot CPU suspend/resume (v2)
      KVM: Use syscore_ops instead of sysdev class and sysdev
      PCI / Intel IOMMU: Use syscore_ops instead of sysdev class and sysdev
      timekeeping: Use syscore_ops instead of sysdev class and sysdev
      x86: Use syscore_ops instead of sysdev classes and sysdevs

commit 388b78adc9899f0299128610f566051d0b1a57f6
Author: Alexandre Bounine <alexandre.bounine@idt.com>
Date:   Wed Mar 23 16:43:03 2011 -0700

    rapidio: modify configuration to support PCI-SRIO controller
    
    1. Add an option to include RapidIO support if the PCI is available.
    2. Add FSL_RIO configuration option to enable controller selection.
    3. Add RapidIO support option into x86 and MIPS architectures.
    
    Signed-off-by: Alexandre Bounine <alexandre.bounine@idt.com>
    Acked-by: Kumar Gala <galak@kernel.crashing.org>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Cc: Li Yang <leoli@freescale.com>
    Cc: Thomas Moll <thomas.moll@sysgo.com>
    Cc: Micha Nelissen <micha@neli.hopto.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit d47d81c0e9abdc3c88653fabff5beae82c949b09
Author: Rafael J. Wysocki <rjw@sisk.pl>
Date:   Wed Mar 23 22:16:41 2011 +0100

    Introduce ARCH_NO_SYSDEV_OPS config option (v2)
    
    Introduce Kconfig option allowing architectures where sysdev
    operations used during system suspend, resume and shutdown have been
    completely replaced with struct sycore_ops operations to avoid
    building sysdev code that will never be used.
    
    Make callbacks in struct sys_device and struct sysdev_driver depend
    on ARCH_NO_SYSDEV_OPS to allows us to verify if all of the references
    have been actually removed from the code the given architecture
    depends on.
    
    Make x86 select ARCH_NO_SYSDEV_OPS.
    
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>

commit 1c00f0161f5e5bf1a441ea834c923f4102456489
Author: David Rientjes <rientjes@google.com>
Date:   Tue Mar 22 16:34:59 2011 -0700

    x86: allow CONFIG_ISA_DMA_API to be disabled
    
    Not all 64-bit systems require ISA-style DMA, so allow it to be
    configurable.  x86 utilizes the generic ISA DMA allocator from
    kernel/dma.c, so require it only when CONFIG_ISA_DMA_API is enabled.
    
    Disabling CONFIG_ISA_DMA_API is dependent on x86_64 since those machines
    do not have ISA slots and benefit the most from disabling the option (and
    on CONFIG_EXPERT as required by H.  Peter Anvin).
    
    When disabled, this also avoids declaring claim_dma_lock(),
    release_dma_lock(), request_dma(), and free_dma() since those interfaces
    will no longer be provided.
    
    Signed-off-by: David Rientjes <rientjes@google.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Bjorn Helgaas <bjorn.helgaas@hp.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: "Luck, Tony" <tony.luck@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 8df3bd9e18cdc3539edea550be34605a240e15d4
Author: David Rientjes <rientjes@google.com>
Date:   Tue Mar 22 16:34:58 2011 -0700

    x86: only compile floppy driver if CONFIG_ISA_DMA_API is enabled
    
    The generic floppy disk driver utilizies the interface provided by
    CONFIG_ISA_DMA_API, specifically claim_dma_lock(), release_dma_lock(),
    request_dma(), and free_dma().  Thus, there's a strict dependency on the
    config option and the driver should only be loaded if the kernel supports
    ISA-style DMA.
    
    Signed-off-by: David Rientjes <rientjes@google.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Bjorn Helgaas <bjorn.helgaas@hp.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: "Luck, Tony" <tony.luck@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit e7fd3b4669f5b835c8afce28425d9f698a558115
Merge: fc82e1d 2ae9d29
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Mar 16 10:10:02 2011 -0700

    Merge branch 'x86-trampoline-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-trampoline-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86: Fix binutils-2.21 symbol related build failures
      x86-64, trampoline: Remove unused variable
      x86, reboot: Fix the use of passed arguments in 32-bit BIOS reboot
      x86, reboot: Move the real-mode reboot code to an assembly file
      x86: Make the GDT_ENTRY() macro in <asm/segment.h> safe for assembly
      x86, trampoline: Use the unified trampoline setup for ACPI wakeup
      x86, trampoline: Common infrastructure for low memory trampolines
    
    Fix up trivial conflicts in arch/x86/kernel/Makefile

commit 0f6e0e8448a16d8d22119ce91d8dd24b44865b51
Merge: 0d2ecee a002951
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Mar 16 09:15:43 2011 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/security-testing-2.6
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/security-testing-2.6: (33 commits)
      AppArmor: kill unused macros in lsm.c
      AppArmor: cleanup generated files correctly
      KEYS: Add an iovec version of KEYCTL_INSTANTIATE
      KEYS: Add a new keyctl op to reject a key with a specified error code
      KEYS: Add a key type op to permit the key description to be vetted
      KEYS: Add an RCU payload dereference macro
      AppArmor: Cleanup make file to remove cruft and make it easier to read
      SELinux: implement the new sb_remount LSM hook
      LSM: Pass -o remount options to the LSM
      SELinux: Compute SID for the newly created socket
      SELinux: Socket retains creator role and MLS attribute
      SELinux: Auto-generate security_is_socket_class
      TOMOYO: Fix memory leak upon file open.
      Revert "selinux: simplify ioctl checking"
      selinux: drop unused packet flow permissions
      selinux: Fix packet forwarding checks on postrouting
      selinux: Fix wrong checks for selinux_policycap_netpeer
      selinux: Fix check for xfrm selinux context algorithm
      ima: remove unnecessary call to ima_must_measure
      IMA: remove IMA imbalance checking
      ...

commit d10902812c9cd5583130a4ebb9ad19c60b68149d
Merge: 181f977 25874a2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 15 20:01:36 2011 -0700

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (27 commits)
      x86: Clean up apic.c and apic.h
      x86: Remove superflous goal definition of tsc_sync
      x86: dt: Correct local apic documentation in device tree bindings
      x86: dt: Cleanup local apic setup
      x86: dt: Fix OLPC=y/INTEL_CE=n build
      rtc: cmos: Add OF bindings
      x86: ce4100: Use OF to setup devices
      x86: ioapic: Add OF bindings for IO_APIC
      x86: dtb: Add generic bus probe
      x86: dtb: Add support for PCI devices backed by dtb nodes
      x86: dtb: Add device tree support for HPET
      x86: dtb: Add early parsing of IO_APIC
      x86: dtb: Add irq domain abstraction
      x86: dtb: Add a device tree for CE4100
      x86: Add device tree support
      x86: e820: Remove conditional early mapping in parse_e820_ext
      x86: OLPC: Make OLPC=n build again
      x86: OLPC: Remove extra OLPC_OPENFIRMWARE_DT indirection
      x86: OLPC: Cleanup config maze completely
      x86: OLPC: Hide OLPC_OPENFIRMWARE config switch
      ...
    
    Fix up conflicts in arch/x86/platform/ce4100/ce4100.c

commit 181f977d134a9f8e3f8839f42af655b045fc059e
Merge: d5d4239 25542c6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 15 19:49:10 2011 -0700

    Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (93 commits)
      x86, tlb, UV: Do small micro-optimization for native_flush_tlb_others()
      x86-64, NUMA: Don't call numa_set_distanc() for all possible node combinations during emulation
      x86-64, NUMA: Don't assume phys node 0 is always online in numa_emulation()
      x86-64, NUMA: Clean up initmem_init()
      x86-64, NUMA: Fix numa_emulation code with node0 without RAM
      x86-64, NUMA: Revert NUMA affine page table allocation
      x86: Work around old gas bug
      x86-64, NUMA: Better explain numa_distance handling
      x86-64, NUMA: Fix distance table handling
      mm: Move early_node_map[] reverse scan helpers under HAVE_MEMBLOCK
      x86-64, NUMA: Fix size of numa_distance array
      x86: Rename e820_table_* to pgt_buf_*
      bootmem: Move __alloc_memory_core_early() to nobootmem.c
      bootmem: Move contig_page_data definition to bootmem.c/nobootmem.c
      bootmem: Separate out CONFIG_NO_BOOTMEM code into nobootmem.c
      x86-64, NUMA: Seperate out numa_alloc_distance() from numa_set_distance()
      x86-64, NUMA: Add proper function comments to global functions
      x86-64, NUMA: Move NUMA emulation into numa_emulation.c
      x86-64, NUMA: Prepare numa_emulation() for moving NUMA emulation into a separate file
      x86-64, NUMA: Do not scan two times for setup_node_bootmem()
      ...
    
    Fix up conflicts in arch/x86/kernel/smpboot.c

commit 5f6fb45466b2273ffb91c9cf209f164f666c33b1
Merge: 3904afb c0185808
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 15 19:23:40 2011 -0700

    Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (116 commits)
      x86: Enable forced interrupt threading support
      x86: Mark low level interrupts IRQF_NO_THREAD
      x86: Use generic show_interrupts
      x86: ioapic: Avoid redundant lookup of irq_cfg
      x86: ioapic: Use new move_irq functions
      x86: Use the proper accessors in fixup_irqs()
      x86: ioapic: Use irq_data->state
      x86: ioapic: Simplify irq chip and handler setup
      x86: Cleanup the genirq name space
      genirq: Add chip flag to force mask on suspend
      genirq: Add desc->irq_data accessor
      genirq: Add comments to Kconfig switches
      genirq: Fixup fasteoi handler for oneshot mode
      genirq: Provide forced interrupt threading
      sched: Switch wait_task_inactive to schedule_hrtimeout()
      genirq: Add IRQF_NO_THREAD
      genirq: Allow shared oneshot interrupts
      genirq: Prepare the handling of shared oneshot interrupts
      genirq: Make warning in handle_percpu_event useful
      x86: ioapic: Move trigger defines to io_apic.h
      ...
    
    Fix up trivial(?) conflicts in arch/x86/pci/xen.c due to genirq name
    space changes clashing with the Xen cleanups.  The set_irq_msi() had
    moved to xen_bind_pirq_msi_to_irq().

commit 45bb1674b976ef81429c1e42de05844b49d45dea
Author: Daniel Drake <dsd@laptop.org>
Date:   Sun Mar 13 15:10:17 2011 +0000

    x86, olpc: Use device tree for platform identification
    
    Make OLPC fully depend on device tree, and use it to identify the OLPC
    platform details. Some nodes are exposed as platform devices where we
    plan to use device tree for device probing.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Acked-by: Grant Likely <grant.likely@secretlab.ca>
    LKML-Reference: <20110313151017.C255F9D401E@zog.reactivated.net>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit c0185808eb85139f45dbfd0de66963c498d0c4db
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Feb 7 02:24:08 2011 +0100

    x86: Enable forced interrupt threading support
    
    All non threadeable interrupts are marked. Enable forced irq threading
    support.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 517e49815677b43b26d3167aadca83919ef36a45
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Dec 16 17:59:57 2010 +0100

    x86: Use generic show_interrupts
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit c49aa5bd1376939b40759a6da5ba6cf701702721
Author: Jan Beulich <JBeulich@novell.com>
Date:   Tue Mar 8 09:24:26 2011 +0000

    x86: Remove dead config option X86_CPU
    
    This isn't being referenced anywhere, and the selects done from
    it can be easily done together with all the other X86 ones.
    
     v2: Also adjust UML's Kconfig.x86.
    
    Signed-off-by: Jan Beulich <jbeulich@novell.com>
    LKML-Reference: <4D7603DA02000078000351C1@vpn.id2.novell.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit ee009e4a0d4555ed522a631bae9896399674f064
Author: David Howells <dhowells@redhat.com>
Date:   Mon Mar 7 15:06:20 2011 +0000

    KEYS: Add an iovec version of KEYCTL_INSTANTIATE
    
    Add a keyctl op (KEYCTL_INSTANTIATE_IOV) that is like KEYCTL_INSTANTIATE, but
    takes an iovec array and concatenates the data in-kernel into one buffer.
    Since the KEYCTL_INSTANTIATE copies the data anyway, this isn't too much of a
    problem.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: James Morris <jmorris@namei.org>

commit da6b737b9ab768dd06bb4b0395131d10e524cf83
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Tue Feb 22 21:07:37 2011 +0100

    x86: Add device tree support
    
    This patch adds minimal support for device tree on x86. The device
    tree blob is passed to the kernel via setup_data which requires at
    least boot protocol 2.09.
    
    Memory size, restricted memory regions, boot arguments are gathered
    the traditional way so things like cmd_line are just here to let the
    code compile.
    
    The current plan is use the device tree as an extension and to gather
    information which can not be enumerated and would have to be hardcoded
    otherwise. This includes things like
       - which devices are on this I2C/SPI bus?
       - how are the interrupts wired to IO APIC?
       - where could my hpet be?
    
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Dirk Brandewie <dirk.brandewie@gmail.com>
    Acked-by: Grant Likely <grant.likely@secretlab.ca>
    Cc: sodaville@linutronix.de
    Cc: devicetree-discuss@lists.ozlabs.org
    LKML-Reference: <1298405266-1624-3-git-send-email-bigeasy@linutronix.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit cb4cfd568c1181501419b89d916e8523107c0106
Merge: 939d578 abb0052
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Feb 23 20:00:55 2011 +0100

    Merge branch 'x86/apic' into x86/platform
    
    Reason: Devicetree based ioapic setup depends on the apic changes.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 1444e0c9daf0d3472677efc15588b192fc2db761
Author: Henrik Kretzschmar <henne@nachtwindheim.de>
Date:   Tue Feb 22 15:38:07 2011 +0100

    x86: Fix deps of X86_UP_IOAPIC
    
    Since commit 7cd92366a593246650cc7d6198e2c7d3af8c1d8a
    lAPIC enabled accidently the IOAPIC, which now gets fixed.
    
    Signed-off-by: Henrik Kretzschmar <henne@nachtwindheim.de>
    LKML-Reference: <1298385487-4708-5-git-send-email-henne@nachtwindheim.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c2a941fadb57d157d59eec424674bd0c3a28788c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Feb 23 10:32:42 2011 +0100

    x86: OLPC: Remove extra OLPC_OPENFIRMWARE_DT indirection
    
    OLPC_OPENFIRMWARE_DT is just there to be selected by OLPC and selects
    OF_PROMTREE. So let OLPC select OF_PROMTREE and remove that extra
    config indirection. Fixup code and Makefile and use CONFIG_OF_PROMTREE
    instead.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andres Salomon <dilinger@queued.net>

commit dc3119e700216a70e82fe07a79f1618852058354
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Feb 23 10:08:31 2011 +0100

    x86: OLPC: Cleanup config maze completely
    
    Neither CONFIG_OLPC_OPENFIRMWARE nor CONFIG_OLPC_OPENFIRMWARE_DT are
    really necessary.
    
    OLPC selects OLPC_OPENFIRMWARE unconditionally, so move the "select
    OF" part under OLPC config option and fixup the dependencies in
    Makefiles and code.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andres Salomon <dilinger@queued.net>

commit fe239545a1eed57a60c5d4063f0b56f6cd1811ff
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Feb 23 10:05:53 2011 +0100

    x86: OLPC: Hide OLPC_OPENFIRMWARE config switch
    
    OLPC selects OLPC_OPENFIRMWARE unconditionally. If OLPC=n then
    the OLPC_OPENFIRMWARE functionality is pointless.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andres Salomon <dilinger@queued.net>

commit 540089798d2ae115fc9bff7ed3823c8c32249607
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Feb 23 09:50:15 2011 +0100

    x86: OLPC: Remove redundant !X64_64 config dependency
    
    OLPC is under if X86_32 already.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andres Salomon <dilinger@queued.net>

commit 4822b7fc6d4870685a9feadfc348d48f5e47460a
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Mon Feb 14 15:34:57 2011 -0800

    x86, trampoline: Common infrastructure for low memory trampolines
    
    Common infrastructure for low memory trampolines.  This code installs
    the trampolines permanently in low memory very early.  It also permits
    multiple pieces of code to be used for this purpose.
    
    This code also introduces a standard infrastructure for computing
    symbol addresses in the trampoline code.
    
    The only change to the actual SMP trampolines themselves is that the
    64-bit trampoline has been made reusable -- the previous version would
    overwrite the code with a status variable; this moves the status
    variable to a separate location.
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    LKML-Reference: <4D5DFBE4.7090104@intel.com>
    Cc: Rafael J. Wysocki <rjw@sisk.pl>
    Cc: Matthieu Castet <castet.matthieu@free.fr>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>

commit 645a79195f66eb68ef3ab2b21d9829ac3aa085a9
Author: Tejun Heo <tj@kernel.org>
Date:   Sun Jan 23 14:37:40 2011 +0100

    x86: Unify CPU -> NUMA node mapping between 32 and 64bit
    
    Unlike 64bit, 32bit has been using its own cpu_to_node_map[] for
    CPU -> NUMA node mapping.  Replace it with early_percpu variable
    x86_cpu_to_node_map and share the mapping code with 64bit.
    
    * USE_PERCPU_NUMA_NODE_ID is now enabled for 32bit too.
    
    * x86_cpu_to_node_map and numa_set/clear_node() are moved from
      numa_64 to numa.  For now, on 32bit, x86_cpu_to_node_map is initialized
      with 0 instead of NUMA_NO_NODE.  This is to avoid introducing unexpected
      behavior change and will be updated once init path is unified.
    
    * srat_detect_node() is now enabled for x86_32 too.  It calls
      numa_set_node() and initializes the mapping making explicit
      cpu_to_node_map[] updates from map/unmap_cpu_to_node() unnecessary.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: eric.dumazet@gmail.com
    Cc: yinghai@kernel.org
    Cc: brgerst@gmail.com
    Cc: gorcunov@gmail.com
    Cc: penberg@kernel.org
    Cc: shaohui.zheng@intel.com
    Cc: rientjes@google.com
    LKML-Reference: <1295789862-25482-15-git-send-email-tj@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Cc: David Rientjes <rientjes@google.com>

commit 6a108a14fa356ef607be308b68337939e56ea94e
Author: David Rientjes <rientjes@google.com>
Date:   Thu Jan 20 14:44:16 2011 -0800

    kconfig: rename CONFIG_EMBEDDED to CONFIG_EXPERT
    
    The meaning of CONFIG_EMBEDDED has long since been obsoleted; the option
    is used to configure any non-standard kernel with a much larger scope than
    only small devices.
    
    This patch renames the option to CONFIG_EXPERT in init/Kconfig and fixes
    references to the option throughout the kernel.  A new CONFIG_EMBEDDED
    option is added that automatically selects CONFIG_EXPERT when enabled and
    can be used in the future to isolate options that should only be
    considered for embedded systems (RISC architectures, SLOB, etc).
    
    Calling the option "EXPERT" more accurately represents its intention: only
    expert users who understand the impact of the configuration changes they
    are making should enable it.
    
    Reviewed-by: Ingo Molnar <mingo@elte.hu>
    Acked-by: David Woodhouse <david.woodhouse@intel.com>
    Signed-off-by: David Rientjes <rientjes@google.com>
    Cc: Greg KH <gregkh@suse.de>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Robin Holt <holt@sgi.com>
    Cc: <linux-arch@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit f9ee7f60d6f37ae0184812b4c59b3869f875768b
Merge: 16c1020 1161ec9 76d1f7b afa14e7 7c46d8d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jan 15 12:45:00 2011 -0800

    Merge branches 'core-fixes-for-linus', 'x86-fixes-for-linus', 'timers-fixes-for-linus' and 'perf-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'core-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      rcu: avoid pointless blocked-task warnings
      rcu: demote SRCU_SYNCHRONIZE_DELAY from kernel-parameter status
      rtmutex: Fix comment about why new_owner can be NULL in wake_futex_pi()
    
    * 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, olpc: Add missing Kconfig dependencies
      x86, mrst: Set correct APB timer IRQ affinity for secondary cpu
      x86: tsc: Fix calibration refinement conditionals to avoid divide by zero
      x86, ia64, acpi: Clean up x86-ism in drivers/acpi/numa.c
    
    * 'timers-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      timekeeping: Make local variables static
      time: Rename misnamed minsec argument of clocks_calc_mult_shift()
    
    * 'perf-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      tracing: Remove syscall_exit_fields
      tracing: Only process module tracepoints once
      perf record: Add "nodelay" mode, disabled by default
      perf sched: Fix list of events, dropping unsupported ':r' modifier
      Revert "perf tools: Emit clearer message for sys_perf_event_open ENOENT return"
      perf top: Fix annotate segv
      perf evsel: Fix order of event list deletion

commit 76d1f7bfcd5872056902c5a88b5fcd5d4d00a7a9
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Fri Jan 14 11:57:06 2011 -0800

    x86, olpc: Add missing Kconfig dependencies
    
    OLPC uses select for OLPC_OPENFIRMWARE, which means OLPC has to
    enforce the dependencies for OLPC_OPENFIRMWARE.  Make sure it does so.
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Daniel Drake <dsd@laptop.org>
    Cc: Andres Salomon <dilinger@queued.net>
    Cc: Grant Likely <grant.likely@secretlab.ca>
    LKML-Reference: <20100923162846.D8D409D401B@zog.reactivated.net>
    Cc: <stable@kernel.org> 2.6.37

commit d73b388459b1ee2e80f8ff9c1916d75640d7d920
Merge: 5957e33 0f953bf
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 14 09:29:05 2011 -0800

    Merge branch 'linux-next' of git://git.kernel.org/pub/scm/linux/kernel/git/jbarnes/pci-2.6
    
    * 'linux-next' of git://git.kernel.org/pub/scm/linux/kernel/git/jbarnes/pci-2.6:
      PCI/PM: Report wakeup events before resuming devices
      PCI/PM: Use pm_wakeup_event() directly for reporting wakeup events
      PCI: sysfs: Update ROM to include default owner write access
      x86/PCI: make Broadcom CNB20LE driver EMBEDDED and EXPERIMENTAL
      x86/PCI: don't use native Broadcom CNB20LE driver when ACPI is available
      PCI/ACPI: Request _OSC control once for each root bridge (v3)
      PCI: enable pci=bfsort by default on future Dell systems
      PCI/PCIe: Clear Root PME Status bits early during system resume
      PCI: pci-stub: ignore zero-length id parameters
      x86/PCI: irq and pci_ids patch for Intel Patsburg
      PCI: Skip id checking if no id is passed
      PCI: fix __pci_device_probe kernel-doc warning
      PCI: make pci_restore_state return void
      PCI: Disable ASPM if BIOS asks us to
      PCI: Add mask bit definition for MSI-X table
      PCI: MSI: Move MSI-X entry definition to pci_regs.h
    
    Fix up trivial conflicts in drivers/net/{skge.c,sky2.c} that had in the
    meantime been converted to not use legacy PCI power management, and thus
    no longer use pci_restore_state() at all (and that caused trivial
    conflicts with the "make pci_restore_state return void" patch)

commit 64a5fed6663edcf7e3864ed5534e42e2b9f340c7
Author: Bjorn Helgaas <bjorn.helgaas@hp.com>
Date:   Thu Jan 6 10:12:30 2011 -0700

    x86/PCI: make Broadcom CNB20LE driver EMBEDDED and EXPERIMENTAL
    
    This functionality is known to be incomplete, so discourage its use in
    general-purpose kernels.
    
    The only reason to use this driver is to support PCI hotplug on CNB20LE-
    based machines that don't have ACPI, and there are very few such
    systems.
    
    Reference: https://bugzilla.redhat.com/show_bug.cgi?id=665109
    Signed-off-by: Bjorn Helgaas <bjorn.helgaas@hp.com>
    Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>

commit 419cdc54ea597d307fade607a65e4885634eb8c8
Author: Andres Salomon <dilinger@queued.net>
Date:   Mon Nov 29 15:45:06 2010 -0800

    x86: OLPC: convert olpc-xo1 driver from pci device to platform device
    
    The cs5535-mfd driver now takes care of the PCI BAR handling; this
    means the olpc-xo1 driver shouldn't be touching the PCI device at all.
    
    This patch uses both cs5535-acpi and cs5535-pms platform devices rather
    than a single platform device because the cs5535-mfd driver may be used
    by other CS5535 platform-specific drivers; OLPC doesn't get to dictate
    that ACPI and PMS will always be used together.
    
    Signed-off-by: Andres Salomon <dilinger@queued.net>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

commit e691d24e9c5007486bef59c589c2a2d784e0c30b
Merge: 55065bc b5318d30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jan 13 10:15:12 2011 -0800

    Merge branch 'x86-olpc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-olpc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, olpc: Speed up device tree creation during boot
      x86, olpc: Add OLPC device-tree support
      x86, of: Define irq functions to allow drivers/of/* to build on x86

commit 303148045aac34b70db722a54e5ad94a3a6625c6
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Wed Jan 12 17:01:24 2011 -0800

    x86: support XZ-compressed kernel
    
    This integrates the XZ decompression code to the x86 pre-boot code.
    
    mkpiggy.c is updated to reserve about 32 KiB more buffer safety margin for
    kernel decompression.  It is done unconditionally for all decompressors to
    keep the code simpler.
    
    The XZ decompressor needs around 30 KiB of heap, so the heap size is
    increased to 32 KiB on both x86-32 and x86-64.
    
    Documentation/x86/boot.txt is updated to list the XZ magic number.
    
    With the x86 BCJ filter in XZ, XZ-compressed x86 kernel tends to be a few
    percent smaller than the equivalent LZMA-compressed kernel.
    
    Signed-off-by: Lasse Collin <lasse.collin@tukaani.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Alain Knaff <alain@knaff.lu>
    Cc: Albin Tonnerre <albin.tonnerre@free-electrons.com>
    Cc: Phillip Lougher <phillip@lougher.demon.co.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 351f8f8e6499ae4fff40f5e3a8fe16d9e1903646
Author: Amerigo Wang <amwang@redhat.com>
Date:   Wed Jan 12 16:59:39 2011 -0800

    kernel: clean up USE_GENERIC_SMP_HELPERS
    
    For arch which needs USE_GENERIC_SMP_HELPERS, it has to select
    USE_GENERIC_SMP_HELPERS, rather than leaving a choice to user, since they
    don't provide their own implementions.
    
    Also, move on_each_cpu() to kernel/smp.c, it is strange to put it in
    kernel/softirq.c.
    
    For arch which doesn't use USE_GENERIC_SMP_HELPERS, e.g.  blackfin, only
    on_each_cpu() is compiled.
    
    Signed-off-by: Amerigo Wang <amwang@redhat.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Randy Dunlap <randy.dunlap@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit b4c6e2ea5e46b03c764a918f4999a77a3149979f
Merge: 6f46b12 991cfff
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jan 6 11:06:31 2011 -0800

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, earlyprintk: Move mrst early console to platform/ and fix a typo
      x86, apbt: Setup affinity for apb timers acting as per-cpu timer
      ce4100: Add errata fixes for UART on CE4100
      x86: platform: Move iris to x86/platform where it belongs
      x86, mrst: Check platform_device_register() return code
      x86/platform: Add Eurobraille/Iris power off support
      x86, mrst: Add explanation for using 1960 as the year offset for vrtc
      x86, mrst: Fix dependencies of "select INTEL_SCU_IPC"
      x86, mrst: The shutdown for MRST requires the SCU IPC mechanism
      x86: Ce4100: Add reboot_fixup() for CE4100
      ce4100: Add PCI register emulation for CE4100
      x86: Add CE4100 platform support
      x86: mrst: Set vRTC's IRQ to level trigger type
      x86: mrst: Add audio driver bindings
      rtc: Add drivers/rtc/rtc-mrst.c
      x86: mrst: Add vrtc driver which serves as a wall clock device
      x86: mrst: Add Moorestown specific reboot/shutdown support
      x86: mrst: Parse SFI timer table for all timer configs
      x86/mrst: Add SFI platform device parsing code

commit 42cbd8efb0746b55112de45173219f76c54390da
Merge: dda5f0a f658bcf
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jan 6 10:50:28 2011 -0800

    Merge branch 'x86-amd-nb-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-amd-nb-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, cacheinfo: Cleanup L3 cache index disable support
      x86, amd-nb: Cleanup AMD northbridge caching code
      x86, amd-nb: Complete the rename of AMD NB and related code

commit c10d1e260f7cb6766dc76b4e36ed8f4be53f195a
Author: Andres Salomon <dilinger@queued.net>
Date:   Wed Nov 17 06:09:52 2010 +0000

    x86, olpc: Add OLPC device-tree support
    
    Make use of PROC_DEVICETREE to export the tree, and sparc's PROMTREE code to
    call into OLPC's Open Firmware to build the tree.
    
    v5: fix buglet with root node check (introduced in v4)
    
    v4: address some minor style issues pointed out by Grant, and explicitly cast
        negative phandle checks to s32.
    
    v3: rename olpc_prom to olpc_dt
      - rework Kconfig entries
      - drop devtree build hook from proc, instead adding a call to x86's
        paging_init (similarly to how sparc64 does it)
      - switch allocation from using slab to alloc_bootmem.  this allows
        the DT to be built earlier during boot (during setup_arch); the
        downside is that there are some 1200 bootmem reservations that are
        done during boot.  Not ideal..
      - add a helper olpc_ofw_is_installed function to test for the
        existence and successful detection of OLPC's OFW.
    
    Signed-off-by: Andres Salomon <dilinger@queued.net>
    LKML-Reference: <20101116220952.26526a80@queued.net>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit cc2067a51424dd25c10c1b1230b4222d8baec94d
Author: Peter Zijlstra <a.p.zijlstra@chello.nl>
Date:   Tue Nov 16 21:49:01 2010 +0100

    perf, x86: Fixup Kconfig deps
    
    This leads to a Kconfig dep inversion, x86 selects PERF_EVENT (due to
    a hw_breakpoint dep) but doesn't unconditionally provide
    HAVE_PERF_EVENT.
    
    (This can cause build failures on M386/M486 kernel .config's.)
    
    Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    LKML-Reference: <20101117222055.982965150@chello.nl>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit eec1d4fa00c6552ae2fdf71d59f1eded7c88dd89
Author: Hans Rosenfeld <hans.rosenfeld@amd.com>
Date:   Fri Oct 29 17:14:30 2010 +0200

    x86, amd-nb: Complete the rename of AMD NB and related code
    
    Not only the naming of the files was confusing, it was even more so for
    the function and variable names.
    
    Renamed the K8 NB and NUMA stuff that is also used on other AMD
    platforms. This also renames the CONFIG_K8_NUMA option to
    CONFIG_AMD_NUMA and the related file k8topology_64.c to
    amdtopology_64.c. No functional changes intended.
    
    Signed-off-by: Hans Rosenfeld <hans.rosenfeld@amd.com>
    Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>

commit 82148d1d0b2f369851f2dff5088f7840f9f16abf
Author: Shérab <Sebastien.Hinderer@ens-lyon.org>
Date:   Sat Sep 25 06:06:57 2010 +0200

    x86/platform: Add Eurobraille/Iris power off support
    
    The Iris machines from Eurobraille do not have APM or ACPI support
    to shut themselves down properly.  A special I/O sequence is
    needed to do so.  This modle runs this I/O sequence at
    kernel shutdown when its force parameter is set to 1.
    
    Signed-off-by: Shérab <Sebastien.Hinderer@ens-lyon.org>
    Acked-by: "H. Peter Anvin" <hpa@zytor.com>
    [ did minor coding style edits ]
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit ad02519a0d27da4a0a50cbc696e810c94e27c28e
Author: Randy Dunlap <randy.dunlap@oracle.com>
Date:   Mon Nov 15 10:14:06 2010 -0800

    x86, mrst: Fix dependencies of "select INTEL_SCU_IPC"
    
    commit b9fc71f47 (x86, mrst: The shutdown for MRST requires the SCU
    IPC mechanism) introduced the following warning:
    
     warning: (X86_MRST && PCI && PCI_GOANY && X86_32 &&
     X86_EXTENDED_PLATFORM && X86_IO_APIC) selects INTEL_SCU_IPC which has
     unmet direct dependencies (X86 && X86_PLATFORM_DEVICES && X86_MRST)
    
    which is due to the hierarchical menu structure.
    
    Select X86_PLATFORM_DEVICES as well.
    
    Originally-from: Randy Dunlap <randy.dunlap@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    LKML-Reference: <20101115101406.77e072ef.randy.dunlap@oracle.com>
    Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>

commit b9fc71f47dc060c588e5099638242fad44eeecbc
Author: Alan Cox <alan@lxorguk.ukuu.org.uk>
Date:   Mon Nov 15 17:31:19 2010 +0000

    x86, mrst: The shutdown for MRST requires the SCU IPC mechanism
    
    Fix the build failure reported by Randy.
    
    Reported-by: Randy Dunlap <randy.dunlap@oracle.com>
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    LKML-Reference: <20101115173110.6877.83958.stgit@localhost.localdomain>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 37bc9f5078c62bfa73edeb0053edceb3ed5e46a4
Author: Dirk Brandewie <dirk.brandewie@gmail.com>
Date:   Tue Nov 9 12:08:08 2010 -0800

    x86: Ce4100: Add reboot_fixup() for CE4100
    
    This patch adds the CE4100 reboot fixup to reboot_fixups_32.c
    
    [ tglx: Moved PCI id to reboot_fixups_32.c ]
    
    Signed-off-by: Dirk Brandewie <dirk.j.brandewie@intel.com>
    LKML-Reference: <5bdcfb4f0206fa721570504e95659a03b815bc5e.1289331834.git.dirk.brandewie@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit c751e17b5371ad86cdde6cf5c0175e06f3ff0347
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Nov 9 12:08:04 2010 -0800

    x86: Add CE4100 platform support
    
    Add CE4100 platform support. CE4100 needs early setup like
    moorestown.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Dirk Brandewie <dirk.brandewie@gmail.com>
    LKML-Reference: <94720fd7f5564a12ebf202cf2c4f4c0d619aab35.1289331834.git.dirk.brandewie@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 1da4b1c6a4dfb5a13d7147a27c1ac53fed09befd
Author: Feng Tang <feng.tang@intel.com>
Date:   Tue Nov 9 11:22:58 2010 +0000

    x86/mrst: Add SFI platform device parsing code
    
    SFI provides a series of tables. These describe the platform devices present
    including SPI and I²C devices, as well as various sensors, keypads and other
    glue as well as interfaces provided via the SCU IPC mechanism (intel_scu_ipc.c)
    
    This patch is a merge of the core elements and relevant fixes from the
    Intel development code by Feng, Alek, myself into a single coherent patch
    for upstream submission.
    
    It provides the needed infrastructure to register I2C, SPI and platform devices
    described by the tables, as well as handlers for some of the hardware already
    supported in kernel. The 0.8 firmware also provides GPIO tables.
    
    Devices are created at boot time or if they are SCU dependant at the point an
    SCU is discovered. The existing Linux device mechanisms will then handle the
    device binding. At an abstract level this is an SFI to Linux device translator.
    
    Device/platform specific setup/glue is in this file. This is done so that the
    drivers for the generic I²C and SPI bus devices remain cross platform as they
    should.
    
    (Updated from RFC version to correct the emc1403 name used by the firmware
     and a wrongly used #define)
    
    Signed-off-by: Alek Du <alek.du@linux.intel.com>
    LKML-Reference: <20101109112158.20013.6158.stgit@localhost.localdomain>
    [Clean ups, removal of 0.7 support]
    Signed-off-by: Feng Tang <feng.tang@linux.intel.com>
    [Clean ups]
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 18cb657ca1bafe635f368346a1676fb04c512edf
Merge: 2301b65 e28c31a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 28 17:11:17 2010 -0700

    Merge branch 'stable/xen-pcifront-0.8.2' of git://git.kernel.org/pub/scm/linux/kernel/git/konrad/xen
      and branch 'for-linus' of git://xenbits.xen.org/people/sstabellini/linux-pvhvm
    
    * 'for-linus' of git://xenbits.xen.org/people/sstabellini/linux-pvhvm:
      xen: register xen pci notifier
      xen: initialize cpu masks for pv guests in xen_smp_init
      xen: add a missing #include to arch/x86/pci/xen.c
      xen: mask the MTRR feature from the cpuid
      xen: make hvc_xen console work for dom0.
      xen: add the direct mapping area for ISA bus access
      xen: Initialize xenbus for dom0.
      xen: use vcpu_ops to setup cpu masks
      xen: map a dummy page for local apic and ioapic in xen_set_fixmap
      xen: remap MSIs into pirqs when running as initial domain
      xen: remap GSIs as pirqs when running as initial domain
      xen: introduce XEN_DOM0 as a silent option
      xen: map MSIs into pirqs
      xen: support GSI -> pirq remapping in PV on HVM guests
      xen: add xen hvm acpi_register_gsi variant
      acpi: use indirect call to register gsi in different modes
      xen: implement xen_hvm_register_pirq
      xen: get the maximum number of pirqs from xen
      xen: support pirq != irq
    
    * 'stable/xen-pcifront-0.8.2' of git://git.kernel.org/pub/scm/linux/kernel/git/konrad/xen: (27 commits)
      X86/PCI: Remove the dependency on isapnp_disable.
      xen: Update Makefile with CONFIG_BLOCK dependency for biomerge.c
      MAINTAINERS: Add myself to the Xen Hypervisor Interface and remove Chris Wright.
      x86: xen: Sanitse irq handling (part two)
      swiotlb-xen: On x86-32 builts, select SWIOTLB instead of depending on it.
      MAINTAINERS: Add myself for Xen PCI and Xen SWIOTLB maintainer.
      xen/pci: Request ACS when Xen-SWIOTLB is activated.
      xen-pcifront: Xen PCI frontend driver.
      xenbus: prevent warnings on unhandled enumeration values
      xenbus: Xen paravirtualised PCI hotplug support.
      xen/x86/PCI: Add support for the Xen PCI subsystem
      x86: Introduce x86_msi_ops
      msi: Introduce default_[teardown|setup]_msi_irqs with fallback.
      x86/PCI: Export pci_walk_bus function.
      x86/PCI: make sure _PAGE_IOMAP it set on pci mappings
      x86/PCI: Clean up pci_cache_line_size
      xen: fix shared irq device passthrough
      xen: Provide a variant of xen_poll_irq with timeout.
      xen: Find an unbound irq number in reverse order (high to low).
      xen: statically initialize cpu_evtchn_mask_p
      ...
    
    Fix up trivial conflicts in drivers/pci/Makefile

commit 51399a391940e676877c7a791138081f13a0bab7
Merge: b779b33 df4d303
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 28 16:16:39 2010 -0700

    Merge branch 'kconfig' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild-2.6
    
    * 'kconfig' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild-2.6: (38 commits)
      kbuild: convert `arch/tile' to the kconfig mainmenu upgrade
      README: cite nconfig
      Revert "kconfig: Temporarily disable dependency warnings"
      kconfig: Use PATH_MAX instead of 128 for path buffer sizes.
      kconfig: Fix realloc usage()
      kconfig: Propagate const
      kconfig: Don't go out from read config loop when you read new symbol
      kconfig: fix menuconfig on debian lenny
      kbuild: migrate all arch to the kconfig mainmenu upgrade
      kconfig: expand file names
      kconfig: use the file's name of sourced file
      kconfig: constify file name
      kconfig: don't emit warning upon rootmenu's prompt redefinition
      kconfig: replace KERNELVERSION usage by the mainmenu's prompt
      kconfig: delay gconf window initialization
      kconfig: expand by default the rootmenu's prompt
      kconfig: add a symbol string expansion helper
      kconfig: regen parser
      kconfig: implement the `mainmenu' directive
      kconfig: allow PACKAGE to be defined on the compiler's command-line
      ...
    
    Fix up trivial conflict in arch/mn10300/Kconfig

commit 7d7a48b76012eeee25871e1d69104dec4b6d740f
Merge: e4072a9 229aebb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Oct 25 19:38:43 2010 +0200

    Merge branch 'linus' into x86/urgent
    
    Merge reason: We want to queue up a dependent fix.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 3044100e58c84e133791c8b60a2f5bef69d732e4
Merge: b515316 67e87f0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 21 18:52:11 2010 -0700

    Merge branch 'core-memblock-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'core-memblock-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (74 commits)
      x86-64: Only set max_pfn_mapped to 512 MiB if we enter via head_64.S
      xen: Cope with unmapped pages when initializing kernel pagetable
      memblock, bootmem: Round pfn properly for memory and reserved regions
      memblock: Annotate memblock functions with __init_memblock
      memblock: Allow memblock_init to be called early
      memblock/arm: Fix memblock_region_is_memory() typo
      x86, memblock: Remove __memblock_x86_find_in_range_size()
      memblock: Fix wraparound in find_region()
      x86-32, memblock: Make add_highpages honor early reserved ranges
      x86, memblock: Fix crashkernel allocation
      arm, memblock: Fix the sparsemem build
      memblock: Fix section mismatch warnings
      powerpc, memblock: Fix memblock API change fallout
      memblock, microblaze: Fix memblock API change fallout
      x86: Remove old bootmem code
      x86, memblock: Use memblock_memory_size()/memblock_free_memory_size() to get correct dma_reserve
      x86: Remove not used early_res code
      x86, memblock: Replace e820_/_early string with memblock_
      x86: Use memblock to replace early_res
      x86, memblock: Use memblock_debug to control debug message print out
      ...
    
    Fix up trivial conflicts in arch/x86/kernel/setup.c and kernel/Makefile

commit 4a60cfa9457749f7987fd4f3c956dbba5a281129
Merge: 62bea97 27afdf2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 21 14:11:46 2010 -0700

    Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (96 commits)
      apic, x86: Use BIOS settings for IBS and MCE threshold interrupt LVT offsets
      apic, x86: Check if EILVT APIC registers are available (AMD only)
      x86: ioapic: Call free_irte only if interrupt remapping enabled
      arm: Use ARCH_IRQ_INIT_FLAGS
      genirq, ARM: Fix boot on ARM platforms
      genirq: Fix CONFIG_GENIRQ_NO_DEPRECATED=y build
      x86: Switch sparse_irq allocations to GFP_KERNEL
      genirq: Switch sparse_irq allocator to GFP_KERNEL
      genirq: Make sparse_lock a mutex
      x86: lguest: Use new irq allocator
      genirq: Remove the now unused sparse irq leftovers
      genirq: Sanitize dynamic irq handling
      genirq: Remove arch_init_chip_data()
      x86: xen: Sanitise sparse_irq handling
      x86: Use sane enumeration
      x86: uv: Clean up the direct access to irq_desc
      x86: Make io_apic.c local functions static
      genirq: Remove irq_2_iommu
      x86: Speed up the irq_remapped check in hot pathes
      intr_remap: Simplify the code further
      ...
    
    Fix up trivial conflicts in arch/x86/Kconfig

commit 709d9f54cc1847a2d24224ffedec7fd4d0f3c714
Merge: cca8209 b0f4c06
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 21 13:53:24 2010 -0700

    Merge branch 'x86-vmware-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-vmware-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, paravirt: Remove alloc_pmd_clone hook, only used by VMI
      x86, vmware: Remove deprecated VMI kernel support
    
    Fix up trivial #include conflict in arch/x86/kernel/smpboot.c

commit cca8209ed962f87990345ba073979d2b55dd1187
Merge: d77bdc4 9e9006e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 21 13:52:01 2010 -0700

    Merge branch 'x86-olpc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-olpc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, olpc: XO-1 uses/depends on PCI
      x86, olpc: Register XO-1 platform devices
      x86, olpc: Add XO-1 poweroff support
      x86, olpc: Don't retry EC commands forever
      x86, olpc: Rework BIOS signature check
      x86, olpc: Only enable PCI configuration type override on XO-1

commit c3b86a29429dac1033e3f602f51fa8d00006a8eb
Merge: 8d8d2e9 2aeb66d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 21 13:47:29 2010 -0700

    Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86-32, percpu: Correct the ordering of the percpu readmostly section
      x86, mm: Enable ARCH_DMA_ADDR_T_64BIT with X86_64 || HIGHMEM64G
      x86: Spread tlb flush vector between nodes
      percpu: Introduce a read-mostly percpu API
      x86, mm: Fix incorrect data type in vmalloc_sync_all()
      x86, mm: Hold mm->page_table_lock while doing vmalloc_sync
      x86, mm: Fix bogus whitespace in sync_global_pgds()
      x86-32: Fix sparse warning for the __PHYSICAL_MASK calculation
      x86, mm: Add RESERVE_BRK_ARRAY() helper
      mm, x86: Saving vmcore with non-lazy freeing of vmas
      x86, kdump: Change copy_oldmem_page() to use cached addressing
      x86, mm: fix uninitialized addr in kernel_physical_mapping_init()
      x86, kmemcheck: Remove double test
      x86, mm: Make spurious_fault check explicitly check the PRESENT bit
      x86-64, mem: Update all PGDs for direct mapping and vmemmap mapping changes
      x86, mm: Separate x86_64 vmalloc_sync_all() into separate functions
      x86, mm: Avoid unnecessary TLB flush

commit 781c5a67f152c17c3e4a9ed9647f8c0be6ea5ae9
Merge: e990c77 9ea77bd
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 21 13:06:49 2010 -0700

    Merge branch 'x86-bios-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-bios-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, bios: Make the x86 early memory reservation a kernel option
      x86, bios: By default, reserve the low 64K for all BIOSes

commit 2f0384e5fc4766ad909597547d0e2b716c036755
Merge: bc4016f 5c80cc7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 21 13:01:08 2010 -0700

    Merge branch 'x86-amd-nb-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-amd-nb-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, amd_nb: Enable GART support for AMD family 0x15 CPUs
      x86, amd: Use compute unit information to determine thread siblings
      x86, amd: Extract compute unit information for AMD CPUs
      x86, amd: Add support for CPUID topology extension of AMD CPUs
      x86, nmi: Support NMI watchdog on newer AMD CPU families
      x86, mtrr: Assume SYS_CFG[Tom2ForceMemTypeWB] exists on all future AMD CPUs
      x86, k8: Rename k8.[ch] to amd_nb.[ch] and CONFIG_K8_NB to CONFIG_AMD_NB
      x86, k8-gart: Decouple handling of garts and northbridges
      x86, cacheinfo: Fix dependency of AMD L3 CID
      x86, kvm: add new AMD SVM feature bits
      x86, cpu: Fix allowed CPUID bits for KVM guests
      x86, cpu: Update AMD CPUID feature bits
      x86, cpu: Fix renamed, not-yet-shipping AMD CPUID feature bit
      x86, AMD: Remove needless CPU family check (for L3 cache info)
      x86, tsc: Remove CPU frequency calibration on AMD

commit bc4016f48161454a9a8e5eb209b0693c6cde9f62
Merge: 5d70f79 b7dadc3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 21 12:55:43 2010 -0700

    Merge branch 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (29 commits)
      sched: Export account_system_vtime()
      sched: Call tick_check_idle before __irq_enter
      sched: Remove irq time from available CPU power
      sched: Do not account irq time to current task
      x86: Add IRQ_TIME_ACCOUNTING
      sched: Add IRQ_TIME_ACCOUNTING, finer accounting of irq time
      sched: Add a PF flag for ksoftirqd identification
      sched: Consolidate account_system_vtime extern declaration
      sched: Fix softirq time accounting
      sched: Drop group_capacity to 1 only if local group has extra capacity
      sched: Force balancing on newidle balance if local group has capacity
      sched: Set group_imb only a task can be pulled from the busiest cpu
      sched: Do not consider SCHED_IDLE tasks to be cache hot
      sched: Drop all load weight manipulation for RT tasks
      sched: Create special class for stop/migrate work
      sched: Unindent labels
      sched: Comment updates: fix default latency and granularity numbers
      tracing/sched: Add sched_pi_setprio tracepoint
      sched: Give CPU bound RT tasks preference
      sched: Try not to migrate higher priority RT tasks
      ...

commit 66f2b061546974b96b7b238a92ce89a87ecf0754
Author: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
Date:   Wed Oct 20 15:55:35 2010 -0700

    x86, mm: Enable ARCH_DMA_ADDR_T_64BIT with X86_64 || HIGHMEM64G
    
    Set CONFIG_ARCH_DMA_ADDR_T_64BIT when we set dma_addr_t to 64 bits in
    <asm/types.h>; this allows Kconfig decisions based on this property.
    
    Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
    LKML-Reference: <201010202255.o9KMtZXu009370@imap1.linux-foundation.org>
    Acked-by: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit e82b8e4ea4f3dffe6e7939f90e78da675fcc450e
Author: Venkatesh Pallipadi <venki@google.com>
Date:   Mon Oct 4 17:03:20 2010 -0700

    x86: Add IRQ_TIME_ACCOUNTING
    
    This patch adds IRQ_TIME_ACCOUNTING option on x86 and runtime enables it
    when TSC is enabled.
    
    This change just enables fine grained irq time accounting, isn't used yet.
    Following patches use it for different purposes.
    
    Signed-off-by: Venkatesh Pallipadi <venki@google.com>
    Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    LKML-Reference: <1286237003-12406-6-git-send-email-venki@google.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e360adbe29241a0194e10e20595360dd7b98a2b3
Author: Peter Zijlstra <a.p.zijlstra@chello.nl>
Date:   Thu Oct 14 14:01:34 2010 +0800

    irq_work: Add generic hardirq context callbacks
    
    Provide a mechanism that allows running code in IRQ context. It is
    most useful for NMI code that needs to interact with the rest of the
    system -- like wakeup a task to drain buffers.
    
    Perf currently has such a mechanism, so extract that and provide it as
    a generic feature, independent of perf so that others may also
    benefit.
    
    The IRQ context callback is generated through self-IPIs where
    possible, or on architectures like powerpc the decrementer (the
    built-in timer facility) is set to generate an interrupt immediately.
    
    Architectures that don't have anything like this get to do with a
    callback from the timer tick. These architectures can call
    irq_work_run() at the tail of any IRQ handlers that might enqueue such
    work (like the perf IRQ handler) to avoid undue latencies in
    processing the work.
    
    Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Acked-by: Kyle McMartin <kyle@mcmartin.ca>
    Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    [ various fixes ]
    Signed-off-by: Huang Ying <ying.huang@intel.com>
    LKML-Reference: <1287036094.7768.291.camel@yhuang-dev>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit b5401a96b59475c1c878439caecb8c521bdfd4ad
Author: Alex Nixon <alex.nixon@citrix.com>
Date:   Thu Mar 18 16:31:34 2010 -0400

    xen/x86/PCI: Add support for the Xen PCI subsystem
    
    The frontend stub lives in arch/x86/pci/xen.c, alongside other
    sub-arch PCI init code (e.g. olpc.c).
    
    It provides a mechanism for Xen PCI frontend to setup/destroy
    legacy interrupts, MSI/MSI-X, and PCI configuration operations.
    
    [ Impact: add core of Xen PCI support ]
    [ v2: Removed the IOMMU code and only focusing on PCI.]
    [ v3: removed usage of pci_scan_all_fns as that does not exist]
    [ v4: introduced pci_xen value to fix compile warnings]
    [ v5: squished fixes+features in one patch, changed Reviewed-by to Ccs]
    [ v7: added Acked-by]
    Signed-off-by: Alex Nixon <alex.nixon@citrix.com>
    Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
    Signed-off-by: Ian Campbell <ian.campbell@citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
    Acked-by: Jesse Barnes <jbarnes@virtuousgeek.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Matthew Wilcox <willy@linux.intel.com>
    Cc: Qing He <qing.he@intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86@kernel.org

commit 9e9006e9090dc1f88d5127cb69f416013e7ecd60
Author: Randy Dunlap <randy.dunlap@oracle.com>
Date:   Thu Oct 14 10:13:13 2010 -0700

    x86, olpc: XO-1 uses/depends on PCI
    
    olpc-xo1 uses pci_*() interfaces so it should depend on PCI.
    
    Otherwise we get build failure like:
    
     arch/x86/kernel/olpc-xo1.c:65: error: implicit declaration of function 'pci_enable_device_io'
     arch/x86/kernel/olpc-xo1.c:71: error: implicit declaration of function 'pci_request_region'
     arch/x86/kernel/olpc-xo1.c:80: error: implicit declaration of function 'pci_release_region'
    
    Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
    Acked-by: Daniel Drake <dsd@laptop.org>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    LKML-Reference: <20101014101313.adf7eb2a.randy.dunlap@oracle.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit cf4db2597ae93b60efc0a7a4ec08690b75d629b1
Author: Steven Rostedt <srostedt@redhat.com>
Date:   Thu Oct 14 23:32:44 2010 -0400

    ftrace: Rename config option HAVE_C_MCOUNT_RECORD to HAVE_C_RECORDMCOUNT
    
    The config option used by archs to let the build system know that
    the C version of the recordmcount works for said arch is currently
    called HAVE_C_MCOUNT_RECORD which enables BUILD_C_RECORDMCOUNT. To
    be more consistent with the name that all archs may use, it has been
    renamed to HAVE_C_RECORDMCOUNT. This will be less confusing since
    we are building a C recordmcount and not a mcount_record.
    
    Suggested-by: Ingo Molnar <mingo@elte.hu>
    Cc: <linux-arch@vger.kernel.org>
    Cc: Michal Marek <mmarek@suse.cz>
    Cc: linux-kbuild@vger.kernel.org
    Cc: John Reiser <jreiser@bitwagon.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

commit 72441cb1fd77d092f09ddfac748955703884c9a7
Author: Steven Rostedt <srostedt@redhat.com>
Date:   Wed Oct 13 17:12:30 2010 -0400

    ftrace/x86: Add support for C version of recordmcount
    
    This patch adds the support for the C version of recordmcount and
    compile times show ~ 12% improvement.
    
    After verifying this works, other archs can add:
    
     HAVE_C_MCOUNT_RECORD
    
    in its Kconfig and it will use the C version of recordmcount
    instead of the perl version.
    
    Cc: <linux-arch@vger.kernel.org>
    Cc: Michal Marek <mmarek@suse.cz>
    Cc: linux-kbuild@vger.kernel.org
    Cc: John Reiser <jreiser@bitwagon.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

commit 3cba11d32bb4b24c3ba257043595772df4b9c7b5
Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
Date:   Thu Oct 14 12:10:42 2010 +0900

    kconfig/x86: Add HAVE_TEXT_POKE_SMP config for stop_machine dependency
    
    Since the text_poke_smp() definately depends on actual
    stop_machine() on smp, add that dependency to Kconfig.
    
    Signed-off-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Cc: 2nddept-manager@sdl.hitachi.co.jp
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    LKML-Reference: <20101014031042.4100.90877.stgit@ltc236.sdl.hitachi.co.jp>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 03f1a17cd5c69deccd3cfe1b954b9426d7a686e3
Author: Randy Dunlap <randy.dunlap@oracle.com>
Date:   Wed Oct 13 21:00:23 2010 -0700

    x86/vsmp: Eliminate kconfig dependency warning
    
    Fix kconfig dependency warning to satisfy dependencies:
    
    warning: (X86_VSMP && X86_64 && PCI && X86_EXTENDED_PLATFORM ||
    XEN && PARAVIRT_GUEST && (X86_64 || X86_32 && X86_PAE && !X86_VISWS) && X86_CMPXCHG && X86_TSC || KVM_CLOCK && PARAVIRT_GUEST || KVM_GUEST && PARAVIRT_GUEST || LGUEST_GUEST && PARAVIRT_GUEST && X86_32) selects PARAVIRT which has unmet direct dependencies (PARAVIRT_GUEST)
    
    Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
    Cc: Ravikiran Thirumalai <kiran@scalex86.org>
    LKML-Reference: <20101013210023.9a033222.randy.dunlap@oracle.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit bf1ebf007911d70a89de9a4a1b36d403e8eb064b
Author: Daniel Drake <dsd@laptop.org>
Date:   Sun Oct 10 10:40:32 2010 +0100

    x86, olpc: Add XO-1 poweroff support
    
    Add a pm_power_off handler for the OLPC XO-1 laptop.
    
    The driver can be built modular and follows the behaviour of the
    APM driver, setting pm_power_off to NULL on unload. However, the
    ability to unload the module will probably be removed (with a simple
    __module_get(THIS_MODULE)) if/when XO-1 suspend/resume support is
    added to this file at a later date.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    LKML-Reference: <20101010094032.9AE669D401B@zog.reactivated.net>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit fbc6bff04a095e049be290ff6f6ac68839166bd6
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Sep 28 20:34:53 2010 +0200

    x86: ioapic: Cleanup sparse irq code
    
    Switch over to the new allocator and remove all the magic which was
    caused by the unability to destroy irq descriptors. Get rid of the
    create_irq_nr() loop for sparse and non sparse irq.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@elte.hu>

commit 239060b93bb30a4ad55f1ecaa512464a035cc5ba
Merge: 1408b15 e9203c9
Author: Michal Marek <mmarek@suse.cz>
Date:   Tue Oct 12 15:09:06 2010 +0200

    Merge branch 'kbuild/rc-fixes' into kbuild/kconfig
    
    We need to revert the temporary hack in 71ebc01, hence the merge.

commit 3bb9808e99bcc36eecb8e082bf70efb2a0bcdcb7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Sep 27 12:46:02 2010 +0000

    x86: Use genirq Kconfig
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    LKML-Reference: <20100927121843.314600915@linutronix.de>
    Reviewed-by: H. Peter Anvin <hpa@zytor.com>
    Reviewed-by: Ingo Molnar <mingo@elte.hu>

commit 3e3c486012a3dbb113c0ca15ee265d309d77aea9
Author: Daniel Drake <dsd@laptop.org>
Date:   Thu Sep 23 17:28:46 2010 +0100

    x86, olpc: Rework BIOS signature check
    
    The XO-1.5 laptop is not currently detected as an OLPC machine because
    it fails this XO-1-centric check.
    
    Now that we have OLPC OFW support in the kernel, a more sensible
    check is to see if we found OFW during boot and check the architecture
    property.
    
    Also remove a now-meaningless codepath, as we're always going to have
    OFW support with OLPC.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    LKML-Reference: <20100923162846.D8D409D401B@zog.reactivated.net>
    Cc: Andres Salomon <dilinger@queued.net>
    Cc: Grant Likely <grant.likely@secretlab.ca>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 76fb657017588a0912f0d1d140cb807446e4ef05
Author: Daniel Drake <dsd@laptop.org>
Date:   Thu Sep 23 17:28:04 2010 +0100

    x86, olpc: Only enable PCI configuration type override on XO-1
    
    This configuration type override is for XO-1 only and must not happen
    on XO-1.5.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    LKML-Reference: <20100923162805.0F6549D401B@zog.reactivated.net>
    Cc: Andres Solomon <dilinger@queued.net>
    Cc: Grant Likely <grant.likely@secretlab.ca>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 46eb3b64dddd20f44e76b08676fa642dd374bf1d
Author: Steven Rostedt <srostedt@redhat.com>
Date:   Wed Sep 22 23:10:23 2010 -0400

    jump label/x86/sparc64: Remove !CC_OPTIMIZE_FOR_SIZE config conditions
    
    The !CC_OPTIMIZE_FOR_SIZE was added to enable the jump label functionality
    because Jason noticed that the gcc option would not optimize the labels
    and may even hurt performance.
    
    But this is a gcc problem not a kernel one. Removing this condition should
    add motivation to the gcc developers to actually fix it.
    
    Cc: Jason Baron <jbaron@redhat.com>
    Acked-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

commit d9f5ab7b1c0a520867af389bab5d5fcdbd0e407e
Author: Jason Baron <jbaron@redhat.com>
Date:   Fri Sep 17 11:09:22 2010 -0400

    jump label: x86 support
    
    add x86 support for jump label. I'm keeping this patch separate so its clear
    to arch maintainers what was required for x86 support this new feature.
    Hopefully, it wouldn't be too painful for other archs.
    
    Signed-off-by: Jason Baron <jbaron@redhat.com>
    LKML-Reference: <f838f49f40fbea0254036194be66dc48b598dcea.1284733808.git.jbaron@redhat.com>
    
    [ cleaned up some formatting ]
    
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

commit 23ac4ae827e6264e21b898f2cd3f601450aa02a6
Author: Andreas Herrmann <andreas.herrmann3@amd.com>
Date:   Fri Sep 17 18:03:43 2010 +0200

    x86, k8: Rename k8.[ch] to amd_nb.[ch] and CONFIG_K8_NB to CONFIG_AMD_NB
    
    The file names are somehow misleading as the code is not specific to
    AMD K8 CPUs anymore. The files accomodate code for other AMD CPU
    northbridges as well.
    
    Same is true for the config option which is valid for AMD CPU
    northbridges in general and not specific to K8.
    
    Signed-off-by: Andreas Herrmann <andreas.herrmann3@amd.com>
    LKML-Reference: <20100917160343.GD4958@loge.amd.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 838a2e55e6a4e9e8a10451ed2ef0f7a08dabdb04
Author: Arnaud Lacombe <lacombar@gmail.com>
Date:   Sat Sep 4 17:10:20 2010 -0400

    kbuild: migrate all arch to the kconfig mainmenu upgrade
    
    Signed-off-by: Arnaud Lacombe <lacombar@gmail.com>
    Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
    Reviewed-by: Michal Marek <mmarek@suse.cz>

commit daab7fc734a53fdeaf844b7c03053118ad1769da
Merge: 774ea0b 2bfc96a
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Aug 31 09:45:21 2010 +0200

    Merge commit 'v2.6.36-rc3' into x86/memblock
    
    Conflicts:
    	arch/x86/kernel/trampoline.c
    	mm/memblock.c
    
    Merge reason: Resolve the conflicts, update to latest upstream.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 774ea0bcb27f57b6fd521b3b6c43237782fed4b9
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Wed Aug 25 13:39:18 2010 -0700

    x86: Remove old bootmem code
    
    Requested by Ingo, Thomas and HPA.
    
    The old bootmem code is no longer necessary, and the transition is
    complete.  Remove it.
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 72d7c3b33c980843e756681fb4867dc1efd62a76
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Wed Aug 25 13:39:17 2010 -0700

    x86: Use memblock to replace early_res
    
    1. replace find_e820_area with memblock_find_in_range
    2. replace reserve_early with memblock_x86_reserve_range
    3. replace free_early with memblock_x86_free_range.
    4. NO_BOOTMEM will switch to use memblock too.
    5. use _e820, _early wrap in the patch, in following patch, will
       replace them all
    6. because memblock_x86_free_range support partial free, we can remove some special care
    7. Need to make sure that memblock_find_in_range() is called after memblock_x86_fill()
       so adjust some calling later in setup.c::setup_arch()
       -- corruption_check and mptable_update
    
    -v2: Move reserve_brk() early
        Before fill_memblock_area, to avoid overlap between brk and memblock_find_in_range()
        that could happen We have more then 128 RAM entry in E820 tables, and
        memblock_x86_fill() could use memblock_find_in_range() to find a new place for
        memblock.memory.region array.
        and We don't need to use extend_brk() after fill_memblock_area()
        So move reserve_brk() early before fill_memblock_area().
    -v3: Move find_smp_config early
        To make sure memblock_find_in_range not find wrong place, if BIOS doesn't put mptable
        in right place.
    -v4: Treat RESERVED_KERN as RAM in memblock.memory. and they are already in
        memblock.reserved already..
        use __NOT_KEEP_MEMBLOCK to make sure memblock related code could be freed later.
    -v5: Generic version __memblock_find_in_range() is going from high to low, and for 32bit
        active_region for 32bit does include high pages
        need to replace the limit with memblock.default_alloc_limit, aka get_max_mapped()
    -v6: Use current_limit instead
    -v7: check with MEMBLOCK_ERROR instead of -1ULL or -1L
    -v8: Set memblock_can_resize early to handle EFI with more RAM entries
    -v9: update after kmemleak changes in mainline
    
    Suggested-by: David S. Miller <davem@davemloft.net>
    Suggested-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 9ea77bdb39b62c9bf9fd3cdd1c25a9420bccd380
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Wed Aug 25 16:38:20 2010 -0700

    x86, bios: Make the x86 early memory reservation a kernel option
    
    Add a kernel command-line option so the x86 early memory reservation
    size can be adjusted at runtime instead of only at compile time.
    
    Suggested-by: Andrew Morton <akpm@linux-foundation.org>
    LKML-Reference: <tip-d0cd7425fab774a480cce17c2f649984312d0b55@git.kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit d0cd7425fab774a480cce17c2f649984312d0b55
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Tue Aug 24 17:32:04 2010 -0700

    x86, bios: By default, reserve the low 64K for all BIOSes
    
    The laundry list of BIOSes that need the low 64K reserved is getting
    very long, so make it the default across all BIOSes.  This also allows
    the code to be simplified and unified with the reservation code for
    the first 4K.
    
    This resolves kernel bugzilla 16661 and who knows what else...
    
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    LKML-Reference: <tip-*@git.kernel.org>

commit 9863c90f682fba34cdc26c3437e8c00da6c83fa4
Author: Alok Kataria <akataria@vmware.com>
Date:   Mon Aug 23 14:49:11 2010 -0700

    x86, vmware: Remove deprecated VMI kernel support
    
    With the recent innovations in CPU hardware acceleration technologies
    from Intel and AMD, VMware ran a few experiments to compare these
    techniques to guest paravirtualization technique on VMware's platform.
    These hardware assisted virtualization techniques have outperformed the
    performance benefits provided by VMI in most of the workloads. VMware
    expects that these hardware features will be ubiquitous in a couple of
    years, as a result, VMware has started a phased retirement of this
    feature from the hypervisor.
    
    Please note that VMI has always been an optimization and non-VMI kernels
    still work fine on VMware's platform.
    Latest versions of VMware's product which support VMI are,
    Workstation 7.0 and VSphere 4.0 on ESX side, future maintainence
    releases for these products will continue supporting VMI.
    
    For more details about VMI retirement take a look at this,
    http://blogs.vmware.com/guestosguide/2009/09/vmi-retirement.html
    
    This feature removal was scheduled for 2.6.37 back in September 2009.
    
    Signed-off-by: Alok N Kataria <akataria@vmware.com>
    LKML-Reference: <1282600151.19396.22.camel@ank32.eng.vmware.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit ddb0c5a689c857bb13a42d9a3f0a7604497b3a29
Author: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date:   Sat Aug 21 21:32:41 2010 +0200

    Replace Configure with Enable in description of MAXSMP
    
    The "Configure" word tends to make user believe they have to say 'yes'
    to be able to choose the number of procs/nodes.  "Enable" should be
    unambiguous enough.
    
    Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit d7c53c9e822a4fefa13a0cae76f3190bfd0d5c11
Author: Borislav Petkov <bp@amd64.org>
Date:   Thu Aug 19 20:10:29 2010 +0200

    x86, hotplug: Serialize CPU hotplug to avoid bringup concurrency issues
    
    When testing cpu hotplug code on 32-bit we kept hitting the "CPU%d:
    Stuck ??" message due to multiple cores concurrently accessing the
    cpu_callin_mask, among others.
    
    Since these codepaths are not protected from concurrent access due to
    the fact that there's no sane reason for making an already complex
    code unnecessarily more complex - we hit the issue only when insanely
    switching cores off- and online - serialize hotplugging cores on the
    sysfs level and be done with it.
    
    [ v2.1: fix !HOTPLUG_CPU build ]
    
    Cc: <stable@kernel.org>
    Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
    LKML-Reference: <20100819181029.GC17171@aftab>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit 3cf8ad3394b8675e92a35c438f22341197535531
Merge: 66cd55d 54e5bc02
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Aug 6 16:24:34 2010 -0700

    Merge branch 'x86-olpc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-olpc-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, olpc: Constify an olpc_ofw() arg
      x86, olpc: Use pr_debug() for EC commands
      x86, olpc: Add comment about implicit optimization barrier
      x86, olpc: Add support for calling into OpenFirmware

commit b62ad9ab181a67207a4c8c373461b587c4861a68
Merge: af39008 b292307
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Aug 6 13:18:29 2010 -0700

    Merge branch 'timers-timekeeping-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'timers-timekeeping-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      um: Fix read_persistent_clock fallout
      kgdb: Do not access xtime directly
      powerpc: Clean up obsolete code relating to decrementer and timebase
      powerpc: Rework VDSO gettimeofday to prevent time going backwards
      clocksource: Add __clocksource_updatefreq_hz/khz methods
      x86: Convert common clocksources to use clocksource_register_hz/khz
      timekeeping: Make xtime and wall_to_monotonic static
      hrtimer: Cleanup direct access to wall_to_monotonic
      um: Convert to use read_persistent_clock
      timkeeping: Fix update_vsyscall to provide wall_to_monotonic offset
      powerpc: Cleanup xtime usage
      powerpc: Simplify update_vsyscall
      time: Kill off CONFIG_GENERIC_TIME
      time: Implement timespec_add
      x86: Fix vtime/file timestamp inconsistencies
    
    Trivial conflicts in Documentation/feature-removal-schedule.txt
    
    Much less trivial conflicts in arch/powerpc/kernel/time.c resolved as
    per Thomas' earlier merge commit 47916be4e28c ("Merge branch
    'powerpc.cherry-picks' into timers/clocksource")

commit 61be7fdec2f51b99570cd5dcc30c7848c8e56513
Merge: 12a81c8 eb703f9
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Aug 5 08:45:05 2010 +0200

    Merge branch 'perf/nmi' into perf/core
    
    Conflicts:
    	kernel/Makefile
    
    Merge reason: Add the now complete topic, fix the conflict.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 592913ecb87a9e06f98ddb55b298f1a66bf94c6b
Author: John Stultz <johnstul@us.ibm.com>
Date:   Tue Jul 13 17:56:20 2010 -0700

    time: Kill off CONFIG_GENERIC_TIME
    
    Now that all arches have been converted over to use generic time via
    clocksources or arch_gettimeoffset(), we can remove the GENERIC_TIME
    config option and simplify the generic code.
    
    Signed-off-by: John Stultz <johnstul@us.ibm.com>
    LKML-Reference: <1279068988-21864-4-git-send-email-johnstul@us.ibm.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit fd699c76552bbfa66631f019be415a87dbb08237
Author: Andres Salomon <dilinger@queued.net>
Date:   Fri Jun 18 17:46:53 2010 -0400

    x86, olpc: Add support for calling into OpenFirmware
    
    Add support for saving OFW's cif, and later calling into it to run OFW
    commands.  OFW remains resident in memory, living within virtual range
    0xff800000 - 0xffc00000.  A single page directory entry points to the
    pgdir that OFW actually uses, so rather than saving the entire page
    table, we grab and install that one entry permanently in the kernel's
    page table.
    
    This is currently only used by the OLPC XO.  Note that this particular
    calling convention breaks PAE and PAT, and so cannot be used on newer
    x86 hardware.
    
    Signed-off-by: Andres Salomon <dilinger@queued.net>
    LKML-Reference: <20100618174653.7755a39a@dev.queued.net>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

commit e534c7c5f8d6e9fc46f57fab067c7e48d8ceb172
Author: Lee Schermerhorn <lee.schermerhorn@hp.com>
Date:   Wed May 26 14:44:58 2010 -0700

    numa: x86_64: use generic percpu var numa_node_id() implementation
    
    x86 arch specific changes to use generic numa_node_id() based on generic
    percpu variable infrastructure.  Back out x86's custom version of
    numa_node_id()
    
    Signed-off-by: Lee Schermerhorn <lee.schermerhorn@hp.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Mel Gorman <mel@csn.ul.ie>
    Cc: Christoph Lameter <cl@linux-foundation.org>
    Cc: Nick Piggin <npiggin@suse.de>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Eric Whitney <eric.whitney@hp.com>
    Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: "Luck, Tony" <tony.luck@intel.com>
    Cc: Pekka Enberg <penberg@cs.helsinki.fi>
    Cc: <linux-arch@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 4a14d84ea2adc6c02dde4ae2d4552c15e014a475
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Wed May 26 14:44:33 2010 -0700

    x86_32: use asm-generic/scatterlist.h
    
    Cc: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 18e98307de0d746cb0845ebf66535ce2184c25a2
Author: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
Date:   Wed May 26 14:44:32 2010 -0700

    asm-generic: add NEED_SG_DMA_LENGTH to define sg_dma_len()
    
    There are only two ways to define sg_dma_len(); use sg->dma_length or
    sg->length.  This patch introduces NEED_SG_DMA_LENGTH that enables
    architectures to choose sg->dma_length or sg->length.
    
    Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Richard Henderson <rth@twiddle.net>
    Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Cc: Matt Turner <mattst88@gmail.com>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 6109e2ce2600e2db26cd0424bb9c6ed019723288
Merge: 0961d65 ac81860
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri May 21 18:58:52 2010 -0700

    Merge branch 'linux-next' of git://git.kernel.org/pub/scm/linux/kernel/git/jbarnes/pci-2.6
    
    * 'linux-next' of git://git.kernel.org/pub/scm/linux/kernel/git/jbarnes/pci-2.6: (36 commits)
      PCI: hotplug: pciehp: Removed check for hotplug of display devices
      PCI: read memory ranges out of Broadcom CNB20LE host bridge
      PCI: Allow manual resource allocation for PCI hotplug bridges
      x86/PCI: make ACPI MCFG reserved error messages ACPI specific
      PCI hotplug: Use kmemdup
      PM/PCI: Update PCI power management documentation
      PCI: output FW warning in pci_read/write_vpd
      PCI: fix typos pci_device_dis/enable to pci_dis/enable_device in comments
      PCI quirks: disable msi on AMD rs4xx internal gfx bridges
      PCI: Disable MSI for MCP55 on P5N32-E SLI
      x86/PCI: irq and pci_ids patch for additional Intel Cougar Point DeviceIDs
      PCI: aerdrv: trivial cleanup for aerdrv_core.c
      PCI: aerdrv: trivial cleanup for aerdrv.c
      PCI: aerdrv: introduce default_downstream_reset_link
      PCI: aerdrv: rework find_aer_service
      PCI: aerdrv: remove is_downstream
      PCI: aerdrv: remove magical ROOT_ERR_STATUS_MASKS
      PCI: aerdrv: redefine PCI_ERR_ROOT_*_SRC
      PCI: aerdrv: rework do_recovery
      PCI: aerdrv: rework get_e_source()
      ...

commit 3f6ea84a3035cc0ef7488f8e93bc76766799e082
Author: Ira W. Snyder <iws@ovro.caltech.edu>
Date:   Thu Apr 1 11:43:30 2010 -0700

    PCI: read memory ranges out of Broadcom CNB20LE host bridge
    
    Read the memory ranges behind the Broadcom CNB20LE host bridge out of the
    hardware. This allows PCI hotplugging to work, since we know which memory
    range to allocate PCI BAR's from.
    
    The x86 PCI code automatically prefers the ACPI _CRS information when it is
    available. In that case, this information is not used.
    
    Signed-off-by: Ira W. Snyder <iws@ovro.caltech.edu>
    Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>

commit cb41838bbc4403f7270a94b93a9a0d9fc9c2e7ea
Merge: 98f0172 c59bd56
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue May 18 09:17:01 2010 -0700

    Merge branch 'core-hweight-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'core-hweight-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, hweight: Use a 32-bit popcnt for __arch_hweight32()
      arch, hweight: Fix compilation errors
      x86: Add optimized popcnt variants
      bitops: Optimize hweight() by making use of compile-time evaluation

commit b7723f9d21d8d6043e63f5e3e412f321f5f1900c
Merge: 93c9d7f 6fc108a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue May 18 08:40:21 2010 -0700

    Merge branch 'x86-cleanups-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-cleanups-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86: Clean up arch/x86/Kconfig*
      x86-64: Don't export init_level4_pgt

commit c01d4323309a90a298fd81cf3a059ee1b12be2e9
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Sat May 15 22:57:48 2010 +0200

    lockup_detector: Adapt CONFIG_PERF_EVENT_NMI to other archs
    
    CONFIG_PERF_EVENT_NMI is something that need to be enabled from the
    arch. This is fine on x86 as PERF_EVENTS is builtin but if other
    archs select it, they will need to handle the PERF_EVENTS dependency.
    
    Instead, handle the dependency in the generic layer:
    
    - archs need to tell what they support through HAVE_PERF_EVENTS_NMI
    - Enable magically PERF_EVENTS_NMI if we have PERF_EVENTS and
      HAVE_PERF_EVENTS_NMI.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Don Zickus <dzickus@redhat.com>
    Cc: Cyrill Gorcunov <gorcunov@gmail.com>

commit a9aa1d02de36b450990b0e25a88fc2ff1c3e6b94
Merge: 5671a10 b57f95a
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Wed May 12 23:19:01 2010 +0200

    Merge commit 'v2.6.34-rc7' into perf/nmi
    
    Merge reason: catch up with latest softlockup detector changes.

commit 0102752e4c9e0655b39734550d4c35327954f7f9
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Sun Apr 11 18:55:56 2010 +0200

    hw-breakpoints: Separate constraint space for data and instruction breakpoints
    
    There are two outstanding fashions for archs to implement hardware
    breakpoints.
    
    The first is to separate breakpoint address pattern definition
    space between data and instruction breakpoints. We then have
    typically distinct instruction address breakpoint registers
    and data address breakpoint registers, delivered with
    separate control registers for data and instruction breakpoints
    as well. This is the case of PowerPc and ARM for example.
    
    The second consists in having merged breakpoint address space
    definition between data and instruction breakpoint. Address
    registers can host either instruction or data address and
    the access mode for the breakpoint is defined in a control
    register. This is the case of x86 and Super H.
    
    This patch adds a new CONFIG_HAVE_MIXED_BREAKPOINTS_REGS config
    that archs can select if they belong to the second case. Those
    will have their slot allocation merged for instructions and
    data breakpoints.
    
    The others will have a separate slot tracking between data and
    instruction breakpoints.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Acked-by: Paul Mundt <lethal@linux-sh.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
    Cc: K. Prasad <prasad@linux.vnet.ibm.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Ingo Molnar <mingo@elte.hu>

commit 6fc108a08dcddf8f9113cc7102ddaacf7ed37a6b
Author: Jan Beulich <JBeulich@novell.com>
Date:   Wed Apr 21 15:23:44 2010 +0100

    x86: Clean up arch/x86/Kconfig*
    
    No functional change intended.
    
    Signed-off-by: Jan Beulich <jbeulich@novell.com>
    LKML-Reference: <4BCF2690020000780003B340@vpn.id2.novell.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit ca7e0c612005937a4a5a75d3fed90459993de65c
Merge: 8141d00 f5284e7
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Apr 8 13:36:36 2010 +0200

    Merge branch 'linus' into perf/core
    
    Semantic conflict: arch/x86/kernel/cpu/perf_event_intel_ds.c
    
    Merge reason: pick up latest fixes, fix the conflict
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit d61931d89be506372d01a90d1755f6d0a9fafe2d
Author: Borislav Petkov <borislav.petkov@amd.com>
Date:   Fri Mar 5 17:34:46 2010 +0100

    x86: Add optimized popcnt variants
    
    Add support for the hardware version of the Hamming weight function,
    popcnt, present in CPUs which advertize it under CPUID, Function
    0x0000_0001_ECX[23]. On CPUs which don't support it, we fallback to the
    default lib/hweight.c sw versions.
    
    A synthetic benchmark comparing popcnt with __sw_hweight64 showed almost
    a 3x speedup on a F10h machine.
    
    Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
    LKML-Reference: <20100318112015.GC11152@aftab>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 51591e31dcb3716f03f962e26ec36a029aa46340
Author: David Rientjes <rientjes@google.com>
Date:   Thu Mar 25 15:39:27 2010 -0700

    x86: Increase CONFIG_NODES_SHIFT max to 10
    
    Some larger systems require more than 512 nodes, so increase the
    maximum CONFIG_NODES_SHIFT to 10 for a new max of 1024 nodes.
    
    This was tested with numa=fake=64M on systems with more than
    64GB of RAM. A total of 1022 nodes were initialized.
    
    Successfully builds with no additional warnings on x86_64
    allyesconfig.
    
    ( No effect on any existing config. Newly enabled CONFIG_MAXSMP=y
      will see the new default. )
    
    Signed-off-by: David Rientjes <rientjes@google.com>
    LKML-Reference: <alpine.DEB.2.00.1003251538060.8589@chino.kir.corp.google.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit d2f1e15b661e71fd52111f51c99a6ce41384e9ef
Merge: 40b7e05 220bf99
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Mar 22 18:46:57 2010 +0100

    Merge commit 'v2.6.34-rc2' into perf/core
    
    Merge reason: Pick up latest perf fixes from upstream.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 15c989d4d14b82f43cae7efc6a7794cdd556f274
Merge: 4e3eadd 0e152cd
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Mar 13 14:45:49 2010 -0800

    Merge branch 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, k8 nb: Fix boot crash: enable k8_northbridges unconditionally on AMD systems
      x86, UV: Fix target_cpus() in x2apic_uv_x.c
      x86: Reduce per cpu warning boot up messages
      x86: Reduce per cpu MCA boot up messages
      x86_64, cpa: Don't work hard in preserving kernel 2M mappings when using 4K already

commit 0e152cd7c16832bd5cadee0c2e41d9959bc9b6f9
Author: Borislav Petkov <bp@amd64.org>
Date:   Fri Mar 12 15:43:03 2010 +0100

    x86, k8 nb: Fix boot crash: enable k8_northbridges unconditionally on AMD systems
    
    de957628ce7c84764ff41331111036b3ae5bad0f changed setting of the
    x86_init.iommu.iommu_init function ptr only when GART IOMMU is
    found.
    
    One side effect of it is that num_k8_northbridges
    is not initialized anymore if not explicitly
    called. This resulted in uninitialized pointers in
    <arch/x86/kernel/cpu/intel_cacheinfo.c:amd_calc_l3_indices()>,
    for example, which uses the num_k8_northbridges thing through
    node_to_k8_nb_misc().
    
    Fix that through an initcall that runs right after the PCI
    subsystem and does all the scanning. Then, remove initialization
    in gart_iommu_init() which is a rootfs_initcall and we're
    running before that.
    
    What is more, since num_k8_northbridges is being used in other
    places beside GART IOMMU, include it whenever we add AMD CPU
    support. The previous dependency chain in kconfig contained
    
    K8_NB depends on AGP_AMD64|GART_IOMMU
    
    which was clearly incorrect. The more natural way in terms of
    hardware dependency should be
    
    AGP_AMD64|GART_IOMMU depends on K8_NB depends on CPU_SUP_AMD &&
    PCI. Make it so Number One!
    
    Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
    Cc: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
    Cc: Joerg Roedel <joerg.roedel@amd.com>
    LKML-Reference: <20100312144303.GA29262@aftab>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Tested-by: Joerg Roedel <joerg.roedel@amd.com>

commit 3bc4e4590de89c2dfcfb1000344cd072574c9ad4
Author: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
Date:   Wed Mar 10 15:23:22 2010 -0800

    pci-dma: x86: use include/linux/pci-dma.h
    
    Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Jesse Barnes <jbarnes@virtuousgeek.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit ba7e4d13fc7e25af1d167d40e6f028298dfc55ad
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Jun 6 13:58:12 2009 +0200

    perf, x86: Add INSTRUCTION_DECODER config flag
    
    The PEBS+LBR decoding magic needs the insn_get_length() infrastructure
    to be able to decode x86 instruction length.
    
    So split it out of KPROBES dependency and make it enabled when either
    KPROBES or PERF_EVENTS is enabled.
    
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Masami Hiramatsu <mhiramat@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    LKML-Reference: <new-submission>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 322aafa6645a48c3b7837ca7385f126ab78127fd
Merge: dd04265b c7bbf52
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Mar 7 15:59:39 2010 -0800

    Merge branch 'x86-mrst-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-mrst-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (30 commits)
      x86, mrst: Fix whitespace breakage in apb_timer.c
      x86, mrst: Fix APB timer per cpu clockevent
      x86, mrst: Remove X86_MRST dependency on PCI_IOAPIC
      x86, olpc: Use pci subarch init for OLPC
      x86, pci: Add arch_init to x86_init abstraction
      x86, mrst: Add Kconfig dependencies for Moorestown
      x86, pci: Exclude Moorestown PCI code if CONFIG_X86_MRST=n
      x86, numaq: Make CONFIG_X86_NUMAQ depend on CONFIG_PCI
      x86, pci: Add sanity check for PCI fixed bar probing
      x86, legacy_irq: Remove duplicate vector assigment
      x86, legacy_irq: Remove left over nr_legacy_irqs
      x86, mrst: Platform clock setup code
      x86, apbt: Moorestown APB system timer driver
      x86, mrst: Add vrtc platform data setup code
      x86, mrst: Add platform timer info parsing code
      x86, mrst: Fill in PCI functions in x86_init layer
      x86, mrst: Add dummy legacy pic to platform setup
      x86/PCI: Moorestown PCI support
      x86, ioapic: Add dummy ioapic functions
      x86, ioapic: Early enable ioapic for timer irq
      ...
    
    Fixed up semantic conflict of new clocksources due to commit
    17622339af25 ("clocksource: add argument to resume callback").

commit 660f6a360be399f4ebdd6572a3d24afe54e9bb1c
Merge: 586fac1 e5a1101
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Mar 5 10:50:22 2010 -0800

    Merge branch 'perf-probes-for-linus-2' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'perf-probes-for-linus-2' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86: Issue at least one memory barrier in stop_machine_text_poke()
      perf probe: Correct probe syntax on command line help
      perf probe: Add lazy line matching support
      perf probe: Show more lines after last line
      perf probe: Check function address range strictly in line finder
      perf probe: Use libdw callback routines
      perf probe: Use elfutils-libdw for analyzing debuginfo
      perf probe: Rename probe finder functions
      perf probe: Fix bugs in line range finder
      perf probe: Update perf probe document
      perf probe: Do not show --line option without dwarf support
      kprobes: Add documents of jump optimization
      kprobes/x86: Support kprobes jump optimization on x86
      x86: Add text_poke_smp for SMP cross modifying code
      kprobes/x86: Cleanup save/restore registers
      kprobes/x86: Boost probes when reentering
      kprobes: Jump optimization sysctl interface
      kprobes: Introduce kprobes jump optimization
      kprobes: Introduce generic insn_slot framework
      kprobes/x86: Cleanup RELATIVEJUMP_INSTRUCTION to RELATIVEJUMP_OPCODE

commit a626b46e17d0762d664ce471d40bc506b6e721ab
Merge: c1dcb4b dce46a0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Mar 3 08:15:05 2010 -0800

    Merge branch 'x86-bootmem-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-bootmem-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (30 commits)
      early_res: Need to save the allocation name in drop_range_partial()
      sparsemem: Fix compilation on PowerPC
      early_res: Add free_early_partial()
      x86: Fix non-bootmem compilation on PowerPC
      core: Move early_res from arch/x86 to kernel/
      x86: Add find_fw_memmap_area
      Move round_up/down to kernel.h
      x86: Make 32bit support NO_BOOTMEM
      early_res: Enhance check_and_double_early_res
      x86: Move back find_e820_area to e820.c
      x86: Add find_early_area_size
      x86: Separate early_res related code from e820.c
      x86: Move bios page reserve early to head32/64.c
      sparsemem: Put mem map for one node together.
      sparsemem: Put usemap for one node together
      x86: Make 64 bit use early_res instead of bootmem before slab
      x86: Only call dma32_reserve_bootmem 64bit !CONFIG_NUMA
      x86: Make early_node_mem get mem > 4 GB if possible
      x86: Dynamically increase early_res array size
      x86: Introduce max_early_res and early_res_count
      ...

commit d8111cd91abee016d62b401e057fee66ba80be67
Author: Jacob Pan <jacob.jun.pan@linux.intel.com>
Date:   Tue Mar 2 09:19:28 2010 -0800

    x86, mrst: Remove X86_MRST dependency on PCI_IOAPIC
    
    PCI_IOAPIC is used for PCI hotplug, Moorestown does not have ACPI PCI
    hotplug, as it does not have ACPI.  This unnecessary dependency causes
    X86_MRST fail to be selected if ACPI is not selected.
    
    Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
    LKML-Reference: <1267550368-7435-1-git-send-email-jacob.jun.pan@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 6fb83029db161141d68cf019760a893d03d0682b
Merge: 281b371 e01292b
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Feb 27 10:06:10 2010 +0100

    Merge branch 'tracing/core' of git://git.kernel.org/pub/scm/linux/kernel/git/frederic/random-tracing into tracing/core

commit 4b2f3f7d0fe97ad312fb572c8f8d88836ae8fb1e
Author: Jacob Pan <jacob.jun.pan@linux.intel.com>
Date:   Thu Feb 25 10:02:14 2010 -0800

    x86, mrst: Add Kconfig dependencies for Moorestown
    
    The Moorestown platform requires IOAPIC for all interrupts from the
    south complex, since there is no legacy PIC.
    
    Furthermore, Moorestown I/O requires PCI.  Moorestown PCI depends on PCI MMCONFIG
    and DIRECT method to perform device enumeration, as there is no PCI BIOS.
    
    [ hpa: rewrote commit message ]
    
    Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
    LKML-Reference: <1267120934-9505-1-git-send-email-jacob.jun.pan@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit a92d152ef9dd89c578ca2ec7118e9de8fb74a75f
Author: Pan, Jacob jun <jacob.jun.pan@intel.com>
Date:   Wed Feb 24 16:59:55 2010 -0800

    x86, numaq: Make CONFIG_X86_NUMAQ depend on CONFIG_PCI
    
    The NUMAQ initialization sets x86_init.pci.init to pci_numaq_init,
    which obviously isn't defined if CONFIG_PCI isn't defined.  This
    dependency was implicit in the past, because pci_numaq_init was
    invoked from arch/x86/pci/legacy.c, which itself was conditioned on
    CONFIG_PCI.
    
    I suspect that no NUMA-Q machines without PCI were ever built, so
    instead of complicating the code by adding #ifdefs or stub functions,
    just disable this bit of the configuration space.
    
    [ hpa: rewrote the checkin comment ]
    
    Signed-off-by: Jacob Pan <jacob.jun.pan@intel.com>
    LKML-Reference: <43F901BD926A4E43B106BF17856F0755A321EE1F@orsmsx508.amr.corp.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit c0f7ac3a9edde786bc129d37627953a8b8abefdf
Author: Masami Hiramatsu <mhiramat@redhat.com>
Date:   Thu Feb 25 08:34:46 2010 -0500

    kprobes/x86: Support kprobes jump optimization on x86
    
    Introduce x86 arch-specific optimization code, which supports
    both of x86-32 and x86-64.
    
    This code also supports safety checking, which decodes whole of
    a function in which probe is inserted, and checks following
    conditions before optimization:
     - The optimized instructions which will be replaced by a jump instruction
       don't straddle the function boundary.
     - There is no indirect jump instruction, because it will jumps into
       the address range which is replaced by jump operand.
     - There is no jump/loop instruction which jumps into the address range
       which is replaced by jump operand.
     - Don't optimize kprobes if it is in functions into which fixup code will
       jumps.
    
    This uses text_poke_multibyte() which doesn't support modifying
    code on NMI/MCE handler. However, since kprobes itself doesn't
    support NMI/MCE code probing, it's not a problem.
    
    Changes in v9:
     - Use *_text_reserved() for checking the probe can be optimized.
     - Verify jump address range is in 2G range when preparing slot.
     - Backup original code when switching optimized buffer, instead of
       preparing buffer, because there can be int3 of other probes in
       preparing phase.
     - Check kprobe is disabled in arch_check_optimized_kprobe().
     - Strictly check indirect jump opcodes (ff /4, ff /5).
    
    Changes in v6:
     - Split stop_machine-based jump patching code.
     - Update comments and coding style.
    
    Changes in v5:
     - Introduce stop_machine-based jump replacing.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@redhat.com>
    Cc: systemtap <systemtap@sources.redhat.com>
    Cc: DLE <dle-develop@lists.sourceforge.net>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Cc: Jim Keniston <jkenisto@us.ibm.com>
    Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Anders Kaseorg <andersk@ksplice.com>
    Cc: Tim Abbott <tabbott@ksplice.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Jason Baron <jbaron@redhat.com>
    Cc: Mathieu Desnoyers <compudj@krystal.dyndns.org>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    LKML-Reference: <20100225133446.6725.78994.stgit@localhost6.localdomain6>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit bb24c4716185f6e116c440462c65c1f56649183b
Author: Jacob Pan <jacob.jun.pan@intel.com>
Date:   Wed Sep 2 07:37:17 2009 -0700

    x86, apbt: Moorestown APB system timer driver
    
    Moorestown platform does not have PIT or HPET platform timers.  Instead it
    has a bank of eight APB timers.  The number of available timers to the os
    is exposed via SFI mtmr tables.  All APB timer interrupts are routed via
    ioapic rtes and delivered as MSI.
    Currently, we use timer 0 and 1 for per cpu clockevent devices, timer 2
    for clocksource.
    
    Signed-off-by: Jacob Pan <jacob.jun.pan@intel.com>
    LKML-Reference: <43F901BD926A4E43B106BF17856F0755A318D2D2@orsmsx508.amr.corp.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit f850c30c8b426ba1688cb63b1a3e534eed03a138
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Wed Feb 10 17:25:17 2010 +0100

    tracing/kprobes: Make Kconfig dependencies generic
    
    KPROBES_EVENT actually depends on the regs and stack access API
    (b1cf540f) and not on x86.
    So introduce a new config option which architectures can select if
    they have the API implemented and switch x86.
    
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Acked-by: Masami Hiramatsu <mhiramat@redhat.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    LKML-Reference: <20100210162517.GB6933@osiris.boeblingen.de.ibm.com>
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>

commit 580e0ad21d6d6f932461d24b47041e3dd499c23f
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Tue Feb 16 18:40:35 2010 -0800

    core: Move early_res from arch/x86 to kernel/
    
    This makes the range reservation feature available to other
    architectures.
    
    -v2: add get_max_mapped, max_pfn_mapped only defined in x86...
         to fix PPC compiling
    -v3: according to hpa, add CONFIG_HAVE_EARLY_RES
    -v4: fix typo about EARLY_RES in config
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    LKML-Reference: <4B7B5723.4070009@kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit c3128fb6ad39b0edda6675d20585a64846cf89ea
Author: Don Zickus <dzickus@redhat.com>
Date:   Fri Feb 12 17:19:18 2010 -0500

    nmi_watchdog: Use a boolean config flag for compiling
    
    Determines if an arch has setup arch specific perf_events and
    nmi_watchdog code.  This should restrict compiles to only those
    arches ready.
    
    Signed-off-by: Don Zickus <dzickus@redhat.com>
    Cc: peterz@infradead.org
    Cc: gorcunov@gmail.com
    Cc: aris@redhat.com
    LKML-Reference: <1266013161-31197-1-git-send-email-dzickus@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 59be5a8e8ce765cf739ec7f07176219972de7481
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Wed Feb 10 01:20:28 2010 -0800

    x86: Make 32bit support NO_BOOTMEM
    
    Let's make 32bit consistent with 64bit.
    
    -v2: Andrew pointed out for 32bit that we should use -1ULL
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    LKML-Reference: <1265793639-15071-25-git-send-email-yinghai@kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 08677214e318297f228237be0042aac754f48f1d
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Wed Feb 10 01:20:20 2010 -0800

    x86: Make 64 bit use early_res instead of bootmem before slab
    
    Finally we can use early_res to replace bootmem for x86_64 now.
    
    Still can use CONFIG_NO_BOOTMEM to enable it or not.
    
    -v2: fix 32bit compiling about MAX_DMA32_PFN
    -v3: folded bug fix from LKML message below
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    LKML-Reference: <4B747239.4070907@kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit b160091802d4a76dd063facb09fcf10bf5d5d747
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Sat Jan 23 18:27:47 2010 -0800

    x86: Remove "x86 CPU features in debugfs" (CONFIG_X86_CPU_DEBUG)
    
    CONFIG_X86_CPU_DEBUG, which provides some parsed versions of the x86
    CPU configuration via debugfs, has caused boot failures on real
    hardware.  The value of this feature has been marginal at best, as all
    this information is already available to userspace via generic
    interfaces.
    
    Causes crashes that have not been fixed + minimal utility -> remove.
    
    See the referenced LKML thread for more information.
    
    Reported-by: Ozan Çağlayan <ozan@pardus.org.tr>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    LKML-Reference: <alpine.LFD.2.00.1001221755320.13231@localhost.localdomain>
    Cc: Jaswinder Singh Rajput <jaswinder@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Rafael J. Wysocki <rjw@sisk.pl>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: <stable@kernel.org>

commit a29815a333c6c6e677294bbe5958e771d0aad3fd
Author: Avi Kivity <avi@qumranet.com>
Date:   Sun Jan 10 16:28:09 2010 +0200

    core, x86: make LIST_POISON less deadly
    
    The list macros use LIST_POISON1 and LIST_POISON2 as undereferencable
    pointers in order to trap erronous use of freed list_heads.  Unfortunately
    userspace can arrange for those pointers to actually be dereferencable,
    potentially turning an oops to an expolit.
    
    To avoid this allow architectures (currently x86_64 only) to override
    the default values for these pointers with truly-undereferencable values.
    This is easy on x86_64 as the virtual address space is large and contains
    areas that cannot be mapped.
    
    Other 64-bit architectures will likely find similar unmapped ranges.
    
    [ingo: switch to 0xdead000000000000 as the unmapped area]
    [ingo: add comments, cleanup]
    [jaswinder: eliminate sparse warnings]
    
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jaswinder Singh Rajput <jaswinderrajput@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Avi Kivity <avi@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 13510997d600a076e064f10587a8f6d20f8fff41
Author: Albin Tonnerre <albin.tonnerre@free-electrons.com>
Date:   Fri Jan 8 14:42:45 2010 -0800

    x86: add support for LZO-compressed kernels
    
    The necessary changes to the x86 Kconfig and boot/compressed to allow the
    use of this new compression method
    
    Signed-off-by: Albin Tonnerre <albin.tonnerre@free-electrons.com>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Tested-by: Wu Zhangjin <wuzhangjin@gmail.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Russell King <rmk@arm.linux.org.uk>
    Acked-by: Russell King <rmk@arm.linux.org.uk>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 99e8c5a3b875a34d894a711c9a3669858d6adf45
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Thu Dec 17 01:33:54 2009 +0100

    hw-breakpoints: Fix hardware breakpoints -> perf events dependency
    
    The kbuild's select command doesn't propagate through the config
    dependencies.
    
    Hence the current rules of hardware breakpoint's config can't
    ensure perf can never be disabled under us.
    
    We have:
    
    config X86
    	selects HAVE_HW_BREAKPOINTS
    
    config HAVE_HW_BREAKPOINTS
    	select PERF_EVENTS
    
    config PERF_EVENTS
    	[...]
    
    x86 will select the breakpoints but that won't propagate to perf
    events. The user can still disable the latter, but it is
    necessary for the breakpoints.
    
    What we need is:
    
     - x86 selects HAVE_HW_BREAKPOINTS and PERF_EVENTS
     - HAVE_HW_BREAKPOINTS depends on PERF_EVENTS
    
    so that we ensure PERF_EVENTS is enabled and frozen for x86.
    
    This fixes the following kind of build errors:
    
     In file included from arch/x86/kernel/hw_breakpoint.c:31:
     include/linux/hw_breakpoint.h: In function 'hw_breakpoint_addr':
     include/linux/hw_breakpoint.h:39: error: 'struct perf_event' has no member named 'attr'
    
    v2: Select also ANON_INODES from x86, required for perf
    
    Reported-by: Cyrill Gorcunov <gorcunov@gmail.com>
    Reported-by: Michal Marek <mmarek@suse.cz>
    Reported-by: Andrew Randrianasulu <randrik_a@yahoo.com>
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Randy Dunlap <randy.dunlap@oracle.com>
    Cc: K.Prasad <prasad@linux.vnet.ibm.com>
    LKML-Reference: <1261010034-7786-1-git-send-regression-fweisbec@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c95d1e53ed89b75a4d7b68d1cbae4607b1479243
Author: Andres Salomon <dilinger@collabora.co.uk>
Date:   Mon Dec 14 18:00:41 2009 -0800

    cs5535: drop the Geode-specific MFGPT/GPIO code
    
    With generic modular drivers handling all of this stuff, the
    geode-specific code can go away.  The cs5535-gpio, cs5535-mfgpt, and
    cs5535-clockevt drivers now handle this.
    
    Signed-off-by: Andres Salomon <dilinger@collabora.co.uk>
    Cc: Jordan Crouse <jordan@cosmicpenguin.net>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: john stultz <johnstul@us.ibm.com>
    Cc: Chris Ball <cjb@laptop.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 3c55494670745e523f69b56edb66ca0b50a470c2
Author: Andres Salomon <dilinger@collabora.co.uk>
Date:   Mon Dec 14 18:00:36 2009 -0800

    ALSA: cs5535audio: free OLPC quirks from reliance on MGEODE_LX cpu optimization
    
    Previously, OLPC support for the mic extensions was only enabled in the
    ALSA driver if CONFIG_OLPC and CONFIG_MGEODE_LX were both set.  This was
    because the old geode GPIO code was written in a manner that assumed
    CONFIG_MGEODE_LX.  With the new cs553x-gpio driver, this is no longer the
    case; as such, we can drop the requirement on CONFIG_MGEODE_LX and instead
    include a requirement on GPIOLIB.
    
    We use the generic GPIO API rather than the cs553x-specific API.
    
    Signed-off-by: Andres Salomon <dilinger@collabora.co.uk>
    Cc: Takashi Iwai <tiwai@suse.de>
    Cc: Jordan Crouse <jordan@cosmicpenguin.net>
    Cc: David Brownell <david-b@pacbell.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 86ed4aa457f9c832856156a2ee6477d108825855
Merge: 830cd2a fe5ed91
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Dec 8 13:38:11 2009 -0800

    Merge branch 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, mce: don't restart timer if disabled
      x86: Use -maccumulate-outgoing-args for sane mcount prologues
      x86: Prevent GCC 4.4.x (pentium-mmx et al) function prologue wreckage
      x86: AMD Northbridge: Verify NB's node is online
      x86 VSDO: Fix Kconfig help
      x86: Fix typo in Intel CPU cache size descriptor
      x86: Add new Intel CPU cache size descriptors

commit b391738bd1c708fe85592410c6a7c9752689481d
Merge: e33c019 2fb8f4e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Dec 8 13:34:17 2009 -0800

    Merge branch 'x86-pat-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-pat-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86: pat: Remove ioremap_default()
      x86: pat: Clean up req_type special case for reserve_memtype()
      x86: Relegate CONFIG_PAT and CONFIG_MTRR configurability to EMBEDDED

commit ed9216c1717a3f3738a77908aff78995ea69e7ff
Merge: d7fc02c d569672
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Dec 8 08:02:38 2009 -0800

    Merge branch 'kvm-updates/2.6.33' of git://git.kernel.org/pub/scm/virt/kvm/kvm
    
    * 'kvm-updates/2.6.33' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (84 commits)
      KVM: VMX: Fix comparison of guest efer with stale host value
      KVM: s390: Fix prefix register checking in arch/s390/kvm/sigp.c
      KVM: Drop user return notifier when disabling virtualization on a cpu
      KVM: VMX: Disable unrestricted guest when EPT disabled
      KVM: x86 emulator: limit instructions to 15 bytes
      KVM: s390: Make psw available on all exits, not just a subset
      KVM: x86: Add KVM_GET/SET_VCPU_EVENTS
      KVM: VMX: Report unexpected simultaneous exceptions as internal errors
      KVM: Allow internal errors reported to userspace to carry extra data
      KVM: Reorder IOCTLs in main kvm.h
      KVM: x86: Polish exception injection via KVM_SET_GUEST_DEBUG
      KVM: only clear irq_source_id if irqchip is present
      KVM: x86: disallow KVM_{SET,GET}_LAPIC without allocated in-kernel lapic
      KVM: x86: disallow multiple KVM_CREATE_IRQCHIP
      KVM: VMX: Remove vmx->msr_offset_efer
      KVM: MMU: update invlpg handler comment
      KVM: VMX: move CR3/PDPTR update to vmx_set_cr3
      KVM: remove duplicated task_switch check
      KVM: powerpc: Fix BUILD_BUG_ON condition
      KVM: VMX: Use shared msr infrastructure
      ...
    
    Trivial conflicts due to new Kconfig options in arch/Kconfig and kernel/Makefile

commit 58988b07cfe2ebe9f9b39d973fd8a083390e749f
Merge: 22763c5 8e7cac7
Author: Avi Kivity <avi@redhat.com>
Date:   Thu Dec 3 09:30:06 2009 +0200

    Merge remote branch 'tip/x86/entry' into kvm-updates/2.6.33
    
    Signed-off-by: Avi Kivity <avi@redhat.com>

commit 96200591a34f8ecb98481c626125df43a2463b55
Merge: 7031281 68efa37
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Nov 21 14:07:23 2009 +0100

    Merge branch 'tracing/hw-breakpoints' into perf/core
    
    Conflicts:
    	arch/x86/kernel/kprobes.c
    	kernel/trace/Makefile
    
    Merge reason: hw-breakpoints perf integration is looking
                  good in testing and in reviews, plus conflicts
                  are mounting up - so merge & resolve.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e84446de5cccd90de7d7ec46527d3b343b022a09
Author: Randy Dunlap <randy.dunlap@oracle.com>
Date:   Tue Nov 10 15:46:52 2009 -0800

    x86 VSDO: Fix Kconfig help
    
    COMPAT_VDSO has 2 help text blocks, but kconfig only uses the
    last one found, so merge the 2 blocks.
    
    It would be real nice if kconfig would warn about this.
    
    Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
    LKML-Reference: <4AF9FB6C.70003@oracle.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 14a3f40aafacde1dfd6912327ae14df4baf10304
Author: Arjan van de Ven <arjan@infradead.org>
Date:   Fri Oct 23 07:31:01 2009 -0700

    x86: Remove STACKPROTECTOR_ALL
    
    STACKPROTECTOR_ALL has a really high overhead (runtime and stack
    footprint) and is not really worth it protection wise (the
    normal STACKPROTECTOR is in effect for all functions with
    buffers already), so lets just remove the option entirely.
    
    Reported-by: Dave Jones <davej@redhat.com>
    Reported-by: Chuck Ebbert <cebbert@redhat.com>
    Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Eric Sandeen <sandeen@redhat.com>
    LKML-Reference: <20091023073101.3dce4ebb@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 0f8f86c7bdd1c954fbe153af437a0d91a6c5721a
Merge: dca2d6a f39cdf2
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Sun Oct 18 01:09:09 2009 +0200

    Merge commit 'perf/core' into perf/hw-breakpoint
    
    Conflicts:
    	kernel/Makefile
    	kernel/trace/Makefile
    	kernel/trace/trace.h
    	samples/Makefile
    
    Merge reason: We need to be uptodate with the perf events development
    branch because we plan to rewrite the breakpoints API on top of
    perf events.

commit c03cb3149daed3e411657e3212d05ae27cf1a874
Author: Arjan van de Ven <arjan@infradead.org>
Date:   Sun Oct 11 10:33:02 2009 -0700

    x86: Relegate CONFIG_PAT and CONFIG_MTRR configurability to EMBEDDED
    
    MTRR and PAT support (which got added to CPUs over 10 years ago)
    are no longer really optional in that more and more things are
    depending on PAT just working, including various drivers and newer
    versions of X.  (to not even speak of MTRR)
    
    Having this as a regular config option just no longer makes sense.
    
    This patch relegates CONFIG_X86_PAT to the EMBEDDED category so
    ultra-embedded can still disable it if they really need to.
    
    Also-Suggested-by: Roland Dreier <rdreier@cisco.com>
    Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Henrique de Moraes Holschuh <hmh@hmh.eng.br>
    LKML-Reference: <20091011103302.62bded41@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit d0153ca35d344d9b640dc305031b0703ba3f30f0
Author: Alok Kataria <akataria@vmware.com>
Date:   Tue Sep 29 10:25:24 2009 -0700

    x86, vmi: Mark VMI deprecated and schedule it for removal
    
    Add text in feature-removal.txt indicating that VMI will be removed in
    the 2.6.37 timeframe.
    
    Signed-off-by: Alok N Kataria <akataria@vmware.com>
    Acked-by: Chris Wright <chrisw@sous-sol.org>
    LKML-Reference: <1254193238.13456.48.camel@ank32.eng.vmware.com>
    [ removed a bogus Kconfig change, marked (DEPRECATED) in Kconfig ]
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 7c68af6e32c73992bad24107311f3433c89016e2
Author: Avi Kivity <avi@redhat.com>
Date:   Sat Sep 19 09:40:22 2009 +0300

    core, x86: Add user return notifiers
    
    Add a general per-cpu notifier that is called whenever the kernel is
    about to return to userspace.  The notifier uses a thread_info flag
    and existing checks, so there is no impact on user return or context
    switch fast paths.
    
    This will be used initially to speed up KVM task switching by lazily
    updating MSRs.
    
    Signed-off-by: Avi Kivity <avi@redhat.com>
    LKML-Reference: <1253342422-13811-1-git-send-email-avi@redhat.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 4701472e441e41be2549a25228f703bc9cd13b5b
Author: Jaswinder Singh Rajput <jaswinder@kernel.org>
Date:   Sat Sep 26 21:41:41 2009 +0530

    x86, SLUB: Remove unused CONFIG FAST_CMPXCHG_LOCAL
    
    Remove unused CONFIG FAST_CMPXCHG_LOCAL from Kconfig.
    
    Reported-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Signed-off-by: Jaswinder Singh Rajput <jaswinderrajput@gmail.com>
    Acked-by: Christoph Lameter <cl@linux-foundation.org>
    Cc: Pekka Enberg <penberg@cs.helsinki.fi>
    Cc: Matt Mackall <mpm@selenic.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: "Robert P. J. Day" <rpjday@crashcourse.ca>
    Cc: linux-mm@kvack.org
    LKML-Reference: <1253981501.4568.61.camel@ht.satnam>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit d949f36f1865c60239d4265b50c4b75354fcb8f3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Sep 26 09:35:07 2009 -0700

    x86: Fix hwpoison code related build failure on 32-bit NUMAQ
    
    This build failure triggers:
    
     In file included from include/linux/suspend.h:8,
                     from arch/x86/kernel/asm-offsets_32.c:11,
                     from arch/x86/kernel/asm-offsets.c:2:
     include/linux/mm.h:503:2: error: #error SECTIONS_WIDTH+NODES_WIDTH+ZONES_WIDTH > BITS_PER_LONG - NR_PAGEFLAGS
    
    Because due to the hwpoison page flag we ran out of page
    flags on 32-bit.
    
    Dont turn on hwpoison on 32-bit NUMA (it's rare in any
    case).
    
    Also clean up the Kconfig dependencies in the generic MM
    code by introducing ARCH_SUPPORTS_MEMORY_FAILURE.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit b09a75fc5e77b7c58d097236f89b1ff72dcdb562
Merge: cf63ff5f b94996c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 23 10:06:10 2009 -0700

    Merge git://git.infradead.org/iommu-2.6
    
    * git://git.infradead.org/iommu-2.6: (23 commits)
      intel-iommu: Disable PMRs after we enable translation, not before
      intel-iommu: Kill DMAR_BROKEN_GFX_WA option.
      intel-iommu: Fix integer wrap on 32 bit kernels
      intel-iommu: Fix integer overflow in dma_pte_{clear_range,free_pagetable}()
      intel-iommu: Limit DOMAIN_MAX_PFN to fit in an 'unsigned long'
      intel-iommu: Fix kernel hang if interrupt remapping disabled in BIOS
      intel-iommu: Disallow interrupt remapping if not all ioapics covered
      intel-iommu: include linux/dmi.h to use dmi_ routines
      pci/dmar: correct off-by-one error in dmar_fault()
      intel-iommu: Cope with yet another BIOS screwup causing crashes
      intel-iommu: iommu init error path bug fixes
      intel-iommu: Mark functions with __init
      USB: Work around BIOS bugs by quiescing USB controllers earlier
      ia64: IOMMU passthrough mode shouldn't trigger swiotlb init
      intel-iommu: make domain_add_dev_info() call domain_context_mapping()
      intel-iommu: Unify hardware and software passthrough support
      intel-iommu: Cope with broken HP DC7900 BIOS
      iommu=pt is a valid early param
      intel-iommu: double kfree()
      intel-iommu: Kill pointless intel_unmap_single() function
      ...
    
    Fixed up trivial include lines conflict in drivers/pci/intel-iommu.c

commit 746942d06acdb4dd78d16baa5f3728a48a033bdd
Merge: c11f6c8 c602c65
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 23 09:34:07 2009 -0700

    Merge branch 'sfi-release' of git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux-sfi-2.6
    
    * 'sfi-release' of git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux-sfi-2.6:
      SFI: remove unneeded includes
      sfi: Remove unused code
      SFI: Hook PCI MMCONFIG
      x86: add arch-specific SFI support
      SFI: add capability to parse ACPI tables
      SFI: add platform-independent core support
      SFI: create linux/sfi.h
      SFI: Simple Firmware Interface - MAINTAINERS, Kconfig

commit 9492587cf35d370db33ef4b38375dfb35a105b61
Author: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
Date:   Tue Sep 22 16:45:45 2009 -0700

    kcore: register text area in generic way
    
    Some 64bit arch has special segment for mapping kernel text.  It should be
    entried to /proc/kcore in addtion to direct-linear-map, vmalloc area.
    This patch unifies KCORE_TEXT entry scattered under x86 and ia64.
    
    I'm not familiar with other archs (mips has its own even after this patch)
    but range of [_stext ..._end) is a valid area of text and it's not in
    direct-map area, defining CONFIG_ARCH_PROC_KCORE_TEXT is only a necessary
    thing to do.
    
    Note: I left mips as it is now.
    
    Signed-off-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: WANG Cong <xiyou.wangcong@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit cdd6c482c9ff9c55475ee7392ec8f672eddb7be6
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Sep 21 12:02:48 2009 +0200

    perf: Do the big rename: Performance Counters -> Performance Events
    
    Bye-bye Performance Counters, welcome Performance Events!
    
    In the past few months the perfcounters subsystem has grown out its
    initial role of counting hardware events, and has become (and is
    becoming) a much broader generic event enumeration, reporting, logging,
    monitoring, analysis facility.
    
    Naming its core object 'perf_counter' and naming the subsystem
    'perfcounters' has become more and more of a misnomer. With pending
    code like hw-breakpoints support the 'counter' name is less and
    less appropriate.
    
    All in one, we've decided to rename the subsystem to 'performance
    events' and to propagate this rename through all fields, variables
    and API names. (in an ABI compatible fashion)
    
    The word 'event' is also a bit shorter than 'counter' - which makes
    it slightly more convenient to write/handle as well.
    
    Thanks goes to Stephane Eranian who first observed this misnomer and
    suggested a rename.
    
    User-space tooling and ABI compatibility is not affected - this patch
    should be function-invariant. (Also, defconfigs were not touched to
    keep the size down.)
    
    This patch has been generated via the following script:
    
      FILES=$(find * -type f | grep -vE 'oprofile|[^K]config')
    
      sed -i \
        -e 's/PERF_EVENT_/PERF_RECORD_/g' \
        -e 's/PERF_COUNTER/PERF_EVENT/g' \
        -e 's/perf_counter/perf_event/g' \
        -e 's/nb_counters/nb_events/g' \
        -e 's/swcounter/swevent/g' \
        -e 's/tpcounter_event/tp_event/g' \
        $FILES
    
      for N in $(find . -name perf_counter.[ch]); do
        M=$(echo $N | sed 's/perf_counter/perf_event/g')
        mv $N $M
      done
    
      FILES=$(find . -name perf_event.*)
    
      sed -i \
        -e 's/COUNTER_MASK/REG_MASK/g' \
        -e 's/COUNTER/EVENT/g' \
        -e 's/\<event\>/event_id/g' \
        -e 's/counter/event/g' \
        -e 's/Counter/Event/g' \
        $FILES
    
    ... to keep it as correct as possible. This script can also be
    used by anyone who has pending perfcounters patches - it converts
    a Linux kernel tree over to the new naming. We tried to time this
    change to the point in time where the amount of pending patches
    is the smallest: the end of the merge window.
    
    Namespace clashes were fixed up in a preparatory patch - and some
    stylistic fallout will be fixed up in a subsequent patch.
    
    ( NOTE: 'counters' are still the proper terminology when we deal
      with hardware registers - and these sed scripts are a bit
      over-eager in renaming them. I've undone some of that, but
      in case there's something left where 'counter' would be
      better than 'event' we can undo that on an individual basis
      instead of touching an otherwise nicely automated patch. )
    
    Suggested-by: Stephane Eranian <eranian@google.com>
    Acked-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Acked-by: Paul Mackerras <paulus@samba.org>
    Reviewed-by: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Kyle McMartin <kyle@mcmartin.ca>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: <linux-arch@vger.kernel.org>
    LKML-Reference: <new-submission>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 0c02a20ff7695f9c54cc7c013dda326270ccdac8
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Sat Sep 19 09:37:23 2009 -0700

    intel-iommu: Kill DMAR_BROKEN_GFX_WA option.
    
    Just make it depend on BROKEN for now, in case people scream really loud
    about it (and because we might want to keep some of this logic for an
    upcoming BIOS workaround, so I don't just want to rip it out entirely
    just yet). But for graphics devices, it really ought to be unnecessary.
    
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>

commit c602c65b2f81d14456771d1e3f15d1381f4b7efa
Merge: 3834f47 78f28b7
Author: Len Brown <len.brown@intel.com>
Date:   Sat Sep 19 00:11:26 2009 -0400

    Merge branch 'linus' into sfi-release
    
    Conflicts:
    	arch/x86/kernel/setup.c
    	drivers/acpi/power.c
    	init/main.c
    
    Signed-off-by: Len Brown <len.brown@intel.com>

commit 78f28b7c555359c67c2a0d23f7436e915329421e
Merge: 3240a77 7bd867d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Sep 18 14:05:47 2009 -0700

    Merge branch 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-platform-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (38 commits)
      x86: Move get/set_wallclock to x86_platform_ops
      x86: platform: Fix section annotations
      x86: apic namespace cleanup
      x86: Distangle ioapic and i8259
      x86: Add Moorestown early detection
      x86: Add hardware_subarch ID for Moorestown
      x86: Add early platform detection
      x86: Move tsc_init to late_time_init
      x86: Move tsc_calibration to x86_init_ops
      x86: Replace the now identical time_32/64.c by time.c
      x86: time_32/64.c unify profile_pc
      x86: Move calibrate_cpu to tsc.c
      x86: Make timer setup and global variables the same in time_32/64.c
      x86: Remove mca bus ifdef from timer interrupt
      x86: Simplify timer_ack magic in time_32.c
      x86: Prepare unification of time_32/64.c
      x86: Remove do_timer hook
      x86: Add timer_init to x86_init_ops
      x86: Move percpu clockevents setup to x86_init_ops
      x86: Move xen_post_allocator_init into xen_pagetable_setup_done
      ...
    
    Fix up conflicts in arch/x86/include/asm/io_apic.h

commit df58bee21ed218cb7dfb561a590b1bd2a99531cf
Merge: dcbf77b e34e77c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Sep 17 21:07:08 2009 -0700

    Merge branch 'x86-mce-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-mce-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (21 commits)
      x86, mce: Fix compilation with !CONFIG_DEBUG_FS in mce-severity.c
      x86, mce: CE in last bank prevents panic by unknown MCE
      x86, mce: Fake panic support for MCE testing
      x86, mce: Move debugfs mce dir creating to mce.c
      x86, mce: Support specifying raise mode for software MCE injection
      x86, mce: Support specifying context for software mce injection
      x86, mce: fix reporting of Thermal Monitoring mechanism enabled
      x86, mce: remove never executed code
      x86, mce: add missing __cpuinit tags
      x86, mce: fix "mce" boot option handling for CONFIG_X86_NEW_MCE
      x86, mce: don't log boot MCEs on Pentium M (model == 13) CPUs
      x86: mce: Lower maximum number of banks to architecture limit
      x86: mce: macros to compute banks MSRs
      x86: mce: Move per bank data in a single datastructure
      x86: mce: Move code in mce.c
      x86: mce: Rename CONFIG_X86_NEW_MCE to CONFIG_X86_MCE
      x86: mce: Remove old i386 machine check code
      x86: mce: Update X86_MCE description in x86/Kconfig
      x86: mce: Make CONFIG_X86_ANCIENT_MCE dependent on CONFIG_X86_MCE
      x86, mce: use atomic_inc_return() instead of add by 1
      ...
    
    Manually fixed up trivial conflicts:
    	Documentation/feature-removal-schedule.txt
    	arch/x86/kernel/cpu/mcheck/mce.c

commit ada3fa15057205b7d3f727bba5cd26b5912e350f
Merge: 2f82af0 5579fd7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Sep 15 09:39:44 2009 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu: (46 commits)
      powerpc64: convert to dynamic percpu allocator
      sparc64: use embedding percpu first chunk allocator
      percpu: kill lpage first chunk allocator
      x86,percpu: use embedding for 64bit NUMA and page for 32bit NUMA
      percpu: update embedding first chunk allocator to handle sparse units
      percpu: use group information to allocate vmap areas sparsely
      vmalloc: implement pcpu_get_vm_areas()
      vmalloc: separate out insert_vmalloc_vm()
      percpu: add chunk->base_addr
      percpu: add pcpu_unit_offsets[]
      percpu: introduce pcpu_alloc_info and pcpu_group_info
      percpu: move pcpu_lpage_build_unit_map() and pcpul_lpage_dump_cfg() upward
      percpu: add @align to pcpu_fc_alloc_fn_t
      percpu: make @dyn_size mandatory for pcpu_setup_first_chunk()
      percpu: drop @static_size from first chunk allocators
      percpu: generalize first chunk allocator selection
      percpu: build first chunk allocators selectively
      percpu: rename 4k first chunk allocator to page
      percpu: improve boot messages
      percpu: fix pcpu_reclaim() locking
      ...
    
    Fix trivial conflict as by Tejun Heo in kernel/sched.c

commit 227423904c709a8e60245c97081bbeb4fb500655
Merge: 1aaf2e5 fa526d0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Sep 15 09:19:38 2009 -0700

    Merge branch 'x86-pat-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-pat-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, pat: Fix cacheflush address in change_page_attr_set_clr()
      mm: remove !NUMA condition from PAGEFLAGS_EXTENDED condition set
      x86: Fix earlyprintk=dbgp for machines without NX
      x86, pat: Sanity check remap_pfn_range for RAM region
      x86, pat: Lookup the protection from memtype list on vm_insert_pfn()
      x86, pat: Add lookup_memtype to get the current memtype of a paddr
      x86, pat: Use page flags to track memtypes of RAM pages
      x86, pat: Generalize the use of page flag PG_uncached
      x86, pat: Add rbtree to do quick lookup in memtype tracking
      x86, pat: Add PAT reserve free to io_mapping* APIs
      x86, pat: New i/f for driver to request memtype for IO regions
      x86, pat: ioremap to follow same PAT restrictions as other PAT users
      x86, pat: Keep identity maps consistent with mmaps even when pat_disabled
      x86, mtrr: make mtrr_aps_delayed_init static bool
      x86, pat/mtrr: Rendezvous all the cpus for MTRR/PAT init
      generic-ipi: Allow cpus not yet online to call smp_call_function with irqs disabled
      x86: Fix an incorrect argument of reserve_bootmem()
      x86: Fix system crash when loading with "reservetop" parameter

commit 1aaf2e59135fd67321f47c11c64a54aac27014e9
Merge: 66a4fe0 936e894
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Sep 15 09:19:20 2009 -0700

    Merge branch 'x86-txt-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-txt-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, intel_txt: clean up the impact on generic code, unbreak non-x86
      x86, intel_txt: Handle ACPI_SLEEP without X86_TRAMPOLINE
      x86, intel_txt: Fix typos in Kconfig help
      x86, intel_txt: Factor out the code for S3 setup
      x86, intel_txt: tboot.c needs <asm/fixmap.h>
      intel_txt: Force IOMMU on for Intel TXT launch
      x86, intel_txt: Intel TXT Sx shutdown support
      x86, intel_txt: Intel TXT reboot/halt shutdown support
      x86, intel_txt: Intel TXT boot support

commit dca2d6ac09d9ef59ff46820d4f0c94b08a671202
Merge: d6a65df 1824090
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Sep 15 12:18:15 2009 +0200

    Merge branch 'linus' into tracing/hw-breakpoints
    
    Conflicts:
    	arch/x86/kernel/process_64.c
    
    Semantic conflict fixed in:
    	arch/x86/kvm/x86.c
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 483e3cd6a34ad2d7e41100bc1b98614ac42a4567
Merge: 774a694 d28daf9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Sep 11 13:24:03 2009 -0700

    Merge branch 'tracing-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'tracing-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (105 commits)
      ring-buffer: only enable ring_buffer_swap_cpu when needed
      ring-buffer: check for swapped buffers in start of committing
      tracing: report error in trace if we fail to swap latency buffer
      tracing: add trace_array_printk for internal tracers to use
      tracing: pass around ring buffer instead of tracer
      tracing: make tracing_reset safe for external use
      tracing: use timestamp to determine start of latency traces
      tracing: Remove mentioning of legacy latency_trace file from documentation
      tracing/filters: Defer pred allocation, fix memory leak
      tracing: remove users of tracing_reset
      tracing: disable buffers and synchronize_sched before resetting
      tracing: disable update max tracer while reading trace
      tracing: print out start and stop in latency traces
      ring-buffer: disable all cpu buffers when one finds a problem
      ring-buffer: do not count discarded events
      ring-buffer: remove ring_buffer_event_discard
      ring-buffer: fix ring_buffer_read crossing pages
      ring-buffer: remove unnecessary cpu_relax
      ring-buffer: do not swap buffers during a commit
      ring-buffer: do not reset while in a commit
      ...

commit a1922ed661ab2c1637d0b10cde933bd9cd33d965
Merge: 75e3375 d28daf9
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Sep 7 08:19:51 2009 +0200

    Merge branch 'tracing/core' into tracing/hw-breakpoints
    
    Conflicts:
    	arch/Kconfig
    	kernel/trace/trace.h
    
    Merge reason: resolve the conflicts, plus adopt to the new
                  ring-buffer APIs.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit ed011b22ce567eabefa9ea571d3721c10ecd0553
Merge: 85bac32 e07cccf
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sun Sep 6 06:11:38 2009 +0200

    Merge commit 'v2.6.31-rc9' into tracing/core
    
    Merge reason: move from -rc5 to -rc9.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 6ac162d6c01ac7626f46c68c0770556cf682ce34
Author: Pavel Vasilyev <pavel@pavlinux.ru>
Date:   Thu Sep 3 16:20:55 2009 +0200

    x86/gart: Do not select AGP for GART_IOMMU
    
    There is no dependency from the gart code to the agp code.
    And since a lot of systems today do not have agp anymore
    remove this dependency from the kernel configuration.
    
    Signed-off-by: Pavel Vasilyev <pavel@pavlinux.ru>
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

commit 936e894a976dd3b0f07f1f6f43c17b77b7e6146d
Merge: 69575d3 326ba50
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Sep 2 08:17:56 2009 +0200

    Merge commit 'v2.6.31-rc8' into x86/txt
    
    Conflicts:
    	arch/x86/kernel/reboot.c
    	security/Kconfig
    
    Merge reason: resolve the conflicts, bump up from rc3 to rc8.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 69575d388603365f2afbf4166df93152df59b165
Author: Shane Wang <shane.wang@intel.com>
Date:   Tue Sep 1 18:25:07 2009 -0700

    x86, intel_txt: clean up the impact on generic code, unbreak non-x86
    
    Move tboot.h from asm to linux to fix the build errors of intel_txt
    patch on non-X86 platforms. Remove the tboot code from generic code
    init/main.c and kernel/cpu.c.
    
    Signed-off-by: Shane Wang <shane.wang@intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 3f4110a48a749a1aa1c54fb807afb3f32f49711c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Aug 29 14:54:20 2009 +0200

    x86: Add Moorestown early detection
    
    Moorestown MID devices need to be detected early in the boot process
    to setup and do not call x86_default_early_setup as there is no EBDA
    region to reserve.
    
    [ Copied the minimal code from Jacobs latest MRST series ]
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jacob Pan <jacob.jun.pan@intel.com>

commit 5f0db7a2fb78895a197f64e548333b3bbd433996
Author: Feng Tang <feng.tang@intel.com>
Date:   Fri Aug 14 15:37:50 2009 -0400

    SFI: Hook PCI MMCONFIG
    
    First check ACPI, and if that fails, ask SFI to find the MCFG.
    
    Signed-off-by: Feng Tang <feng.tang@intel.com>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Cc: Jesse Barnes <jbarnes@virtuousgeek.org>

commit efafc8b213e67ed148a5b53ade29ee7b48af907d
Author: Feng Tang <feng.tang@intel.com>
Date:   Fri Aug 14 15:23:29 2009 -0400

    x86: add arch-specific SFI support
    
    arch/x86/kernel/sfi.c serves the dual-purpose of supporting the
    SFI core with arch specific code, as well as a home for the
    arch-specific code that uses SFI.
    
    analogous to ACPI, drivers/sfi/Kconfig is pulled in by arch/x86/Kconfig
    
    Signed-off-by: Feng Tang <feng.tang@intel.com>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Cc: x86@kernel.org

commit b855192c08fcb14adbc5d3a7cab182022d433cca
Merge: d886c73 3e0e1e9
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Wed Aug 26 17:17:51 2009 -0700

    Merge branch 'x86/urgent' into x86/pat
    
    Reason: Change to is_new_memtype_allowed() in x86/urgent
    
    Resolved semantic conflicts in:
    
    	 arch/x86/mm/pat.c
    	 arch/x86/mm/ioremap.c
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 46cf98cdaef5471926010b5bddf84c44ec177fdd
Author: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
Date:   Fri Jul 10 09:57:37 2009 -0700

    x86, pat: Generalize the use of page flag PG_uncached
    
    Only IA64 was using PG_uncached as of now. We now intend to use this bit
    in x86 as well, to keep track of memory type of those addresses that
    have page struct for them. So, generalize the use of that bit across
    ia64 and x86.
    
    Signed-off-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 667000011927b4fcc359beac4a2447889db6d349
Author: Josh Stone <jistone@redhat.com>
Date:   Mon Aug 24 14:43:11 2009 -0700

    tracing: Rename FTRACE_SYSCALLS for tracepoints
    
    s/HAVE_FTRACE_SYSCALLS/HAVE_SYSCALL_TRACEPOINTS/g
    s/TIF_SYSCALL_FTRACE/TIF_SYSCALL_TRACEPOINT/g
    
    The syscall enter/exit tracing is no longer specific to just ftrace, so
    they now have names that reflect their tie to tracepoints instead.
    
    Signed-off-by: Josh Stone <jistone@redhat.com>
    Cc: Jason Baron <jbaron@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Li Zefan <lizf@cn.fujitsu.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
    Cc: Jiaying Zhang <jiayingz@google.com>
    Cc: Martin Bligh <mbligh@google.com>
    Cc: Lai Jiangshan <laijs@cn.fujitsu.com>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    LKML-Reference: <1251150194-1713-2-git-send-email-jistone@redhat.com>
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>

commit 4518e6a0c038b98be4c480e6f4481e8676bd15dd
Author: Tejun Heo <tj@kernel.org>
Date:   Fri Aug 14 15:00:52 2009 +0900

    x86,percpu: use embedding for 64bit NUMA and page for 32bit NUMA
    
    Embedding percpu first chunk allocator can now handle very sparse unit
    mapping.  Use embedding allocator instead of lpage for 64bit NUMA.
    This removes extra TLB pressure and the need to do complex and fragile
    dancing when changing page attributes.
    
    For 32bit, using very sparse unit mapping isn't a good idea because
    the vmalloc space is very constrained.  32bit NUMA machines aren't
    exactly the focus of optimization and it isn't very clear whether
    lpage performs better than page.  Use page first chunk allocator for
    32bit NUMAs.
    
    As this leaves setup_pcpu_*() functions pretty much empty, fold them
    into setup_per_cpu_areas().
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Andi Kleen <andi@firstfloor.org>

commit 08fc45806103e59a37418e84719b878f9bb32540
Author: Tejun Heo <tj@kernel.org>
Date:   Fri Aug 14 15:00:49 2009 +0900

    percpu: build first chunk allocators selectively
    
    There's no need to build unused first chunk allocators in.  Define
    CONFIG_NEED_PER_CPU_*_FIRST_CHUNK and let archs enable them
    selectively.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>

commit 384be2b18a5f9475eab9ca2bdfa95cc1a04ef59c
Merge: a76761b 142d44b
Author: Tejun Heo <tj@kernel.org>
Date:   Fri Aug 14 14:41:02 2009 +0900

    Merge branch 'percpu-for-linus' into percpu-for-next
    
    Conflicts:
    	arch/sparc/kernel/smp_64.c
    	arch/x86/kernel/cpu/perf_counter.c
    	arch/x86/kernel/setup_percpu.c
    	drivers/cpufreq/cpufreq_ondemand.c
    	mm/percpu.c
    
    Conflicts in core and arch percpu codes are mostly from commit
    ed78e1e078dd44249f88b1dd8c76dafb39567161 which substituted many
    num_possible_cpus() with nr_cpu_ids.  As for-next branch has moved all
    the first chunk allocators into mm/percpu.c, the changes are moved
    from arch code to mm/percpu.c.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>

commit 04da8a43da804723a550f00dd158fd5b5e25ae35
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Aug 11 10:40:08 2009 +0200

    perf_counter, x86: Fix/improve apic fallback
    
    Johannes Stezenbach reported that his Pentium-M based
    laptop does not have the local APIC enabled by default,
    and hence perfcounters do not get initialized.
    
    Add a fallback for this case: allow non-sampled counters
    and return with an error on sampled counters. This allows
    'perf stat' to work out of box - and allows 'perf top'
    and 'perf record' to fall back on a hrtimer based sampling
    method.
    
    ( Passing 'lapic' on the boot line will allow hardware
      sampling to occur - but if the APIC is disabled
      permanently by the hardware then this fallback still
      allows more systems to use perfcounters. )
    
    Also decouple perfcounter support from X86_LOCAL_APIC.
    
    -v2: fix typo breaking counters on all other systems ...
    
    Reported-by: Johannes Stezenbach <js@sig21.net>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    LKML-Reference: <new-submission>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c1ebf835617035b1f08f734247dcb981e17aac6b
Author: Andi Kleen <andi@firstfloor.org>
Date:   Thu Jul 9 00:31:41 2009 +0200

    x86: mce: Rename CONFIG_X86_NEW_MCE to CONFIG_X86_MCE
    
    Drop the CONFIG_X86_NEW_MCE symbol and change all
    references to it to check for CONFIG_X86_MCE directly.
    
    No code changes
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 5bb38adcb54cf7192b154368ad62982caa11ca0b
Author: Andi Kleen <andi@firstfloor.org>
Date:   Thu Jul 9 00:31:39 2009 +0200

    x86: mce: Remove old i386 machine check code
    
    As announced in feature-remove-schedule.txt remove CONFIG_X86_OLD_MCE
    
    This patch only removes code.
    
    The ancient machine check code for very old systems that are not supported
    by CONFIG_X86_NEW_MCE is still kept.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit bab9bc6583fe6c1660d6ed36dd14bbb4edfaf393
Author: Andi Kleen <andi@firstfloor.org>
Date:   Thu Jul 9 00:31:38 2009 +0200

    x86: mce: Update X86_MCE description in x86/Kconfig
    
    - Clarify that this config controls thermal throttling
    reporting too
    - Clarify the types of errors reported by machine checks
    - Drop references to ancient CPUs.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit c31d96338a6041520ba5f1b6a4a5012ef00686b3
Author: Andi Kleen <andi@firstfloor.org>
Date:   Thu Jul 9 00:31:37 2009 +0200

    x86: mce: Make CONFIG_X86_ANCIENT_MCE dependent on CONFIG_X86_MCE
    
    Add a missing depency for ANCIENT_MCE. It didn't matter
    in practice because the ANCIENT code wasn't compiled without
    X86_MCE, but it's better to express that clearly in
    Kconfig.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 62edf5dc4a524e4cb525e6020b955a1ad593d9ba
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Sat Jul 4 10:59:46 2009 +0100

    intel-iommu: Restore DMAR_BROKEN_GFX_WA option for broken graphics drivers
    
    We need to give people a little more time to fix the broken drivers.
    Re-introduce this, but tied in properly with the 'iommu=pt' support this
    time. Change the config option name and make it default to 'no' too.
    
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>

commit c43768cbb7655ea5ff782ae250f6e2ef4297cf98
Merge: 1a8dd30 746a99a
Author: Tejun Heo <tj@kernel.org>
Date:   Sat Jul 4 07:13:18 2009 +0900

    Merge branch 'master' into for-next
    
    Pull linus#master to merge PER_CPU_DEF_ATTRIBUTES and alpha build fix
    changes.  As alpha in percpu tree uses 'weak' attribute instead of
    inline assembly, there's no need for __used attribute.
    
    Conflicts:
    	arch/alpha/include/asm/percpu.h
    	arch/mn10300/kernel/vmlinux.lds.S
    	include/linux/percpu-defs.h

commit c7ab48d2acaf959e4d59c3f55d12fdb7ca9afd7c
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Fri Jun 26 19:10:36 2009 +0100

    intel-iommu: Clean up identity mapping code, remove CONFIG_DMAR_GFX_WA
    
    There's no need for the GFX workaround now we have 'iommu=pt' for the
    cases where people really care about performance. There's no need to
    have a special case for just one type of device.
    
    This also speeds up the iommu=pt path and reduces memory usage by
    setting up the si_domain _once_ and then using it for all devices,
    rather than giving each device its own private page tables.
    
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>

commit e74e396204bfcb67570ba4517b08f5918e69afea
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Mar 30 19:07:44 2009 +0900

    percpu: use dynamic percpu allocator as the default percpu allocator
    
    This patch makes most !CONFIG_HAVE_SETUP_PER_CPU_AREA archs use
    dynamic percpu allocator.  The first chunk is allocated using
    embedding helper and 8k is reserved for modules.  This ensures that
    the new allocator behaves almost identically to the original allocator
    as long as static percpu variables are concerned, so it shouldn't
    introduce much breakage.
    
    s390 and alpha use custom SHIFT_PERCPU_PTR() to work around addressing
    range limit the addressing model imposes.  Unfortunately, this breaks
    if the address is specified using a variable, so for now, the two
    archs aren't converted.
    
    The following architectures are affected by this change.
    
    * sh
    * arm
    * cris
    * mips
    * sparc(32)
    * blackfin
    * avr32
    * parisc (broken, under investigation)
    * m32r
    * powerpc(32)
    
    As this change makes the dynamic allocator the default one,
    CONFIG_HAVE_DYNAMIC_PER_CPU_AREA is replaced with its invert -
    CONFIG_HAVE_LEGACY_PER_CPU_AREA, which is added to yet-to-be converted
    archs.  These archs implement their own setup_per_cpu_areas() and the
    conversion is not trivial.
    
    * powerpc(64)
    * sparc(64)
    * ia64
    * alpha
    * s390
    
    Boot and batch alloc/free tests on x86_32 with debug code (x86_32
    doesn't use default first chunk initialization).  Compile tested on
    sparc(32), powerpc(32), arm and alpha.
    
    Kyle McMartin reported that this change breaks parisc.  The problem is
    still under investigation and he is okay with pushing this patch
    forward and fixing parisc later.
    
    [ Impact: use dynamic allocator for most archs w/o custom percpu setup ]
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Acked-by: Rusty Russell <rusty@rustcorp.com.au>
    Acked-by: David S. Miller <davem@davemloft.net>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Reviewed-by: Christoph Lameter <cl@linux.com>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: Russell King <rmk@arm.linux.org.uk>
    Cc: Mikael Starvik <starvik@axis.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Bryan Wu <cooloney@kernel.org>
    Cc: Kyle McMartin <kyle@mcmartin.ca>
    Cc: Matthew Wilcox <matthew@wil.cx>
    Cc: Grant Grundler <grundler@parisc-linux.org>
    Cc: Hirokazu Takata <takata@linux-m32r.org>
    Cc: Richard Henderson <rth@twiddle.net>
    Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Ingo Molnar <mingo@elte.hu>

commit b0b7065b64fe517b4a50915a1555e8ee98890d64
Merge: 38df92b d4c4038
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jun 20 10:56:46 2009 -0700

    Merge branch 'tracing-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'tracing-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (24 commits)
      tracing/urgent: warn in case of ftrace_start_up inbalance
      tracing/urgent: fix unbalanced ftrace_start_up
      function-graph: add stack frame test
      function-graph: disable when both x86_32 and optimize for size are configured
      ring-buffer: have benchmark test print to trace buffer
      ring-buffer: do not grab locks in nmi
      ring-buffer: add locks around rb_per_cpu_empty
      ring-buffer: check for less than two in size allocation
      ring-buffer: remove useless compile check for buffer_page size
      ring-buffer: remove useless warn on check
      ring-buffer: use BUF_PAGE_HDR_SIZE in calculating index
      tracing: update sample event documentation
      tracing/filters: fix race between filter setting and module unload
      tracing/filters: free filter_string in destroy_preds()
      ring-buffer: use commit counters for commit pointer accounting
      ring-buffer: remove unused variable
      ring-buffer: have benchmark test handle discarded events
      ring-buffer: prevent adding write in discarded area
      tracing/filters: strloc should be unsigned short
      tracing/filters: operand can be negative
      ...
    
    Fix up kmemcheck-induced conflict in kernel/trace/ring_buffer.c manually

commit 71e308a239c098673570d0b417d42262bb535909
Author: Steven Rostedt <srostedt@redhat.com>
Date:   Thu Jun 18 12:45:08 2009 -0400

    function-graph: add stack frame test
    
    In case gcc does something funny with the stack frames, or the return
    from function code, we would like to detect that.
    
    An arch may implement passing of a variable that is unique to the
    function and can be saved on entering a function and can be tested
    when exiting the function. Usually the frame pointer can be used for
    this purpose.
    
    This patch also implements this for x86. Where it passes in the stack
    frame of the parent function, and will test that frame on exit.
    
    There was a case in x86_32 with optimize for size (-Os) where, for a
    few functions, gcc would align the stack frame and place a copy of the
    return address into it. The function graph tracer modified the copy and
    not the actual return address. On return from the funtion, it did not go
    to the tracer hook, but returned to the parent. This broke the function
    graph tracer, because the return of the parent (where gcc did not do
    this funky manipulation) returned to the location that the child function
    was suppose to. This caused strange kernel crashes.
    
    This test detected the problem and pointed out where the issue was.
    
    This modifies the parameters of one of the functions that the arch
    specific code calls, so it includes changes to arch code to accommodate
    the new prototype.
    
    Note, I notice that the parsic arch implements its own push_return_trace.
    This is now a generic function and the ftrace_push_return_trace should be
    used instead. This patch does not touch that code.
    
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: Kyle McMartin <kyle@mcmartin.ca>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

commit 7c095e4603dd6ce78ff5b9b70896fe3e05c13f5c
Author: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
Date:   Wed Jun 17 16:28:12 2009 -0700

    dma-mapping: x86: use asm-generic/dma-mapping-common.h
    
    Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
    Acked-by: Joerg Roedel <joerg.roedel@amd.com>
    Acked-by: Ingo Molnar <mingo@elte.hu>
    Cc: "Luck, Tony" <tony.luck@intel.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit eadb8a091b27a840de7450f84ecff5ef13476424
Merge: 7387400 65795ef
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Jun 17 12:52:15 2009 +0200

    Merge branch 'linus' into tracing/hw-breakpoints
    
    Conflicts:
    	arch/x86/Kconfig
    	arch/x86/kernel/traps.c
    	arch/x86/power/cpu.c
    	arch/x86/power/cpu_32.c
    	kernel/Makefile
    
    Semantic conflict:
    	arch/x86/kernel/hw_breakpoint.c
    
    Merge reason: Resolve the conflicts, move from put_cpu_no_sched() to
                  put_cpu() in arch/x86/kernel/hw_breakpoint.c.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 722f2a6c87f34ee0fd0130a8cf45f81e0705594a
Merge: 7a0aeb1 45e3e19
Author: Vegard Nossum <vegard.nossum@gmail.com>
Date:   Mon Jun 15 15:50:49 2009 +0200

    Merge commit 'linus/master' into HEAD
    
    Conflicts:
    	MAINTAINERS
    
    Signed-off-by: Vegard Nossum <vegard.nossum@gmail.com>

commit 0a4af3b09309049d8560f8ad558a1337bb4f7f32
Author: Pekka Enberg <penberg@cs.helsinki.fi>
Date:   Thu Feb 26 21:38:56 2009 +0200

    kmemcheck: make kconfig accessible for other architectures
    
    The Kconfig options of kmemcheck are hidden under arch/x86 which makes porting
    to other architectures harder. To fix that, move the Kconfig bits to
    lib/Kconfig.kmemcheck and introduce a CONFIG_HAVE_ARCH_KMEMCHECK config option
    that architectures can define.
    
    Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>
    
    [rebased for mainline inclusion]
    Signed-off-by: Vegard Nossum <vegard.nossum@gmail.com>

commit 0d5959723e1db3fd7323c198a50c16cecf96c7a9
Merge: 62fdac5 512626a
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jun 11 23:31:52 2009 +0200

    Merge branch 'linus' into x86/mce3
    
    Conflicts:
    	arch/x86/kernel/cpu/mcheck/mce_64.c
    	arch/x86/kernel/irq.c
    
    Merge reason: Resolve the conflicts above.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 940010c5a314a7bd9b498593bc6ba1718ac5aec5
Merge: 8dc8e5e 991ec02
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jun 11 17:55:42 2009 +0200

    Merge branch 'linus' into perfcounters/core
    
    Conflicts:
    	arch/x86/kernel/irqinit.c
    	arch/x86/kernel/irqinit_64.c
    	arch/x86/kernel/traps.c
    	arch/x86/mm/fault.c
    	include/linux/sched.h
    	kernel/exit.c

commit 82782ca77d1bfb32b0334cce40a25b91bd8ec016
Merge: f0d5e12 6799687
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jun 10 15:30:41 2009 -0700

    Merge branch 'x86-kbuild-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-kbuild-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (46 commits)
      x86, boot: add new generated files to the appropriate .gitignore files
      x86, boot: correct the calculation of ZO_INIT_SIZE
      x86-64: align __PHYSICAL_START, remove __KERNEL_ALIGN
      x86, boot: correct sanity checks in boot/compressed/misc.c
      x86: add extension fields for bootloader type and version
      x86, defconfig: update kernel position parameters
      x86, defconfig: update to current, no material changes
      x86: make CONFIG_RELOCATABLE the default
      x86: default CONFIG_PHYSICAL_START and CONFIG_PHYSICAL_ALIGN to 16 MB
      x86: document new bzImage fields
      x86, boot: make kernel_alignment adjustable; new bzImage fields
      x86, boot: remove dead code from boot/compressed/head_*.S
      x86, boot: use LOAD_PHYSICAL_ADDR on 64 bits
      x86, boot: make symbols from the main vmlinux available
      x86, boot: determine compressed code offset at compile time
      x86, boot: use appropriate rep string for move and clear
      x86, boot: zero EFLAGS on 32 bits
      x86, boot: set up the decompression stack as early as possible
      x86, boot: straighten out ranges to copy/zero in compressed/head*.S
      x86, boot: stylistic cleanups for boot/compressed/head_64.S
      ...
    
    Fixed trivial conflict in arch/x86/configs/x86_64_defconfig manually

commit 0067f1297241ea567f2b22a455519752d70fcca9
Author: K.Prasad <prasad@linux.vnet.ibm.com>
Date:   Mon Jun 1 23:43:57 2009 +0530

    hw-breakpoints: x86 architecture implementation of Hardware Breakpoint interfaces
    
    This patch introduces the arch-specific implementation of the generic
    hardware breakpoints in kernel/hw_breakpoint.c inside x86 specific directories.
    It contains functions which help to validate and serve requests using
    Hardware Breakpoint registers on x86 processors.
    
    [ fweisbec@gmail.com: fix conflict against kmemcheck ]
    
    Original-patch-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: K.Prasad <prasad@linux.vnet.ibm.com>
    Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>

commit 48b1fddbb100a64f3983ca9768b8ea629a09aa20
Merge: 3873607 ee4c24a
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Mon Jun 1 15:13:02 2009 -0700

    Merge branch 'irq/numa' into x86/mce3
    
    Merge reason: arch/x86/kernel/irqinit_{32,64}.c unified in irq/numa
    and modified in x86/mce3; this merge resolves the conflict.
    
    Conflicts:
    	arch/x86/kernel/irqinit.c
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 3d58f48ba05caed9118bce62b3047f8683438835
Merge: abfe0af d9244b5
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Jun 1 21:06:21 2009 +0200

    Merge branch 'linus' into irq/numa
    
    Conflicts:
    	arch/mips/sibyte/bcm1480/irq.c
    	arch/mips/sibyte/sb1250/irq.c
    
    Merge reason: we gathered a few conflicts plus update to latest upstream fixes.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 23db9f430be9325a861c7762c1ffadad9ca528a8
Merge: 27b9613 3218911
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Jun 1 10:01:03 2009 +0200

    Merge branch 'linus' into perfcounters/core
    
    Merge reason: merge almost-rc8 into perfcounters/core, which was -rc6
                  based - to pick up the latest upstream fixes.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit cd13adcc823aa421efa4efd995fa7004a58cf38d
Author: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>
Date:   Wed May 27 16:57:31 2009 +0900

    x86: trivial clean up for arch/x86/Kconfig
    
    Use tab.
    
    Signed-off-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit ea149b36c7f511d17dd89fee734cb09778a91fa0
Author: Andi Kleen <ak@linux.intel.com>
Date:   Wed Apr 29 19:31:00 2009 +0200

    x86, mce: add basic error injection infrastructure
    
    Allow user programs to write mce records into /dev/mcelog. When they do
    that a fake machine check is triggered to test the machine check code.
    
    This uses the MCE MSR wrappers added earlier.
    
    The implementation is straight forward. There is a struct mce record
    per CPU and the MCE MSR accesses get data from there if there is valid
    data injected there. This allows to test the machine check code
    relatively realistically because only the lowest layer of hardware
    access is intercepted.
    
    The test suite and injector are available at
    git://git.kernel.org/pub/scm/utils/cpu/mce/mce-test.git
    git://git.kernel.org/pub/scm/utils/cpu/mce/mce-inject.git
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit de5619dfef76ddb403eb7c6de39c0130166c5dc3
Author: Andi Kleen <ak@linux.intel.com>
Date:   Tue Apr 28 23:34:40 2009 +0200

    x86, mce: enable MCE_AMD for 32bit NEW_MCE
    
    That's very easy using the infrastructure enabled earlier for MCE_INTEL
    
    Untested.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 7856f6cce4a8cda8c1f94b99605c07d16b8d8dec
Author: Andi Kleen <ak@linux.intel.com>
Date:   Tue Apr 28 23:32:56 2009 +0200

    x86, mce: enable MCE_INTEL for 32bit new MCE
    
    Enable the 64bit MCE_INTEL code (CMCI, thermal interrupts) for 32bit NEW_MCE.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 4efc0670baf4b14bc95502e54a83ccf639146125
Author: Andi Kleen <ak@linux.intel.com>
Date:   Tue Apr 28 19:07:31 2009 +0200

    x86, mce: use 64bit machine check code on 32bit
    
    The 64bit machine check code is in many ways much better than
    the 32bit machine check code: it is more specification compliant,
    is cleaner, only has a single code base versus one per CPU,
    has better infrastructure for recovery, has a cleaner way to communicate
    with user space etc. etc.
    
    Use the 64bit code for 32bit too.
    
    This is the second attempt to do this. There was one a couple of years
    ago to unify this code for 32bit and 64bit.  Back then this ran into some
    trouble with K7s and was reverted.
    
    I believe this time the K7 problems (and some others) are addressed.
    I went over the old handlers and was very careful to retain
    all quirks.
    
    But of course this needs a lot of testing on old systems. On newer
    64bit capable systems I don't expect much problems because they have been
    already tested with the 64bit kernel.
    
    I made this a CONFIG for now that still allows to select the old
    machine check code. This is mostly to make testing easier,
    if someone runs into a problem we can ask them to try
    with the CONFIG switched.
    
    The new code is default y for more coverage.
    
    Once there is confidence the 64bit code works well on older hardware
    too the CONFIG_X86_OLD_MCE and the associated code can be easily
    removed.
    
    This causes a behaviour change for 32bit installations. They now
    have to install the mcelog package to be able to log
    corrected machine checks.
    
    The 64bit machine check code only handles CPUs which support the
    standard Intel machine check architecture described in the IA32 SDM.
    The 32bit code has special support for some older CPUs which
    have non standard machine check architectures, in particular
    WinChip C3 and Intel P5.  I made those a separate CONFIG option
    and kept them for now. The WinChip variant could be probably
    removed without too much pain, it doesn't really do anything
    interesting. P5 is also disabled by default (like it
    was before) because many motherboards have it miswired, but
    according to Alan Cox a few embedded setups use that one.
    
    Forward ported/heavily changed version of old patch, original patch
    included review/fixes from Thomas Gleixner, Bert Wesarg.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit b4ecc126991b30fe5f9a59dfacda046aeac124b2
Author: Jeremy Fitzhardinge <jeremy@goop.org>
Date:   Wed May 13 17:16:55 2009 -0700

    x86: Fix performance regression caused by paravirt_ops on native kernels
    
    Xiaohui Xin and some other folks at Intel have been looking into what's
    behind the performance hit of paravirt_ops when running native.
    
    It appears that the hit is entirely due to the paravirtualized
    spinlocks introduced by:
    
     | commit 8efcbab674de2bee45a2e4cdf97de16b8e609ac8
     | Date:   Mon Jul 7 12:07:51 2008 -0700
     |
     |     paravirt: introduce a "lock-byte" spinlock implementation
    
    The extra call/return in the spinlock path is somehow
    causing an increase in the cycles/instruction of somewhere around 2-7%
    (seems to vary quite a lot from test to test).  The working theory is
    that the CPU's pipeline is getting upset about the
    call->call->locked-op->return->return, and seems to be failing to
    speculate (though I haven't seen anything definitive about the precise
    reasons).  This doesn't entirely make sense, because the performance
    hit is also visible on unlock and other operations which don't involve
    locked instructions.  But spinlock operations clearly swamp all the
    other pvops operations, even though I can't imagine that they're
    nearly as common (there's only a .05% increase in instructions
    executed).
    
    If I disable just the pv-spinlock calls, my tests show that pvops is
    identical to non-pvops performance on native (my measurements show that
    it is actually about .1% faster, but Xiaohui shows a .05% slowdown).
    
    Summary of results, averaging 10 runs of the "mmperf" test, using a
    no-pvops build as baseline:
    
    		nopv		Pv-nospin	Pv-spin
    CPU cycles	100.00%		99.89%		102.18%
    instructions	100.00%		100.10%		100.15%
    CPI		100.00%		99.79%		102.03%
    cache ref	100.00%		100.84%		100.28%
    cache miss	100.00%		90.47%		88.56%
    cache miss rate	100.00%		89.72%		88.31%
    branches	100.00%		99.93%		100.04%
    branch miss	100.00%		103.66%		107.72%
    branch miss rt	100.00%		103.73%		107.67%
    wallclock	100.00%		99.90%		102.20%
    
    The clear effect here is that the 2% increase in CPI is
    directly reflected in the final wallclock time.
    
    (The other interesting effect is that the more ops are
    out of line calls via pvops, the lower the cache access
    and miss rates.  Not too surprising, but it suggests that
    the non-pvops kernel is over-inlined.  On the flipside,
    the branch misses go up correspondingly...)
    
    So, what's the fix?
    
    Paravirt patching turns all the pvops calls into direct calls, so
    _spin_lock etc do end up having direct calls.  For example, the compiler
    generated code for paravirtualized _spin_lock is:
    
    <_spin_lock+0>:		mov    %gs:0xb4c8,%rax
    <_spin_lock+9>:		incl   0xffffffffffffe044(%rax)
    <_spin_lock+15>:	callq  *0xffffffff805a5b30
    <_spin_lock+22>:	retq
    
    The indirect call will get patched to:
    <_spin_lock+0>:		mov    %gs:0xb4c8,%rax
    <_spin_lock+9>:		incl   0xffffffffffffe044(%rax)
    <_spin_lock+15>:	callq <__ticket_spin_lock>
    <_spin_lock+20>:	nop; nop		/* or whatever 2-byte nop */
    <_spin_lock+22>:	retq
    
    One possibility is to inline _spin_lock, etc, when building an
    optimised kernel (ie, when there's no spinlock/preempt
    instrumentation/debugging enabled).  That will remove the outer
    call/return pair, returning the instruction stream to a single
    call/return, which will presumably execute the same as the non-pvops
    case.  The downsides arel 1) it will replicate the
    preempt_disable/enable code at eack lock/unlock callsite; this code is
    fairly small, but not nothing; and 2) the spinlock definitions are
    already a very heavily tangled mass of #ifdefs and other preprocessor
    magic, and making any changes will be non-trivial.
    
    The other obvious answer is to disable pv-spinlocks.  Making them a
    separate config option is fairly easy, and it would be trivial to
    enable them only when Xen is enabled (as the only non-default user).
    But it doesn't really address the common case of a distro build which
    is going to have Xen support enabled, and leaves the open question of
    whether the native performance cost of pv-spinlocks is worth the
    performance improvement on a loaded Xen system (10% saving of overall
    system CPU when guests block rather than spin).  Still it is a
    reasonable short-term workaround.
    
    [ Impact: fix pvops performance regression when running native ]
    
    Analysed-by: "Xin Xiaohui" <xiaohui.xin@intel.com>
    Analysed-by: "Li Xin" <xin.li@intel.com>
    Analysed-by: "Nakajima Jun" <jun.nakajima@intel.com>
    Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Cc: Nick Piggin <npiggin@suse.de>
    Cc: Xen-devel <xen-devel@lists.xensource.com>
    LKML-Reference: <4A0B62F7.5030802@goop.org>
    [ fixed the help text ]
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 26717808f93a27c22d4853c4fb17fa225f4ccc68
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Thu May 7 14:19:34 2009 -0700

    x86: make CONFIG_RELOCATABLE the default
    
    Remove the EXPERIMENTAL tag from CONFIG_RELOCATABLE and make it the
    default.  Relocatable kernels have been used for a while now, and
    should now have identical semantics to non-relocatable kernels when
    loaded by a non-relocating bootloader.
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit ceefccc93932b920a8ec6f35f596db05202a12fe
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Mon May 11 16:12:16 2009 -0700

    x86: default CONFIG_PHYSICAL_START and CONFIG_PHYSICAL_ALIGN to 16 MB
    
    Default CONFIG_PHYSICAL_START and CONFIG_PHYSICAL_ALIGN each to 16 MB,
    so that both non-relocatable and relocatable kernels are loaded at
    16 MB by a non-relocating bootloader.  This is somewhat hacky, but it
    appears to be the only way to do this that does not break some some
    set of existing bootloaders.
    
    We want to avoid the bottom 16 MB because of large page breakup,
    memory holes, and ZONE_DMA.  Embedded systems may need to reduce this,
    or update their bootloaders to be aware of the new min_alignment field.
    
    [ Impact: performance improvement, avoids problems on some systems ]
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 845adf7266a7ba6970bf982ffd96abc60d2018ab
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Tue May 5 21:20:51 2009 -0700

    x86: add a Kconfig symbol for when relocations are needed
    
    We only need to build relocations when we are building a 32-bit
    relocatable kernel.  Rather than unnecessarily complicating the
    Makefiles, make an explicit Kbuild symbol for this.
    
    [ Impact: permits future cleanup ]
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>

commit 4420471f14b79f2a42e4603be7794ea49b68bca4
Merge: 15e957d e0e4214
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri May 1 19:02:50 2009 +0200

    Merge branch 'x86/apic' into irq/numa
    
    Conflicts:
    	arch/x86/kernel/apic/io_apic.c
    
    Merge reason: non-trivial interaction between ongoing work in io_apic.c
                  and the NUMA migration feature in the irq tree.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 15e957d08dd4a841359cfec59ecb74041e0097aa
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Thu Apr 30 01:17:50 2009 -0700

    x86/irq: use move_irq_desc() in create_irq_nr()
    
    move_irq_desc() will try to move irq_desc to the home node if
    the allocated one is not correct, in create_irq_nr().
    
    ( This can happen on devices that are on different nodes that
      are using MSI, when drivers are loaded and unloaded randomly. )
    
    v2: fix non-smp build
    v3: add NUMA_IRQ_DESC to eliminate #ifdefs
    
    [ Impact: improve irq descriptor locality on NUMA systems ]
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Suresh Siddha <suresh.b.siddha@intel.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    LKML-Reference: <49F95EAE.2050903@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e7fd5d4b3d240f42c30a9e3d20a4689c4d3a795a
Merge: 1130b02 56a50ad
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Apr 29 14:46:59 2009 +0200

    Merge branch 'linus' into perfcounters/core
    
    Merge reason: This brach was on -rc1, refresh it to almost-rc4 to pick up
                  the latest upstream fixes.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit fcef5911c7ea89b80d5bfc727f402f37c9eefd57
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Mon Apr 27 17:58:23 2009 -0700

    x86/irq: remove leftover code from NUMA_MIGRATE_IRQ_DESC
    
    The original feature of migrating irq_desc dynamic was too fragile
    and was causing problems: it caused crashes on systems with lots of
    cards with MSI-X when user-space irq-balancer was enabled.
    
    We now have new patches that create irq_desc according to device
    numa node. This patch removes the leftover bits of the dynamic balancer.
    
    [ Impact: remove dead code ]
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Suresh Siddha <suresh.b.siddha@intel.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    LKML-Reference: <49F654AF.8000808@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 51b26ada79b605ed709ddcedbb6012e8f8e0ebed
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Apr 26 10:12:47 2009 -0700

    x86: unify arch/x86/boot/compressed/vmlinux_*.lds
    
    Look at the:
    
    	diff -u arch/x86/boot/compressed/vmlinux_*.lds
    
    output and realize that they're basially exactly the same except for
    trivial naming differences, and the fact that the 64-bit version has a
    "pgtable" thing.
    
    So unify them.
    
    There's some trivial cleanup there (make the output format a Kconfig thing
    rather than doing #ifdef's for it, and unify both 32-bit and 64-bit BSS
    end to "_ebss", where 32-bit used to use the traditional "_end"), but
    other than that it's really very mindless and straigt conversion.
    
    For example, I think we should aim to remove "startup_32" vs "startup_64",
    and just call it "startup", and get rid of one more difference. I didn't
    do that.
    
    Also, notice the comment in the unified vmlinux.lds.S talks about
    "head_64" and "startup_32" which is an odd and incorrect mix, but that was
    actually what the old 64-bit only lds file had, so the confusion isn't
    new, and now that mixing is arguably more accurate thanks to the
    vmlinux.lds.S file being shared between the two cases ;)
    
    [ Impact: cleanup, unification ]
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 9b820a8c5f6c9b341b9091bb04d214331c4f897f
Merge: fc2e318 d2c8604
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Apr 26 10:29:38 2009 -0700

    Merge branch 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, hpet: Stop soliciting hpet=force users on ICH4M
      x86: check boundary in setup_node_bootmem()
      uv_time: add parameter to uv_read_rtc()
      x86: hpet: fix periodic mode programming on AMD 81xx
      x86: more than 8 32-bit CPUs requires X86_BIGSMP
      x86: avoid theoretical spurious NMI backtraces with CONFIG_CPUMASK_OFFSTACK=y
      x86: fix boot crash in NMI watchdog with CONFIG_CPUMASK_OFFSTACK=y and flat APIC
      x86-64: fix FPU corruption with signals and preemption
      x86/uv: fix for no memory at paddr 0
      docs, x86: add nox2apic back to kernel-parameters.txt
      x86: mm/numa_32.c calculate_numa_remap_pages should use __init
      x86, kbuild: make "make install" not depend on vmlinux
      x86/uv: fix init of cpu-less nodes
      x86/uv: fix init of memory-less nodes

commit fc2e3180a714d3125fc883541c0cd5936c99ba34
Merge: 1e4b978 ca713c2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Apr 26 10:29:18 2009 -0700

    Merge branch 'irq-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'irq-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86/irq: mark NUMA_MIGRATE_IRQ_DESC broken
      x86, irq: Remove IRQ_DISABLED check in process context IRQ move

commit 2a3313f494c2f3f74a27d66f0f14b38558b7dba2
Author: Michael K. Johnson <johnsonm@rpath.com>
Date:   Tue Apr 21 21:44:48 2009 -0400

    x86: more than 8 32-bit CPUs requires X86_BIGSMP
    
    $ cat x86-more-than-8-cpus-requires-bigsmp.patch
    
    Enforce NR_CPUS <= 8 limitation if X86_BIGSMP not set
    
    Configuring more than 8 logical CPUs on 32-bit x86 requires
    X86_BIGSMP to be set in order to boot successfully, if more than 8
    logical CPUs are actually found at boot time.  The X86_BIGSMP help
    text describes that it is required to be set if more than 8 CPUs
    are configured, but this was previously not enforced.
    
    This configuration error has affected multiple distributions:
        https://bugzilla.redhat.com/show_bug.cgi?id=480844
        https://issues.rpath.com/browse/RPL-3022
    
    Signed-off-by: Michael K Johnson <johnsonm@rpath.com>
    LKML-Reference: <20090422014448.GB32541@logo.rdu.rpath.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 9d6c26e73bd248c286bb3597aaf788716e8fcceb
Author: Suresh Siddha <suresh.b.siddha@intel.com>
Date:   Mon Apr 20 13:02:31 2009 -0700

    x86: x2apic, IR: Make config X86_UV dependent on X86_X2APIC
    
    Instead of selecting X86_X2APIC, make config X86_UV dependent
    on X86_X2APIC.
    
    This will eliminate enabling CONFIG_X86_X2APIC with out
    enabling CONFIG_INTR_REMAP.
    
    [ Impact: cleanup ]
    
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Acked-by: Jack Steiner <steiner@sgi.com>
    Cc: dwmw2@infradead.org
    Cc: Suresh Siddha <suresh.b.siddha@intel.com>
    Cc: Weidong Han <weidong.han@intel.com>
    LKML-Reference: <20090420200450.694598000@linux-os.sc.intel.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit ca713c2ab0eea3458962983e4a7e13430ea479b8
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Wed Apr 15 18:39:13 2009 -0700

    x86/irq: mark NUMA_MIGRATE_IRQ_DESC broken
    
    It causes crash on system with lots of cards with MSI-X
    when irq_balancer enabled...
    
    The patches fixing it were both complex and fragile, according
    to Eric they were also doing quite dangerous things to the
    hardware.
    
    Instead we now have patches that solve this problem via static
    NUMA node mappings - not dynamic allocation and balancing.
    
    The patches are much simpler than this method but are still too
    large outside of the merge window, so we mark the dynamic balancer
    as broken for now, and queue up the new approach for v2.6.31.
    
    [ Impact: deactivate broken kernel feature ]
    
    Reported-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    LKML-Reference: <49E68C41.4020801@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 20d9207849d5abe60461841b3c3724f6e7c9d33e
Merge: c19f836 4ea3c51
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Apr 16 16:43:20 2009 -0700

    Merge branch 'x86/uv' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86/uv' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86: UV BAU distribution and payload MMRs
      x86: UV: BAU partition-relative distribution map
      x86, uv: add Kconfig dependency on NUMA for UV systems
      x86: prevent /sys/firmware/sgi_uv from being created on non-uv systems
      x86, UV: Fix for nodes with memory and no cpus
      x86, UV: system table in bios accessed after unmap
      x86: UV BAU messaging timeouts
      x86: UV BAU and nodes with no memory

commit 54c28d294c658abb6d6430a49fda230fdfd601c8
Author: Jack Steiner <steiner@sgi.com>
Date:   Fri Apr 3 15:39:42 2009 -0500

    x86, uv: add Kconfig dependency on NUMA for UV systems
    
    Impact: build fix
    
    Add Kconfig dependency on NUMA for enabling UV. Although it might
    be possible to configure non-NUMA UV systems, they are unsupported
    and not interesting. Much of the infrastructure for UV requires
    NUMA support.
    
    Signed-off-by: Jack Steiner <steiner@sgi.com>
    LKML-Reference: <20090403203942.GA20137@sgi.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 6c009ecef8cca28c7c09eb16d0802e37915a76e1
Merge: 98c2aaf d508afb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Apr 7 12:05:21 2009 +0200

    Merge branch 'linus' into perfcounters/core
    
    Merge reason: need the upstream facility added by:
    
      7f1e2ca: hrtimer: fix rq->lock inversion (again)
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f7d7f866baacc283967ce82ebdfe5d2801059a11
Author: David Woodhouse <dwmw2@infradead.org>
Date:   Mon Apr 6 23:04:40 2009 -0700

    x86, intel-iommu: fix X2APIC && !ACPI build failure
    
    This build failure:
    
    | drivers/pci/dmar.c:47: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘dmar_tbl_size’
    | drivers/pci/dmar.c:62: warning: ‘struct acpi_dmar_device_scope’ declared inside parameter list
    | drivers/pci/dmar.c:62: warning: its scope is only this definition or declaration, which is probably not what you want
    
    Triggers due to this commit:
    
      d0b03bd: x2apic/intr-remap: decouple interrupt remapping from x2apic
    
    Which exposed a pre-existing but dormant fragility of the 'select X86_X2APIC'
    it moved around and turned that fragility into a build failure.
    
    Replace it with a proper 'depends on' construct.
    
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
    LKML-Reference: <1239084280.22733.404.camel@macbook.infradead.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit ffa009c366e33f3eae48bba2547051fe15795f64
Merge: 8e320d0 46f06b72
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Apr 6 14:26:05 2009 -0700

    Merge git://git.infradead.org/iommu-2.6
    
    * git://git.infradead.org/iommu-2.6:
      drivers/pci/intr_remapping.c: include acpi.h
      intel-iommu: Fix oops in device_to_iommu() when devices not found.
      intel-iommu: Handle PCI domains appropriately.
      intel-iommu: Fix device-to-iommu mapping for PCI-PCI bridges.
      x2apic/intr-remap: decouple interrupt remapping from x2apic
      x86, dmar: check if it's initialized before disable queue invalidation
      intel-iommu: set compatibility format interrupt
      Intel IOMMU Suspend/Resume Support - Interrupt Remapping
      Intel IOMMU Suspend/Resume Support - Queued Invalidation
      Intel IOMMU Suspend/Resume Support - DMAR
      intel-iommu: Add for_each_iommu() and for_each_active_iommu() macros

commit f541ae326fa120fa5c57433e4d9a133df212ce41
Merge: e255357 0221c81
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Apr 6 09:02:57 2009 +0200

    Merge branch 'linus' into perfcounters/core-v2
    
    Merge reason: we have gathered quite a few conflicts, need to merge upstream
    
    Conflicts:
    	arch/powerpc/kernel/Makefile
    	arch/x86/ia32/ia32entry.S
    	arch/x86/include/asm/hardirq.h
    	arch/x86/include/asm/unistd_32.h
    	arch/x86/include/asm/unistd_64.h
    	arch/x86/kernel/cpu/common.c
    	arch/x86/kernel/irq.c
    	arch/x86/kernel/syscall_table_32.S
    	arch/x86/mm/iomap_32.c
    	include/linux/sched.h
    	kernel/Makefile
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 714f83d5d9f7c785f622259dad1f4fad12d64664
Merge: 8901e7f 645dae9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Apr 5 11:04:19 2009 -0700

    Merge branch 'tracing-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'tracing-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (413 commits)
      tracing, net: fix net tree and tracing tree merge interaction
      tracing, powerpc: fix powerpc tree and tracing tree interaction
      ring-buffer: do not remove reader page from list on ring buffer free
      function-graph: allow unregistering twice
      trace: make argument 'mem' of trace_seq_putmem() const
      tracing: add missing 'extern' keywords to trace_output.h
      tracing: provide trace_seq_reserve()
      blktrace: print out BLK_TN_MESSAGE properly
      blktrace: extract duplidate code
      blktrace: fix memory leak when freeing struct blk_io_trace
      blktrace: fix blk_probes_ref chaos
      blktrace: make classic output more classic
      blktrace: fix off-by-one bug
      blktrace: fix the original blktrace
      blktrace: fix a race when creating blk_tree_root in debugfs
      blktrace: fix timestamp in binary output
      tracing, Text Edit Lock: cleanup
      tracing: filter fix for TRACE_EVENT_FORMAT events
      ftrace: Using FTRACE_WARN_ON() to check "freed record" in ftrace_release()
      x86: kretprobe-booster interrupt emulation code fix
      ...
    
    Fix up trivial conflicts in
     arch/parisc/include/asm/ftrace.h
     include/linux/memory.h
     kernel/extable.c
     kernel/module.c

commit d0b03bd1c6725a3463290d7f9626e4b583518a5a
Author: Han, Weidong <weidong.han@intel.com>
Date:   Fri Apr 3 17:15:50 2009 +0800

    x2apic/intr-remap: decouple interrupt remapping from x2apic
    
    interrupt remapping must be enabled before enabling x2apic, but
    interrupt remapping doesn't depend on x2apic, it can be used
    separately. Enable interrupt remapping in init_dmars even x2apic
    is not supported.
    
    [dwmw2: Update Kconfig accordingly, fix build with INTR_REMAP && !X2APIC]
    
    Signed-off-by: Weidong Han <weidong.han@intel.com>
    Acked-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>

commit 811158b147a503fbdf9773224004ffd32002d1fe
Merge: 4e76c5c b26e0ed
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Apr 3 15:24:35 2009 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial: (28 commits)
      trivial: Update my email address
      trivial: NULL noise: drivers/mtd/tests/mtd_*test.c
      trivial: NULL noise: drivers/media/dvb/frontends/drx397xD_fw.h
      trivial: Fix misspelling of "Celsius".
      trivial: remove unused variable 'path' in alloc_file()
      trivial: fix a pdlfush -> pdflush typo in comment
      trivial: jbd header comment typo fix for JBD_PARANOID_IOFAIL
      trivial: wusb: Storage class should be before const qualifier
      trivial: drivers/char/bsr.c: Storage class should be before const qualifier
      trivial: h8300: Storage class should be before const qualifier
      trivial: fix where cgroup documentation is not correctly referred to
      trivial: Give the right path in Documentation example
      trivial: MTD: remove EOL from MODULE_DESCRIPTION
      trivial: Fix typo in bio_split()'s documentation
      trivial: PWM: fix of #endif comment
      trivial: fix typos/grammar errors in Kconfig texts
      trivial: Fix misspelling of firmware
      trivial: cgroups: documentation typo and spelling corrections
      trivial: Update contact info for Jochen Hein
      trivial: fix typo "resgister" -> "register"
      ...

commit ca1ee219c070eab755712d50638bbcd1f8630fc1
Merge: 3cc50ac afeeb7c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Apr 3 10:36:57 2009 -0700

    Merge git://git.infradead.org/iommu-2.6
    
    * git://git.infradead.org/iommu-2.6:
      intel-iommu: Fix address wrap on 32-bit kernel.
      intel-iommu: Enable DMAR on 32-bit kernel.
      intel-iommu: fix PCI device detach from virtual machine
      intel-iommu: VT-d page table to support snooping control bit
      iommu: Add domain_has_cap iommu_ops
      intel-iommu: Snooping control support
    
    Fixed trivial conflicts in arch/x86/Kconfig and drivers/pci/intel-iommu.c

commit 8302294f43250dc337108c51882a6007f2b1e2e0
Merge: 4fe7041 2e57289
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Apr 1 21:54:19 2009 +0200

    Merge branch 'tracing/core-v2' into tracing-for-linus
    
    Conflicts:
    	include/linux/slub_def.h
    	lib/Kconfig.debug
    	mm/slob.c
    	mm/slub.c

commit 6a11f75b6a17b5d9ac5025f8d048382fd1f47377
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Tue Mar 31 15:23:17 2009 -0700

    generic debug pagealloc
    
    CONFIG_DEBUG_PAGEALLOC is now supported by x86, powerpc, sparc64, and
    s390.  This patch implements it for the rest of the architectures by
    filling the pages with poison byte patterns after free_pages() and
    verifying the poison patterns before alloc_pages().
    
    This generic one cannot detect invalid page accesses immediately but
    invalid read access may cause invalid dereference by poisoned memory and
    invalid write access can be detected after a long delay.
    
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Cc: <linux-arch@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 712b0006bf3a9ed0b14a56c3291975e582127766
Merge: e1c5024 b0d44c0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Mar 30 13:41:00 2009 -0700

    Merge branch 'iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'iommu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (60 commits)
      dma-debug: make memory range checks more consistent
      dma-debug: warn of unmapping an invalid dma address
      dma-debug: fix dma_debug_add_bus() definition for !CONFIG_DMA_API_DEBUG
      dma-debug/x86: register pci bus for dma-debug leak detection
      dma-debug: add a check dma memory leaks
      dma-debug: add checks for kernel text and rodata
      dma-debug: print stacktrace of mapping path on unmap error
      dma-debug: Documentation update
      dma-debug: x86 architecture bindings
      dma-debug: add function to dump dma mappings
      dma-debug: add checks for sync_single_sg_*
      dma-debug: add checks for sync_single_range_*
      dma-debug: add checks for sync_single_*
      dma-debug: add checking for [alloc|free]_coherent
      dma-debug: add add checking for map/unmap_sg
      dma-debug: add checking for map/unmap_page/single
      dma-debug: add core checking functions
      dma-debug: add debugfs interface
      dma-debug: add kernel command line parameters
      dma-debug: add initialization code
      ...
    
    Fix trivial conflicts due to whitespace changes in arch/x86/kernel/pci-nommu.c

commit 692105b8ac5bcd75dc65f6a8f10bdbd0f0f34dcf
Author: Matt LaPlante <kernel1@cyberdogtech.com>
Date:   Mon Jan 26 11:12:25 2009 +0100

    trivial: fix typos/grammar errors in Kconfig texts
    
    Signed-off-by: Matt LaPlante <kernel1@cyberdogtech.com>
    Acked-by: Randy Dunlap <randy.dunlap@oracle.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

commit b0d44c0dbbd52effb731b1c0af9afd56215c48de
Merge: 9537a48 7c730cc
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Mar 28 23:05:50 2009 +0100

    Merge branch 'linus' into core/iommu
    
    Conflicts:
    	arch/x86/Kconfig

commit 6e15cf04860074ad032e88c306bea656bbdd0f22
Merge: be0ea69 60db564
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Mar 26 21:39:17 2009 +0100

    Merge branch 'core/percpu' into percpu-cpumask-x86-for-linus-2
    
    Conflicts:
    	arch/parisc/kernel/irq.c
    	arch/x86/include/asm/fixmap_64.h
    	arch/x86/include/asm/setup.h
    	kernel/irq/handle.c
    
    Semantic merge:
            arch/x86/include/asm/fixmap.h
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit fc2869f6a1993550c2765e934b117e993782db30
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Mar 13 16:37:48 2009 +0100

    x86: disable __do_IRQ support
    
    Impact: disable unused code
    
    x86 is fully converted to flow handlers. No need to keep the
    deprecated __do_IRQ() support active.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 4cf2e75d0bec15d945972b005056c4a8731b82cf
Author: David Woodhouse <dwmw2@infradead.org>
Date:   Wed Feb 11 17:23:43 2009 +0000

    intel-iommu: Enable DMAR on 32-bit kernel.
    
    If we fix a few highmem-related thinkos and a couple of printk format
    warnings, the Intel IOMMU driver works fine in a 32-bit kernel.
    
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>

commit 2118d0c548e8a2205e1a29eb5b89e5f2e9ae2c8b
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Fri Jan 9 15:13:15 2009 +0100

    dma-debug: x86 architecture bindings
    
    Impact: make use of DMA-API debugging code in x86
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

commit 0ca0f16fd17c5d880dd0abbe03595b0c7c5b3c95
Merge: c550033 7a81d9a 88200bc 0f3fa48 91219bc 0634023 773e673 5a8ac9d 16a6791 895791d
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Mar 14 16:25:40 2009 +0100

    Merge branches 'x86/apic', 'x86/asm', 'x86/cleanups', 'x86/debug', 'x86/kconfig', 'x86/mm', 'x86/ptrace', 'x86/setup' and 'x86/urgent'; commit 'v2.6.29-rc8' into x86/core

commit 62395efdb0ef42e664ca81677901268c403a6286
Merge: ccd50df 88200bc
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Mar 14 08:16:21 2009 +0100

    Merge branch 'x86/asm' into tracing/syscalls
    
    We need the wider TIF work-mask checks in entry_32.S.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 063402356280a7b262952d6351d21315336f657b
Merge: f9a36fa a98fe7f
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Mar 13 17:08:30 2009 +0100

    Merge branch 'x86/core' into x86/kconfig

commit f9a36fa5413f1b2694841c410a6fdb4666e78f16
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Mar 13 16:37:48 2009 +0100

    x86: disable __do_IRQ support
    
    Impact: disable unused code
    
    x86 is fully converted to flow handlers. No need to keep the
    deprecated __do_IRQ() support active.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 1b3fa2ce64363c289b3b14723cca7290bf91cfce
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Sat Mar 7 05:53:00 2009 +0100

    tracing/x86: basic implementation of syscall tracing for x86
    
    Provide the x86 trace callbacks to trace syscalls.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Cc: Lai Jiangshan <laijs@cn.fujitsu.com>
    LKML-Reference: <1236401580-5758-3-git-send-email-fweisbec@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 46d50c98d90cd7feaa5977a09c574063e5c99b3d
Author: Jan Beulich <jbeulich@novell.com>
Date:   Thu Mar 12 12:33:06 2009 +0000

    x86, 32-bit: also limit NODES_HIGH_SHIFT here
    
    Impact: configuration bug fix
    
    Just like for x86-64, the range of widths valid for NODE_SHIFT is not
    unbounded. The upper bound 64-bit uses is definitely also an upper
    bound for 32-bit.
    
    Signed-off-by: Jan Beulich <jbeulich@novell.com>
    LKML-Reference: <49B90F12.76E4.0078.0@novell.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit a98fe7f3425c6b4e90de16f8da63b0429a8fed08
Merge: bb7f5f6 8229d75 12074fa 5e47c47 afcfe02
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Mar 12 11:50:15 2009 +0100

    Merge branches 'x86/asm', 'x86/debug', 'x86/mm', 'x86/setup', 'x86/urgent' and 'linus' into x86/core

commit fee7b0d84cc8c7bc5dc212901c79e93eaf83a5b5
Author: Huang Ying <ying.huang@intel.com>
Date:   Tue Mar 10 10:57:16 2009 +0800

    x86, kexec: x86_64: add kexec jump support for x86_64
    
    Impact: New major feature
    
    This patch add kexec jump support for x86_64. More information about
    kexec jump can be found in corresponding x86_32 support patch.
    
    Signed-off-by: Huang Ying <ying.huang@intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 9b779edf4b97798d037bb44fca2719ac184d0f14
Author: Jaswinder Singh Rajput <jaswinderrajput@gmail.com>
Date:   Tue Mar 10 15:37:51 2009 +0530

    x86: cpu architecture debug code
    
    Introduce:
    
     cat /sys/kernel/debug/x86/cpu/*
    
    for Intel and AMD processors to view / debug the state of each CPU.
    
    By using this we can debug whole range of registers and other
    cpu information for debugging purpose and monitor how things
    are changing.
    
    This can be useful for developers as well as for users.
    
    Signed-off-by: Jaswinder Singh Rajput <jaswinderrajput@gmail.com>
    LKML-Reference: <1236701373.3387.4.camel@localhost.localdomain>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f0ef03985130287c6c84ebe69416cf790e6cc00e
Merge: 1609743 31bbed5
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Mar 6 16:44:14 2009 +0100

    Merge branch 'x86/core' into tracing/textedit
    
    Conflicts:
    	arch/x86/Kconfig
    	block/blktrace.c
    	kernel/irq/handle.c
    
    Semantic conflict:
    	kernel/trace/blktrace.c
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit caab36b593b44c97e3c7707c6a8054b320f8d622
Merge: a1413c8 73af76d
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Mar 5 21:49:25 2009 +0100

    Merge branch 'x86/mce2' into x86/core

commit 8163d88c79dca35478a2405c837733ac50ea4c39
Merge: a1ef58f fec6c6f
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Mar 4 11:42:31 2009 +0100

    Merge commit 'v2.6.29-rc7' into perfcounters/core
    
    Conflicts:
    	arch/x86/mm/iomap_32.c

commit 2e22ea7cea0f7de86fd30df867fbf5b7e8eee0fd
Merge: 638bee7 645af4e
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Tue Mar 3 21:05:42 2009 -0800

    Merge branch 'x86/core' into x86/mce2

commit 91d75e209bd59695f0708d66964d928d45b3b2f3
Merge: 9976b39 8b0e586
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Mar 4 02:29:19 2009 +0100

    Merge branch 'x86/core' into core/percpu

commit 8b0e5860cb099d7958d13b00ffbc35ad02735700
Merge: b6122b3 327f438 c577b09 03787ce 2fb6b2a0 ab76f3d 2505170 780eef9
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Mar 4 02:22:31 2009 +0100

    Merge branches 'x86/apic', 'x86/cpu', 'x86/fixmap', 'x86/mm', 'x86/sched', 'x86/setup-lzma', 'x86/signal' and 'x86/urgent' into x86/core

commit fdfa66ab455c79d699833c43ac0e09900133fd7c
Merge: 4387d6d acdb2c2 340430c
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Mar 2 22:37:35 2009 +0100

    Merge branches 'tracing/ftrace', 'tracing/mmiotrace' and 'linus' into tracing/core

commit 55f2b78995826d549401bdf20abeac1832636bb6
Merge: f5c1aa1 92b9af9
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sun Mar 1 12:47:58 2009 +0100

    Merge branch 'x86/urgent' into x86/pat

commit f6be37fdc62d0c0214bc49815d1180ebfbd716e2
Author: Kyle McMartin <kyle@redhat.com>
Date:   Thu Feb 26 12:57:56 2009 -0500

    x86: enable DMAR by default
    
    Now that the obvious bugs have been worked out, specifically
    the iwlagn issue, and the write buffer errata, DMAR should be safe
    to turn back on by default. (We've had it on since those patches were
    first written a few weeks ago, without any noticeable bug reports
    (most have been due to the dma-api debug patchset.))
    
    Signed-off-by: Kyle McMartin <kyle@redhat.com>
    Acked-by: David Woodhouse <David.Woodhouse@intel.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 8e818179eb9e8f9e44d8410dd2a25077d026a08e
Merge: 742bd95 ecc25fb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Feb 26 13:02:23 2009 +0100

    Merge branch 'x86/core' into perfcounters/core
    
    Conflicts:
    	arch/x86/kernel/apic/apic.c
    	arch/x86/kernel/irqinit_32.c
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 638bee71c83a2837b48062fdc5b222163cf53d79
Merge: 2aaa822 a852cbfa
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Tue Feb 24 16:11:51 2009 -0800

    Merge branch 'x86/core' into x86/mce2

commit b276268631af3a1b0df871e10d19d492f0513d4b
Author: Andi Kleen <andi@firstfloor.org>
Date:   Thu Feb 12 13:49:31 2009 +0100

    x86, mce, cmci: factor out threshold interrupt handler
    
    Impact: cleanup; preparation for feature
    
    The mce_amd_64 code has an own private MC threshold vector with an own
    interrupt handler. Since Intel needs a similar handler
    it makes sense to share the vector because both can not
    be active at the same time.
    
    I factored the common APIC handler code into a separate file which can
    be used by both the Intel or AMD MC code.
    
    This is needed for the next patch which adds an Intel specific
    CMCI handler.
    
    This patch should be a nop for AMD, it just moves some code
    around.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit 0edcf8d6926f4038443dbc24e319530177ca0353
Merge: 87b2030 40150d3
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Feb 24 21:52:45 2009 +0100

    Merge branch 'tj-percpu' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc into core/percpu
    
    Conflicts:
    	arch/x86/include/asm/pgtable.h

commit c132937556f56ee4b831ef4b23f1846e05fde102
Author: Tejun Heo <tj@kernel.org>
Date:   Tue Feb 24 11:57:20 2009 +0900

    bootmem: clean up arch-specific bootmem wrapping
    
    Impact: cleaner and consistent bootmem wrapping
    
    By setting CONFIG_HAVE_ARCH_BOOTMEM_NODE, archs can define
    arch-specific wrappers for bootmem allocation.  However, this is done
    a bit strangely in that only the high level convenience macros can be
    changed while lower level, but still exported, interface functions
    can't be wrapped.  This not only is messy but also leads to strange
    situation where alloc_bootmem() does what the arch wants it to do but
    the equivalent __alloc_bootmem() call doesn't although they should be
    able to be used interchangeably.
    
    This patch updates bootmem such that archs can override / wrap the
    backend function - alloc_bootmem_core() instead of the highlevel
    interface functions to allow simpler and consistent wrapping.  Also,
    HAVE_ARCH_BOOTMEM_NODE is renamed to HAVE_ARCH_BOOTMEM.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Johannes Weiner <hannes@saeurebad.de>

commit 965c7ecaf2e2b083d711a01ab33735a4bdeee1a4
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sun Feb 22 23:19:12 2009 +0100

    x86: remove the Voyager 32-bit subarch
    
    Impact: remove unused/broken code
    
    The Voyager subarch last built successfully on the v2.6.26 kernel
    and has been stale since then and does not build on the v2.6.27,
    v2.6.28 and v2.6.29-rc5 kernels.
    
    No actual users beyond the maintainer reported this breakage.
    Patches were sent and most of the fixes were accepted but the
    discussion around how to do a few remaining issues cleanly
    fizzled out with no resolution and the code remained broken.
    
    In the v2.6.30 x86 tree development cycle 32-bit subarch support
    has been reworked and removed - and the Voyager code, beyond the
    build problems already known, needs serious and significant
    changes and probably a rewrite to support it.
    
    CONFIG_X86_VOYAGER has been marked BROKEN then. The maintainer has
    been notified but no patches have been sent so far to fix it.
    
    While all other subarchs have been converted to the new scheme,
    voyager is still broken. We'd prefer to receive patches which
    clean up the current situation in a constructive way, but even in
    case of removal there is no obstacle to add that support back
    after the issues have been sorted out in a mutually acceptable
    fashion.
    
    So remove this inactive code for now.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 8425091ff8af2addae118fc510a523b84ce51115
Author: Ravikiran G Thirumalai <kiran@scalex86.org>
Date:   Fri Feb 20 16:59:11 2009 -0800

    x86: improve the help text of X86_EXTENDED_PLATFORM
    
    Change the CONFIG_X86_EXTENDED_PLATFORM help text to display the
    32bit/64bit extended platform list. This is as suggested by Ingo.
    
    Signed-off-by: Ravikiran Thirumalai <kiran@scalex86.org>
    Cc: shai@scalex86.org
    Cc: "Benzi Galili (Benzi@ScaleMP.com)" <benzi@scalemp.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 11124411aa95827404d6bfdfc14c908e1b54513c
Author: Tejun Heo <tj@kernel.org>
Date:   Fri Feb 20 16:29:09 2009 +0900

    x86: convert to the new dynamic percpu allocator
    
    Impact: use new dynamic allocator, unified access to static/dynamic
            percpu memory
    
    Convert to the new dynamic percpu allocator.
    
    * implement populate_extra_pte() for both 32 and 64
    * update setup_per_cpu_areas() to use pcpu_setup_static()
    * define __addr_to_pcpu_ptr() and __pcpu_ptr_to_addr()
    * define config HAVE_DYNAMIC_PER_CPU_AREA
    
    Signed-off-by: Tejun Heo <tj@kernel.org>

commit 0b6de0092244c98b5ba1abda34c92470a20e0d0c
Merge: 37a2542 f62bae5
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Feb 17 17:20:11 2009 +0100

    Merge branch 'x86/apic' into perfcounters/core
    
    Conflicts:
    	arch/x86/kernel/cpu/perfctr-watchdog.c

commit 7d01d32d3b9becd6deba318b718db3d9fc181d23
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Feb 17 12:33:20 2009 +0100

    x86, apic: fix build fallout of genapic changes
    
    - make oprofile build
    - select X86_X2APIC from X86_UV - it relies on it
    - export genapic for oprofile modular build
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 06cd9a7dc8a58186060a91b6ddc031057435fd34
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Mon Feb 16 17:29:58 2009 -0800

    x86: add x2apic config
    
    Impact: cleanup
    
    so could deselect x2apic
    and INTR_REMAP will select x2apic
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 1c511f740fe7031867f51831854360e8be1ba34c
Merge: e7669b8 00f62f6 b22f4858 071a0bc
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Feb 13 10:25:18 2009 +0100

    Merge branches 'tracing/ftrace', 'tracing/ring-buffer', 'tracing/sysprof', 'tracing/urgent' and 'linus' into tracing/core

commit b1864e9a1afef41709886072c6e6248def0386f4
Merge: e9c4ffb 7032e86
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Feb 13 09:49:38 2009 +0100

    Merge branch 'x86/core' into perfcounters/core
    
    Conflicts:
    	arch/x86/Kconfig
    	arch/x86/kernel/apic.c
    	arch/x86/kernel/setup_percpu.c

commit ab639f3593f0b5e4439d549831442c18c3baf989
Merge: f8a6b2b 58105ef
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Feb 13 09:45:09 2009 +0100

    Merge branch 'core/percpu' into x86/core

commit e9c4ffb11f0b19005b5b9dc8481687a3637e5887
Merge: 4bcf349 071a0bc
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Feb 13 09:34:07 2009 +0100

    Merge branch 'linus' into perfcounters/core
    
    Conflicts:
    	arch/x86/kernel/acpi/boot.c

commit 17993b49b1f540aace8e9b4242530d0b3376eb2a
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Feb 11 17:20:51 2009 +0100

    x86: make hibernation always-possible
    
    This commit:
    
      aced3ce: x86/Voyager: remove HIBERNATION Kconfig quirk
    
    Made hibernation only available on UP - instead of making it available
    on all of x86. Fix it.
    
    Reported-by: Jiri Slaby <jirislaby@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c5c606d9dce6e0852a401c57a8b0542acdbb6796
Author: Ravikiran G Thirumalai <kiran@scalex86.org>
Date:   Mon Feb 9 18:18:14 2009 -0800

    x86: cleanup, rename CONFIG_X86_NON_STANDARD to CONFIG_X86_EXTENDED_PLATFORM
    
    Patch to rename the CONFIG_X86_NON_STANDARD to CONFIG_X86_EXTENDED_PLATFORM.
    
    The new name represents the subarches better. Also, default this to 'y'
    so that many of the sub architectures that were not easily visible now
    become visible.
    
    Also re-organize the extended architecture platform and non standard
    platform list alphabetically as suggested by Ingo.
    
    Signed-off-by: Ravikiran Thirumalai <kiran@scalex86.org>
    Signed-off-by: Shai Fultheim <shai@scalex86.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 60a5317ff0f42dd313094b88f809f63041568b08
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Feb 9 22:17:40 2009 +0900

    x86: implement x86_32 stack protector
    
    Impact: stack protector for x86_32
    
    Implement stack protector for x86_32.  GDT entry 28 is used for it.
    It's set to point to stack_canary-20 and have the length of 24 bytes.
    CONFIG_CC_STACKPROTECTOR turns off CONFIG_X86_32_LAZY_GS and sets %gs
    to the stack canary segment on entry.  As %gs is otherwise unused by
    the kernel, the canary can be anywhere.  It's defined as a percpu
    variable.
    
    x86_32 exception handlers take register frame on stack directly as
    struct pt_regs.  With -fstack-protector turned on, gcc copies the
    whole structure after the stack canary and (of course) doesn't copy
    back on return thus losing all changed.  For now, -fno-stack-protector
    is added to all files which contain those functions.  We definitely
    need something better.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit ccbeed3a05908d201b47b6c3dd1a373138bba566
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Feb 9 22:17:40 2009 +0900

    x86: make lazy %gs optional on x86_32
    
    Impact: pt_regs changed, lazy gs handling made optional, add slight
            overhead to SAVE_ALL, simplifies error_code path a bit
    
    On x86_32, %gs hasn't been used by kernel and handled lazily.  pt_regs
    doesn't have place for it and gs is saved/loaded only when necessary.
    In preparation for stack protector support, this patch makes lazy %gs
    handling optional by doing the followings.
    
    * Add CONFIG_X86_32_LAZY_GS and place for gs in pt_regs.
    
    * Save and restore %gs along with other registers in entry_32.S unless
      LAZY_GS.  Note that this unfortunately adds "pushl $0" on SAVE_ALL
      even when LAZY_GS.  However, it adds no overhead to common exit path
      and simplifies entry path with error code.
    
    * Define different user_gs accessors depending on LAZY_GS and add
      lazy_save_gs() and lazy_load_gs() which are noop if !LAZY_GS.  The
      lazy_*_gs() ops are used to save, load and clear %gs lazily.
    
    * Define ELF_CORE_COPY_KERNEL_REGS() which always read %gs directly.
    
    xen and lguest changes need to be verified.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Jeremy Fitzhardinge <jeremy@xensource.com>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 92e2d508464b6293ad274fb606f766a458894142
Merge: 5d96218 d315760
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Feb 10 00:41:02 2009 +0100

    Merge branch 'x86/urgent' into core/percpu
    
    Conflicts:
    	arch/x86/kernel/acpi/boot.c

commit 9a5fd902273d01170fd033691bd70b142baa7309
Author: Steven Rostedt <srostedt@redhat.com>
Date:   Fri Feb 6 01:14:26 2009 -0500

    ftrace: change function graph tracer to use new in_nmi
    
    The function graph tracer piggy backed onto the dynamic ftracer
    to use the in_nmi custom code for dynamic tracing. The problem
    was (as Andrew Morton pointed out) it really only wanted to bail
    out if the context of the current CPU was in NMI context. But the
    dynamic ftrace in_nmi custom code was true if _any_ CPU happened
    to be in NMI context.
    
    Now that we have a generic in_nmi interface, this patch changes
    the function graph code to use it instead of the dynamic ftarce
    custom code.
    
    Reported-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Steven Rostedt <srostedt@redhat.com>

commit 78d904b46a72fcf15ea6a39672bbef92953876b5
Author: Steven Rostedt <srostedt@redhat.com>
Date:   Thu Feb 5 18:43:07 2009 -0500

    ring-buffer: add NMI protection for spinlocks
    
    Impact: prevent deadlock in NMI
    
    The ring buffers are not yet totally lockless with writing to
    the buffer. When a writer crosses a page, it grabs a per cpu spinlock
    to protect against a reader. The spinlocks taken by a writer are not
    to protect against other writers, since a writer can only write to
    its own per cpu buffer. The spinlocks protect against readers that
    can touch any cpu buffer. The writers are made to be reentrant
    with the spinlocks disabling interrupts.
    
    The problem arises when an NMI writes to the buffer, and that write
    crosses a page boundary. If it grabs a spinlock, it can be racing
    with another writer (since disabling interrupts does not protect
    against NMIs) or with a reader on the same CPU. Luckily, most of the
    users are not reentrant and protects against this issue. But if a
    user of the ring buffer becomes reentrant (which is what the ring
    buffers do allow), if the NMI also writes to the ring buffer then
    we risk the chance of a deadlock.
    
    This patch moves the ftrace_nmi_enter called by nmi_enter() to the
    ring buffer code. It replaces the current ftrace_nmi_enter that is
    used by arch specific code to arch_ftrace_nmi_enter and updates
    the Kconfig to handle it.
    
    When an NMI is called, it will set a per cpu variable in the ring buffer
    code and will clear it when the NMI exits. If a write to the ring buffer
    crosses page boundaries inside an NMI, a trylock is used on the spin
    lock instead. If the spinlock fails to be acquired, then the entry
    is discarded.
    
    This bug appeared in the ftrace work in the RT tree, where event tracing
    is reentrant. This workaround solved the deadlocks that appeared there.
    
    Signed-off-by: Steven Rostedt <srostedt@redhat.com>

commit 8f9ca475c994e4d32f405183d07e8c7eedbdbdb4
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Feb 5 16:21:53 2009 +0100

    x86: clean up arch/x86/Kconfig*
    
    - Consistent alignment of help text
    - Use the ---help--- keyword everywhere consistently as a visual separator
    - fix whitespace mismatches
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 9d45cf9e36bf9bcf16df6e1cbf049807c8402823
Merge: a146649 0cd5c3c
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Jan 31 17:32:31 2009 +0100

    Merge branch 'x86/urgent' into x86/apic
    
    Conflicts:
    	arch/x86/mach-default/setup.c
    
    Semantic merge:
    	arch/x86/kernel/irqinit_32.c
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 0cd5c3c80a0ebd68c08312fa7d8c13149cc61c4c
Author: Kyle McMartin <kyle@redhat.com>
Date:   Wed Feb 4 14:29:19 2009 -0800

    x86: disable intel_iommu support by default
    
    Due to recurring issues with DMAR support on certain platforms.
    There's a number of filesystem corruption incidents reported:
    
      https://bugzilla.redhat.com/show_bug.cgi?id=479996
      http://bugzilla.kernel.org/show_bug.cgi?id=12578
    
    Provide a Kconfig option to change whether it is enabled by
    default.
    
    If disabled, it can still be reenabled by passing intel_iommu=on to the
    kernel. Keep the .config option off by default.
    
    Signed-off-by: Kyle McMartin <kyle@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-By: David Woodhouse <David.Woodhouse@intel.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 26f7ef14a76b0e590a3797fd7b2f3cee868d9664
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Thu Jan 29 14:19:22 2009 -0800

    x86: don't treat bigsmp as non-standard
    
    just like 64 bit switch from flat logical APIC messages to
    flat physical mode automatically.
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 4272ebfbefd0db40073f3ee5990bceaf2894f08b
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Thu Jan 29 15:14:46 2009 -0800

    x86: allow more than 8 cpus to be used on 32-bit
    
    X86_PC is the only remaining 'sub' architecture, so we dont need
    it anymore.
    
    This also cleans up a few spurious references to X86_PC in the
    driver space - those certainly should be X86.
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 3769e7b4d8ef113e08221a210f849ba57475aff5
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 18:46:23 2009 +0100

    x86/Voyager: move to the X86_32_NON_STANDARD code section
    
    Make Voyager depend on X86_32_NON_STANDARD - it is a non-standard 32-bit
    SMP architecture.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e0c7ae376a13fd79a4dad8becab51040d13dfa90
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 18:43:09 2009 +0100

    x86: rename X86_GENERICARCH to X86_32_NON_STANDARD
    
    X86_GENERICARCH is a misnomer - it contains non-PC 32-bit architectures
    that are not included in the default build.
    
    Rename it to X86_32_NON_STANDARD.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e2c75d9f54334646b3dcdf1fea0d1afe7bfbf644
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 18:31:41 2009 +0100

    x86: remove the subarch menu
    
    Remove the subarch menu and standardize on X86_PC.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 6a48565ed6ac76f351def25cd5e9f181331065f6
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 18:29:13 2009 +0100

    x86: move X86_VSMP from subarch menu
    
    Move X86_VSMP out of the subarch menu - this way it can be enabled
    together with standard PC support as well, in the same kernel.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 9c39801763ed6e08ea8bc694c5ab936643a2b763
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 18:24:57 2009 +0100

    x86: move non-standard 32-bit platform Kconfig entries
    
    - make X86_GENERICARCH depend X86_NON_STANDARD
    
    - move X86_SUMMIT, X86_ES7000 and X86_BIGSMP out of the subarchitecture
      menu and under this option
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f67ae5c9e52e385492b94c14376e322004701555
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 18:20:09 2009 +0100

    x86: move VOYAGER to the NON_STANDARD_PLATFORM section
    
    Move X86_ELAN (old, NCR hw platform built on Intel CPUs) from the
    subarchitecture menu to the non-standard-platform section.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 9e111f3e167a14dd6252cff14fc7dd2ba4c650c6
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 18:18:25 2009 +0100

    x86: move ELAN to the NON_STANDARD_PLATFORM section
    
    Move X86_ELAN (old, AMD based web-boxes) from the subarchitecture
    menu to the non-standard-platform section.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 06ac8346af04f6a972072f6c5780ba734832ad13
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 18:11:43 2009 +0100

    x86: cleanup, introduce CONFIG_NON_STANDARD_PLATFORMS
    
    Introduce a Y/N Kconfig option for non-PC x86 platforms.
    
    Make VisWS, RDC321 and SGI/UV depend on this.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 1ec2dafd937c0f6fed46cbd8f6878f2c1db4a623
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:51:37 2009 +0100

    x86/Voyager: remove ISA quirk
    
    Voyager has this ISA quirk (because Voyager has no ISA support):
    
     config ISA
     	bool "ISA support"
    	depends on !X86_VOYAGER
    
    There's a ton of x86 hardware that does not support ISA, and because
    most ISA drivers cannot auto-detect in a safe way, the convention in
    the kernel has always been to not enable ISA drivers if they are not
    needed.
    
    Voyager users can do likewise - no need for a Kconfig quirk.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 1c61d8c309a4080980474de8c6689527be180782
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:49:22 2009 +0100

    x86/Voyager: remove power management Kconfig quirk
    
    Voyager has this PM/ACPI Kconfig quirk:
    
     menu "Power management and ACPI options"
    	depends on !X86_VOYAGER
    
    Most of the PM features are auto-detect so they should be safe to run
    on just about any hardware. (If not, those instances need fixing.)
    
    In any case, if a kernel is built for Voyager, the power management
    options can be disabled.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 4b19ed915576e8034c3653b4b10b79bde10f69fa
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:47:24 2009 +0100

    x86/Voyager: remove HOTPLUG_CPU Kconfig quirk
    
    Voyager has this Kconfig quirk:
    
     config HOTPLUG_CPU
     	bool "Support for hot-pluggable CPUs"
    	depends on SMP && HOTPLUG && !X86_VOYAGER
    
    But this exception will be moot once Voyager starts using the
    generic x86 code.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e006235e5b9cfb785ecbc05551788e33f96ea0ce
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:45:17 2009 +0100

    x86/Voyager: remove MCE quirk
    
    If no MCE code is desired on Voyager hw then the solution
    is to turn them off in the .config - and to extend the MCE
    code to not initialize on Voyager.
    
    Remove the build-time quirk.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 7cd92366a593246650cc7d6198e2c7d3af8c1d8a
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:40:48 2009 +0100

    x86/Voyager: remove APIC/IO-APIC Kbuild quirk
    
    The lapic/ioapic code properly auto-detects and is safe to run on CPUs that
    have no local APIC. (or which have their lapic turned off in the hardware)
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c3e6a2042fef33b747d2ae3961f5312af801973d
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:38:46 2009 +0100

    x86/Voyager: remove PARAVIRT Kconfig quirk
    
    Remove this Kconfig quirk:
    
     config PARAVIRT
     	bool "Enable paravirtualization code"
    	depends on !X86_VOYAGER
     	help
    
    Voyager support built into a kernel does not preclude paravirt support.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 54523edd237b9e792a3b76988fde23a91d739f43
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:37:33 2009 +0100

    x86/Voyager: remove KVM_GUEST quirk
    
    Voyager has this quirk currently:
    
     config KVM_GUEST
     	bool "KVM Guest support"
     	select PARAVIRT
    	depends on !X86_VOYAGER
    
    Voyager support built into a kernel image does not exclude
    KVM paravirt guest support - so remove this quirk.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e084e531000a488d2d27864266c13ac824575a8b
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:36:31 2009 +0100

    x86/Voyager: remove KVM_CLOCK quirk
    
    Voyager has this build-time quirk to exclude KVM_CLOCK:
    
     	bool "KVM paravirtualized clock"
     	select PARAVIRT
     	select PARAVIRT_CLOCK
    	depends on !X86_VOYAGER
    
    Voyager support built into a kernel image does not exclude
    KVM paravirt clock support - so remove this quirk.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f154f47d5180c2012bf97999e6c600d45db8af2d
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:34:56 2009 +0100

    x86/Voyager: remove VMI Kconfig quirk
    
    x86/Voyager has this build-time quirk:
    
     	bool "VMI Guest support"
     	select PARAVIRT
     	depends on X86_32
    	depends on !X86_VOYAGER
    
    Since VMI is auto-detected (and Voyager will be auto-detected) there's no
    reason for this quirk.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 36619a8a80793a803588a17f772313d5c948357d
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:33:34 2009 +0100

    x86/VisWS: remove Kconfig quirk
    
    VisWS has this quirk currently:
    
     config X86_VISWS
     	bool "SGI 320/540 (Visual Workstation)"
    	depends on X86_32 && PCI && !X86_VOYAGER && X86_MPPARSE && PCI_GODIRECT
    
    The !Voyager quirk is unnecessary.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 550fe4f198558c147c6b8273a709568222a1668a
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:28:08 2009 +0100

    x86/Voyager: remove X86_FIND_SMP_CONFIG Kconfig quirk
    
    x86/Voyager had this Kconfig quirk:
    
     config X86_FIND_SMP_CONFIG
    	def_bool y
    	depends on X86_MPPARSE || X86_VOYAGER
    
    Which splits off the find_smp_config() callback into a build-time quirk.
    
    Voyager should use the existing x86_quirks.mach_find_smp_config() callback
    to introduce SMP-config quirks. NUMAQ-32 and VISWS already use this.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f095df0a0cb35a52605541f619d038339b90d7cc
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:17:55 2009 +0100

    x86/Voyager: remove X86_BIOS_REBOOT Kconfig quirk
    
    Voyager has this Kconfig quirk:
    
    config X86_BIOS_REBOOT
    	bool
    	depends on !X86_VOYAGER
    	default y
    
    Voyager should use the existing machine_ops.emergency_restart reboot
    quirk mechanism instead of a build-time quirk.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 23394d1c9346d9c0aabbc1b6fca52a9c0aa1c297
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:16:16 2009 +0100

    x86/Voyager: remove X86_HT Kconfig quirk
    
    Voyager has this Kconfig quirk:
    
    	depends on (X86_32 && !X86_VOYAGER) || X86_64
    
    That is unnecessary as HT support is CPUID driven and explicitly
     enumerated.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c0b5842a457d44c8788b3fd0c64969be7ef673cd
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:13:05 2009 +0100

    x86: generalize boot_cpu_id
    
    x86/Voyager can boot on non-zero processors. While that can probably
    be fixed by properly remapping the physical CPU IDs, keep boot_cpu_id
    for now for easier transition - and expand it to all of x86.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 3e5095d15276efd14a45393666b1bb7536bf179f
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:07:08 2009 +0100

    x86: replace CONFIG_X86_SMP with CONFIG_SMP
    
    The x86/Voyager subarch used to have this distinction between
     'x86 SMP support' and 'Voyager SMP support':
    
     config X86_SMP
    	bool
    	depends on SMP && ((X86_32 && !X86_VOYAGER) || X86_64)
    
    This is a pointless distinction - Voyager can (and already does) use
    smp_ops to implement various SMP quirks it has - and it can be extended
    more to cover all the specialities of Voyager.
    
    So remove this complication in the Kconfig space.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f2fc0e3071230bb9ea9f64a08c3e619ad1357cfb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:04:39 2009 +0100

    x86/Voyager: remove ARCH_SUSPEND_POSSIBLE Kconfig quirk
    
    Voyager has this Kconfig quirk for suspend/resume:
    
     config ARCH_SUSPEND_POSSIBLE
     	def_bool y
     	depends on !X86_VOYAGER
    
    The proper mechanism to not suspend on a piece of hardware to disable
    CONFIG_SUSPEND. Remove the quirk.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit aced3cee555f0b2fd58501e9b8a8a1295011e134
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:03:24 2009 +0100

    x86/Voyager: remove HIBERNATION Kconfig quirk
    
    Voyager has this hibernation quirk:
    
     config ARCH_HIBERNATION_POSSIBLE
     	def_bool y
    	depends on !SMP || !X86_VOYAGER
    
    Hibernation is a generic facility provided on all x86 platforms. If it
    is buggy on Voyager then that bug should be fixed - not worked around.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 49793b0341a802cf5ee4179e837a2eb20f12c9fe
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:02:29 2009 +0100

    x86/Voyager: remove KGDB Kconfig quirk
    
    x86/Voyager has this KGDB quirk:
    
    	select HAVE_ARCH_KGDB if !X86_VOYAGER
    
    This is completely pointless - there's nothing in KGDB that cannot work
    on Voyager. Remove it.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e0ec9483dbe8f534e0f3ef413f9eba9a5ff78050
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:01:14 2009 +0100

    x86/Voyager: remove KVM Kconfig quirk
    
    Voyager and other subarchitectures have this Kconfig quirk:
    
     	select HAVE_KVM if ((X86_32 && !X86_VOYAGER && !X86_VISWS && !X86_NUMAQ) || X86_64)
    
    This is unnecessary, as KVM cleanly detects based on CPUID capabilities.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 07ef83ae9e99377f38f4d0e472ba6ff09324e5e9
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 16:59:11 2009 +0100

    x86/Voyager: remove NATSEMI Kconfig quirk
    
    x86/Voyager has this quirk for SCx200 support:
    
     config SCx200
     	tristate "NatSemi SCx200 support"
    	depends on !X86_VOYAGER
    
    Remove it - Voyager users can disable drivers they dont need.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 72ee6ebbb3fe1ac23d1a669b177b858d2028bf09
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 16:57:49 2009 +0100

    x86/Voyager: remove MCA Kconfig quirk
    
    Remove Voyager Kconfig quirk: just like any other hardware platform
    users of Voyager systems can configure in the hardware drivers they need.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 61b8172e57c4b8db1fcb7f5fd8dfda85ffd8e052
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Jan 28 19:55:34 2009 +0100

    x86: disable Voyager temporarily
    
    x86/Voyager does not build right now and it's unclear whether it will
    be cleaned up and ported to the subarch-less 32-bit x86 code - so disable
    it for now.
    
    If it's fixed we'll re-enable it - or remove it after some time. There's
    a very low number of systems running development kernels on x86/Voyager
    currently. (one or two on the whole planet)
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e7c64981949ec983ee41c2927c036fdb00d8e68b
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jan 27 17:54:17 2009 +0100

    x86/Voyager: clean up BROKEN Kconfig reference
    
    CONFIG_BROKEN has been removed from the upstream kernel years ago,
    but X86_VOYAGER still had a stale reference to it - remove it.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 89c9c4c58ee86e6e8802597271f23679e0c46647
Author: Brian Gerst <brgerst@gmail.com>
Date:   Tue Jan 27 12:56:48 2009 +0900

    x86: make Voyager use x86 per-cpu setup.
    
    Impact: standardize all x86 platforms on same setup code
    
    With the preceding changes, Voyager can use the same per-cpu setup
    code as all the other x86 platforms.
    
    Signed-off-by: Brian Gerst <brgerst@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>

commit bfe2a3c3b5bf479788d5d5c5561346be6b169043
Merge: 7783549 35d266a
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Jan 23 10:20:15 2009 +0100

    Merge branch 'core/percpu' into perfcounters/core
    
    Conflicts:
    	arch/x86/include/asm/hardirq_32.h
    	arch/x86/include/asm/hardirq_64.h
    
    Semantic merge:
    	arch/x86/include/asm/hardirq.h
    	[ added apic_perf_irqs field. ]
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 03b486322e994dde49e67aedb391867b7cf28822
Author: Nick Piggin <npiggin@suse.de>
Date:   Tue Jan 20 04:36:04 2009 +0100

    x86: make UV support configurable
    
    Make X86 SGI Ultraviolet support configurable. Saves about 13K of text size
    on my modest config.
    
       text    data     bss     dec     hex filename
    6770537 1158680  694356 8623573  8395d5 vmlinux
    6757492 1157664  694228 8609384  835e68 vmlinux.nouv
    
    Signed-off-by: Nick Piggin <npiggin@suse.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit b2b062b8163391c42b3219d466ca1ac9742b9c7b
Merge: a9de18e 99937d6
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sun Jan 18 18:37:14 2009 +0100

    Merge branch 'core/percpu' into stackprotector
    
    Conflicts:
    	arch/x86/include/asm/pda.h
    	arch/x86/include/asm/system.h
    
    Also, moved include/asm-x86/stackprotector.h to arch/x86/include/asm.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 506c10f26c481b7f8ef27c1c79290f68989b2e9e
Merge: e1df957 c597650
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sun Jan 11 02:42:53 2009 +0100

    Merge commit 'v2.6.29-rc1' into perfcounters/core
    
    Conflicts:
    	include/linux/kernel_stat.h

commit da4276b8299a6544dc41ac2485d3ffca5811b3fb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Jan 7 11:05:10 2009 +0100

    x86: offer frame pointers in all build modes
    
    CONFIG_FRAME_POINTERS=y results in much better debug info for the
    kernel (clear and precise backtraces), with the only drawback being
    a ~1% increase in kernel size.
    
    So offer it unconditionally and enable it by default.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 2e9f3bddcbc711bb14d86c6f068a779bf3710247
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Sun Jan 4 15:41:25 2009 -0800

    bzip2/lzma: make config machinery an arch configurable
    
    Impact: Bug fix (we should not show this menu on irrelevant architectures)
    
    Make the config machinery to drive the gzip/bzip2/lzma selection
    dependent on the architecture advertising HAVE_KERNEL_* so that we
    don't display this for architectures where it doesn't matter.
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit b0a11f44aba631fd4b898b620c93cc2096f3f15c
Merge: 7398ca7 0e93dd8
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Sat Jan 3 16:43:44 2009 +0100

    Merge branches 'iommu/api' and 'iommu/amd' into for-linus

commit 2e117604a4e8f3f9cee4aec3373b0382159e152a
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Thu Dec 11 19:00:12 2008 +0100

    AMD IOMMU: add Kconfig entry for statistic collection code
    
    Impact: adds new Kconfig entry
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

commit 1aaf118352b85bb359ce28070bcc478f659a7031
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Wed Nov 26 17:25:13 2008 +0100

    select IOMMU_API when DMAR and/or AMD_IOMMU is selected
    
    These two IOMMUs can implement the current version of this API. So
    select the API if one or both of these IOMMU drivers is selected.
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

commit b840d79631c882786925303c2b0f4fefc31845ed
Merge: 597b0d2 c3d8000
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 2 11:44:09 2009 -0800

    Merge branch 'cpus4096-for-linus-2' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'cpus4096-for-linus-2' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (66 commits)
      x86: export vector_used_by_percpu_irq
      x86: use logical apicid in x2apic_cluster's x2apic_cpu_mask_to_apicid_and()
      sched: nominate preferred wakeup cpu, fix
      x86: fix lguest used_vectors breakage, -v2
      x86: fix warning in arch/x86/kernel/io_apic.c
      sched: fix warning in kernel/sched.c
      sched: move test_sd_parent() to an SMP section of sched.h
      sched: add SD_BALANCE_NEWIDLE at MC and CPU level for sched_mc>0
      sched: activate active load balancing in new idle cpus
      sched: bias task wakeups to preferred semi-idle packages
      sched: nominate preferred wakeup cpu
      sched: favour lower logical cpu number for sched_mc balance
      sched: framework for sched_mc/smt_power_savings=N
      sched: convert BALANCE_FOR_xx_POWER to inline functions
      x86: use possible_cpus=NUM to extend the possible cpus allowed
      x86: fix cpu_mask_to_apicid_and to include cpu_online_mask
      x86: update io_apic.c to the new cpumask code
      x86: Introduce topology_core_cpumask()/topology_thread_cpumask()
      x86: xen: use smp_call_function_many()
      x86: use work_on_cpu in x86/kernel/cpu/mcheck/mce_amd_64.c
      ...
    
    Fixed up trivial conflict in kernel/time/tick-sched.c manually

commit a9de18eb761f7c1c860964b2e5addc1a35c7e861
Merge: b2aaf8f 6a94cb7
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Dec 31 08:31:57 2008 +0100

    Merge branch 'linus' into stackprotector
    
    Conflicts:
    	arch/x86/include/asm/pda.h
    	kernel/fork.c

commit 179475a3b46f86e2d06f83e2312218ac3f0cf3a7
Merge: bb758e9 860cf88
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Dec 30 16:20:19 2008 -0800

    Merge branch 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'irq-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, sparseirq: clean up Kconfig entry
      x86: turn CONFIG_SPARSE_IRQ off by default
      sparseirq: fix numa_migrate_irq_desc dependency and comments
      sparseirq: add kernel-doc notation for new member in irq_desc, -v2
      locking, irq: enclose irq_desc_lock_class in CONFIG_LOCKDEP
      sparseirq, xen: make sure irq_desc is allocated for interrupts
      sparseirq: fix !SMP building, #2
      x86, sparseirq: move irq_desc according to smp_affinity, v7
      proc: enclose desc variable of show_stat() in CONFIG_SPARSE_IRQ
      sparse irqs: add irqnr.h to the user headers list
      sparse irqs: handle !GENIRQ platforms
      sparseirq: fix !SMP && !PCI_MSI && !HT_IRQ build
      sparseirq: fix Alpha build failure
      sparseirq: fix typo in !CONFIG_IO_APIC case
      x86, MSI: pass irq_cfg and irq_desc
      x86: MSI start irq numbering from nr_irqs_gsi
      x86: use NR_IRQS_LEGACY
      sparse irq_desc[] array: core kernel and x86 changes
      genirq: record IRQ_LEVEL in irq_desc[]
      irq.h: remove padding from irq_desc on 64bits

commit bb758e9637e5ddcff84a97177415499ae1fed498
Merge: 5f34fe1 32e8d18
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Dec 30 16:16:21 2008 -0800

    Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      hrtimers: fix warning in kernel/hrtimer.c
      x86: make sure we really have an hpet mapping before using it
      x86: enable HPET on Fujitsu u9200
      linux/timex.h: cleanup for userspace
      posix-timers: simplify de_thread()->exit_itimers() path
      posix-timers: check ->it_signal instead of ->it_pid to validate the timer
      posix-timers: use "struct pid*" instead of "struct task_struct*"
      nohz: suppress needless timer reprogramming
      clocksource, acpi_pm.c: put acpi_pm_read_slow() under CONFIG_PCI
      nohz: no softirq pending warnings for offline cpus
      hrtimer: removing all ur callback modes, fix
      hrtimer: removing all ur callback modes, fix hotplug
      hrtimer: removing all ur callback modes
      x86: correct link to HPET timer specification
      rtc-cmos: export second NVRAM bank
    
    Fixed up conflicts in sound/drivers/pcsp/pcsp.c and sound/core/hrtimer.c
    manually.

commit e1df957670aef74ffd9a4ad93e6d2c90bf6b4845
Merge: 2b583d8 3c92ec8
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Dec 29 09:45:15 2008 +0100

    Merge branch 'linus' into perfcounters/core
    
    Conflicts:
    	fs/exec.c
    	include/linux/init_task.h
    
    Simple context conflicts.

commit a39b863342b8aba52390092be95db58f6ed56061
Merge: b0f4b28 4e20228
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Dec 28 12:27:58 2008 -0800

    Merge branch 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (31 commits)
      sched: fix warning in fs/proc/base.c
      schedstat: consolidate per-task cpu runtime stats
      sched: use RCU variant of list traversal in for_each_leaf_rt_rq()
      sched, cpuacct: export percpu cpuacct cgroup stats
      sched, cpuacct: refactoring cpuusage_read / cpuusage_write
      sched: optimize update_curr()
      sched: fix wakeup preemption clock
      sched: add missing arch_update_cpu_topology() call
      sched: let arch_update_cpu_topology indicate if topology changed
      sched: idle_balance() does not call load_balance_newidle()
      sched: fix sd_parent_degenerate on non-numa smp machine
      sched: add uid information to sched_debug for CONFIG_USER_SCHED
      sched: move double_unlock_balance() higher
      sched: update comment for move_task_off_dead_cpu
      sched: fix inconsistency when redistribute per-cpu tg->cfs_rq shares
      sched/rt: removed unneeded defintion
      sched: add hierarchical accounting to cpu accounting controller
      sched: include group statistics in /proc/sched_debug
      sched: rename SCHED_NO_NO_OMIT_FRAME_POINTER => SCHED_OMIT_FRAME_POINTER
      sched: clean up SCHED_CPUMASK_ALLOC
      ...

commit b0f4b285d7ed174804658539129a834270f4829a
Merge: be9c5ae 5250d32
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Dec 28 12:21:10 2008 -0800

    Merge branch 'tracing-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'tracing-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (241 commits)
      sched, trace: update trace_sched_wakeup()
      tracing/ftrace: don't trace on early stage of a secondary cpu boot, v3
      Revert "x86: disable X86_PTRACE_BTS"
      ring-buffer: prevent false positive warning
      ring-buffer: fix dangling commit race
      ftrace: enable format arguments checking
      x86, bts: memory accounting
      x86, bts: add fork and exit handling
      ftrace: introduce tracing_reset_online_cpus() helper
      tracing: fix warnings in kernel/trace/trace_sched_switch.c
      tracing: fix warning in kernel/trace/trace.c
      tracing/ring-buffer: remove unused ring_buffer size
      trace: fix task state printout
      ftrace: add not to regex on filtering functions
      trace: better use of stack_trace_enabled for boot up code
      trace: add a way to enable or disable the stack tracer
      x86: entry_64 - introduce FTRACE_ frame macro v2
      tracing/ftrace: add the printk-msg-only option
      tracing/ftrace: use preempt_enable_no_resched_notrace in ring_buffer_time_stamp()
      x86, bts: correctly report invalid bts records
      ...
    
    Fixed up trivial conflict in scripts/recordmcount.pl due to SH bits
    being already partly merged by the SH merge.

commit 973656fe1afb4adf95d7b9ab75d4660cd3821ea1
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Dec 25 16:26:47 2008 +0100

    x86, sparseirq: clean up Kconfig entry
    
    Impact: improve help text
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 4e17fee24a39448f3a20e9cf98887b7665825848
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Dec 25 12:04:17 2008 +0100

    x86: turn CONFIG_SPARSE_IRQ off by default
    
    New feature - lets disable it by default first - can flip it around
    later.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 3e5621edb3392b28efb260ac99b2d26fb8b44e73
Merge: be9a1d3 181de82
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Dec 23 16:30:27 2008 +0100

    Merge branch 'x86/iommu' into x86/core

commit fa623d1b0222adbe8f822e53c08003b9679a410c
Merge: 3d44cc3 1ccedb7c 34945ed d437797 c415b3d beeb419 f269b07 4e42ebd e1286f2 878719e fd28a5b adf77ba 8f2466f 93093d0 bb55746 f34a10b b6fd6f2 30604bb 5b9a0e1 67bac79 7a9787e f4166c5 69b88af 8daa190 3e1e900 8403295 4db646b 205516c c8182f0 ecbf29c
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Dec 23 16:27:23 2008 +0100

    Merge branches 'x86/apic', 'x86/cleanups', 'x86/cpufeature', 'x86/crashdump', 'x86/debug', 'x86/defconfig', 'x86/detect-hyper', 'x86/doc', 'x86/dumpstack', 'x86/early-printk', 'x86/fpu', 'x86/idle', 'x86/io', 'x86/memory-corruption-check', 'x86/microcode', 'x86/mm', 'x86/mtrr', 'x86/nmi-watchdog', 'x86/pat2', 'x86/pci-ioapic-boot-irq-quirks', 'x86/ptrace', 'x86/quirks', 'x86/reboot', 'x86/setup-memory', 'x86/signal', 'x86/sparse-fixes', 'x86/time', 'x86/uv' and 'x86/xen' into x86/core

commit b909895739427874c089bc0e03dc119f99cab2dd
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Fri Dec 19 13:48:34 2008 -0800

    sparseirq: fix numa_migrate_irq_desc dependency and comments
    
    Impact: reduce kconfig variable scope and clean up
    
    Bartlomiej pointed out that the config dependencies and comments are not right.
    
    update it depend to NUMA, and fix some comments
    
    Reported-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 948a7b2b5e2bf126fb697aeb11ff379b2c85dd2e
Merge: 9466d60 17483a1
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Dec 17 13:16:08 2008 +0100

    Merge branch 'irq/sparseirq' into cpus4096
    
    Conflicts:
    	arch/x86/kernel/io_apic.c
    
    Merge irq/sparseirq here, to resolve conflicts.

commit 78637a97b7fe1df51f40a460448df0b93d511176
Author: Mike Travis <travis@sgi.com>
Date:   Tue Dec 16 17:34:00 2008 -0800

    x86: Set CONFIG_NR_CPUS even on UP
    
    Impact: cleanup
    
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Mike Travis <travis@sgi.com>

commit 36f5101a60de8f79c0d1ca06e50660bf5129e02c
Author: Mike Travis <travis@sgi.com>
Date:   Tue Dec 16 17:33:51 2008 -0800

    x86: enable MAXSMP
    
    Impact: activates new off-stack cpumask code on MAXSMP (non-default) x86 configs
    
    Set MAXSMP to enable CONFIG_CPUMASK_OFFSTACK which moves cpumask's off
    the stack (and in structs) when using cpumask_var_t.
    
    Signed-off-by: Mike Travis <travis@sgi.com>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Acked-by: Ingo Molnar <mingo@elte.hy>

commit 17483a1f34c970e6c2cb8c082d4441bfabbe88a9
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Fri Dec 12 13:14:18 2008 -0800

    sparseirq: fix !SMP building, #2
    
    Impact: build fix
    
    make intr_remapping.c to include smp.h, so could use boot_cpu_id there
    
    also remove old change that disabling sparseirq with !SMP
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 48a1b10aff588833b73994704c47bbd0deb73e9c
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Thu Dec 11 00:15:01 2008 -0800

    x86, sparseirq: move irq_desc according to smp_affinity, v7
    
    Impact: improve NUMA handling by migrating irq_desc on smp_affinity changes
    
    if CONFIG_NUMA_MIGRATE_IRQ_DESC is set:
    
    -  make irq_desc to go with affinity aka irq_desc moving etc
    -  call move_irq_desc in irq_complete_move()
    -  legacy irq_desc is not moved, because they are allocated via static array
    
    for logical apic mode, need to add move_desc_in_progress_in_same_domain,
    otherwise it will not be moved ==> also could need two phases to get
    irq_desc moved.
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 78f902ccc597d6ce3e8d1477d70f2d79e960ba7a
Merge: 9ee670f 8b1fae4
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Dec 16 22:04:48 2008 +0100

    Merge commit 'v2.6.28-rc8' into x86/doc

commit b93a531e315e97ef00367099e6b5f19651936e20
Author: Jan Beulich <jbeulich@novell.com>
Date:   Tue Dec 16 11:40:27 2008 +0000

    allow bug table entries to use relative pointers (and use it on x86-64)
    
    Impact: reduce bug table size
    
    This allows reducing the bug table size by half. Perhaps there are
    other 64-bit architectures that could also make use of this.
    
    Signed-off-by: Jan Beulich <jbeulich@novell.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit ee06094f8279e1312fc0a31591320cc7b6f0ab1e
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Dec 13 09:00:03 2008 +0100

    perfcounters: restructure x86 counter math
    
    Impact: restructure code
    
    Change counter math from absolute values to clear delta logic.
    
    We try to extract elapsed deltas from the raw hw counter - and put
    that into the generic counter.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 8299608f140ae321e4eb5d1306184265d2b9511e
Merge: 45ab6b0 30cb367 69b88af 8daa190
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Dec 12 13:49:17 2008 +0100

    Merge branches 'irq/sparseirq', 'x86/quirks' and 'x86/reboot' into cpus4096
    
    We merge the irq/sparseirq, x86/quirks and x86/reboot trees into the
    cpus4096 tree because the io-apic changes in the sparseirq change
    conflict with the cpumask changes in the cpumask tree, and we
    want to resolve those.

commit 81444a799550214f549caf579cf65a0ca55e70b7
Merge: a64d31b da485e0
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Dec 12 12:43:05 2008 +0100

    Merge branch 'tracing/fastboot' into cpus4096

commit e18d7af85296cb6999aae171e8a9f8612bea5ae0
Merge: 3555105 8b1fae4
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Dec 12 11:53:43 2008 +0100

    Merge commit 'v2.6.28-rc8' into x86/mm

commit 8a4830f8891be6b4e04809693a24771a4694e0b0
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Tue Dec 9 11:56:20 2008 -0800

    sparseirq: fix !SMP && !PCI_MSI && !HT_IRQ build
    
    Ingo Molnar wrote:
    
    >>>  drivers/pci/intr_remapping.c: In function 'irq_2_iommu_alloc':
    >>>  drivers/pci/intr_remapping.c:72: error: 'boot_cpu_id' undeclared (first use in this function)
    >>>  drivers/pci/intr_remapping.c:72: error: (Each undeclared identifier is reported only once
    >>>  drivers/pci/intr_remapping.c:72: error: for each function it appears in.)
    
    sparseirq should only be used with SMP for now.

commit 241771ef016b5c0c83cd7a4372a74321c973c1e6
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Dec 3 10:39:53 2008 +0100

    performance counters: x86 support
    
    Implement performance counters for x86 Intel CPUs.
    
    It's simplified right now: the PERFMON CPU feature is assumed,
    which is available in Core2 and later Intel CPUs.
    
    The design is flexible to be extended to more CPU types as well.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit aa9c9b8c584a42a094202b7e0f63497e888f86a7
Merge: 87f7606 218d11a
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Dec 8 15:07:49 2008 +0100

    Merge branch 'linus' into x86/quirks

commit 0b8f1efad30bd58f89961b82dfe68b9edf8fd2ac
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Fri Dec 5 18:58:31 2008 -0800

    sparse irq_desc[] array: core kernel and x86 changes
    
    Impact: new feature
    
    Problem on distro kernels: irq_desc[NR_IRQS] takes megabytes of RAM with
    NR_CPUS set to large values. The goal is to be able to scale up to much
    larger NR_IRQS value without impacting the (important) common case.
    
    To solve this, we generalize irq_desc[NR_IRQS] to an (optional) array of
    irq_desc pointers.
    
    When CONFIG_SPARSE_IRQ=y is used, we use kzalloc_node to get irq_desc,
    this also makes the IRQ descriptors NUMA-local (to the site that calls
    request_irq()).
    
    This gets rid of the irq_cfg[] static array on x86 as well: irq_cfg now
    uses desc->chip_data for x86 to store irq_cfg.
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c0515566f3117c44b0572559bcc3cb00899b0910
Merge: 4385cec 061e41f
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Dec 4 11:05:26 2008 +0100

    Merge commit 'v2.6.28-rc7' into x86/cleanups

commit 6083aa485c86933ee444dc2242270d37ea4664cb
Merge: dcb7731 93093d0
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Dec 3 08:25:56 2008 +0100

    Merge branch 'x86/io' into x86/iommu
    
    Merge x86/io into x86/iommu due to a small patch conflict in io.h.

commit 8daa19051e1c7369c89ace7b18e74fe1f55dfa29
Author: Niels de Vos <niels.devos@wincor-nixdorf.com>
Date:   Mon Dec 1 14:13:53 2008 -0800

    x86, apm: remove CONFIG_APM_REAL_MODE_POWER_OFF in favor of a kernel parameter
    
    Remove CONFIG_APM_REAL_MODE_POWER_OFF like CONFIG_APM_POWER_OFF which
    has been done for linux-2.2.14pre8 (http://lkml.org/lkml/1999/11/23/3).
    
    Re-introducing CONFIG_APM_POWER_OFF got nack-ed. Stephen didn't bother
    to remove CONFIG_APM_REAL_MODE_POWER_OFF, let's get rid of it now.
    	Reference: http://lkml.org/lkml/2008/5/7/97
    
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 48d68b20d00865035b8b65e69af343d0f53fac9d
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue Dec 2 00:20:39 2008 +0100

    tracing/function-graph-tracer: support for x86-64
    
    Impact: extend and enable the function graph tracer to 64-bit x86
    
    This patch implements the support for function graph tracer under x86-64.
    Both static and dynamic tracing are supported.
    
    This causes some small CPP conditional asm on arch/x86/kernel/ftrace.c I
    wanted to use probe_kernel_read/write to make the return address
    saving/patching code more generic but it causes tracing recursion.
    
    That would be perhaps useful to implement a notrace version of these
    function for other archs ports.
    
    Note that arch/x86/process_64.c is not traced, as in X86-32. I first
    thought __switch_to() was responsible of crashes during tracing because I
    believed current task were changed inside but that's actually not the
    case (actually yes, but not the "current" pointer).
    
    So I will have to investigate to find the functions that harm here, to
    enable tracing of the other functions inside (but there is no issue at
    this time, while process_64.c stays out of -pg flags).
    
    A little possible race condition is fixed inside this patch too. When the
    tracer allocate a return stack dynamically, the current depth is not
    initialized before but after. An interrupt could occur at this time and,
    after seeing that the return stack is allocated, the tracer could try to
    trace it with a random uninitialized depth. It's a prevention, even if I
    hadn't problems with it.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Tim Bird <tim.bird@am.sony.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f6d2e6f57bba66272b28dd20c949b14ce39cb804
Merge: 8caac56 7b1dedc
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Dec 1 20:36:13 2008 +0100

    Merge branch 'x86/urgent' into x86/iommu

commit 2c5643b1c5c7fbb13f340d4c58944d9642f41796
Author: Hitoshi Mitake <h.mitake@gmail.com>
Date:   Sun Nov 30 17:16:04 2008 +0900

    x86: provide readq()/writeq() on 32-bit too
    
    Impact: add new API for drivers
    
    Add implementation of readq/writeq to x86_32, and add config value to
    the x86 architecture to determine existence of readq/writeq.
    
    Signed-off-by: Hitoshi Mitake <h.mitake@gmail.com>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 3bdae4f46445ea7cc9ee031d7ff106fdc6228669
Merge: 9f1e87e 5f5db59
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Nov 28 15:00:37 2008 +0100

    Merge branch 'x86/debug' into x86/irq
    
    We merge this branch because x86/debug touches code that we started
    cleaning up in x86/irq. The two branches started out independent,
    but as unexpected amount of activity went into x86/irq, they became
    dependent. Resolve that by this cross-merge.

commit fb52607afcd0629776f1dc9e657647ceae81dd50
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue Nov 25 21:07:04 2008 +0100

    tracing/function-return-tracer: change the name into function-graph-tracer
    
    Impact: cleanup
    
    This patch changes the name of the "return function tracer" into
    function-graph-tracer which is a more suitable name for a tracing
    which makes one able to retrieve the ordered call stack during
    the code flow.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 943f3d030003e1fa5f77647328e805441213bf49
Merge: 64b7482 b19b3c7 6f893fb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Nov 24 17:46:57 2008 +0100

    Merge branches 'sched/core', 'core/core' and 'tracing/core' into cpus4096

commit e45f2c07742d447597df001c878bc4a8aafcde37
Author: Denis V. Lunev <den@openvz.org>
Date:   Mon Nov 24 11:28:36 2008 +0300

    x86: correct link to HPET timer specification
    
    Impact: update documentation / help text
    
    Original link is dead.
    
    Signed-off-by: Denis V. Lunev <den@openvz.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 8d26487fd4ddda7a0237da418fb8669fb06ae557
Author: Török Edwin <edwintorok@gmail.com>
Date:   Sun Nov 23 12:39:08 2008 +0200

    tracing/stack-tracer: introduce CONFIG_USER_STACKTRACE_SUPPORT
    
    Impact: cleanup
    
    User stack tracing is just implemented for x86, but it is not x86 specific.
    
    Introduce a generic config flag, that is currently enabled only for x86.
    When other arches implement it, they will have to
    SELECT USER_STACKTRACE_SUPPORT.
    
    Signed-off-by: Török Edwin <edwintorok@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit a0a70c735ef714fe1b6777b571630c3d50c7b008
Merge: 9676e73 60a5151 0231022 522a110
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sun Nov 23 09:10:32 2008 +0100

    Merge branches 'tracing/profiling', 'tracing/options' and 'tracing/urgent' into tracing/core

commit fc02e90c34bacd5d7bc77b832c65a8f06e1bd60e
Merge: ec4e0e2 13d428a
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Nov 21 08:57:04 2008 +0100

    Merge commit 'v2.6.28-rc6' into sched/core

commit 3108864e2d70891d30d60af6af256a1b517d7078
Merge: 4f7dbc7 604d205
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Nov 19 18:53:02 2008 -0800

    Merge branch 'x86/numa' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86/numa' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86: make NUMA on 32-bit depend on EXPERIMENTAL again
      x86, hibernate: fix breakage on x86_32 with CONFIG_NUMA set

commit 3ac3ba0b396fd99550e08034b0e4c27fdf39c252
Merge: 934352f 7f0f598
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Nov 19 09:44:37 2008 +0100

    Merge branch 'linus' into sched/core
    
    Conflicts:
    	kernel/Makefile

commit b5fe363b7d89577fcfda9b6cf0efc32760bbccc6
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Tue Nov 18 08:14:14 2008 -0800

    x86: use update_genapic to get rid of ES7000_CLUSTERED_APIC v2
    
    Impact: clean up
    
    We can autodetect those system that need cluster apic, and update genapic
    accordingly.
    
    We can also remove wakeup.h for e7000, because it's default one is now
    the same as overall default mach_wakecpu.h
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 73f56c0d35e6427081a4eabd620d8b8d8a35bd09
Merge: 0af40a4 8501c45
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Nov 18 16:48:49 2008 +0100

    Merge branch 'iommu-fixes-2.6.28' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/linux-2.6-iommu into x86/urgent

commit cbe9ee00cea58d1f77b172fe22a51080e90877f2
Merge: 0bd7b79 10db4ef
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Nov 18 15:41:36 2008 +0100

    Merge branch 'x86/urgent' into x86/cleanups

commit a1afd01c175324656d0e8f1c82ea94b474953c04
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Tue Nov 18 12:44:21 2008 +0100

    x86: default to SWIOTLB=y on x86_64
    
    Impact: fixes korg bugzilla 11980
    
    A kernel for a 64bit x86 system should always contain the swiotlb code
    in case it is booted on a machine without any hardware IOMMU supported
    by the kernel and more than 4GB of RAM. This patch changes Kconfig to
    always compile swiotlb into the kernel for x86_64.
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
    Cc: stable@kernel.org
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 9dacc71ff31a008d1e689fc824d31f6696454f68
Merge: 19f47c6 9bf1a24
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Nov 17 10:46:18 2008 +0100

    Merge commit 'v2.6.28-rc5' into x86/cleanups

commit 604d20554883cf03f888440d58ea7c6d36899839
Author: Rafael J. Wysocki <rjw@sisk.pl>
Date:   Wed Nov 12 23:26:14 2008 +0100

    x86: make NUMA on 32-bit depend on EXPERIMENTAL again
    
    My previous patch to make CONFIG_NUMA on x86_32 depend on BROKEN
    turned out to be unnecessary, after all, since the source of the
    hibernation vs CONFIG_NUMA problem turned out to be the fact that
    we didn't take the NUMA KVA remapping into account in the
    hibernation code.
    
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 60a011c736e7dd09a0b01ca6a051a416f3f52ffb
Merge: d06bbd6 19b3e96
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Nov 12 10:17:09 2008 +0100

    Merge branch 'tracing/function-return-tracer' into tracing/fastboot

commit d06bbd669539215405874d8fe32ab65105e6c4bb
Merge: d844222 3e89c7b c1e7abb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Nov 12 10:11:37 2008 +0100

    Merge branches 'tracing/ftrace' and 'tracing/urgent' into tracing/core
    
    Conflicts:
    	kernel/trace/ring_buffer.c

commit c280ea5e4c6ba0b38ed6b005150fe16a660e903b
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Nov 8 13:29:45 2008 +0100

    x86: fix documentation typo in arch/x86/Kconfig
    
    Impact: documentation update
    
    Chris Snook pointed out that it's Core i7, not Core 7i.
    
    Reported-by: Chris Snook <csnook@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 6cd10f8db385ba547811baa5b26f672fdff232e6
Author: James Bottomley <James.Bottomley@HansenPartnership.com>
Date:   Sun Nov 9 11:53:14 2008 -0600

    x86, voyager: fix smp generic helper voyager breakage
    
    Impact: build/boot fix for x86/Voyager
    
    This change:
    
    | commit 3d4422332711ef48ef0f132f1fcbfcbd56c7f3d1
    | Author: Jens Axboe <jens.axboe@oracle.com>
    | Date:   Thu Jun 26 11:21:34 2008 +0200
    |
    |     Add generic helpers for arch IPI function calls
    
    didn't wire up the voyager smp call function correctly, so do that
    here.  Also make CONFIG_USE_GENERIC_SMP_HELPERS a def_bool y again,
    since we now use the generic helpers for every x86 architecture.
    
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Cc: Jens Axboe <Jens.Axboe@oracle.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f1c4be5edad3756212cbbbeab39428fe90c27109
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Nov 11 10:22:36 2008 +0100

    tracing, x86: clean up FUNCTION_RET_TRACER Kconfig
    
    Impact: cleanup
    
    move FUNCTION_RET_TRACER to the X86 select section, where we have all the
    other options.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit caf4b323b02a16c92fba449952ac6515ddc76d7a
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue Nov 11 07:03:45 2008 +0100

    tracing, x86: add low level support for ftrace return tracing
    
    Impact: add infrastructure for function-return tracing
    
    Add low level support for ftrace return tracing.
    
    This plug-in stores return addresses on the thread_info structure of
    the current task.
    
    The index of the current return address is initialized when the task
    is the first one (init) and when a process forks (the child). It is
    not needed when a task does a sys_execve because after this syscall,
    it still needs to return on the kernel functions it called.
    
    Note that the code of return_to_handler has been suggested by Steven
    Rostedt as almost all of the ideas of improvements in this V3.
    
    For purpose of security, arch/x86/kernel/process_32.c is not traced
    because __switch_to() changes the current task during its execution.
    That could cause inconsistency in the stored return address of this
    function even if I didn't have any crash after testing with tracing on
    this function enabled.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e0cb4ebcd9e5b4ddd8216c20f54445c91b1fa4b9
Merge: a309720 45b86a9
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Nov 11 09:40:18 2008 +0100

    Merge branch 'tracing/urgent' into tracing/ftrace
    
    Conflicts:
    	kernel/trace/trace.c

commit ae1e9130bfb9ad55eb97ec3fb17a122b7a118f98
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Nov 11 09:05:16 2008 +0100

    sched: rename SCHED_NO_NO_OMIT_FRAME_POINTER => SCHED_OMIT_FRAME_POINTER
    
    Impact: cleanup, change .config option name
    
    We had this ugly config name for a long time for hysteric raisons.
    Rename it to a saner name.
    
    We still cannot get rid of it completely, until /proc/<pid>/stack
    usage replaces WCHAN usage for good.
    
    We'll be able to do that in the v2.6.29/v2.6.30 timeframe.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 4694516d1987303dd83bfd0efdd36fa5b65d701b
Author: Rafael J. Wysocki <rjw@sisk.pl>
Date:   Mon Nov 10 21:52:47 2008 +0100

    x86: Make NUMA on 32-bit depend on BROKEN
    
    While investigating the failure of hibernation on 32-bit x86 with
    CONFIG_NUMA set, as described in this message
    http://marc.info/?l=linux-kernel&m=122634118116226&w=4
    I asked some people for help and I was told that it wasn't really
    worth the effort, because CONFIG_NUMA was generally broken on 32-bit
    x86 systems and it shouldn't be used in such configs.  For this
    reason, make CONFIG_NUMA depend on BROKEN instead of EXPERIMENTAL on
    x86-32.
    
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Pavel Machek <pavel@suse.cz>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 895e031707954a9ca26ed4f5f794575313854ed1
Merge: 838e8bb a622cf6
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Nov 8 20:23:02 2008 +0100

    Merge branch 'linus' into x86/cleanups

commit a6b0786f7f83bcc4d414a2977aaebe2941ebe1de
Merge: 3e03fb7 6a60dd1 072ba49
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Nov 8 09:34:35 2008 +0100

    Merge branches 'tracing/ftrace', 'tracing/fastboot', 'tracing/nmisafe' and 'tracing/urgent' into tracing/core

commit 258594a138f4ca9adf214f5272592d7f21def610
Merge: a87d091 ca3273f9
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Nov 7 10:29:58 2008 +0100

    Merge branch 'sched/urgent' into sched/core

commit a15a82f42c5ee519d28f08c932803a9fd5168fc4
Merge: 9144f38 8d00450
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Nov 6 15:57:24 2008 -0800

    Merge branch 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      Revert "x86: default to reboot via ACPI"
      x86: align DirectMap in /proc/meminfo
      AMD IOMMU: fix lazy IO/TLB flushing in unmap path
      x86: add smp_mb() before sending INVALIDATE_TLB_VECTOR
      x86: remove VISWS and PARAVIRT around NR_IRQS puzzle
      x86: mention ACPI in top-level Kconfig menu
      x86: size NR_IRQS on 32-bit systems the same way as 64-bit
      x86: don't allow nr_irqs > NR_IRQS
      x86/docs: remove noirqbalance param docs
      x86: don't use tsc_khz to calculate lpj if notsc is passed
      x86, voyager: fix smp_intr_init() compile breakage
      AMD IOMMU: fix detection of NP capable IOMMUs

commit a87d091434ed2a34d647979ab12084139ee1fe41
Author: Ken Chen <kenchen@google.com>
Date:   Thu Nov 6 11:10:49 2008 -0800

    x86, sched: enable wchan config menu item on 64-bit
    
    Enable the wchan config menu item for now on x86-64 arch?  This will
    at least allow people to enable/disable frame pointers on scheduler
    functions.
    
    Signed-off-by: Ken Chen <kenchen@google.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit fd51b2d7d5df932767b89e00d0871a38a2c53e74
Author: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
Date:   Wed Nov 5 02:27:19 2008 +0900

    x86: update CONFIG_NUMA description
    
    Impact: clarify/update CONFIG_NUMA text
    
    CONFIG_NUMA description talk about a bit old thing.
    So, following changes are better.
    
     o CONFIG_NUMA is no longer EXPERIMENTAL
    
     o Opteron is not the only processor of NUMA topology on x86_64 no longer,
       but also Intel Core7i has it.
    
    Signed-off-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit da85f865b1dcec0853c48b763ed312441ce0c7df
Author: Bjorn Helgaas <bjorn.helgaas@hp.com>
Date:   Wed Nov 5 13:37:27 2008 -0600

    x86: mention ACPI in top-level Kconfig menu
    
    Impact: clarify menuconfig text
    
    Mention ACPI in the top-level menu to give a clue as to where
    it lives. This matches what ia64 does.
    
    Signed-off-by: Bjorn Helgaas <bjorn.helgaas@hp.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 60a7ecf42661f2b22168751298592da6ee210c9e
Author: Steven Rostedt <srostedt@redhat.com>
Date:   Wed Nov 5 16:05:44 2008 -0500

    ftrace: add quick function trace stop
    
    Impact: quick start and stop of function tracer
    
    This patch adds a way to disable the function tracer quickly without
    the need to run kstop_machine. It adds a new variable called
    function_trace_stop which will stop the calls to functions from mcount
    when set.  This is just an on/off switch and does not handle recursion
    like preempt_disable().
    
    It's main purpose is to help other tracers/debuggers start and stop tracing
    fuctions without the need to call kstop_machine.
    
    The config option HAVE_FUNCTION_TRACE_MCOUNT_TEST is added for archs
    that implement the testing of the function_trace_stop in the mcount
    arch dependent code. Otherwise, the test is done in the C code.
    
    x86 is the only arch at the moment that supports this.
    
    Signed-off-by: Steven Rostedt <srostedt@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e5beae16901795223d677f15aa2fe192976278ee
Author: Keith Packard <keithp@keithp.com>
Date:   Mon Nov 3 18:21:45 2008 +0100

    io mapping: clean up #ifdefs
    
    Impact: cleanup
    
    clean up ifdefs: change #ifdef CONFIG_X86_32/64 to
    CONFIG_HAVE_ATOMIC_IOMAP.
    
    flip around the #ifdef sections to clean up the structure.
    
    Signed-off-by: Keith Packard <keithp@keithp.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 3555105333ae55414d0fe051557bd7dc590f5255
Author: Gary Hade <garyhade@us.ibm.com>
Date:   Fri Oct 31 10:52:03 2008 -0700

    x86: add memory hotremove config option
    
    Impact: enable CONFIG_MEMORY_HOTREMOVE feature on x86. (default-off)
    
    Memory hotremove functionality can currently be configured into
    the ia64, powerpc, and s390 kernels.
    
    This patch makes it possible to configure the memory hotremove
    functionality into the x86 kernel as well.
    
    Signed-off-by: Badari Pulavarty <pbadari@us.ibm.com>
    Signed-off-by: Gary Hade <garyhade@us.ibm.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 74c75f524ec5a48a00a8f01864a754c1d0e4a44b
Merge: 0b23e30 1c4acdb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 30 18:33:46 2008 -0700

    Merge branch 'x86-fixes-for-linus-2' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-fixes-for-linus-2' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86: cpu_index build fix
      x86/voyager: fix missing cpu_index initialisation
      x86/voyager: fix compile breakage caused by dc1e35c6e95e8923cf1d3510438b63c600fee1e2
      x86: fix /dev/mem mmap breakage when PAT is disabled
      x86/voyager: fix compile breakage casued by x86: move prefill_possible_map calling early
      x86: use CONFIG_X86_SMP instead of CONFIG_SMP
      x86/voyager: fix boot breakage caused by x86: boot secondary cpus through initial_code
      x86, uv: fix compile error in uv_hub.h
      i386/PAE: fix pud_page()
      x86: remove debug code from arch_add_memory()
      x86: start annotating early ioremap pointers with __iomem
      x86: two trivial sparse annotations
      x86: fix init_memory_mapping for [dc000000 - e0000000) - v2

commit b3572e361b6b2ac5e724bc4bb932b7774b720b95
Author: James Bottomley <James.Bottomley@HansenPartnership.com>
Date:   Thu Oct 30 16:00:59 2008 -0500

    x86/voyager: fix compile breakage caused by dc1e35c6e95e8923cf1d3510438b63c600fee1e2
    
    Impact: build fix on x86/Voyager
    
    Given commits like this:
    
    | Author: Suresh Siddha <suresh.b.siddha@intel.com>
    | Date:   Tue Jul 29 10:29:19 2008 -0700
    |
    |     x86, xsave: enable xsave/xrstor on cpus with xsave support
    
    Which deliberately expose boot cpu dependence to pieces of the system,
    I think it's time to explicitly have a variable for it to prevent this
    continual misassumption that the boot CPU is zero.
    
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 7a5276889cfa96619bf863c87581005f46139986
Author: Jan Beulich <jbeulich@novell.com>
Date:   Thu Oct 30 10:38:24 2008 +0000

    x86: simplify X86_MPPARSE config option
    
    Impact: cleanup
    
    Signed-off-by: Jan Beulich <jbeulich@novell.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 7a9787e1eba95a166265e6a260cf30af04ef0a99
Merge: 41b9eb2 0173a32
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Oct 28 16:26:12 2008 +0100

    Merge commit 'v2.6.28-rc2' into x86/pci-ioapic-boot-irq-quirks

commit 4944dd62de21230af039eda7cd218e9a09021d11
Merge: f17845e 0173a32
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Oct 27 10:50:54 2008 +0100

    Merge commit 'v2.6.28-rc2' into tracing/urgent

commit 057316cc6a5b521b332a1d7ccc871cd60c904c74
Merge: 3e2dab9 2515ddc
Author: Len Brown <len.brown@intel.com>
Date:   Wed Oct 22 23:57:26 2008 -0400

    Merge branch 'linus' into test
    
    Conflicts:
    	MAINTAINERS
    	arch/x86/kernel/acpi/boot.c
    	arch/x86/kernel/acpi/sleep.c
    	drivers/acpi/Kconfig
    	drivers/pnp/Makefile
    	drivers/pnp/quirks.c
    
    Signed-off-by: Len Brown <len.brown@intel.com>

commit 530bc23bfeaa9156003afbeb9708fd03a5f1c73c
Merge: ead9039 27471fd
Author: Len Brown <len.brown@intel.com>
Date:   Wed Oct 22 23:28:36 2008 -0400

    Merge branch 'i7300_idle' into test

commit 9e899816d126cc6f7d405c349f65363214fe7399
Author: Nick Piggin <npiggin@suse.de>
Date:   Wed Oct 22 12:33:16 2008 +0200

    x86, mm: enable GBPAGES option by default
    
    DIRECT_GBPAGES was under DEBUG_KERNEL && EXPERIMENTAL and disabled by default.
    Turn it on by default and put it under EMBEDDED.
    
    Signed-off-by: Nick Piggin <npiggin@suse.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit debfcaf93ed500a051489db6646d71f29fe86a68
Merge: 2515ddc 81520a1
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Oct 22 09:08:14 2008 +0200

    Merge branch 'tracing/ftrace' into tracing/urgent

commit 27471fdb32e77ecb92f09d4ac5757785b4dc33bc
Author: Andy Henroid <andrew.d.henroid@intel.com>
Date:   Thu Oct 9 11:45:22 2008 -0700

    i7300_idle driver v1.55
    
    The Intel 7300 Memory Controller supports dynamic throttling of memory which can
    be used to save power when system is idle. This driver does the memory
    throttling when all CPUs are idle on such a system.
    
    Refer to "Intel 7300 Memory Controller Hub (MCH)" datasheet
    for the config space description.
    
    Signed-off-by: Andy Henroid <andrew.d.henroid@intel.com>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>

commit 92b29b86fe2e183d44eb467e5e74a5f718ef2e43
Merge: b9d7ccf 98d9c66
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 20 13:35:07 2008 -0700

    Merge branch 'tracing-v28-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'tracing-v28-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (131 commits)
      tracing/fastboot: improve help text
      tracing/stacktrace: improve help text
      tracing/fastboot: fix initcalls disposition in bootgraph.pl
      tracing/fastboot: fix bootgraph.pl initcall name regexp
      tracing/fastboot: fix issues and improve output of bootgraph.pl
      tracepoints: synchronize unregister static inline
      tracepoints: tracepoint_synchronize_unregister()
      ftrace: make ftrace_test_p6nop disassembler-friendly
      markers: fix synchronize marker unregister static inline
      tracing/fastboot: add better resolution to initcall debug/tracing
      trace: add build-time check to avoid overrunning hex buffer
      ftrace: fix hex output mode of ftrace
      tracing/fastboot: fix initcalls disposition in bootgraph.pl
      tracing/fastboot: fix printk format typo in boot tracer
      ftrace: return an error when setting a nonexistent tracer
      ftrace: make some tracers reentrant
      ring-buffer: make reentrant
      ring-buffer: move page indexes into page headers
      tracing/fastboot: only trace non-module initcalls
      ftrace: move pc counter in irqtrace
      ...
    
    Manually fix conflicts:
     - init/main.c: initcall tracing
     - kernel/module.c: verbose level vs tracepoints
     - scripts/bootgraph.pl: fallout from cherry-picking commits.

commit 9301975ec251bab1ad7cfcb84a688b26187e4e4a
Merge: 7110879 dd3a1db
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 20 13:22:50 2008 -0700

    Merge branch 'genirq-v28-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    This merges branches irq/genirq, irq/sparseirq-v4, timers/hpet-percpu
    and x86/uv.
    
    The sparseirq branch is just preliminary groundwork: no sparse IRQs are
    actually implemented by this tree anymore - just the new APIs are added
    while keeping the old way intact as well (the new APIs map 1:1 to
    irq_desc[]).  The 'real' sparse IRQ support will then be a relatively
    small patch ontop of this - with a v2.6.29 merge target.
    
    * 'genirq-v28-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (178 commits)
      genirq: improve include files
      intr_remapping: fix typo
      io_apic: make irq_mis_count available on 64-bit too
      genirq: fix name space collisions of nr_irqs in arch/*
      genirq: fix name space collision of nr_irqs in autoprobe.c
      genirq: use iterators for irq_desc loops
      proc: fixup irq iterator
      genirq: add reverse iterator for irq_desc
      x86: move ack_bad_irq() to irq.c
      x86: unify show_interrupts() and proc helpers
      x86: cleanup show_interrupts
      genirq: cleanup the sparseirq modifications
      genirq: remove artifacts from sparseirq removal
      genirq: revert dynarray
      genirq: remove irq_to_desc_alloc
      genirq: remove sparse irq code
      genirq: use inline function for irq_to_desc
      genirq: consolidate nr_irqs and for_each_irq_desc()
      x86: remove sparse irq from Kconfig
      genirq: define nr_irqs for architectures with GENERIC_HARDIRQS=n
      ...

commit 606576ce816603d9fe1fb453a88bc6eea16ca709
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Mon Oct 6 19:06:12 2008 -0400

    ftrace: rename FTRACE to FUNCTION_TRACER
    
    Due to confusion between the ftrace infrastructure and the gcc profiling
    tracer "ftrace", this patch renames the config options from FTRACE to
    FUNCTION_TRACER.  The other two names that are offspring from FTRACE
    DYNAMIC_FTRACE and FTRACE_MCOUNT_RECORD will stay the same.
    
    This patch was generated mostly by script, and partially by hand.
    
    Signed-off-by: Steven Rostedt <srostedt@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit dc52ddc0e6f45b04780b26fc0813509f8e798c42
Author: Matt Helsley <matthltc@us.ibm.com>
Date:   Sat Oct 18 20:27:21 2008 -0700

    container freezer: implement freezer cgroup subsystem
    
    This patch implements a new freezer subsystem in the control groups
    framework.  It provides a way to stop and resume execution of all tasks in
    a cgroup by writing in the cgroup filesystem.
    
    The freezer subsystem in the container filesystem defines a file named
    freezer.state.  Writing "FROZEN" to the state file will freeze all tasks
    in the cgroup.  Subsequently writing "RUNNING" will unfreeze the tasks in
    the cgroup.  Reading will return the current state.
    
    * Examples of usage :
    
       # mkdir /containers/freezer
       # mount -t cgroup -ofreezer freezer  /containers
       # mkdir /containers/0
       # echo $some_pid > /containers/0/tasks
    
    to get status of the freezer subsystem :
    
       # cat /containers/0/freezer.state
       RUNNING
    
    to freeze all tasks in the container :
    
       # echo FROZEN > /containers/0/freezer.state
       # cat /containers/0/freezer.state
       FREEZING
       # cat /containers/0/freezer.state
       FROZEN
    
    to unfreeze all tasks in the container :
    
       # echo RUNNING > /containers/0/freezer.state
       # cat /containers/0/freezer.state
       RUNNING
    
    This is the basic mechanism which should do the right thing for user space
    task in a simple scenario.
    
    It's important to note that freezing can be incomplete.  In that case we
    return EBUSY.  This means that some tasks in the cgroup are busy doing
    something that prevents us from completely freezing the cgroup at this
    time.  After EBUSY, the cgroup will remain partially frozen -- reflected
    by freezer.state reporting "FREEZING" when read.  The state will remain
    "FREEZING" until one of these things happens:
    
    	1) Userspace cancels the freezing operation by writing "RUNNING" to
    		the freezer.state file
    	2) Userspace retries the freezing operation by writing "FROZEN" to
    		the freezer.state file (writing "FREEZING" is not legal
    		and returns EIO)
    	3) The tasks that blocked the cgroup from entering the "FROZEN"
    		state disappear from the cgroup's set of tasks.
    
    [akpm@linux-foundation.org: coding-style fixes]
    [akpm@linux-foundation.org: export thaw_process]
    Signed-off-by: Cedric Le Goater <clg@fr.ibm.com>
    Signed-off-by: Matt Helsley <matthltc@us.ibm.com>
    Acked-by: Serge E. Hallyn <serue@us.ibm.com>
    Tested-by: Matt Helsley <matthltc@us.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 3e10e879a8c334a5927d800a3663a24d562cfa31
Merge: 98d9c66 0cfd810
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sun Oct 19 19:04:47 2008 +0200

    Merge branch 'linus' into tracing-v28-for-linus-v3
    
    Conflicts:
    	init/main.c
    	kernel/module.c
    	scripts/bootgraph.pl

commit 89cedfefca1d446ee2598fd3bcbb23ee3802e26a
Author: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
Date:   Thu Oct 16 19:00:08 2008 -0400

    cpuidle: upon BIOS bug, default to default_idle rather than polling
    
    http://bugzilla.kernel.org/show_bug.cgi?id=11345
    
    Signed-off-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
    Signed-off-by: Len Brown <len.brown@intel.com>

commit e533b227055598b1f7dc8503a3b4f36b14b9da8a
Merge: 0999d97 6b2ada8
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 16 15:17:40 2008 -0700

    Merge branch 'core-v28-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'core-v28-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      do_generic_file_read: s/EINTR/EIO/ if lock_page_killable() fails
      softirq, warning fix: correct a format to avoid a warning
      softirqs, debug: preemption check
      x86, pci-hotplug, calgary / rio: fix EBDA ioremap()
      IO resources, x86: ioremap sanity check to catch mapping requests exceeding, fix
      IO resources, x86: ioremap sanity check to catch mapping requests exceeding the BAR sizes
      softlockup: Documentation/sysctl/kernel.txt: fix softlockup_thresh description
      dmi scan: warn about too early calls to dmi_check_system()
      generic: redefine resource_size_t as phys_addr_t
      generic: make PFN_PHYS explicitly return phys_addr_t
      generic: add phys_addr_t for holding physical addresses
      softirq: allocate less vectors
      IO resources: fix/remove printk
      printk: robustify printk, update comment
      printk: robustify printk, fix #2
      printk: robustify printk, fix
      printk: robustify printk
    
    Fixed up conflicts in:
    	arch/powerpc/include/asm/types.h
    	arch/powerpc/platforms/Kconfig.cputype
    manually.

commit 9ba16087d9f996a93ab6f4453a52a4b24bc1f25c
Author: Jan Beulich <jbeulich@novell.com>
Date:   Wed Oct 15 22:01:38 2008 -0700

    Kconfig: eliminate "def_bool n" constructs
    
    Using "def_bool n" is pointless, simply using bool here appears more
    appropriate.
    
    Further, retaining such options that don't have a prompt and aren't
    selected by anything seems also at least questionable.
    
    Signed-off-by: Jan Beulich <jbeulich@novell.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit d6c88a507ef0b6afdb013cba4e7804ba7324d99a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Oct 15 15:27:23 2008 +0200

    genirq: revert dynarray
    
    Revert the dynarray changes. They need more thought and polishing.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 3235e936c0cc3589309280b6f59e5096779adae3
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Oct 15 13:16:00 2008 +0200

    x86: remove sparse irq from Kconfig
    
    This code is not ready yet.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 8f09cd20a24c5f13c571bc73ddcd47be0af3b70f
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Tue Aug 19 20:50:51 2008 -0700

    x86: make HAVE_SPARSE_IRQ support selectable
    
    Ingo said sparse_irq is some intrusive. need to make it selectable
    
    to make it simple, remove irq_desc as parameter in some functions.
    (ack, eoi, set_affinity).
    may need to make member if irq_chip to take irq_desc, or struct irq later.
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 199751d715bba5b469ea22adadc68a4166bfa4f5
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Tue Aug 19 20:50:27 2008 -0700

    x86: make 32 bit to use sparse_irq
    
    but actually irq still needs to be less than NR_IRQS, because
    interrupt[NR_IRQS] in entry.S.
    
    need to enable per_cpu vector...
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 8b8e8c1bf7275eca859fe551dfa484134eaf013b
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Tue Aug 19 20:50:23 2008 -0700

    x86: remove irqbalance in kernel for 32 bit
    
    This has been deprecated for years, the user space irqbalanced utility
    works better with numa, has configurable policies, etc...
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmai.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 08678b0841267c1d00d771fe01548d86043d065e
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Tue Aug 19 20:50:05 2008 -0700

    generic: sparse irqs: use irq_desc() together with dyn_array, instead of irq_desc[]
    
    add CONFIG_HAVE_SPARSE_IRQ to for use condensed array.
    Get rid of irq_desc[] array assumptions.
    
    Preallocate 32 irq_desc, and irq_desc() will try to get more.
    
    ( No change in functionality is expected anywhere, except the odd build
      failure where we missed a code site or where a crossing commit itroduces
      new irq_desc[] usage. )
    
    v2: according to Eric, change get_irq_desc() to irq_desc()
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 6da55c3e8da88e8a7cb6452160776ad6706798ad
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Tue Aug 19 20:49:46 2008 -0700

    x86: enable dyn_array support
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit b2aaf8f74cdc84a9182f6cabf198b7763bcb9d40
Merge: 4f962d4 278429c
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Oct 15 13:46:29 2008 +0200

    Merge branch 'linus' into stackprotector
    
    Conflicts:
    	arch/x86/kernel/Makefile
    	include/asm-x86/pda.h

commit 6b2ada82101a08e2830fb29d7dc9b858be637dd4
Merge: 278429c 3b7ecb5 77af7e3 1516071 1fa63a8 8546232
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Oct 15 12:48:44 2008 +0200

    Merge branches 'core/softlockup', 'core/softirq', 'core/resources', 'core/printk' and 'core/misc' into core-v28-for-linus

commit e4b2b8866121bd06d5f3d9de0f79a04339ffa252
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Thu Aug 14 15:45:11 2008 -0400

    ftrace: enable using mcount recording on x86
    
    Enable the use of the __mcount_loc infrastructure on x86_64 and i386.
    
    Signed-off-by: Steven Rostedt <srostedt@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e758936e02700ff88a0b08b722a3847b95283ef2
Merge: 239cfbd 4480f15b
Author: David Woodhouse <David.Woodhouse@intel.com>
Date:   Mon Oct 13 17:13:56 2008 +0100

    Merge branch 'master' of git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6
    
    Conflicts:
    
    	include/asm-x86/statfs.h

commit 8daf14cf56816303d64d1a705fcbc389211ba36e
Merge: 1db5fff eceb138 28f7e66 fd1452e 7aa413d 46eaa67 45e96f2 9f48280 325af5f acbaa41 2407390
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sun Oct 12 15:50:02 2008 +0200

    Merge branches 'x86/xen', 'x86/build', 'x86/microcode', 'x86/mm-debug-v2', 'x86/memory-corruption-check', 'x86/early-printk', 'x86/xsave', 'x86/ptrace-v2', 'x86/quirks', 'x86/setup', 'x86/spinlocks' and 'x86/signal' into x86/core-v2

commit a9b9e81c915e4a57ac3b21d1a7fa7ff184639780
Merge: a8b71a2 fd04808
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sun Oct 12 15:05:39 2008 +0200

    Merge branch 'linus' into x86/memory-corruption-check

commit d84705969f898f294bc3fc32eca33580f14105bd
Merge: 725c258 11494547
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Oct 10 19:50:00 2008 +0200

    Merge branch 'x86/apic' into x86-v28-for-linus-phase4-B
    
    Conflicts:
    	arch/x86/kernel/apic_32.c
    	arch/x86/kernel/apic_64.c
    	arch/x86/kernel/setup.c
    	drivers/pci/intel-iommu.c
    	include/asm-x86/cpufeature.h
    	include/asm-x86/dma-mapping.h

commit 725c25819e4a0dafdcf42a5f31bc569341919c7c
Merge: 3dd392a 72d3105 129d6ab 1e19b16
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Oct 10 19:47:12 2008 +0200

    Merge branches 'core/iommu', 'x86/amd-iommu' and 'x86/iommu' into x86-v28-for-linus-phase3-B
    
    Conflicts:
    	arch/x86/kernel/pci-gart_64.c
    	include/asm-x86/dma-mapping.h

commit e496e3d645c93206faf61ff6005995ebd08cc39c
Merge: b159d7a 5bbd4c3 175e438 516cbf3 af2d237 9b15684 5b7e41f 1befdef a03352d 7b22ff5 2c7e9fd 91030ca dd55235 b3e15bd 20211e4 efd327a c7ffa6c e51a1ac 5df4551 d99e901 e621bd1
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Oct 6 18:17:07 2008 +0200

    Merge branches 'x86/alternatives', 'x86/cleanups', 'x86/commandline', 'x86/crashdump', 'x86/debug', 'x86/defconfig', 'x86/doc', 'x86/exports', 'x86/fpu', 'x86/gart', 'x86/idle', 'x86/mm', 'x86/mtrr', 'x86/nmi-watchdog', 'x86/oprofile', 'x86/paravirt', 'x86/reboot', 'x86/sparse-fixes', 'x86/tsc', 'x86/urgent' and 'x86/vmalloc' into x86-v28-for-linus-phase1

commit 2ffb3501f6f356ff80e7149214bc64d3fa9021c4
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Tue Sep 30 16:29:40 2008 -0700

    x86: change MTRR_SANITIZER to def_bool y
    
    This option has been added in v2.6.26 as a default-disabled
    feature and went through several revisions since then.
    
    The feature fixes a wide range of MTRR setup problems that BIOSes
    leave us with: slow system, slow Xorg, slow system when adding lots
    of RAM, etc., so we want to enable it by default for v2.6.28.
    
    See:
    
      [Bug 10508] Upgrade to 4GB of RAM messes up MTRRs
      http://bugzilla.kernel.org/show_bug.cgi?id=10508
    
    and the test results in:
    
       http://lkml.org/lkml/2008/9/29/273
    
    1. hpa
    reg00: base=0xc0000000 (3072MB), size=1024MB: uncachable, count=1
    reg01: base=0x13c000000 (5056MB), size=  64MB: uncachable, count=1
    reg02: base=0x00000000 (   0MB), size=4096MB: write-back, count=1
    reg03: base=0x100000000 (4096MB), size=1024MB: write-back, count=1
    reg04: base=0xbf700000 (3063MB), size=   1MB: uncachable, count=1
    reg05: base=0xbf800000 (3064MB), size=   8MB: uncachable, count=1
    
    will get
    Found optimal setting for mtrr clean up
    gran_size: 1M   chunk_size: 128M        num_reg: 6      lose RAM: 0M
    range0: 0000000000000000 - 00000000c0000000
    Setting variable MTRR 0, base: 0MB, range: 2048MB, type WB
    Setting variable MTRR 1, base: 2048MB, range: 1024MB, type WB
    hole: 00000000bf700000 - 00000000c0000000
    Setting variable MTRR 2, base: 3063MB, range: 1MB, type UC
    Setting variable MTRR 3, base: 3064MB, range: 8MB, type UC
    range0: 0000000100000000 - 0000000140000000
    Setting variable MTRR 4, base: 4096MB, range: 1024MB, type WB
    hole: 000000013c000000 - 0000000140000000
    Setting variable MTRR 5, base: 5056MB, range: 64MB, type UC
    
    2. Dylan Taft
    reg00: base=0x00000000 (   0MB), size=4096MB: write-back, count=1
    reg01: base=0x100000000 (4096MB), size= 512MB: write-back, count=1
    reg02: base=0x120000000 (4608MB), size= 256MB: write-back, count=1
    reg03: base=0xd0000000 (3328MB), size= 256MB: uncachable, count=1
    reg04: base=0xe0000000 (3584MB), size= 512MB: uncachable, count=1
    reg05: base=0xc7e00000 (3198MB), size=   2MB: uncachable, count=1
    reg06: base=0xc8000000 (3200MB), size= 128MB: uncachable, count=1
    
    will get
    Found optimal setting for mtrr clean up
    gran_size: 1M   chunk_size: 4M  num_reg: 6      lose RAM: 0M
    range0: 0000000000000000 - 00000000c8000000
    Setting variable MTRR 0, base: 0MB, range: 2048MB, type WB
    Setting variable MTRR 1, base: 2048MB, range: 1024MB, type WB
    Setting variable MTRR 2, base: 3072MB, range: 128MB, type WB
    hole: 00000000c7e00000 - 00000000c8000000
    Setting variable MTRR 3, base: 3198MB, range: 2MB, type UC
    rangeX: 0000000100000000 - 0000000130000000
    Setting variable MTRR 4, base: 4096MB, range: 512MB, type WB
    Setting variable MTRR 5, base: 4608MB, range: 256MB, type WB
    
    3. Gabriel
    reg00: base=0xd0000000 (3328MB), size= 256MB: uncachable, count=1
    reg01: base=0xe0000000 (3584MB), size= 512MB: uncachable, count=1
    reg02: base=0x00000000 (   0MB), size=4096MB: write-back, count=1
    reg03: base=0x100000000 (4096MB), size= 512MB: write-back, count=1
    reg04: base=0x120000000 (4608MB), size= 128MB: write-back, count=1
    reg05: base=0x128000000 (4736MB), size=  64MB: write-back, count=1
    reg06: base=0xcf600000 (3318MB), size=   2MB: uncachable, count=1
    
    will get
    Found optimal setting for mtrr clean up
    gran_size: 1M   chunk_size: 16M         num_reg: 7      lose RAM: 0M
    range0: 0000000000000000 - 00000000d0000000
    Setting variable MTRR 0, base: 0MB, range: 2048MB, type WB
    Setting variable MTRR 1, base: 2048MB, range: 1024MB, type WB
    Setting variable MTRR 2, base: 3072MB, range: 256MB, type WB
    hole: 00000000cf600000 - 00000000cf800000
    Setting variable MTRR 3, base: 3318MB, range: 2MB, type UC
    rangeX: 0000000100000000 - 000000012c000000
    Setting variable MTRR 4, base: 4096MB, range: 512MB, type WB
    Setting variable MTRR 5, base: 4608MB, range: 128MB, type WB
    Setting variable MTRR 6, base: 4736MB, range: 64MB, type WB
    
    4. Mika Fischer
    reg00: base=0xc0000000 (3072MB), size=1024MB: uncachable, count=1
    reg01: base=0x00000000 ( 0MB), size=4096MB: write-back, count=1
    reg02: base=0x100000000 (4096MB), size=1024MB: write-back, count=1
    reg03: base=0xbf700000 (3063MB), size= 1MB: uncachable, count=1
    reg04: base=0xbf800000 (3064MB), size= 8MB: uncachable, count=1
    
    will get
    Found optimal setting for mtrr clean up
    gran_size: 1M   chunk_size: 16M         num_reg: 5      lose RAM: 0M
    range0: 0000000000000000 - 00000000c0000000
    Setting variable MTRR 0, base: 0MB, range: 2048MB, type WB
    Setting variable MTRR 1, base: 2048MB, range: 1024MB, type WB
    hole: 00000000bf700000 - 00000000c0000000
    Setting variable MTRR 2, base: 3063MB, range: 1MB, type UC
    Setting variable MTRR 3, base: 3064MB, range: 8MB, type UC
    rangeX: 0000000100000000 - 0000000140000000
    Setting variable MTRR 4, base: 4096MB, range: 1024MB, type WB
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e6aa0f07cb5e81a7cbeaf3be6e2101234c2f0d30
Merge: d473879 72d3105
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Sep 24 10:31:34 2008 +0200

    Merge commit 'v2.6.27-rc7' into x86/microcode

commit 18dbc9160507dc7df998e00cd1dcd7889557307b
Author: Dmitry Adamushko <dmitry.adamushko@gmail.com>
Date:   Tue Sep 23 12:08:44 2008 +0200

    x86: moved microcode.c to microcode_intel.c
    
    Combine both generic and arch-specific parts of microcode into a
    single module (arch-specific parts are config-dependent).
    
    Also while we are at it, move arch-specific parts from microcode.h
    into their respective arch-specific .c files.
    
    Signed-off-by: Dmitry Adamushko <dmitry.adamushko@gmail.com>
    Cc: "Peter Oruba" <peter.oruba@amd.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit a80dc3e0e0dc8393158de317d66ae0f345dc58f9
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Thu Sep 11 16:51:41 2008 +0200

    AMD IOMMU: add MSI interrupt support
    
    The AMD IOMMU can generate interrupts for various reasons. This patch
    adds the basic interrupt enabling infrastructure to the driver.
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 5e51900be6c15488b80343d3c3e62d4d605ba9a9
Merge: 9985647 adee14b
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Sep 19 09:15:50 2008 +0200

    Merge commit 'v2.6.27-rc6' into x86/cleanups

commit fc38151947477596aa27df6c4306ad6008dc6711
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Sep 16 10:07:34 2008 +0200

    x86: add X86_RESERVE_LOW_64K
    
    This bugzilla:
    
      http://bugzilla.kernel.org/show_bug.cgi?id=11237
    
    Documents a wide range of systems where the BIOS utilizes the first
    64K of physical memory during suspend/resume and other hardware events.
    
    Currently we reserve this memory on all AMI and Phoenix BIOS systems.
    Life is too short to hunt subtle memory corruption problems like this,
    so we try to be robust by default.
    
    Still, allow this to be overriden: allow users who want that first 64K
    of memory to be available to the kernel disable the quirk, via
    CONFIG_X86_RESERVE_LOW_64K=n.
    
    Also, allow the early reservation to overlap with other
    early reservations.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 8308c54d7e312f7a03e2ce2057d0837e6fe3843f
Author: Jeremy Fitzhardinge <jeremy@goop.org>
Date:   Thu Sep 11 01:31:50 2008 -0700

    generic: redefine resource_size_t as phys_addr_t
    
    There's no good reason why a resource_size_t shouldn't just be a
    physical address, so simply redefine it in terms of phys_addr_t.
    
    Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 600715dcdf567c86f8b2c6173fcfb4b873e25a19
Author: Jeremy Fitzhardinge <jeremy@goop.org>
Date:   Thu Sep 11 01:31:45 2008 -0700

    generic: add phys_addr_t for holding physical addresses
    
    Add a kernel-wide "phys_addr_t" which is guaranteed to be able to hold
    any physical address.  By default it equals the word size of the
    architecture, but a 32-bit architecture can set ARCH_PHYS_ADDR_T_64BIT
    if it needs a 64-bit phys_addr_t.
    
    Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit b899219572350685e6163ce7535efb5ad9bcd6a4
Author: Alexey Dobriyan <adobriyan@gmail.com>
Date:   Sun Sep 14 13:44:41 2008 +0400

    x86: simpler SYSVIPC_COMPAT definition
    
    X86_64 part is entirely redundant.
    
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 9c0bbee8a6fc14107e9a7af6750bfe1056cbf4bc
Author: Alexey Dobriyan <adobriyan@gmail.com>
Date:   Tue Sep 9 11:01:31 2008 +0400

    seccomp: drop now bogus dependency on PROC_FS
    
    seccomp is prctl(2)-driven now.
    
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c885df50f571faf9fd9f395361cfff1b3a16e06e
Author: Jeremy Fitzhardinge <jeremy@goop.org>
Date:   Sun Sep 7 02:37:32 2008 -0700

    x86: default corruption check to off, but put parameter default in Kconfig
    
    Default the low memory corruption check to off, but make the default setting of
    the memory_corruption_check kernel parameter a config parameter.
    
    Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 9f077871ce7237e2387fc76542b3b4033cb05e49
Author: Jeremy Fitzhardinge <jeremy@goop.org>
Date:   Sun Sep 7 01:51:34 2008 -0700

    x86: clean up memory corruption check and add more kernel parameters
    
    The corruption check is enabled in Kconfig by default, but disabled at runtime.
    
    This patch adds several kernel parameters to control the corruption
    check's behaviour; these are documented in kernel-parameters.txt.
    
    Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 5394f80f92642c61fc2a95385be85f2fdcfb5adb
Author: Jeremy Fitzhardinge <jeremy@goop.org>
Date:   Sun Sep 7 01:51:32 2008 -0700

    x86: check for and defend against BIOS memory corruption
    
    Some BIOSes have been observed to corrupt memory in the low 64k.  This
    change:
     - Reserves all memory which does not have to be in that area, to
       prevent it from being used as general memory by the kernel.  Things
       like the SMP trampoline are still in the memory, however.
     - Clears the reserved memory so we can observe changes to it.
     - Adds a function check_for_bios_corruption() which checks and reports on
       memory becoming unexpectedly non-zero.  Currently it's called in the
       x86 fault handler, and the powermanagement debug output.
    
    Signed-off-by: Jeremy Fitzhardinge <jeremy@goop.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e17c6d56160e4fb9e8c2830e30cc9741d4309989
Author: David Woodhouse <dwmw2@infradead.org>
Date:   Tue Jun 17 12:19:34 2008 +0100

    Introduce HAVE_AOUT symbol to remove hard-coded arch list for BINFMT_AOUT
    
    HAVE_AOUT doesn't quite do the same thing as the recently removed
    ARCH_SUPPORTS_AOUT config option. That was set even on platforms where
    binfmt_aout isn't supported, although it's not entirely clear why.
    
    So it's best just to introduce a new symbol, handled consistently with
    other similar HAVE_xxx symbols; with a simple 'select' in the arch Kconfig.
    
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>

commit 6b213e1bc27da6f6280386b1ff0e817e602c7b7a
Author: David Woodhouse <dwmw2@infradead.org>
Date:   Mon Jun 16 12:39:13 2008 +0100

    Remove redundant CONFIG_ARCH_SUPPORTS_AOUT
    
    We don't need this any more; arguably we never really did.
    
    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>

commit 616ad8c44281c0c6711a72b560e01ec335ff27e0
Merge: 9980996 b380b0d
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Sep 5 18:56:57 2008 +0200

    Merge branch 'linus' into x86/defconfig

commit 28c3cfd5fb998bd3683bebeebbba38baa2101cad
Merge: 04197c8 b380b0d
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Sep 5 17:53:05 2008 +0200

    Merge branch 'linus' into x86/tracehook

commit d25e26b61d59370eee8b7f2634641eb0fa76e952
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Aug 25 14:15:38 2008 -0700

    [x86] Clean up MAXSMP Kconfig, and limit NR_CPUS to 512
    
    This fixes a regression that was indirectly caused by commit
    1184dc2ffe2c8fb9afb766d870850f2c3165ef25 ("x86: modify Kconfig to allow
    up to 4096 cpus").
    
    Allowing 4k CPU's is not practical at this time, because we still have a
    number of places that have several 'cpumask_t's on the stack, and a
    4k-bit cpumask is 512 bytes of stack-space for each such variable.  This
    literally caused functions like 'smp_call_function_mask' to have a 2.5kB
    stack frame, and several functions to have 2kB stackframes.
    
    With an 8kB stack total, smashing the stack was simply much too likely.
    At least bugzilla entry
    
    	http://bugzilla.kernel.org/show_bug.cgi?id=11342
    
    was due to this.
    
    The earlier commit to not inline load_module() into sys_init_module()
    fixed the particular symptoms of this that Alan Brunelle saw in that
    bugzilla entry, but the huge stack waste by cpumask_t's was the more
    direct cause.
    
    Some day we'll have allocation helpers that allocate large CPU masks
    dynamically, but in the meantime we simply cannot allow cpumasks this
    large.
    
    Cc: Alan D. Brunelle <Alan.Brunelle@hp.com>
    Cc: Mike Travis <travis@sgi.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 470fba7ebe60ad9185056b080b331abad24b4df9
Merge: 7225e75 6a55617
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Aug 21 13:28:24 2008 +0200

    Merge branch 'linus' into x86/doc

commit 04197c83b3e05546d1003cfa3ff43f1639c0057f
Merge: 71998e8 b635ace
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Aug 15 17:07:34 2008 +0200

    Merge branch 'linus' into x86/tracehook
    
    Conflicts:
    	arch/x86/Kconfig
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 516cbf3730c49739629d66313b20bdc50c98aa2c
Author: Tim Bird <tim.bird@am.sony.com>
Date:   Tue Aug 12 12:52:36 2008 -0700

    x86, bootup: add built-in kernel command line for x86 (v2)
    
    Allow x86 to support a built-in kernel command line.  The built-in
    command line can override the one provided by the boot loader, for
    those cases where the boot loader is broken or it is difficult
    to change the command line in the the boot loader.
    
    H. Peter Anvin wrote:
    > Ingo Molnar wrote:
    >> Best would be to make it really apparent in the code that nothing
    >> changes if this config option is not set. Preferably there should be
    >> no extra code at all in that case.
    >>
    >
    > I would like to see this:
    [...Nested ifdefs...]
    
    OK. This version changes absolutely nothing if CONFIG_CMDLINE_BOOL is not
    set (the default).  Also, no space is appended even when CONFIG_CMDLINE_BOOL
    is set, but the builtin string is empty.  This is less sloppy all the way
    around, IMHO.
    
    Note that I use the same option names as on other arches for
    this feature.
    
    [ mingo@elte.hu: build fix ]
    
    Signed-off-by: Tim Bird <tim.bird@am.sony.com>
    Cc: Matt Mackall <mpm@selenic.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 04b69447f79eade34e92f3117a39e8fa6ecb519b
Author: Pavel Machek <pavel@suse.cz>
Date:   Thu Aug 14 17:16:50 2008 +0200

    arch/x86/Kconfig: clean up, experimental adjustement
    
    Adjust experimental tags in Kconfig, update config to notice that
    i386/x86_64 is now single architecture.
    
    Signed-off-by: Pavel Machek <pavel@suse.cz>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 51ca3c679194e7435c25b8e77b0a73c597e41ae9
Merge: b55793f b635ace
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Aug 14 14:58:01 2008 +0200

    Merge branch 'linus' into x86/core
    
    Conflicts:
    	arch/x86/kernel/genapic_64.c
    	include/asm-x86/kvm_host.h
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 912985dce45ef18fcdd9f5439fef054e0e22302a
Author: Rusty Russell <rusty@rustcorp.com.au>
Date:   Tue Aug 12 17:52:52 2008 -0500

    mm: Make generic weak get_user_pages_fast and EXPORT_GPL it
    
    Out of line get_user_pages_fast fallback implementation, make it a weak
    symbol, get rid of CONFIG_HAVE_GET_USER_PAGES_FAST.
    
    Export the symbol to modules so lguest can use it.
    
    Signed-off-by: Nick Piggin <npiggin@suse.de>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

commit 99809963c99e1ed868d9ebeb4a5e7ee1cbe0309f
Author: Jeff Chua <jeff.chua.linux@gmail.com>
Date:   Wed Aug 6 19:09:53 2008 +0800

    x86: make sparsemem more available
    
    With CONFIG_X86_PC, I can set CONFIG_SPARSEMEM=y.
    
    With CONFIG_X86_GENERICARCH, CONFIG_SPARSEMEM depends on CONFIG_NUMA.
    
    I'm using the patch below to enable sparsemem instead of flatmem.
    System booted and is running.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 7c13e6a3d15a4ebcc3f40df5f4d19665479f8ca3
Author: Dimitri Sivanich <sivanich@sgi.com>
Date:   Mon Aug 11 10:46:46 2008 -0500

    x86: remove EXPERIMENTAL restriction from CONFIG_HOTPLUG_CPU
    
    This removes the EXPERIMENTAL restriction from CONFIG_HOTPLUG_CPU
    on the x86 architecture.
    
    Signed-off-by: Dimitri Sivanich <sivanich@sgi.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 15dd859cacf312f606f54502d1f66537a1e5c78c
Merge: b2d9d33 6e86841
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Jul 30 19:33:48 2008 +0200

    Merge commit 'v2.6.27-rc1' into x86/core
    
    Conflicts:
    
    	include/asm-x86/dma-mapping.h
    	include/asm-x86/namei.h
    	include/asm-x86/uaccess.h
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 3825c9e8d01e4310c40a3903a354c433c32a7b6f
Merge: 5d7b605 6e86841
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jul 29 11:54:24 2008 +0200

    Merge commit 'v2.6.27-rc1' into x86/microcode
    
    Conflicts:
    
    	arch/x86/kernel/microcode.c
    
    Manual resolutions:
    
    	arch/x86/kernel/microcode_amd.c
    	arch/x86/kernel/microcode_intel.c
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit cb28a1bbdb4790378e7366d6c9ee1d2340b84f92
Merge: b6d4f7e f934fb1
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jul 29 00:07:55 2008 +0200

    Merge branch 'linus' into core/generic-dma-coherent
    
    Conflicts:
    
    	arch/x86/Kconfig
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 80cc9f1020f49c9e5b50898c102fd444de70a0a3
Author: Peter Oruba <peter.oruba@amd.com>
Date:   Mon Jul 28 18:44:22 2008 +0200

    x86: AMD microcode patch loading support
    
    This patch introduces microcode patch loading for AMD
    processors. It is based on previous corresponding work
    for Intel processors.
    
    It hooks into the general patch loading module. Main
    difference is that a container file format is used to hold
    all patch data for multiple processors as well as an
    equivalent CPU table, which comes seperately, as opposed
    to Intel's microcode patching solution.
    
    Kconfig and Makefile have been changed provice config
    and build option for new source file.
    
    Signed-off-by: Peter Oruba <peter.oruba@amd.com>
    Cc: Tigran Aivazian <tigran@aivazian.fsnet.co.uk>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 8d86f390d9bb5b39f0a315838d1616de6363e1b9
Author: Peter Oruba <peter.oruba@amd.com>
Date:   Mon Jul 28 18:44:21 2008 +0200

    x86: major refactoring
    
    Refactored code by introducing a two-module solution.
    
    There is one general module in which vendor specific modules can hook into.
    However, that is exclusive, there is only one vendor specific module
    allowed at a time. A CPU vendor check makes sure only the correct
    module for the underlying system gets called.
    
    Functinally in terms of patch loading itself there are no changes. This
    refactoring provides a basis for future implementations of other vendors'
    patch loaders.
    
    Signed-off-by: Peter Oruba <peter.oruba@amd.com>
    Cc: Tigran Aivazian <tigran@aivazian.fsnet.co.uk>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 7225e75144b9718cbbe1820d9c011c809d5773fd
Author: Randy Dunlap <randy.dunlap@oracle.com>
Date:   Sat Jul 26 17:54:22 2008 -0700

    documentation: move mtrr.txt to Doc/x86/ subdir
    
    Move mtrr.txt to the Documentation/x86/ subdirectory.
    Add 00-INDEX to the Documentation/x86/ subdirectory.
    
    Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
    Cc: Adrian Bunk <bunk@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 99bbc4b1e677ac695431e8d9c8e710ef391c567f
Author: Roland McGrath <roland@redhat.com>
Date:   Sun Apr 20 14:35:12 2008 -0700

    x86: tracehook: CONFIG_HAVE_ARCH_TRACEHOOK
    
    The x86 arch code has all the prerequisites, so set HAVE_ARCH_TRACEHOOK.
    
    Signed-off-by: Roland McGrath <roland@redhat.com>

commit fb3b80614438f8b73b3879a19350439d6aa402da
Merge: 7f268a2 3a61ec3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jul 26 13:25:05 2008 -0700

    Merge branch 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86, AMD IOMMU: include amd_iommu_last_bdf in device initialization
      x86: fix IBM Summit based systems' phys_cpu_present_map on 32-bit kernels
      x86, RDC321x: remove gpio.h complications
      x86, RDC321x: add to mach-default
      crashdump: fix undefined reference to `elfcorehdr_addr'
      flag parameters: fix compile error of sys_epoll_create1

commit 8174c430e445a93016ef18f717fe570214fa38bf
Author: Nick Piggin <npiggin@suse.de>
Date:   Fri Jul 25 19:45:24 2008 -0700

    x86: lockless get_user_pages_fast()
    
    Implement get_user_pages_fast without locking in the fastpath on x86.
    
    Do an optimistic lockless pagetable walk, without taking mmap_sem or any
    page table locks or even mmap_sem.  Page table existence is guaranteed by
    turning interrupts off (combined with the fact that we're always looking
    up the current mm, means we can do the lockless page table walk within the
    constraints of the TLB shootdown design).  Basically we can do this
    lockless pagetable walk in a similar manner to the way the CPU's pagetable
    walker does not have to take any locks to find present ptes.
    
    This patch (combined with the subsequent ones to convert direct IO to use
    it) was found to give about 10% performance improvement on a 2 socket 8
    core Intel Xeon system running an OLTP workload on DB2 v9.5
    
     "To test the effects of the patch, an OLTP workload was run on an IBM
      x3850 M2 server with 2 processors (quad-core Intel Xeon processors at
      2.93 GHz) using IBM DB2 v9.5 running Linux 2.6.24rc7 kernel.  Comparing
      runs with and without the patch resulted in an overall performance
      benefit of ~9.8%.  Correspondingly, oprofiles showed that samples from
      __up_read and __down_read routines that is seen during thread contention
      for system resources was reduced from 2.8% down to .05%.  Monitoring the
      /proc/vmstat output from the patched run showed that the counter for
      fast_gup contained a very high number while the fast_gup_slow value was
      zero."
    
    (fast_gup is the old name for get_user_pages_fast, fast_gup_slow is a
    counter we had for the number of times the slowpath was invoked).
    
    The main reason for the improvement is that DB2 has multiple threads each
    issuing direct-IO.  Direct-IO uses get_user_pages, and thus the threads
    contend the mmap_sem cacheline, and can also contend on page table locks.
    
    I would anticipate larger performance gains on larger systems, however I
    think DB2 uses an adaptive mix of threads and processes, so it could be
    that thread contention remains pretty constant as machine size increases.
    In which case, we stuck with "only" a 10% gain.
    
    The downside of using get_user_pages_fast is that if there is not a pte
    with the correct permissions for the access, we end up falling back to
    get_user_pages and so the get_user_pages_fast is a bit of extra work.
    However this should not be the common case in most performance critical
    code.
    
    [akpm@linux-foundation.org: coding-style fixes]
    [akpm@linux-foundation.org: build fix]
    [akpm@linux-foundation.org: Kconfig fix]
    [akpm@linux-foundation.org: Makefile fix/cleanup]
    [akpm@linux-foundation.org: warning fix]
    Signed-off-by: Nick Piggin <npiggin@suse.de>
    Cc: Dave Kleikamp <shaggy@austin.ibm.com>
    Cc: Andy Whitcroft <apw@shadowen.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Dave Kleikamp <shaggy@austin.ibm.com>
    Cc: Badari Pulavarty <pbadari@us.ibm.com>
    Cc: Zach Brown <zach.brown@oracle.com>
    Cc: Jens Axboe <jens.axboe@oracle.com>
    Reviewed-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 89081d17f7bb81d89fa1aa9b70f821c5cf4d39e9
Author: Huang Ying <ying.huang@intel.com>
Date:   Fri Jul 25 19:45:10 2008 -0700

    kexec jump: save/restore device state
    
    This patch implements devices state save/restore before after kexec.
    
    This patch together with features in kexec_jump patch can be used for
    following:
    
    - A simple hibernation implementation without ACPI support.  You can kexec a
      hibernating kernel, save the memory image of original system and shutdown
      the system.  When resuming, you restore the memory image of original system
      via ordinary kexec load then jump back.
    
    - Kernel/system debug through making system snapshot.  You can make system
      snapshot, jump back, do some thing and make another system snapshot.
    
    - Cooperative multi-kernel/system.  With kexec jump, you can switch between
      several kernels/systems quickly without boot process except the first time.
      This appears like swap a whole kernel/system out/in.
    
    - A general method to call program in physical mode (paging turning
      off). This can be used to invoke BIOS code under Linux.
    
    The following user-space tools can be used with kexec jump:
    
    - kexec-tools needs to be patched to support kexec jump. The patches
      and the precompiled kexec can be download from the following URL:
           source: http://khibernation.sourceforge.net/download/release_v10/kexec-tools/kexec-tools-src_git_kh10.tar.bz2
           patches: http://khibernation.sourceforge.net/download/release_v10/kexec-tools/kexec-tools-patches_git_kh10.tar.bz2
           binary: http://khibernation.sourceforge.net/download/release_v10/kexec-tools/kexec_git_kh10
    
    - makedumpfile with patches are used as memory image saving tool, it
      can exclude free pages from original kernel memory image file. The
      patches and the precompiled makedumpfile can be download from the
      following URL:
           source: http://khibernation.sourceforge.net/download/release_v10/makedumpfile/makedumpfile-src_cvs_kh10.tar.bz2
           patches: http://khibernation.sourceforge.net/download/release_v10/makedumpfile/makedumpfile-patches_cvs_kh10.tar.bz2
           binary: http://khibernation.sourceforge.net/download/release_v10/makedumpfile/makedumpfile_cvs_kh10
    
    - An initramfs image can be used as the root file system of kexeced
      kernel. An initramfs image built with "BuildRoot" can be downloaded
      from the following URL:
           initramfs image: http://khibernation.sourceforge.net/download/release_v10/initramfs/rootfs_cvs_kh10.gz
      All user space tools above are included in the initramfs image.
    
    Usage example of simple hibernation:
    
    1. Compile and install patched kernel with following options selected:
    
    CONFIG_X86_32=y
    CONFIG_RELOCATABLE=y
    CONFIG_KEXEC=y
    CONFIG_CRASH_DUMP=y
    CONFIG_PM=y
    CONFIG_HIBERNATION=y
    CONFIG_KEXEC_JUMP=y
    
    2. Build an initramfs image contains kexec-tool and makedumpfile, or
       download the pre-built initramfs image, called rootfs.gz in
       following text.
    
    3. Prepare a partition to save memory image of original kernel, called
       hibernating partition in following text.
    
    4. Boot kernel compiled in step 1 (kernel A).
    
    5. In the kernel A, load kernel compiled in step 1 (kernel B) with
       /sbin/kexec. The shell command line can be as follow:
    
       /sbin/kexec --load-preserve-context /boot/bzImage --mem-min=0x100000
         --mem-max=0xffffff --initrd=rootfs.gz
    
    6. Boot the kernel B with following shell command line:
    
       /sbin/kexec -e
    
    7. The kernel B will boot as normal kexec. In kernel B the memory
       image of kernel A can be saved into hibernating partition as
       follow:
    
       jump_back_entry=`cat /proc/cmdline | tr ' ' '\n' | grep kexec_jump_back_entry | cut -d '='`
       echo $jump_back_entry > kexec_jump_back_entry
       cp /proc/vmcore dump.elf
    
       Then you can shutdown the machine as normal.
    
    8. Boot kernel compiled in step 1 (kernel C). Use the rootfs.gz as
       root file system.
    
    9. In kernel C, load the memory image of kernel A as follow:
    
       /sbin/kexec -l --args-none --entry=`cat kexec_jump_back_entry` dump.elf
    
    10. Jump back to the kernel A as follow:
    
       /sbin/kexec -e
    
       Then, kernel A is resumed.
    
    Implementation point:
    
    To support jumping between two kernels, before jumping to (executing)
    the new kernel and jumping back to the original kernel, the devices
    are put into quiescent state, and the state of devices and CPU is
    saved. After jumping back from kexeced kernel and jumping to the new
    kernel, the state of devices and CPU are restored accordingly. The
    devices/CPU state save/restore code of software suspend is called to
    implement corresponding function.
    
    Known issues:
    
    - Because the segment number supported by sys_kexec_load is limited,
      hibernation image with many segments may not be load. This is
      planned to be eliminated by adding a new flag to sys_kexec_load to
      make a image can be loaded with multiple sys_kexec_load invoking.
    
    Now, only the i386 architecture is supported.
    
    Signed-off-by: Huang Ying <ying.huang@intel.com>
    Acked-by: Vivek Goyal <vgoyal@redhat.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Nigel Cunningham <nigel@nigel.suspend2.net>
    Cc: "Rafael J. Wysocki" <rjw@sisk.pl>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 3ab83521378268044a448113c6aa9a9e245f4d2f
Author: Huang Ying <ying.huang@intel.com>
Date:   Fri Jul 25 19:45:07 2008 -0700

    kexec jump
    
    This patch provides an enhancement to kexec/kdump.  It implements the
    following features:
    
    - Backup/restore memory used by the original kernel before/after
      kexec.
    
    - Save/restore CPU state before/after kexec.
    
    The features of this patch can be used as a general method to call program in
    physical mode (paging turning off).  This can be used to call BIOS code under
    Linux.
    
    kexec-tools needs to be patched to support kexec jump. The patches and
    the precompiled kexec can be download from the following URL:
    
           source: http://khibernation.sourceforge.net/download/release_v10/kexec-tools/kexec-tools-src_git_kh10.tar.bz2
           patches: http://khibernation.sourceforge.net/download/release_v10/kexec-tools/kexec-tools-patches_git_kh10.tar.bz2
           binary: http://khibernation.sourceforge.net/download/release_v10/kexec-tools/kexec_git_kh10
    
    Usage example of calling some physical mode code and return:
    
    1. Compile and install patched kernel with following options selected:
    
    CONFIG_X86_32=y
    CONFIG_KEXEC=y
    CONFIG_PM=y
    CONFIG_KEXEC_JUMP=y
    
    2. Build patched kexec-tool or download the pre-built one.
    
    3. Build some physical mode executable named such as "phy_mode"
    
    4. Boot kernel compiled in step 1.
    
    5. Load physical mode executable with /sbin/kexec. The shell command
       line can be as follow:
    
       /sbin/kexec --load-preserve-context --args-none phy_mode
    
    6. Call physical mode executable with following shell command line:
    
       /sbin/kexec -e
    
    Implementation point:
    
    To support jumping without reserving memory.  One shadow backup page (source
    page) is allocated for each page used by kexeced code image (destination
    page).  When do kexec_load, the image of kexeced code is loaded into source
    pages, and before executing, the destination pages and the source pages are
    swapped, so the contents of destination pages are backupped.  Before jumping
    to the kexeced code image and after jumping back to the original kernel, the
    destination pages and the source pages are swapped too.
    
    C ABI (calling convention) is used as communication protocol between
    kernel and called code.
    
    A flag named KEXEC_PRESERVE_CONTEXT for sys_kexec_load is added to
    indicate that the loaded kernel image is used for jumping back.
    
    Now, only the i386 architecture is supported.
    
    Signed-off-by: Huang Ying <ying.huang@intel.com>
    Acked-by: Vivek Goyal <vgoyal@redhat.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Nigel Cunningham <nigel@nigel.suspend2.net>
    Cc: "Rafael J. Wysocki" <rjw@sisk.pl>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 10d3285d0b3af641ee446f0be8f0a7f40cb515b6
Merge: 6dec3a1 3a61ec3
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Jul 26 16:30:19 2008 +0200

    Merge branch 'x86/urgent' into x86/core
    
    Conflicts:
    
    	include/asm-x86/gpio.h
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 6dec3a10a7a6093af10cef7ac56021150afd6451
Merge: 2930833 10a010f
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Jul 26 16:29:23 2008 +0200

    Merge branch 'x86/x2apic' into x86/core
    
    Conflicts:
    
    	include/asm-x86/i8259.h
    	include/asm-x86/msidef.h
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 1f972768a1df1518f45adb6b8ffbf04fa1c99737
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Jul 26 13:52:50 2008 +0200

    x86, RDC321x: add to mach-default
    
    first step to add RDC321x support to the default PC architecture.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 7444a72effa632fcd8edc566f880d96fe213c73b
Author: Michael Buesch <mb@bu3sch.de>
Date:   Fri Jul 25 01:46:11 2008 -0700

    gpiolib: allow user-selection
    
    This patch adds functionality to the gpio-lib subsystem to make it
    possible to enable the gpio-lib code even if the architecture code didn't
    request to get it built in.
    
    The archtitecture code does still need to implement the gpiolib accessor
    functions in its asm/gpio.h file.  This patch adds the implementations for
    x86 and PPC.
    
    With these changes it is possible to run generic GPIO expansion cards on
    every architecture that implements the trivial wrapper functions.  Support
    for more architectures can easily be added.
    
    Signed-off-by: Michael Buesch <mb@bu3sch.de>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: David Brownell <david-b@pacbell.net>
    Cc: Russell King <rmk@arm.linux.org.uk>
    Cc: Haavard Skinnemoen <hskinnemoen@atmel.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jean Delvare <khali@linux-fr.org>
    Cc: Samuel Ortiz <sameo@openedhand.com>
    Cc: Kumar Gala <galak@gate.crashing.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Adrian Bunk <bunk@stusta.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 58340a07c194e0aed7bc58b61ff24330bb2a409f
Author: Johannes Berg <johannes@sipsolutions.net>
Date:   Fri Jul 25 01:45:33 2008 -0700

    introduce HAVE_EFFICIENT_UNALIGNED_ACCESS Kconfig symbol
    
    In many cases, especially in networking, it can be beneficial to know at
    compile time whether the architecture can do unaligned accesses efficiently.
    This patch introduces a new Kconfig symbol
    
    	HAVE_EFFICIENT_UNALIGNED_ACCESS
    
    for that purpose and adds it to the powerpc and x86 architectures.  Also add
    some documentation about alignment and networking, and especially one intended
    use of this symbol.
    
    Signed-off-by: Johannes Berg <johannes@sipsolutions.net>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Acked-by: Ingo Molnar <mingo@elte.hu> [x86 architecture part]
    Cc: <linux-arch@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 10a010f6953b5a14ba2f0be40a4fce1bea220875
Merge: 510b372 fb2e405
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Jul 25 13:08:16 2008 +0200

    Merge branch 'linus' into x86/x2apic
    
    Conflicts:
    
    	drivers/pci/dmar.c
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 28b2ee20c7cba812b6f2ccf6d722cf86d00a84dc
Author: Rik van Riel <riel@redhat.com>
Date:   Wed Jul 23 21:27:05 2008 -0700

    access_process_vm device memory infrastructure
    
    In order to be able to debug things like the X server and programs using
    the PPC Cell SPUs, the debugger needs to be able to access device memory
    through ptrace and /proc/pid/mem.
    
    This patch:
    
    Add the generic_access_phys access function and put the hooks in place
    to allow access_process_vm to access device or PPC Cell SPU memory.
    
    [riel@redhat.com: Add documentation for the vm_ops->access function]
    Signed-off-by: Rik van Riel <riel@redhat.com>
    Signed-off-by: Benjamin Herrensmidt <benh@kernel.crashing.org>
    Cc: Dave Airlie <airlied@linux.ie>
    Cc: Hugh Dickins <hugh@veritas.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 76c3bb15d6786a0b8da0ad0090e0c9c3672fc08b
Merge: 7be4200 93ded9b
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jul 22 09:06:21 2008 +0200

    Merge branch 'linus' into x86/x2apic

commit a208f37a465e222218974ab20a31b42b7b4893b2
Merge: 511d9d3 5b664cb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Jul 18 22:50:34 2008 +0200

    Merge branch 'linus' into x86/x2apic

commit f6dc8ccaab6d8f63cbae1e6c73fe972b26f5376c
Merge: 323ec00 5b664cb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Jul 18 21:13:20 2008 +0200

    Merge branch 'linus' into core/generic-dma-coherent
    
    Conflicts:
    
    	kernel/Makefile
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 41b9eb264c8407655db57b60b4457fe1b2ec9977
Author: Stefan Assmann <sassmann@suse.de>
Date:   Tue Jul 15 13:48:55 2008 +0200

    x86, pci: introduce config option for pci reroute quirks (was: [PATCH 0/3] Boot IRQ quirks for Broadcom and AMD/ATI)
    
    This is against linux-2.6-tip, branch pci-ioapic-boot-irq-quirks.
    
    From: Stefan Assmann <sassmann@suse.de>
    Subject: Introduce config option for pci reroute quirks
    
    The config option X86_REROUTE_FOR_BROKEN_BOOT_IRQS is introduced to
    enable (or disable) the redirection of the interrupt handler to the boot
    interrupt line by default. Depending on the existence of interrupt
    masking / threaded interrupt handling in the kernel (vanilla, rt, ...)
    and the maturity of the rerouting patch, users can enable or disable the
    redirection by default.
    
    This means that the reroute quirk can be applied to any kernel without
    changing it.
    
    Interrupt sharing could be increased if this option is enabled. However this
    option is vital for threaded interrupt handling, as done by the RT kernel.
    It should simplify the consolidation with the RT kernel.
    
    The option can be overridden by either pci=ioapicreroute or
    pci=noioapicreroute.
    
    Signed-off-by: Stefan Assmann <sassmann@suse.de>
    Signed-off-by: Olaf Dabrunz <od@suse.de>
    Cc: Jesse Barnes <jbarnes@virtuousgeek.org>
    Cc: Jon Masters <jonathan@jonmasters.org>
    Cc: Ihno Krumreich <ihno@suse.de>
    Cc: Sven Dietrich <sdietrich@suse.de>
    Cc: Daniel Gollub <dgollub@suse.de>
    Cc: Felix Foerster <ffoerster@suse.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit caadbdce240c43e3e46c82fce6c00eb7f01e1beb
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Tue Jul 15 00:03:44 2008 -0700

    x86: enable memory tester support on 32-bit
    
    only supports memory below max_low_pfn.
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 1a781a777b2f6ac46523fe92396215762ced624d
Merge: b9d2252 42a2f21
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jul 15 21:55:59 2008 +0200

    Merge branch 'generic-ipi' into generic-ipi-for-linus
    
    Conflicts:
    
    	arch/powerpc/Kconfig
    	arch/s390/kernel/time.c
    	arch/x86/kernel/apic_32.c
    	arch/x86/kernel/cpu/perfctr-watchdog.c
    	arch/x86/kernel/i8259_64.c
    	arch/x86/kernel/ldt.c
    	arch/x86/kernel/nmi_64.c
    	arch/x86/kernel/smpboot.c
    	arch/x86/xen/smp.c
    	include/asm-x86/hw_irq_32.h
    	include/asm-x86/hw_irq_64.h
    	include/asm-x86/mach-default/irq_vectors.h
    	include/asm-x86/mach-voyager/irq_vectors.h
    	include/asm-x86/smp.h
    	kernel/Makefile
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit aba3728ce2e8ce85e1e5f6b275131e9332256789
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jul 15 14:48:48 2008 +0200

    x86: sanitize Kconfig
    
    Set default n for MEMTEST and MTRR_SANITIZER and fix the help texts.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 5806b81ac1c0c52665b91723fd4146a4f86e386b
Merge: d14c8a6 6712e29
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Jul 14 16:11:52 2008 +0200

    Merge branch 'auto-ftrace-next' into tracing/for-linus
    
    Conflicts:
    
    	arch/x86/kernel/entry_32.S
    	arch/x86/kernel/process_32.c
    	arch/x86/kernel/process_64.c
    	arch/x86/lib/Makefile
    	include/asm-x86/irqflags.h
    	kernel/Makefile
    	kernel/sched.c
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 9fa8c481b55e80edd8c637573f87853bb6b600f5
Author: Suresh Siddha <suresh.b.siddha@intel.com>
Date:   Thu Jul 10 11:17:00 2008 -0700

    x64, x2apic/intr-remap: introduce CONFIG_INTR_REMAP
    
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Cc: akpm@linux-foundation.org
    Cc: arjan@linux.intel.com
    Cc: andi@firstfloor.org
    Cc: ebiederm@xmission.com
    Cc: jbarnes@virtuousgeek.org
    Cc: steiner@sgi.com
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 39415a440ecceb0a5bd3c23686f18f83bb8368c6
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jul 10 20:06:30 2008 +0200

    x86, VisWS: fix pci_direct_conf1 dependency
    
    fix:
    
     arch/x86/pci/built-in.o: In function `pci_subsys_init':
     visws.c:(.init.text+0xfc5): undefined reference to `pci_direct_conf1'
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c47277d2f842d6c50d1991579307625540b26eac
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jul 10 19:47:49 2008 +0200

    x86, VisWS: build fix
    
    fix:
    
     arch/x86/kernel/built-in.o: In function `visws_early_detect':
     : undefined reference to `mach_get_smp_config_quirk'
     arch/x86/kernel/built-in.o: In function `visws_early_detect':
     : undefined reference to `mach_find_smp_config_quirk'
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit b6770c83b4b88dd832cc77916b1935b0311c64e0
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jul 10 19:37:44 2008 +0200

    x86, VisWS: do not allow VisWS for Voyager
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit efefa6f63fe6f08c16fa28dc9391bd1b89df5274
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jul 10 16:09:50 2008 +0200

    x86, VisWS: turn into generic arch, clean up
    
    remove VISWS Kconfig complications, now that it's supported by the generic
    architecture.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 1b84e1c81f56e13c7d81b47c85eda15d94624e43
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jul 10 15:55:27 2008 +0200

    x86, VisWS: turn into generic arch, flip over VISWS to generic arch
    
    this is the big move: flip over VISWS to generic arch support.
    
    From this commit on CONFIG_X86_VISWS is just another (default-disabled)
    option that turns on certain quirks - no other complications.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 5ab74722a4656612d1f3b087b1afd91133ec0eeb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jul 10 14:42:03 2008 +0200

    x86, VisWS: turn into generic arch, use generic mpparse code
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 31ac409a7921da39cc998f2432afa13e77fd8705
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jul 10 13:31:04 2008 +0200

    x86, VisWS: turn into generic arch, add early init quirks
    
    add early init quirks for VisWS. This gradually turns the VISWS subarch
    into a generic PC architecture.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit a6784ad7eafa74a085c8458909eda0699a8fcf57
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jul 10 12:21:58 2008 +0200

    x86: fix visws and vsmp build
    
    these two sub-architectures want PCI to be default-on, not default-off.
    
    Reported-by: Robert Richter <robert.richter@amd.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit bac0c9103b31c3dd83ad9d731dd9834e2ba75e4f
Merge: 6329d30 98a05ed
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Jul 10 11:43:00 2008 +0200

    Merge branch 'tracing/ftrace' into auto-ftrace-next

commit 18b743dc948aaddc46258b73f17bdec2ee4019ee
Author: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
Date:   Thu Jul 10 09:50:50 2008 +0900

    x86, AMD IOMMU: clean up Kconfig entry
    
    AMD_IOMMU should depend on IOMMU_HELPER since they are the IOMMU
    helper functions. SWIOTLB requires IOMMU_HELPER so declaring that
    AMD_IOMMU depends on SWIOTLB properly fixes the problems.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 6247943d8ab699b57653afd453a4940cca70ef8a
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Sun Jul 6 11:42:11 2008 -0700

    x86: remove acpi_srat config v2
    
    use ACPI_NUMA directly
    
    and move srat_32.c to mm/
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 698839fe04ae11f228074ad45614343c3921a6c6
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Sun Jul 6 11:42:11 2008 -0700

    x86: remove have_arch_parse_srat -v2
    
    we already have the same srat handling interface for 32bit.
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 97349135fea7f0ba8464534433df3bfd1dc0e9a6
Author: Jeremy Fitzhardinge <jeremy@goop.org>
Date:   Wed Jun 25 00:19:14 2008 -0400

    x86/paravirt: add debugging for missing operations
    
    Rather than just jumping to 0 when there's a missing operation, raise a BUG.
    
    Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
    Cc: xen-devel <xen-devel@lists.xensource.com>
    Cc: Stephen Tweedie <sct@redhat.com>
    Cc: Eduardo Habkost <ehabkost@redhat.com>
    Cc: Mark McLoughlin <markmc@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit d1b20afec356085a202d7832d47bfb89303ea901
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Wed Jun 25 17:59:41 2008 -0700

    x86: make x86_find_smp_config depends on 64 bit too
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 383bc5cecc2ed0b8f44a25488660b03030425ef7
Author: Bernhard Walle <bwalle@suse.de>
Date:   Thu Jun 26 09:23:21 2008 +0200

    x86, crashdump, /proc/vmcore: remove CONFIG_EXPERIMENTAL from kdump
    
    I would suggest to remove the "experimental" status from Kdump.
    Kdump is now in the kernel since a long time and used by Enterprise
    distributions. I don't think that "experimental" is true any more.
    
    Signed-off-by: Bernhard Walle <bwalle@suse.de>
    Cc: vgoyal@redhat.com
    Cc: kexec@lists.infradead.org
    Cc: Bernhard Walle <bwalle@suse.de>
    Cc: akpm@linux-foundation.org
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 2b4fa851b2f06fdb04cac808b57324f5e51e1578
Merge: 3de352b 46f68e1
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jul 8 11:59:23 2008 +0200

    Merge branch 'x86/numa' into x86/devel
    
    Conflicts:
    
    	arch/x86/Kconfig
    	arch/x86/kernel/e820.c
    	arch/x86/kernel/efi_64.c
    	arch/x86/kernel/mpparse.c
    	arch/x86/kernel/setup.c
    	arch/x86/kernel/setup_32.c
    	arch/x86/mm/init_64.c
    	include/asm-x86/proto.h
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 23ca4bba3e20c6c3cb11c1bb0ab4770b724d39ac
Author: Mike Travis <travis@sgi.com>
Date:   Mon May 12 21:21:12 2008 +0200

    x86: cleanup early per cpu variables/accesses v4
    
      * Introduce a new PER_CPU macro called "EARLY_PER_CPU".  This is
        used by some per_cpu variables that are initialized and accessed
        before there are per_cpu areas allocated.
    
        ["Early" in respect to per_cpu variables is "earlier than the per_cpu
        areas have been setup".]
    
        This patchset adds these new macros:
    
    	DEFINE_EARLY_PER_CPU(_type, _name, _initvalue)
    	EXPORT_EARLY_PER_CPU_SYMBOL(_name)
    	DECLARE_EARLY_PER_CPU(_type, _name)
    
    	early_per_cpu_ptr(_name)
    	early_per_cpu_map(_name, _idx)
    	early_per_cpu(_name, _cpu)
    
        The DEFINE macro defines the per_cpu variable as well as the early
        map and pointer.  It also initializes the per_cpu variable and map
        elements to "_initvalue".  The early_* macros provide access to
        the initial map (usually setup during system init) and the early
        pointer.  This pointer is initialized to point to the early map
        but is then NULL'ed when the actual per_cpu areas are setup.  After
        that the per_cpu variable is the correct access to the variable.
    
        The early_per_cpu() macro is not very efficient but does show how to
        access the variable if you have a function that can be called both
        "early" and "late".  It tests the early ptr to be NULL, and if not
        then it's still valid.  Otherwise, the per_cpu variable is used
        instead:
    
    	#define early_per_cpu(_name, _cpu) 			\
    		(early_per_cpu_ptr(_name) ?			\
    			early_per_cpu_ptr(_name)[_cpu] :	\
    			per_cpu(_name, _cpu))
    
        A better method is to actually check the pointer manually.  In the
        case below, numa_set_node can be called both "early" and "late":
    
    	void __cpuinit numa_set_node(int cpu, int node)
    	{
    	    int *cpu_to_node_map = early_per_cpu_ptr(x86_cpu_to_node_map);
    
    	    if (cpu_to_node_map)
    		    cpu_to_node_map[cpu] = node;
    	    else
    		    per_cpu(x86_cpu_to_node_map, cpu) = node;
    	}
    
      * Add a flag "arch_provides_topology_pointers" that indicates pointers
        to topology cpumask_t maps are available.  Otherwise, use the function
        returning the cpumask_t value.  This is useful if cpumask_t set size
        is very large to avoid copying data on to/off of the stack.
    
      * The coverage of CONFIG_DEBUG_PER_CPU_MAPS has been increased while
        the non-debug case has been optimized a bit.
    
      * Remove an unreferenced compiler warning in drivers/base/topology.c
    
      * Clean up #ifdef in setup.c
    
    For inclusion into sched-devel/latest tree.
    
    Based on:
    	git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git
        +   sched-devel/latest  .../mingo/linux-2.6-sched-devel.git
    
    Signed-off-by: Mike Travis <travis@sgi.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 1184dc2ffe2c8fb9afb766d870850f2c3165ef25
Author: Mike Travis <travis@sgi.com>
Date:   Mon May 12 21:21:12 2008 +0200

    x86: modify Kconfig to allow up to 4096 cpus
    
      * Increase the limit of NR_CPUS to 4096 and introduce a boolean
        called "MAXSMP" which when set (e.g. "allyesconfig"), will set
        NR_CPUS = 4096 and NODES_SHIFT = 9 (512).
    
      * Changed max setting for NODES_SHIFT from 15 to 9 to accurately
        reflect the real limit.
    
    Signed-off-by: Mike Travis <travis@sgi.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 3de352bbd86f890dd0c5e1c09a6a1b0b29e0f8ce
Merge: 1b8ba39 9340e1c
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jul 8 11:14:58 2008 +0200

    Merge branch 'x86/mpparse' into x86/devel
    
    Conflicts:
    
    	arch/x86/Kconfig
    	arch/x86/kernel/io_apic_32.c
    	arch/x86/kernel/setup_64.c
    	arch/x86/mm/init_32.c
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit bad48f4b313a756ccde454c25c14c828e2fd5819
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Fri Jun 20 07:33:31 2008 -0700

    x86: simplify x86_mpparse dependency check
    
    "Maciej W. Rozycki" <macro@linux-mips.org> said:
    
    > Given X86_64 selects X86_LOCAL_APIC I am not sure the redundancy seen
    >above does not actually obscure the logic behind...  I think:
    >
    >       depends on X86_LOCAL_APIC && !X86_VISWS
    >
    >would be clearer and get the same.
    
    Suggested-by: Maciej W. Rozycki <macro@linux-mips.org>
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Len Brown <lenb@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit a4caa18efe468acb3522e30763de57a67b3e438b
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Thu Jun 19 12:15:01 2008 -0700

    x86: fix compiling when CONFIG_X86_MPPARSE is not set
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 6695c85b2e6f9f2e9ccaa8af38b72f5ab4a5184f
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Thu Jun 19 12:13:09 2008 -0700

    x86: let MPS support be selectable, v2
    
    v2: seperate "fix for compiling when MPPARSE is not set" to another patch
        make X86_MPPARSE to be selectable only when acpi is set and
        X86_MPPARSE will be set if acpi is not set.
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Maciej W. Rozycki <macro@linux-mips.org>
    Cc: Len Brown <lenb@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 0699eae140a3eeca976df4e3b7699b1fa3f763cd
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Tue Jun 17 15:39:01 2008 -0700

    x86: Kconfig cleanup with genericarch
    
    we already have summit and etc depends on genericarch,
    so use genericarch only.
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 896395c290f902576270d84291c1f7f8bfbe339d
Merge: af1cf20 1b40a89
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jul 8 10:32:56 2008 +0200

    Merge branch 'linus' into tmp.x86.mpparse.new

commit 58cf35228fec541418cc3bd781d6c069d904815e
Merge: 3c1ca43 c1f64a5 28f73e5 b664d6b f294a8c 45fdc3a 8b7fd21
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jul 8 09:46:15 2008 +0200

    Merge branches 'x86/mmio', 'x86/delay', 'x86/idle', 'x86/oprofile', 'x86/debug', 'x86/ptrace' and 'x86/amd-iommu' into x86/devel

commit 6924d1ab8b7bbe5ab416713f5701b3316b2df85b
Merge: 4e78c91 25556c1 b764a15f 437a0a5 41b3eae 84e65b0 684eb01 9302213 5cb04df 44974c8 48cf937 205f932 c54f9da 0ed368c b478458 2d144e6 607baf1 33af903 3557b18 63687a5 009b9fc f6477cc e6b0ede 400d349
Author: Ingo Molnar <mingo@elte.hu>
Date:   Tue Jul 8 09:16:56 2008 +0200

    Merge branches 'x86/numa-fixes', 'x86/apic', 'x86/apm', 'x86/bitops', 'x86/build', 'x86/cleanups', 'x86/cpa', 'x86/cpu', 'x86/defconfig', 'x86/gart', 'x86/i8259', 'x86/intel', 'x86/irqstats', 'x86/kconfig', 'x86/ldt', 'x86/mce', 'x86/memtest', 'x86/pat', 'x86/ptemask', 'x86/resumetrace', 'x86/threadinfo', 'x86/timers', 'x86/vdso' and 'x86/xen' into x86/devel

commit 18d22200740b83a5d968d3236c27c310b3e8fda6
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Thu Jul 3 19:35:06 2008 +0200

    x86, AMD IOMMU: more verbose Kconfig description text
    
    This patch replaces the short description text for AMD IOMMU in Kconfig with a
    more verbose one.
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
    Cc: iommu@lists.linux-foundation.org
    Cc: bhavna.sarathy@amd.com
    Cc: robert.richter@amd.com
    Cc: Joerg Roedel <joerg.roedel@amd.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 041924ec2f40efa6a3163144a5481a000804199d
Merge: f36b7a2 efac418
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 2 18:58:56 2008 -0700

    Merge branch 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip
    
    * 'x86-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:
      x86: fix NODES_SHIFT Kconfig range

commit efac41894df57d32b483ac622d03541b5b2692c0
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jul 1 08:56:32 2008 +0200

    x86: fix NODES_SHIFT Kconfig range
    
    commit 4323838215184f5a2f081e0d17b8d60731b03164
           x86: change size of node ids from u8 to s16
    
    set the range for NODES_SHIFT to 1..15.
    
    The possible range is 1..9
    
    Fixes Bugzilla #10726
    
    Reported-by: Dave Jones <davej@codemonkey.org.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 323ec001c6bb98eeabb5abbdbb8c8055d9496554
Author: Dmitry Baryshkov <dbaryshkov@gmail.com>
Date:   Sun Jun 29 14:19:31 2008 +0400

    x86: use generic per-device dma coherent allocator
    
    Signed-off-by: Dmitry Baryshkov <dbaryshkov@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 07c40e8a1acdb56fca485a6deeb252ebf19509a1
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Jun 27 11:31:28 2008 +0200

    x86, AMD IOMMU: build fix #3
    
    fix typo causing:
    
    arch/x86/kernel/built-in.o: In function `__unmap_single':
    amd_iommu.c:(.text+0x17771): undefined reference to `iommu_area_free'
    arch/x86/kernel/built-in.o: In function `__map_single':
    amd_iommu.c:(.text+0x1797a): undefined reference to `iommu_area_alloc'
    amd_iommu.c:(.text+0x179a2): undefined reference to `iommu_area_alloc'
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 24d2ba0a8a5816eb8322836271fbcb045d915dfd
Author: Ingo Molnar <mingo@elte.hu>
Date:   Fri Jun 27 10:37:03 2008 +0200

    x86, AMD IOMMU: build fix
    
    fix:
    
     arch/x86/kernel/amd_iommu_init.c:247: warning: 'struct acpi_table_header' declared inside parameter list
     arch/x86/kernel/amd_iommu_init.c:247: warning: its scope is only this definition or declaration, which is probably not what you want
     arch/x86/kernel/amd_iommu_init.c: In function 'find_last_devid_acpi':
     arch/x86/kernel/amd_iommu_init.c:257: error: dereferencing pointer to incomplete type
     arch/x86/kernel/amd_iommu_init.c:265: error: dereferencing pointer to incomplete type
    
    the AMD IOMMU code depends on ACPI facilities.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 2b188723ee1707ca902ddb98ce1decdeafb5190a
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Thu Jun 26 21:27:37 2008 +0200

    x86, AMD IOMMU: add Kconfig entry
    
    This patch adds the Kconfig entry for the AMD IOMMU driver.
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
    Cc: iommu@lists.linux-foundation.org
    Cc: bhavna.sarathy@amd.com
    Cc: Sebastian.Biemueller@amd.com
    Cc: robert.richter@amd.com
    Cc: joro@8bytes.org
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 3b16cf874861436725c43ba0b68bdd799297be7c
Author: Jens Axboe <jens.axboe@oracle.com>
Date:   Thu Jun 26 11:21:54 2008 +0200

    x86: convert to generic helpers for IPI function calls
    
    This converts x86, x86-64, and xen to use the new helpers for
    smp_call_function() and friends, and adds support for
    smp_call_function_single().
    
    Acked-by: Ingo Molnar <mingo@elte.hu>
    Acked-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
    Signed-off-by: Jens Axboe <jens.axboe@oracle.com>

commit 607baf1f4ef94637ab0f7d0e258932851dc5c0a2
Merge: 064a32d 543cf4c
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Jun 25 12:31:14 2008 +0200

    Merge branch 'linus' into x86/memtest

commit 0ed368c71aa65cba8d349432bd4dab4a9a2eb39c
Merge: 7aaaec3 543cf4c
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Jun 25 12:30:54 2008 +0200

    Merge branch 'linus' into x86/kconfig

commit 97e6722b8d6b5880c4d5751127d5083b1b7df27d
Merge: f22f9a8 543cf4c
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Jun 25 12:27:56 2008 +0200

    Merge branch 'linus' into tracing/ftrace

commit 5ce001b0e56638c726270d4f9e05d46d4250dfbb
Merge: 7c9f886 543cf4c
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Jun 25 12:27:29 2008 +0200

    Merge branch 'linus' into stackprotector

commit f6e16d5ad463d15f285666f588cfe49495c692d9
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Tue Jun 3 16:17:32 2008 +0200

    x86: KVM guest: Use the paravirt clocksource structs and functions
    
    This patch updates the kvm host code to use the pvclock structs
    and functions, thereby making it compatible with Xen.
    
    The patch also fixes an initialization bug: on SMP systems the
    per-cpu has two different locations early at boot and after CPU
    bringup.  kvmclock must take that in account when registering the
    physical address within the host.
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Avi Kivity <avi@qumranet.com>

commit 7af192c954017499ec163bc9dbaaee2e593d7ef2
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Tue Jun 3 16:17:29 2008 +0200

    x86: Add structs and functions for paravirt clocksource
    
    This patch adds structs for the paravirt clocksource ABI
    used by both xen and kvm (pvclock-abi.h).
    
    It also adds some helper functions to read system time and
    wall clock time from a paravirtual clocksource (pvclock.[ch]).
    They are based on the xen code.  They are enabled using
    CONFIG_PARAVIRT_CLOCK.
    
    Subsequent patches of this series will put the code in use.
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Acked-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
    Signed-off-by: Avi Kivity <avi@qumranet.com>

commit 7aaaec38fcd9ef3172e69f8c19f20113830a8498
Merge: 1ac9701 0665190
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Jun 16 11:28:04 2008 +0200

    Merge branch 'linus' into x86/kconfig

commit 064a32d82c20cdcb0119a8b316eb520608d8c647
Merge: 0327318 0665190
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Jun 16 11:19:53 2008 +0200

    Merge branch 'linus' into x86/memtest

commit e765ee90da62535ac7d7a97f2464f9646539d683
Merge: a4500b8 0665190
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Jun 16 11:15:58 2008 +0200

    Merge branch 'linus' into tracing/ftrace

commit d49c4288407b2ffa8cab270cb5bc6882abe969f6
Author: Yinghai Lu <yhlu.kernel@gmail.com>
Date:   Sun Jun 8 18:31:54 2008 -0700

    x86: make generic arch support NUMAQ
    
    ... so it could fall back to normal numa and we'd reduce the impact of the
    NUMAQ subarch.
    
    NUMAQ depends on GENERICARCH
    also decouple genericarch numa from acpi.
    also make it fall back to bigsmp if apicid > 8.
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 2bdd1b031b200d55c2512c8d7e0e9bdcf85d011f
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Jun 5 14:14:41 2008 -0700

    PCI/x86: fix up PCI stuff so that PCI_GOANY supports OLPC
    
    Previously, one would have to specifically choose CONFIG_OLPC and
    CONFIG_PCI_GOOLPC in order to enable PCI_OLPC.  That doesn't really work
    for distro kernels, so this patch allows one to choose CONFIG_OLPC and
    CONFIG_PCI_GOANY in order to build in OLPC support in a generic kernel (as
    requested by Robert Millan).
    
    This also moves GOOLPC before GOANY in the menuconfig list.
    
    Finally, make pci_access_init return early if we detect OLPC hardware.
    There's no need to continue probing stuff, and pci_pcbios_init
    specifically trashes our settings (we didn't run into that before because
    PCI_GOANY wasn't supported).
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>

commit 113c5413cf9051cc50b88befdc42e3402bb92115
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Feb 14 10:36:03 2008 +0100

    x86: unify stackprotector features
    
    streamline the stackprotector features under a single option
    and make the stronger feature the one accessible.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 72370f2a5b227bd3817593a6b15ea3f53f51dfcb
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Feb 13 16:15:34 2008 +0100

    x86: if stackprotector is enabled, thn use stack-protector-all by default
    
    also enable the rodata and nx tests.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 73531905ed53576d9e8707659a761e7046a60497
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sun May 25 23:03:18 2008 +0200

    Kconfig: introduce ARCH_DEFCONFIG to DEFCONFIG_LIST
    
    init/Kconfig contains a list of configs that are searched
    for if 'make *config' are used with no .config present.
    Extend this list to look at the config identified by
    ARCH_DEFCONFIG.
    
    With this change we now try the defconfig targets last.
    
    This fixes a regression reported
    by: Linus Torvalds <torvalds@linux-foundation.org>
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>

commit 12031a624af7816ec7660b82be648aa3703b4ebe
Author: Yinghai Lu <yhlu.kernel.send@gmail.com>
Date:   Fri May 2 02:40:22 2008 -0700

    x86: mtrr cleanup for converting continuous to discrete - auto detect v4
    
    Loop through mtrr chunk_size and gran_size from 1M to 2G to find out
    the optimal value so user does not need to add mtrr_chunk_size and
    mtrr_gran_size to the kernel command line.
    
    If optimal value is not found, print out all list to help select less
    optimal value.
    
    Add mtrr_spare_reg_nr= so user could set 2 instead of 1, if the card
    need more entries.
    
    v2: find the one with more spare entries
    v3: fix hole_basek offset
    v4: tight the compare between range and range_new
        loop stop with 4g
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Gabriel C <nix.or.die@googlemail.com>
    Cc: Mika Fischer <mika.fischer@zoopnet.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f5098d62c1d1cede8ff23d01bbf50a421f110562
Author: Yinghai Lu <yhlu.kernel.send@gmail.com>
Date:   Tue Apr 29 20:25:58 2008 -0700

    x86: mtrr cleanup for converting continuous to discrete layout v8 - fix
    
    v9: address format change requests by Ingo
        more case handling in range_to_var_with_hole
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 95ffa2438d0e9c48779f0106b1c0eb36165e759c
Author: Yinghai Lu <yhlu.kernel.send@gmail.com>
Date:   Tue Apr 29 03:52:33 2008 -0700

    x86: mtrr cleanup for converting continuous to discrete layout, v8
    
    some BIOS like to use continus MTRR layout, and X driver can not add
    WB entries for graphical cards when 4g or more RAM installed.
    
    the patch will change MTRR to discrete.
    
    mtrr_chunk_size= could be used to have smaller continuous block to hold holes.
    default is 256m, could be set according to size of graphics card memory.
    
    mtrr_gran_size= could be used to send smallest mtrr block to avoid run out of MTRRs
    
    v2: fix -1 for UC checking
    v3: default to disable, and need use enable_mtrr_cleanup to enable this feature
        skip the var state change warning.
        remove next_basek in range_to_mtrr()
    v4: correct warning mask.
    v5: CONFIG_MTRR_SANITIZER
    v6: fix 1g, 2g, 512 aligment with extra hole
    v7: gran_sizek to prevent running out of MTRRs.
    v8: fix hole_basek caculation caused when removing next_basek
        gran_sizek using when basek is 0.
    
    need to apply
    	[PATCH] x86: fix trimming e820 with MTRR holes.
    right after this one.
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 1ac97018169c5a13feaa90d9671f2d6ba2d9e86e
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon May 19 14:10:14 2008 +0200

    x86: untangle pci dependencies
    
    make PCI-less subarches not build with PCI - instead of complicating
    the PCI dependencies.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit c9fea78dc9775981bed2da379568c8a8fddd1fb6
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon May 19 13:53:39 2008 +0200

    x86: make NUMAQ depend on PCI
    
    NUMAQ depends on the existence of PCI hardware, and requiring PCI
    makes this subarch simpler and avoids build failures if PCI is
    disabled.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 677aa9f77e8de3791b481a0cec6c8b84d1eec626
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Sat May 17 00:01:36 2008 -0400

    ftrace: add have dynamic ftrace config for archs
    
    Now that ftrace is being ported to other architectures, it has become
    apparent that DYNAMIC_FTRACE is dependent on whether or not that
    architecture implements dynamic ftrace. FTRACE itself may be ported to
    an architecture without porting dynamic ftrace.
    
    This patch adds HAVE_DYNAMIC_FTRACE to allow architectures to port ftrace
    without having to also port the dynamic aspect as well.
    
    Signed-off-by: Steven Rostedt <srostedt@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 16444a8a40d4c7b4f6de34af0cae1f76a4f6c901
Author: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>
Date:   Mon May 12 21:20:42 2008 +0200

    ftrace: add basic support for gcc profiler instrumentation
    
    If CONFIG_FTRACE is selected and /proc/sys/kernel/ftrace_enabled is
    set to a non-zero value the ftrace routine will be called everytime
    we enter a kernel function that is not marked with the "notrace"
    attribute.
    
    The ftrace routine will then call a registered function if a function
    happens to be registered.
    
    [ This code has been highly hacked by Steven Rostedt and Ingo Molnar,
      so don't blame Arnaldo for all of this ;-) ]
    
    Update:
      It is now possible to register more than one ftrace function.
      If only one ftrace function is registered, that will be the
      function that ftrace calls directly. If more than one function
      is registered, then ftrace will call a function that will loop
      through the functions to call.
    
    Signed-off-by: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>
    Signed-off-by: Steven Rostedt <srostedt@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit c3ed64295f0fed9131b42122234b1ce4a4a266cf
Author: Mike Travis <travis@sgi.com>
Date:   Fri May 16 10:44:39 2008 -0700

    x86: change maximum NR_CPUS to 4096 and MAX_NUMNODES to 512
    
      * Change the range of NR_CPUS from 2-255 to 2-4096 and change the
        range of MAX_NUMNODES (NODES_SHIFT) from 1-32768 to 1-512.
    
      * Alter comment about how much each increment of NR_CPUS consumes.
        (This was found by configuring for 256 cpus and then 512 cpus
         and dividing the difference by 256.)
    
    Signed-off-by: Mike Travis <travis@sgi.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Dave Jones <davej@codemonkey.org.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 0327318445d55808991a63137cfb698a90ab6adf
Author: Yinghai Lu <yhlu.kernel.send@gmail.com>
Date:   Fri Apr 18 17:49:15 2008 -0700

    x86_64: simplify the memtest parameter setting
    
    use CONFIG_MEMTEST only. if it is set, will have memtest=0 (disabled)
    
    need to have memtest=4 in command line to test more patterns.
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 82fd866701881623d69fe280dbac06ddff1fdef9
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu May 1 03:46:22 2008 +0200

    x86: rdc: leds build/config fix
    
    select NEW_LEDS for now until the Kconfig dependencies have been
    fixed.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit ac44cc96fbc8f44c056fa37573e8447eec512b10
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu May 8 13:58:01 2008 +0200

    x86: revert geode config dependency
    
    commit e26a28d190304d910ee49b81cbfe6d9241f56e86
        x86: olpc build fix
    
    was a fix to a patch that was withdrawn/delayed and then erroneously
    commited to x86.git. Revert it.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit a5574cf65b5f03ce9ade3918764fe22e5e2371e3
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon May 5 23:19:50 2008 +0200

    sched, x86: add HAVE_UNSTABLE_SCHED_CLOCK
    
    add the HAVE_UNSTABLE_SCHED_CLOCK, for architectures to select.
    
    the next change utilizes it.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit e26a28d190304d910ee49b81cbfe6d9241f56e86
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat May 3 23:49:59 2008 +0200

    x86: olpc build fix
    
    CONFIG_OLPC needs to depend on MGEODE_LX
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit b9b39bfba5b0de3418305f01cfa7bc55a16004e1
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Tue Apr 29 12:48:15 2008 +0200

    x86: use defconfigs from x86/configs/*
    
    Daniel Drake <dsd@gentoo.org> reported:
    
    In 2.6.23, if you unpacked a kernel source tarball and then
    ran "make menuconfig" you'd be presented with this message:
        # using defaults found in arch/i386/defconfig
    
    and the default options would be set.
    
    The same thing in 2.6.24 does not give you any "using defaults" message, and
    the default config options within menuconfig are rather blank (e.g. no PCI
    support). You can work around this by explicitly running "make defconfig"
    before menuconfig, but it would be nice to have the behaviour the way it was
    for 2.6.23 (and the way it still is for other archs).
    
    Fixed by adding a x86 specific defconfig list to Kconfig.
    
    Fixes: http://bugzilla.kernel.org/show_bug.cgi?id=10470
    Tested-by: dsd@gentoo.org
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 3e8f7e35f3fd17eadef44e4679abb39a3806cf01
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Apr 28 10:46:58 2008 +0200

    x86 VISWS: build fix
    
    the 'reboot_force' flag is a notion that non-PC subarchitectures do
    not have.
    
    also, unify the X86_BIOS_REBOOT option between 32-bit and 64-bit
    and get rid of a few unnecessary Kconfig and Makefile complications
    that way.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 3ef0e1f8cad0a851b3dbf91802b14af7dd780352
Author: Andres Salomon <dilinger@queued.net>
Date:   Tue Apr 29 00:59:53 2008 -0700

    x86: olpc: add One Laptop Per Child architecture support
    
    This adds support for OLPC XO hardware.  Open Firmware on XOs don't contain
    the VSA, so it is necessary to emulate the PCI BARs in the kernel.  This also
    adds functionality for running EC commands, and a CONFIG_OLPC.
    
    A number of OLPC drivers depend upon CONFIG_OLPC.
    
    olpc_ec_timeout is a hack to work around Embedded Controller bugs.
    
    [akpm@linux-foundation.org: build fix]
    [akpm@linux-foundation.org: geode_has_vsa build fix]
    [akpm@linux-foundation.org: olpc_register_battery_callback doesn't exist]
    Signed-off-by: Andres Salomon <dilinger@debian.org>
    Acked-by: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <ak@suse.de>
    Cc: Jordan Crouse <jordan.crouse@amd.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit a8522509200b460443a7ca59138dc63bec1b690a
Author: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
Date:   Tue Apr 29 00:59:36 2008 -0700

    swiotlb: use iommu_is_span_boundary helper function
    
    iommu_is_span_boundary in lib/iommu-helper.c was exported for PARISC IOMMUs
    (commit 3715863aa142c4f4c5208f5f3e5e9bac06006d2f).  SWIOTLB can use it instead
    of the homegrown function.
    
    Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 7ae9392c0a3bc01562361bb21e23dfb2e5c81c5a
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Mon Apr 28 02:14:14 2008 -0700

    x86: configurable DMI scanning code
    
    Turn CONFIG_DMI into a selectable option if EMBEDDED is defined, in
    order to be able to remove the DMI table scanning code if it's not
    needed, and then reduce the kernel code size.
    
    With CONFIG_DMI (i.e before) :
    
       text    data     bss     dec     hex filename
    1076076  128656   98304 1303036  13e1fc vmlinux
    
    Without CONFIG_DMI (i.e after) :
    
       text    data     bss     dec     hex filename
    1068092  126308   98304 1292704  13b9a0 vmlinux
    
    Result:
    
       text    data     bss     dec     hex filename
      -7984   -2348       0  -10332   -285c vmlinux
    
    The new option appears in "Processor type and features", only when
    CONFIG_EMBEDDED is defined.
    
    This patch is part of the Linux Tiny project, and is based on previous work
    done by Matt Mackall <mpm@selenic.com>.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Acked-by: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Anvin" <hpa@zytor.com>
    Signed-off-by: Matt Mackall <mpm@selenic.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 1b27d05b6e21249d2338be26dfcbe8f8d8ff8a5b
Author: Pekka Enberg <penberg@cs.helsinki.fi>
Date:   Mon Apr 28 02:12:22 2008 -0700

    mm: move cache_line_size() to <linux/cache.h>
    
    Not all architectures define cache_line_size() so as suggested by Andrew move
    the private implementations in mm/slab.c and mm/slob.c to <linux/cache.h>.
    
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Reviewed-by: Christoph Lameter <clameter@sgi.com>
    Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 0cf1bfd2737f41e59f974a61eab11af206d2042a
Author: Marcelo Tosatti <mtosatti@redhat.com>
Date:   Fri Feb 22 12:21:36 2008 -0500

    x86: KVM guest: add basic paravirt support
    
    Add basic KVM paravirt support. Avoid vm-exits on IO delays.
    
    Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
    Signed-off-by: Avi Kivity <avi@qumranet.com>

commit 790c73f6289a204f858ffdcbe4a2b38e91657ec6
Author: Glauber de Oliveira Costa <gcosta@redhat.com>
Date:   Fri Feb 15 17:52:48 2008 -0200

    x86: KVM guest: paravirtualized clocksource
    
    This is the guest part of kvm clock implementation
    It does not do tsc-only timing, as tsc can have deltas
    between cpus, and it did not seem worthy to me to keep
    adjusting them.
    
    We do use it, however, for fine-grained adjustment.
    
    Other than that, time comes from the host.
    
    [randy dunlap: add missing include]
    [randy dunlap: disallow on Voyager or Visual WS]
    
    Signed-off-by: Glauber de Oliveira Costa <gcosta@redhat.com>
    Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
    Signed-off-by: Avi Kivity <avi@qumranet.com>

commit d485cb9aa2e302fac7e7fb586a0cb4c0a5211be9
Merge: 1292ebb 765c68b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Apr 26 09:48:52 2008 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/x86/linux-2.6-x86-optimized-inlining
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/x86/linux-2.6-x86-optimized-inlining:
      generic: make optimized inlining arch-opt-in
      x86: add optimized inlining

commit 2a8a2719be1397c64e726ccd1c0933a11dc493d0
Author: Ingo Molnar <mingo@elte.hu>
Date:   Sat Apr 26 10:26:52 2008 +0200

    x86 PAT: decouple from nonpromisc devmem
    
    Linus pointed it out that PAT should not depend on NONPROMISC_DEVMEM.
    
    Also make PAT non-default.
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 765c68bd54c76d4126796e49af2a1428a258429f
Author: Ingo Molnar <mingo@elte.hu>
Date:   Wed Apr 9 11:03:37 2008 +0200

    generic: make optimized inlining arch-opt-in
    
    Stephen Rothwell reported that linux-next did not build on powerpc64.
    
    make optimized inlining dependent on architecture opt-in.
    
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit fcbc04c0ab345f6e9cabc92a15f35031a10fde9f
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Apr 21 13:39:53 2008 +0200

    x86: voyager fix
    
    Reported-by: Adrian Bunk <bunk@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit ec965350bb98bd291eb34f6ecddfdcfc36da1e6e
Merge: 5f033bb 486fdae
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Apr 21 15:40:24 2008 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mingo/linux-2.6-sched-devel
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mingo/linux-2.6-sched-devel: (62 commits)
      sched: build fix
      sched: better rt-group documentation
      sched: features fix
      sched: /debug/sched_features
      sched: add SCHED_FEAT_DEADLINE
      sched: debug: show a weight tree
      sched: fair: weight calculations
      sched: fair-group: de-couple load-balancing from the rb-trees
      sched: fair-group scheduling vs latency
      sched: rt-group: optimize dequeue_rt_stack
      sched: debug: add some debug code to handle the full hierarchy
      sched: fair-group: SMP-nice for group scheduling
      sched, cpuset: customize sched domains, core
      sched, cpuset: customize sched domains, docs
      sched: prepatory code movement
      sched: rt: multi level group constraints
      sched: task_group hierarchy
      sched: fix the task_group hierarchy for UID grouping
      sched: allow the group scheduler to have multiple levels
      sched: mix tasks and groups
      ...

commit 9f0e8d0400d925c3acd5f4e01dbeb736e4011882
Author: Mike Travis <travis@sgi.com>
Date:   Fri Apr 4 18:11:01 2008 -0700

    x86: convert cpumask_of_cpu macro to allocated array
    
      * Here is a simple patch to use an allocated array of cpumasks to
        represent cpumask_of_cpu() instead of constructing one on the stack.
        It's based on the Kconfig option "HAVE_CPUMASK_OF_CPU_MAP" which is
        currently only set for x86_64 SMP.  Otherwise the the existing
        cpumask_of_cpu() is used but has been changed to produce an lvalue
        so a pointer to it can be used.
    
    Cc: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Christoph Lameter <clameter@sgi.com>
    Signed-off-by: Mike Travis <travis@sgi.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 6ec6e0d9f2fd7cb6ca6bc3bfab5ae7b5cdd8c36f
Author: Suresh Siddha <suresh.b.siddha@intel.com>
Date:   Tue Mar 25 10:14:35 2008 -0700

    srat, x86: add support for nodes spanning other nodes
    
    For example, If the physical address layout on a two node system with 8 GB
    memory is something like:
    node 0: 0-2GB, 4-6GB
    node 1: 2-4GB, 6-8GB
    
    Current kernels fail to boot/detect this NUMA topology.
    
    ACPI SRAT tables can expose such a topology which needs to be supported.
    
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 9732b6112343df2872518ec6701c8ef729310a05
Merge: 9e9abec 1a9a3e7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Apr 18 08:37:01 2008 -0700

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/mingo/linux-2.6-kgdb
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/mingo/linux-2.6-kgdb:
      kgdb: always use icache flush for sw breakpoints
      kgdb: fix SMP NMI kgdb_handle_exception exit race
      kgdb: documentation fixes
      kgdb: allow static kgdbts boot configuration
      kgdb: add documentation
      kgdb: Kconfig fix
      kgdb: add kgdb internal test suite
      kgdb: fix several kgdb regressions
      kgdb: kgdboc pl011 I/O module
      kgdb: fix optional arch functions and probe_kernel_*
      kgdb: add x86 HW breakpoints
      kgdb: print breakpoint removed on exception
      kgdb: clocksource watchdog
      kgdb: fix NMI hangs
      kgdb: fix kgdboc dynamic module configuration
      kgdb: document parameters
      x86: kgdb support
      consoles: polling support, kgdboc
      kgdb: core
      uaccess: add probe_kernel_write()

commit 9e9abecfc0ff3a9ad2ead954b37bbfcb863c775e
Merge: d7bb545 77ad386
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Apr 18 08:25:51 2008 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/x86/linux-2.6-x86
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/x86/linux-2.6-x86: (613 commits)
      x86: standalone trampoline code
      x86: move suspend wakeup code to C
      x86: coding style fixes to arch/x86/kernel/acpi/sleep.c
      x86: setup_trampoline() - fix section mismatch warning
      x86: section mismatch fixes, #1
      x86: fix paranoia about using BIOS quickboot mechanism.
      x86: print out buggy mptable
      x86: use cpu_online()
      x86: use cpumask_of_cpu()
      x86: remove unnecessary tmp local variable
      x86: remove unnecessary memset()
      x86: use ioapic_read_entry() and ioapic_write_entry()
      x86: avoid redundant loop in io_apic_level_ack_pending()
      x86: remove superfluous initialisation in boot code.
      x86: merge mpparse_{32,64}.c
      x86: unify mp_register_gsi
      x86: unify mp_config_acpi_legacy_irqs
      x86: unify mp_register_ioapic
      x86: unify uniq_io_apic_id
      x86: unify smp_scan_config
      ...

commit 82da3ff89dc2a1842cff9b0d4cbc345cb90b59e1
Author: Ingo Molnar <mingo@elte.hu>
Date:   Thu Apr 17 20:05:37 2008 +0200

    x86: kgdb support
    
    simplified and streamlined kgdb support on x86, both 32-bit and 64-bit,
    based on patch from:
    
      Subject: kgdb: core-lite
      From: Jason Wessel <jason.wessel@windriver.com>
    
    [ and countless other authors - see the patch for details. ]
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Jan Kiszka <jan.kiszka@web.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>

commit e44b7b7525ad9d43163ab5e60c784325419e0ea6
Author: Pavel Machek <pavel@suse.cz>
Date:   Thu Apr 10 23:28:10 2008 +0200

    x86: move suspend wakeup code to C
    
    Move wakeup code to .c, so that video mode setting code can be shared
    between boot and wakeup. Remove nasty assembly code in 64-bit case by
    re-using trampoline code. Stack setup was fixed to clear high 16bits
    of %esp, maybe that fixes some machines.
    
    .c code sharing and morse code was done H. Peter Anvin, Sam Ravnborg
    reviewed kbuild related stuff, and it seems okay to him. Rafael did
    some cleanups.
    
    [rjw:
    * Made the patch stop breaking compilation on x86-32
    * Added arch/x86/kernel/acpi/sleep.h
    * Got rid of compiler warnings in arch/x86/kernel/acpi/sleep.c
    * Fixed 32-bit compilation on x86-64 systems
    * Added include/asm-x86/trampoline.h and fixed the non-SMP
      compilation on 64-bit x86
    * Removed arch/x86/kernel/acpi/sleep_32.c which was not used
    * Fixed some breakage caused by the integration of smpboot.c done
      under us in the meantime]
    
    Signed-off-by: Pavel Machek <pavel@suse.cz>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f408b43ceedce49f26c01cd4a68dbbdbe2743e51
Author: Randy Dunlap <randy.dunlap@oracle.com>
Date:   Tue Apr 1 15:44:01 2008 -0700

    x86: fix VisualWS and Voyager kexec build failures
    
    without this patch:
    
    VOYAGER:
    kernel/built-in.o: In function `crash_kexec':
    (.text+0x28588): undefined reference to `machine_crash_shutdown'
    
    VISWS:
    kernel/built-in.o: In function `crash_kexec':
    /next-20080401/kernel/kexec.c:1074: undefined reference to `machine_crash_shutdown'
    make[1]: *** [.tmp_vmlinux1] Error 1
    
    because arch/x86/kernel/reboot.c isn't built since CONFIG_X86_BIOS_REBOOT=n,
    so machine_crash_shutdown() isn't available.
    
    This patch does seem a small bit odd since the KEXEC help text says that
    kexec is independent of the system firmware.
    
    Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
    Cc: Eric Biederman <ebiederm@xmission.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit c64df70793a9c344874eb4af19f85e0662d2d3ee
Author: Yinghai Lu <yhlu.kernel.send@gmail.com>
Date:   Fri Mar 21 18:56:19 2008 -0700

    x86: memtest bootparam
    
    Signed-off-by: Yinghai Lu <yhlu.kernel@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit fa3f1f42b4efac84c459383218c20ab39e4df566
Author: Jack Steiner <steiner@sgi.com>
Date:   Fri Mar 21 08:34:25 2008 -0500

    x86: allow NODES_SHIFT to be a config option on x86_64
    
    Allow the maximum number of nodes in an x86_64 system to
    be configurable. This patch does NOT change the default value
    but allows the value to be a config option.
    
    Signed-off-by: Jack Steiner <steiner@sgi.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 042b78e4dbb8919a59e77ba5d502a5a14405dea1
Author: Venki Pallipadi <venkatesh.pallipadi@intel.com>
Date:   Mon Mar 24 14:22:35 2008 -0700

    x86: PAT infrastructure patch, documentation updates
    
    Fix double help section in PAT Kconfig. Thanks to Randy Dunlap for catching
    this bug.
    
    Signed-off-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 2e5d9c857d4e6c9e7b7d8c8c86a68a7842d213d6
Author: venkatesh.pallipadi@intel.com <venkatesh.pallipadi@intel.com>
Date:   Tue Mar 18 17:00:14 2008 -0700

    x86: PAT infrastructure patch
    
    Sets up pat_init() infrastructure.
    
    PAT MSR has following setting.
    	PAT
    	|PCD
    	||PWT
    	|||
    	000 WB		_PAGE_CACHE_WB
    	001 WC		_PAGE_CACHE_WC
    	010 UC-		_PAGE_CACHE_UC_MINUS
    	011 UC		_PAGE_CACHE_UC
    
    We are effectively changing WT from boot time setting to WC.
    UC_MINUS is used to provide backward compatibility to existing /dev/mem
    users(X).
    
    reserve_memtype and free_memtype are new interfaces for maintaining alias-free
    mapping. It is currently implemented in a simple way with a linked list and
    not optimized. reserve and free tracks the effective memory type, as a result
    of PAT and MTRR setting rather than what is actually requested in PAT.
    
    pat_init piggy backs on mtrr_init as the rules for setting both pat and mtrr
    are same.
    
    Signed-off-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 4fe29a85642544503cf81e9cf251ef0f4e65b162
Author: Glauber de Oliveira Costa <gcosta@redhat.com>
Date:   Wed Mar 19 14:25:23 2008 -0300

    x86: use specialized routine for setup per-cpu area
    
    We use the same routing as x86_64, moved now to setup.c.
    Just with a few ifdefs inside.
    Note that this routing uses prefill_possible_map().
    It has the very nice side effect of allowing hotplugging of
    cpus that are marked as present but disabled by acpi bios.
    
    Signed-off-by: Glauber Costa <gcosta@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 823c248e7cc75b4f22da914b01f8e5433cff197e
Author: Roman Zippel <zippel@linux-m68k.org>
Date:   Fri Feb 29 05:09:02 2008 +0100

    x86: fix recursive dependencies
    
    The proper dependency check uncovered a few dependency problems,
    the subarchitecture used a mixture of selects and depends on SMP
    and PCI dependency was messed up.
    
    Signed-off-by: Roman Zippel <zippel@linux-m68k.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit b089c12b25284a5e31ede7c98936a2b36a41e090
Author: Hiroshi Shimamoto <h-shimamoto@ct.jp.nec.com>
Date:   Wed Feb 27 13:16:30 2008 -0800

    x86: X86_HT always enable on X86_64 SMP
    
    X86_HT is used for hyperthreading or multicore on 32-bit.
    The X86_HT on 64-bit is different from 32-bit, it means hyperthreading only.
    And X86_HT is not used on 64-bit except from cpu/initel_cacheinfo.c.
    
    Unify X86_HT for hyperthreading or multicore.
    Turn X86_HT on when X86_64 and SMP are enabled.
    
    Signed-off-by: Hiroshi Shimamoto <h-shimamoto@ct.jp.nec.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 96597fd2be7070631ad0776cd8bced21415fd5e3
Author: Glauber Costa <gcosta@redhat.com>
Date:   Mon Feb 11 17:16:04 2008 -0200

    x86: introduce vsmp paravirt helpers
    
    Signed-off-by: Glauber Costa <gcosta@redhat.com>
    Signed-off-by: Ravikiran Thirumalai <kiran@scalemp.com>
    Acked-by: Shai Fultheim <shai@scalemp.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 64ac24e738823161693bf791f87adc802cf529ff
Author: Matthew Wilcox <matthew@wil.cx>
Date:   Fri Mar 7 21:55:58 2008 -0500

    Generic semaphore implementation
    
    Semaphores are no longer performance-critical, so a generic C
    implementation is better for maintainability, debuggability and
    extensibility.  Thanks to Peter Zijlstra for fixing the lockdep
    warning.  Thanks to Harvey Harrison for pointing out that the
    unlikely() was unnecessary.
    
    Signed-off-by: Matthew Wilcox <willy@linux.intel.com>
    Acked-by: Ingo Molnar <mingo@elte.hu>

commit 53471121a8aad3f0b590bfce7c95a1f5f52150f3
Author: Randy Dunlap <randy.dunlap@oracle.com>
Date:   Wed Mar 12 18:10:51 2008 -0400

    documentation:  Move power-related files to Documentation/power/
    
    Move 00-INDEX entries to power/00-INDEX (and add entry for
    pm_qos_interface.txt).
    
    Update references to moved filenames.
    
    Fix some trailing whitespace.
    
    Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
    Signed-off-by: Len Brown <len.brown@intel.com>

commit 985a34bd75cc8c96e43f00dcdda7c3fdb51a3026
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Mar 9 13:14:37 2008 +0100

    x86: remove quicklists
    
    quicklists cause a serious memory leak on 32-bit x86,
    as documented at:
    
      http://bugzilla.kernel.org/show_bug.cgi?id=9991
    
    the reason is that the quicklist pool is a special-purpose
    cache that grows out of proportion. It is not accounted for
    anywhere and users have no way to even realize that it's
    the quicklists that are causing RAM usage spikes. It was
    supposed to be a relatively small pool, but as demonstrated
    by KOSAKI Motohiro, they can grow as large as:
    
      Quicklists:    1194304 kB
    
    given how much trouble this code has caused historically,
    and given that Andrew objected to its introduction on x86
    (years ago), the best option at this point is to remove them.
    
    [ any performance benefits of caching constructed pgds should
      be implemented in a more generic way (possibly within the page
      allocator), while still allowing constructed pages to be
      allocated by other workloads. ]
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 9edddaa200df18e08fe0cf21036e8ae467b1363c
Author: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
Date:   Tue Mar 4 14:28:37 2008 -0800

    Kprobes: indicate kretprobe support in Kconfig
    
    Add CONFIG_HAVE_KRETPROBES to the arch/<arch>/Kconfig file for relevant
    architectures with kprobes support.  This facilitates easy handling of
    in-kernel modules (like samples/kprobes/kretprobe_example.c) that depend on
    kretprobes being present in the kernel.
    
    Thanks to Sam Ravnborg for helping make the patch more lean.
    
    Per Mathieu's suggestion, added CONFIG_KRETPROBES and fixed up dependencies.
    
    Signed-off-by: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Acked-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
    Acked-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 1a4e3f89c6b2cbe0b26c08ec63a8c34156eaae04
Author: Randy Dunlap <randy.dunlap@oracle.com>
Date:   Wed Feb 20 09:20:08 2008 -0800

    x86: disable KVM for Voyager and friends
    
    Most classic Pentiums don't have hardware virtualization extension,
    and building kvm with Voyager, Visual Workstation, or NUMAQ
    generates spurious failures.
    
    Signed-off-by: Avi Kivity <avi@qumranet.com>
    Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>

commit 2c020a99e058cdfc3a073cbfbfcc6ff55d3bfc43
Author: Linus Torvalds <torvalds@woody.linux-foundation.org>
Date:   Fri Feb 22 08:21:38 2008 -0800

    Mark CC_STACKPROTECTOR as being BROKEN
    
    It's always been broken, but recent fixes actually made it do something,
    and now the brokenness shows up as the resulting kernel simply not
    working at all.
    
    So it used to be that you could enable this config option, and it just
    didn't do anything.  Now we'd better stop people from enabling it by
    mistake, since it _does_ do something, but does it so badly as to be
    unusable.
    
    Code to actually make it work is pending, but incomplete and won't be
    merged into 2.6.25 in any case.
    
    Acked-by: Arjan van de Ven <arjan@infradead.org>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: James Morris <jmorris@namei.org>
    Cc: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 7d8330a563b00040326084f933f5bee06675ac54
Author: Balbir Singh <balbir@linux.vnet.ibm.com>
Date:   Sun Feb 10 12:46:28 2008 +0530

    KVM is not seen under X86 config with latest git (32 bit compile)
    
    The KVM configuration is no longer visible in the latest git tree. It looks
    like it is selected by HAVE_SETUP_PER_CPU_AREA. I've moved HAVE_KVM to
    under CONFIG_X86.
    
    Signed-off-by: Balbir Singh <balbir@linux.vnet.ibm.com>
    Acked-by: Avi Kivity <avi@qumranet.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 451688ba0b488faf274e13dc591734b1e695642c
Merge: acac103 ed2c9fa
Author: Linus Torvalds <torvalds@woody.linux-foundation.org>
Date:   Sat Feb 9 11:14:20 2008 -0800

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/sam/kbuild
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/sam/kbuild:
      Kbuild: Fix deb-pkg target to work with kernel versions ending with -<text-without-digit>
      ide: introduce HAVE_IDE
      kbuild: silence CHK/UPD messages according to $(quiet)
      scsi: fix makefile for aic7(3*x)
      kbuild/modpost: Use warn() for announcing section mismatches
      Add binoffset to gitignore
      kbuild/modpost: improve warnings if symbol is unknown

commit ec7748b59e214e2c6b7d21ca5f26a760fd6e142b
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sat Feb 9 10:46:40 2008 +0100

    ide: introduce HAVE_IDE
    
    To allow flexible configuration of IDE introduce HAVE_IDE.
    All archs except arm, um and s390 unconditionally select it.
    For arm the actual configuration determine if IDE is supported.
    
    This is a step towards introducing drivers/Kconfig for arm.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Acked-by: Russell King - ARM Linux <linux@arm.linux.org.uk>
    Acked-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

commit a6869cc4cfd633d909918f1489a6a8ac668cd6aa
Author: Venki Pallipadi <venkatesh.pallipadi@intel.com>
Date:   Fri Feb 8 17:05:44 2008 -0800

    cpuidle: build fix for non-x86
    
    The last posted version of this patch gave compile error
    on IA64. So, here goes yet another rewrite of the patch.
    
    Convert cpu_idle_wait() to cpuidle_kick_cpus() which is
    SMP-only, and gives error on non supported CPU.
    
    Changes from last patch sent by Kevin:
    Moved the definition of kick_cpus back to cpuidle.c from cpuidle.h:
    * Having it in .h gives #error on archs which includes the header file without
      actually having CPU_IDLE configured. To make it work in .h, we need one more
      #ifdef around that code which makes it messy.
    * Also, the function is only called from one file. So, it can be in declared
      statically in .c rather than making it available to everyone who includes
      the .h file.
    
    Signed-off-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
    Signed-off-by: Kevin Hilman <khilman@mvista.com>
    Signed-off-by: Len Brown <len.brown@intel.com>

commit b0b933c08bd5fd053bbba8ba6387f543be03d49f
Author: David Howells <dhowells@redhat.com>
Date:   Fri Feb 8 04:19:27 2008 -0800

    aout: mark arches that support A.OUT format
    
    Mark arches that support A.OUT format by including the following in their
    master Kconfig files:
    
    	config ARCH_SUPPORTS_AOUT
    		def_bool y
    
    This should also be set if the arch provides compatibility A.OUT support for
    an older arch, for instance x86_64 for i386 or sparc64 for sparc.
    
    I've guessed at which arches don't, based on comments in the code, however I'm
    sure that some of the ones I've marked as 'yes' actually should be 'no'.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Cc: <linux-arch@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 1f84260c8ce3b1ce26d4c1d6dedc2f33a3a29c0c
Author: Christoph Lameter <clameter@sgi.com>
Date:   Mon Jan 7 23:20:30 2008 -0800

    SLUB: Alternate fast paths using cmpxchg_local
    
    Provide an alternate implementation of the SLUB fast paths for alloc
    and free using cmpxchg_local. The cmpxchg_local fast path is selected
    for arches that have CONFIG_FAST_CMPXCHG_LOCAL set. An arch should only
    set CONFIG_FAST_CMPXCHG_LOCAL if the cmpxchg_local is faster than an
    interrupt enable/disable sequence. This is known to be true for both
    x86 platforms so set FAST_CMPXCHG_LOCAL for both arches.
    
    Currently another requirement for the fastpath is that the kernel is
    compiled without preemption. The restriction will go away with the
    introduction of a new per cpu allocator and new per cpu operations.
    
    The advantages of a cmpxchg_local based fast path are:
    
    1. Potentially lower cycle count (30%-60% faster)
    
    2. There is no need to disable and enable interrupts on the fast path.
       Currently interrupts have to be disabled and enabled on every
       slab operation. This is likely avoiding a significant percentage
       of interrupt off / on sequences in the kernel.
    
    3. The disposal of freed slabs can occur with interrupts enabled.
    
    The alternate path is realized using #ifdef's. Several attempts to do the
    same with macros and inline functions resulted in a mess (in particular due
    to the strange way that local_interrupt_save() handles its argument and due
    to the need to define macros/functions that sometimes disable interrupts
    and sometimes do something else).
    
    [clameter: Stripped preempt bits and disabled fastpath if preempt is enabled]
    Signed-off-by: Christoph Lameter <clameter@sgi.com>
    Reviewed-by: Pekka Enberg <penberg@cs.helsinki.fi>
    Cc: <linux-arch@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

commit f0f1b3364ae7f48084bdf2837fb979ff59622523
Merge: 4383f18 b714315
Author: Linus Torvalds <torvalds@woody.linux-foundation.org>
Date:   Thu Feb 7 09:45:58 2008 -0800

    Merge branch 'release' of git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux-acpi-2.6
    
    * 'release' of git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux-acpi-2.6: (112 commits)
      ACPI: fix build warning
      Revert "cpuidle: build fix for non-x86"
      ACPI: update intrd DSDT override console messages
      ACPI: update DSDT override documentation
      ACPI: Add "acpi_no_initrd_override" kernel parameter
      ACPI: its a directory not a folder....
      ACPI: misc cleanups
      ACPI: add missing prink prefix strings
      ACPI: cleanup acpi.h
      ACPICA: fix CONFIG_ACPI_DEBUG_FUNC_TRACE build
      ACPI: video: Ignore ACPI video devices that aren't present in hardware
      ACPI: video: reset brightness on resume
      ACPI: video: call ACPI notifier chain for ACPI video notifications
      ACPI: create notifier chain to get hotkey events to graphics driver
      ACPI: video: delete unused display switch on hotkey event code
      ACPI: video: create "brightness_switch_enabled" modparam
      cpuidle: Add a poll_idle method
      ACPI: cpuidle: Support C1 idle time accounting
      ACPI: enable MWAIT for C1 idle
      ACPI: idle: Fix acpi_safe_halt usages and interrupt enabling/disabling
      ...

commit 300ec130493a67efb291ba20b48b664b2352277d
Author: Bradley Smith <bradjsmith@btinternet.com>
Date:   Thu Feb 7 00:16:30 2008 -0800

    I8K: add i8k driver to the x86_64 Kconfig
    
    Adds i8k driver to the x86_64 Kconfig.
    
    Signed-off-by: Bradley Smith <bradjsmith@btinternet.com>
    Cc: Frank Sorenson <frank@tuxrocks.com>
    Cc: Jeff Garzik <jeff@garzik.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 9b7131542178f5f948e4bb6bea6e1c545e697b06
Author: Len Brown <len.brown@intel.com>
Date:   Thu Feb 7 04:16:34 2008 -0500

    Revert "cpuidle: build fix for non-x86"
    
    This reverts commit f757397097d0713c949af76dccabb65a2785782e.
    which ironically broke the ia64 build

commit acf63867ae06ef95eea7bf445ded2f05528a81b1
Merge: c64768a f757397 9a0b841
Author: Len Brown <len.brown@intel.com>
Date:   Thu Feb 7 03:11:05 2008 -0500

    Merge branches 'release', 'cpuidle-2.6.25' and 'idle' into release

commit 9a0b841586c3c6c846effdbe75885c2ebc0031b0
Author: venkatesh.pallipadi@intel.com <venkatesh.pallipadi@intel.com>
Date:   Thu Jan 31 17:35:06 2008 -0800

    cpuidle: Add a poll_idle method
    
    Add a default poll idle state with 0 latency. Provides an option to users
    to use poll_idle by using 0 as the latency requirement.
    
    Signed-off-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
    Signed-off-by: Len Brown <len.brown@intel.com>

commit 9d8af78b07976d4d84e0df491abd4e9db848d0ad
Author: Bernhard Walle <bwalle@suse.de>
Date:   Wed Feb 6 01:38:52 2008 -0800

    rtc: add HPET RTC emulation to RTC_DRV_CMOS
    
    That patch adds the RTC emulation of the HPET timer to the new RTC_DRV_CMOS.
    The old drivers/char/rtc.ko driver had that functionality and it's important
    on new systems.
    
    [akpm@linux-foundation.org: unbreak alpha build]
    Signed-off-by: Bernhard Walle <bwalle@suse.de>
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Cc: David Brownell <david-b@pacbell.net>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <ak@suse.de>
    Cc: john stultz <johnstul@us.ibm.com>
    Cc: Robert Picco <Robert.Picco@hp.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit fde9a1094ddf2892188a8a0eccda527de47cba8e
Author: FUJITA Tomonori <tomof@acm.org>
Date:   Mon Feb 4 22:28:11 2008 -0800

    iommu sg: x86: convert gart IOMMU to use the IOMMU helper
    
    This patch converts gart IOMMU to use the IOMMU helper functions. The
    IOMMU doesn't allocate a memory area spanning LLD's segment boundary
    anymore.
    
    Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
    Cc: Jeff Garzik <jeff@garzik.org>
    Cc: James Bottomley <James.Bottomley@steeleye.com>
    Cc: Jens Axboe <jens.axboe@oracle.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Muli Ben-Yehuda <mulix@mulix.org>
    Cc: Andi Kleen <ak@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 1b39b077789955c8389488d53d075518fdcd582e
Author: FUJITA Tomonori <tomof@acm.org>
Date:   Mon Feb 4 22:28:10 2008 -0800

    iommu sg: x86: convert calgary IOMMU to use the IOMMU helper
    
    This patch converts calgary IOMMU to use the IOMMU helper
    functions. The IOMMU doesn't allocate a memory area spanning LLD's
    segment boundary anymore.
    
    Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp>
    Cc: Jeff Garzik <jeff@garzik.org>
    Cc: James Bottomley <James.Bottomley@steeleye.com>
    Cc: Jens Axboe <jens.axboe@oracle.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Muli Ben-Yehuda <mulix@mulix.org>
    Cc: Andi Kleen <ak@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit d2fc0bacd5c438cb459fdf531eff00ab18422a00
Merge: 93890b7 795d45b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Feb 4 09:16:03 2008 -0800

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/x86/linux-2.6-x86
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/x86/linux-2.6-x86: (78 commits)
      x86: fix RTC lockdep warning: potential hardirq recursion
      x86: cpa, micro-optimization
      x86: cpa, clean up code flow
      x86: cpa, eliminate CPA_ enum
      x86: cpa, cleanups
      x86: implement gbpages support in change_page_attr()
      x86: support gbpages in pagetable dump
      x86: add gbpages support to lookup_address
      x86: add pgtable accessor functions for gbpages
      x86: add PUD_PAGE_SIZE
      x86: add feature macros for the gbpages cpuid bit
      x86: switch direct mapping setup over to set_pte
      x86: fix page-present check in cpa_flush_range
      x86: remove cpa warning
      x86: remove now unused clear_kernel_mapping
      x86: switch pci-gart over to using set_memory_np() instead of clear_kernel_mapping()
      x86: cpa selftest, skip non present entries
      x86: CPA fix pagetable split
      x86: rename LARGE_PAGE_SIZE to PMD_PAGE_SIZE
      x86: cpa, fix lookup_address
      ...

commit f5bb3a5e9dcdb8435471562b6cada89525cf4df1
Merge: 9853832 1560a79
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Feb 4 07:58:52 2008 -0800

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/bunk/trivial
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/bunk/trivial: (79 commits)
      Jesper Juhl is the new trivial patches maintainer
      Documentation: mention email-clients.txt in SubmittingPatches
      fs/binfmt_elf.c: spello fix
      do_invalidatepage() comment typo fix
      Documentation/filesystems/porting fixes
      typo fixes in net/core/net_namespace.c
      typo fix in net/rfkill/rfkill.c
      typo fixes in net/sctp/sm_statefuns.c
      lib/: Spelling fixes
      kernel/: Spelling fixes
      include/scsi/: Spelling fixes
      include/linux/: Spelling fixes
      include/asm-m68knommu/: Spelling fixes
      include/asm-frv/: Spelling fixes
      fs/: Spelling fixes
      drivers/watchdog/: Spelling fixes
      drivers/video/: Spelling fixes
      drivers/ssb/: Spelling fixes
      drivers/serial/: Spelling fixes
      drivers/scsi/: Spelling fixes
      ...

commit 4cf31841762954ad2868156ccba94d798a16630f
Author: Florian Fainelli <florian.fainelli@telecomint.eu>
Date:   Mon Feb 4 16:47:55 2008 +0100

    x86: mach-rdc321x Kconfig fix
    
    The mach-rdc321x uses the leds-gpio driver and explicitely
    selects it, this driver also depends on the leds class module,
    select it as well.
    
    Signed-off-by: Florian Fainelli <florian.fainelli@telecomint.eu>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 03502faa259bce35317a32afe79b7c69f507e14a
Author: Adrian Bunk <bunk@kernel.org>
Date:   Sun Feb 3 15:50:21 2008 +0200

    remove Documentation/smp.txt
    
    After seeing the filename I'd have expected something about the
    implementation of SMP in the Linux kernel - not some notes on kernel
    configuration and building trivialities noone would search at this
    place.
    
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Acked-by: Alan Cox <alan@redhat.com>

commit 125e564582cbce6219397fc64556438420efae4c
Author: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date:   Sat Feb 2 15:10:36 2008 -0500

    Move Kconfig.instrumentation to arch/Kconfig and init/Kconfig
    
    Move the instrumentation Kconfig to
    
    arch/Kconfig for architecture dependent options
      - oprofile
      - kprobes
    
    and
    
    init/Kconfig for architecture independent options
      - profiling
      - markers
    
    Remove the "Instrumentation Support" menu. Everything moves to "General setup".
    Delete the kernel/Kconfig.instrumentation file.
    
    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: <linux-arch@vger.kernel.org>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>

commit 3f550096dede4430f83b16457da83bf429155ac2
Author: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date:   Sat Feb 2 15:10:35 2008 -0500

    Add HAVE_KPROBES
    
    Linus:
    
    On the per-architecture side, I do think it would be better to *not* have
    internal architecture knowledge in a generic file, and as such a line like
    
            depends on X86_32 || IA64 || PPC || S390 || SPARC64 || X86_64 || AVR32
    
    really shouldn't exist in a file like kernel/Kconfig.instrumentation.
    
    It would be much better to do
    
            depends on ARCH_SUPPORTS_KPROBES
    
    in that generic file, and then architectures that do support it would just
    have a
    
            bool ARCH_SUPPORTS_KPROBES
                    default y
    
    in *their* architecture files. That would seem to be much more logical,
    and is readable both for arch maintainers *and* for people who have no
    clue - and don't care - about which architecture is supposed to support
    which interface...
    
    Changelog:
    
    Actually, I know I gave this as the magic incantation, but now that I see
    it, I realize that I should have told you to just use
    
            config KPROBES_SUPPORT
                    def_bool y
    
    instead, which is a bit denser.
    
    We seem to use both kinds of syntax for these things, but this is really
    what "def_bool" is there for...
    
    - Use HAVE_KPROBES
    - Use a select
    
    - Yet another update :
    Moving to HAVE_* now.
    
    - Update ARM for kprobes support.
    
    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
    Cc: Jeff Dike <jdike@addtoit.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>

commit 42d4b839c82fd7dd8e412145eb6d9752468478e2
Author: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
Date:   Sat Feb 2 15:10:34 2008 -0500

    Add HAVE_OPROFILE
    
    Linus:
    On the per-architecture side, I do think it would be better to *not* have
    internal architecture knowledge in a generic file, and as such a line like
    
            depends on X86_32 || IA64 || PPC || S390 || SPARC64 || X86_64 || AVR32
    
    really shouldn't exist in a file like kernel/Kconfig.instrumentation.
    
    It would be much better to do
    
            depends on ARCH_SUPPORTS_KPROBES
    
    in that generic file, and then architectures that do support it would just
    have a
    
            bool ARCH_SUPPORTS_KPROBES
                    default y
    
    in *their* architecture files. That would seem to be much more logical,
    and is readable both for arch maintainers *and* for people who have no
    clue - and don't care - about which architecture is supposed to support
    which interface...
    
    Changelog:
    
    Actually, I know I gave this as the magic incantation, but now that I see
    it, I realize that I should have told you to just use
    
            config ARCH_SUPPORTS_KPROBES
                    def_bool y
    
    instead, which is a bit denser.
    
    We seem to use both kinds of syntax for these things, but this is really
    what "def_bool" is there for...
    
    Changelog :
    
    - Moving to HAVE_*.
    - Add AVR32 oprofile.
    
    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Haavard Skinnemoen <hskinnemoen@atmel.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Jeff Dike <jdike@addtoit.com>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>

commit 687fcdf741e4a268c2c7bac8b3734de761bb9719
Merge: 215e871 a6eb84b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Feb 2 14:29:57 2008 +1100

    Merge branch 'suspend' of git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux-acpi-2.6
    
    * 'suspend' of git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux-acpi-2.6: (38 commits)
      suspend: cleanup reference to swsusp_pg_dir[]
      PM: Remove obsolete /sys/devices/.../power/state docs
      Hibernation: Invoke suspend notifications after console switch
      Suspend: Invoke suspend notifications after console switch
      Suspend: Clean up suspend_64.c
      Suspend: Add config option to disable the freezer if architecture wants that
      ACPI: Print message before calling _PTS
      ACPI hibernation: Call _PTS before suspending devices
      Hibernation: Introduce begin() and end() callbacks
      ACPI suspend: Call _PTS before suspending devices
      ACPI: Separate disabling of GPEs from _PTS
      ACPI: Separate invocations of _GTS and _BFS from _PTS and _WAK
      Suspend: Introduce begin() and end() callbacks
      suspend: fix ia64 allmodconfig build
      ACPI: clear GPE earily in resume to avoid warning
      Suspend: Clean up Kconfig (V2)
      Hibernation: Clean up Kconfig (V2)
      Hibernation: Update messages
      Suspend: Use common prefix in messages
      Hibernation: Remove unnecessary variable declaration
      ...

commit 215e871aaa3d94540121a3809d80d0c5e5686e4f
Merge: b6cf160 fd7d1ce
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Feb 2 14:29:33 2008 +1100

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/pci-2.6
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/pci-2.6: (64 commits)
      PCI: make pci_bus a struct device
      PCI: fix codingstyle issues in include/linux/pci.h
      PCI: fix codingstyle issues in drivers/pci/pci.h
      PCI: PCIE ASPM support
      PCI: Fix fakephp deadlock
      PCI: modify SB700 SATA MSI quirk
      PCI: Run ACPI _OSC method on root bridges only
      PCI ACPI: AER driver should only register PCIe devices with _OSC
      PCI ACPI: Added a function to register _OSC with only PCIe devices.
      PCI: constify function pointer tables
      PCI: Convert drivers/pci/proc.c to use unlocked_ioctl
      pciehp: block new requests from the device before power off
      pciehp: workaround against Bad DLLP during power off
      pciehp: wait for 1000ms before LED operation after power off
      PCI: Remove pci_enable_device_bars() from documentation
      PCI: Remove pci_enable_device_bars()
      PCI: Remove users of pci_enable_device_bars()
      PCI: Add pci_enable_device_{io,mem} intefaces
      PCI: avoid save the same type of cap multiple times
      PCI: correctly initialize a structure for pcie_save_pcix_state()
      ...

commit f4cb57007662a4ec3c2de3c027900223e0299bdd
Author: Johannes Berg <johannes@sipsolutions.net>
Date:   Sat Dec 8 02:14:00 2007 +0100

    Suspend: Clean up Kconfig (V2)
    
    This cleans up the suspend Kconfig and removes the need to
    declare centrally which architectures support suspend. All
    architectures that currently support suspend are modified
    accordingly.
    
    Signed-off-by: Johannes Berg <johannes@sipsolutions.net>
    Acked-by: Russell King <rmk@arm.linux.org.uk>
    Acked-by: Paul Mackerras <paulus@samba.org>
    Acked-by: Ralf Baechle <ralf@linux-mips.org>
    Acked-by: Paul Mundt <lethal@linux-sh.org>
    Cc: Pavel Machek <pavel@suse.cz>
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Signed-off-by: Len Brown <len.brown@intel.com>

commit 801e4062fda6496fe9bee3e6915a2aa108f974e5
Author: Johannes Berg <johannes@sipsolutions.net>
Date:   Sat Dec 8 02:12:39 2007 +0100

    Hibernation: Clean up Kconfig (V2)
    
    This cleans up the hibernation Kconfig and removes the need to
    declare centrally which architectures support hibernation. All
    architectures that currently support hibernation are modified
    accordingly.
    
    Signed-off-by: Johannes Berg <johannes@sipsolutions.net>
    Acked-by: Paul Mackerras <paulus@samba.org>
    Cc: Pavel Machek <pavel@suse.cz>
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Signed-off-by: Len Brown <len.brown@intel.com>

commit 8f0e7d240554f71577e380783feeb264a90944c9
Author: Adrian Bunk <bunk@kernel.org>
Date:   Thu Dec 13 19:45:17 2007 +0100

    PCI: Kconfig help: don't refer to the PCI-HOWTO
    
    A HOWTO that hasn't been updated for half a dozen years no longer
    "contains valuable information about which PCI hardware does work under
    Linux and which doesn't".
    
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit aa7d93506cc26378be6964692cd0dd34cffaee25
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Fri Feb 1 17:45:14 2008 +0100

    latencytop: Change Kconfig dependency.
    
    Change latencytop Kconfig entry so it doesn't list the archictectures
    that support it. Instead introduce HAVE_LATENCY_SUPPORT which any
    architecture can set. Should reduce patch conflicts.
    
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Holger Wolf <wolf@linux.vnet.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit f757397097d0713c949af76dccabb65a2785782e
Author: Kevin Hilman <khilman@mvista.com>
Date:   Thu Jan 31 17:28:18 2008 -0800

    cpuidle: build fix for non-x86
    
    Convert cpu_idle_wait() to cpuidle_kick_cpus() macro which is
    SMP-only, and gives error on non supported CPU.
    
    Signed-off-by: Kevin Hilman <khilman@mvista.com>
    Acked-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
    Acked-by: Rafael J. Wysocki <rjw@sisk.pl>
    Signed-off-by: Len Brown <len.brown@intel.com>

commit edf884172e9828c6234b254208af04655855038d
Author: Avi Kivity <avi@qumranet.com>
Date:   Sun Dec 16 11:02:48 2007 +0200

    KVM: Move arch dependent files to new directory arch/x86/kvm/
    
    This paves the way for multiple architecture support.  Note that while
    ioapic.c could potentially be shared with ia64, it is also moved.
    
    Signed-off-by: Avi Kivity <avi@qumranet.com>

commit fb56dbb31c4738a3918db81fd24da732ce3b4ae6
Author: Avi Kivity <avi@qumranet.com>
Date:   Sun Dec 2 10:50:06 2007 +0200

    KVM: Export include/linux/kvm.h only if $ARCH actually supports KVM
    
    Currently, make headers_check barfs due to <asm/kvm.h>, which <linux/kvm.h>
    includes, not existing.  Rather than add a zillion <asm/kvm.h>s, export kvm.h
    only if the arch actually supports it.
    
    Signed-off-by: Avi Kivity <avi@qumranet.com>

commit 4716e79c9946044a53a65418cfba04836f6a5c36
Author: Huang, Ying <ying.huang@intel.com>
Date:   Wed Jan 30 13:33:44 2008 +0100

    x86: replace boot_ioremap() with enhanced bt_ioremap() - remove boot_ioremap()
    
    This patch replaces boot_ioremap invokation with bt_ioremap and
    removes the boot_ioremap implementation.
    
    Signed-off-by: Huang Ying <ying.huang@intel.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 5e3a77e9a9b7bfc1f69f51fe6d34aa649887980c
Author: Florian Fainelli <florian.fainelli@telecomint.eu>
Date:   Wed Jan 30 13:33:36 2008 +0100

    x86: add support for the RDC R-321x SoC
    
    This patch adds support for the RDC R-321x system-on-chip,
    also known as R-861x-(G). It uses the generic GPIO API and
    has support for the on-chip hardware watchdog.
    
    Build-fix from: Randy Dunlap <randy.dunlap@oracle.com>
    
    Signed-off-by: Florian Fainelli <florian.fainelli@telecomint.eu>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit a608295935d237bdbe95eefdba1e3fa40676df31
Author: Florian Fainelli <florian.fainelli@telecomint.eu>
Date:   Wed Jan 30 13:33:35 2008 +0100

    x86: add generic GPIO support to x86
    
    This patch adds the generic GPIO support to the x86
    architecture. We do the same as for MIPS, we let
    the machine override the gpio callbacks and provide
    defaults one in mach-generic.
    
    Signed-off-by: Florian Fainelli <florian.fainelli@telecomint.eu>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit dd5af90a7f3d79e04b7eace9a98644dbf2038f4d
Author: Mike Travis <travis@sgi.com>
Date:   Wed Jan 30 13:33:32 2008 +0100

    x86/non-x86: percpu, node ids, apic ids x86.git fixup
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 42d545c9a4c0d3faeab658a40165c3da2dda91b2
Author: Eduardo Pereira Habkost <ehabkost@redhat.com>
Date:   Wed Jan 30 13:33:32 2008 +0100

    x86: remove depends on X86_32 from PARAVIRT & PARAVIRT_GUEST
    
    With this, the paravirt_ops code can be enabled on x86_64 also.
    
    Each guest implementation (Xen, VMI, lguest) now depends on X86_32. The
    dependencies can be dropped for each one when they start to support
    x86_64.
    
    Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit e61bd94a36a9f2c394d75ebe3614fe0a612bcf2d
Author: Eduardo Pereira Habkost <ehabkost@redhat.com>
Date:   Wed Jan 30 13:33:32 2008 +0100

    x86: allow enabling PARAVIRT without any guest implementation
    
    This will allow people to enable the paravirt_ops code even when no
    guest support is enabled, for broader testing of the paravirt_ops code.
    
    Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit f8f76481bc2803aea03ff213c7e1405b53f7e488
Author: Bernhard Walle <bwalle@suse.de>
Date:   Wed Jan 30 13:33:31 2008 +0100

    rtc: use the IRQ callback interface in (old) RTC driver
    
    the previous patch in the old RTC driver.  It also removes the direct
    rtc_interrupt() call from arch/x86/kernel/hpetc.c so that there's finally no
    (code) dependency to CONFIG_RTC in arch/x86/kernel/hpet.c.
    
    Because of this, it's possible to compile the drivers/char/rtc.ko driver as
    module and still use the HPET emulation functionality.  This is also expressed
    in Kconfig.
    
    Signed-off-by: Bernhard Walle <bwalle@suse.de>
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Cc: David Brownell <david-b@pacbell.net>
    Cc: Andi Kleen <ak@suse.de>
    Cc: john stultz <johnstul@us.ibm.com>
    Cc: Robert Picco <Robert.Picco@hp.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 4323838215184f5a2f081e0d17b8d60731b03164
Author: travis@sgi.com <travis@sgi.com>
Date:   Wed Jan 30 13:33:25 2008 +0100

    x86: change size of node ids from u8 to s16
    
    Change the size of node ids for X86_64 from u8 to s16 to
    accomodate more than 32k nodes and allow for NUMA_NO_NODE
    (-1) to be sign extended to int.
    
    Cc: David Rientjes <rientjes@google.com>
    Cc: Yinghai Lu <yhlu.kernel@gmail.com>
    Cc: Eric Dumazet <dada1@cosmosbay.com>
    Signed-off-by: Mike Travis <travis@sgi.com>
    Reviewed-by: Christoph Lameter <clameter@sgi.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 409a7b859ddb6e0a615d9f3ccddedaec218c56b6
Author: Mel Gorman <mel@csn.ul.ie>
Date:   Wed Jan 30 13:33:25 2008 +0100

    x86: relax restrictions on setting CONFIG_NUMA on x86, #2
    
    The FLATMEM memory model references a global mem_map and max_mapnr. This
    is incompatible with how memory models used for NUMA view the world.
    Builds fail if FLATMEM && NUMA are set on x86. This patch forbids that
    combination of config items. This is consistent with x86_64
    enforcements.
    
    Signed-off-by: Mel Gorman <mel@csn.ul.ie>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit b32ef636a59aad12f9f9b5dc34c93222842c58ba
Author: travis@sgi.com <travis@sgi.com>
Date:   Wed Jan 30 13:32:51 2008 +0100

    percpu: use a kconfig variable to signal arch specific percpu setup
    
    The use of the __GENERIC_PERCPU is a bit problematic since arches
    may want to run their own percpu setup while using the generic
    percpu definitions. Replace it through a kconfig variable.
    
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Andi Kleen <ak@suse.de>
    Signed-off-by: Christoph Lameter <clameter@sgi.com>
    Signed-off-by: Mike Travis <travis@sgi.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit a6b68076fd5d7de04e6847ed9d7d212e7dd6beb5
Author: Andi Kleen <ak@suse.de>
Date:   Wed Jan 30 13:32:49 2008 +0100

    x86: compile apm and voyager module only when selected in Kconfig
    
    Previously the complete files were #ifdef'ed, but now handle that in the
    Makefile.
    
    May save a minor bit of compilation time.
    
    [ Stephen Rothwell <sfr@canb.auug.org.au>: build dependency fix ]
    Signed-off-by: Andi Kleen <ak@suse.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 1c858087cd49d36b2f25b4fc2a47e39ac6cf09df
Author: Adrian Bunk <bunk@kernel.org>
Date:   Wed Jan 30 13:32:32 2008 +0100

    x86: default to PCI=y
    
    PCI is one of the few hardware stuff where defaulting to y makes sense.
    
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 6b0c3d44d33e9429dbc568dc7fd3aee3774c5707
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Wed Jan 30 13:32:27 2008 +0100

    x86: unify arch/x86/kernel/Makefile(s)
    
    Combine the 32 and 64 bit specific Makefiles in one file.
    While doing so link order was (almost) preserved on 32 bit
    but on 64 bit link order changed a lot.
    
    Patch was checked with defconfig + allyesconfig builds.
    The same .o files were linked in these configurations.
    
    To keep readability of the Makefiles a few Kconfig
    symbols was added/modified and it was checked that
    they were not used anywhere else.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 8b2cb7a8f531d6ca72a8aff873b9bb1c6b3122ba
Author: Huang, Ying <ying.huang@intel.com>
Date:   Wed Jan 30 13:32:11 2008 +0100

    x86: 32-bit EFI runtime service support: fixes in sync with 64-bit support
    
    support according to fixes of x86_64 support.
    
    - Delete efi_rt_lock because it is used during system early boot,
      before SMP is initialized.
    
    - Change local_flush_tlb() to __flush_tlb_all() to flush global page
      mapping.
    
    - Clean up includes.
    
    - Revise Kconfig description.
    
    - Enable noefi kernel parameter on i386.
    
    Signed-off-by: Huang Ying <ying.huang@intel.com>
    Cc: Andi Kleen <ak@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit a97f52e67890fda6b373c1c1895ff1c1c69b36c8
Author: Roland McGrath <roland@redhat.com>
Date:   Wed Jan 30 13:31:55 2008 +0100

    x86: compat_binfmt_elf
    
    This switches x86-64's 32-bit ELF support to use the shared
    fs/compat_binfmt_elf.c code instead of our own ia32_binfmt.c.
    
    Signed-off-by: Roland McGrath <roland@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 314cdbefd1fd0a7acf3780e9628465b77ea6a836
Author: Nick Piggin <npiggin@suse.de>
Date:   Wed Jan 30 13:31:21 2008 +0100

    x86: FIFO ticket spinlocks
    
    Introduce ticket lock spinlocks for x86 which are FIFO. The implementation
    is described in the comments. The straight-line lock/unlock instruction
    sequence is slightly slower than the dec based locks on modern x86 CPUs,
    however the difference is quite small on Core2 and Opteron when working out of
    cache, and becomes almost insignificant even on P4 when the lock misses cache.
    trylock is more significantly slower, but they are relatively rare.
    
    On an 8 core (2 socket) Opteron, spinlock unfairness is extremely noticable,
    with a userspace test having a difference of up to 2x runtime per thread, and
    some threads are starved or "unfairly" granted the lock up to 1 000 000 (!)
    times. After this patch, all threads appear to finish at exactly the same
    time.
    
    The memory ordering of the lock does conform to x86 standards, and the
    implementation has been reviewed by Intel and AMD engineers.
    
    The algorithm also tells us how many CPUs are contending the lock, so
    lockbreak becomes trivial and we no longer have to waste 4 bytes per
    spinlock for it.
    
    After this, we can no longer spin on any locks with preempt enabled
    and cannot reenable interrupts when spinning on an irq safe lock, because
    at that point we have already taken a ticket and the would deadlock if
    the same CPU tries to take the lock again.  These are questionable anyway:
    if the lock happens to be called under a preempt or interrupt disabled section,
    then it will just have the same latency problems. The real fix is to keep
    critical sections short, and ensure locks are reasonably fair (which this
    patch does).
    
    Signed-off-by: Nick Piggin <npiggin@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

commit 95c354fe9f7d6decc08a92aa26eb233ecc2155bf
Author: Nick Piggin <npiggin@suse.de>
Date:   Wed Jan 30 13:31:20 2008 +0100

    spinlock: lockbreak cleanup
    
    The break_lock data structure and code for spinlocks is quite nasty.
    Not only does it double the size of a spinlock but it changes locking to
    a potentially less optimal trylock.
    
    Put all of that under CONFIG_GENERIC_LOCKBREAK, and introduce a
    __raw_spin_is_contended that uses the lock data itself to determine whether
    there are waiters on the lock, to be used if CONFIG_GENERIC_LOCKBREAK is
    not set.
    
    Rename need_lockbreak to spin_needbreak, make it use spin_is_contended to
    decouple it from the spinlock implementation, and make it typesafe (rwlocks
    do not have any need_lockbreak sites -- why do they even get bloated up
    with that break_lock then?).
    
    Signed-off-by: Nick Piggin <npiggin@suse.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 5b83683f32b113d07edfb67a33ce389fc624423d
Author: Huang, Ying <ying.huang@intel.com>
Date:   Wed Jan 30 13:31:19 2008 +0100

    x86: EFI runtime service support
    
    This patch adds basic runtime services support for EFI x86_64 system.  The
    main file of the patch is the addition of efi_64.c for x86_64.  This file is
    modeled after the EFI IA32 avatar.  EFI runtime services initialization are
    implemented in efi_64.c.  Some x86_64 specifics are worth noting here.  On
    x86_64, parameters passed to EFI firmware services need to follow the EFI
    calling convention.  For this purpose, a set of functions named efi_call<x>
    (<x> is the number of parameters) are implemented.  EFI function calls are
    wrapped before calling the firmware service.  The duplicated code between
    efi_32.c and efi_64.c is placed in efi.c to remove them from efi_32.c.
    
    Signed-off-by: Chandramouli Narayanan <mouli@linux.intel.com>
    Signed-off-by: Huang Ying <ying.huang@intel.com>
    Cc: Andi Kleen <ak@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 3c2362e629cdc16ea7472c5f14b6c2076aba58db
Author: Harvey Harrison <harvey.harrison@gmail.com>
Date:   Wed Jan 30 13:31:03 2008 +0100

    x86: use def_bool where possible
    
    Change occurances of:
    	bool
    	default X
    
    to:
    	def_bool X
    
    Change ocurances of:
    	bool "Foo"
    	default X
    
    to:
    	def_bool X
    	prompt "Foo"
    
    Shows no difference in generated config for allmodconfig/allyesconfig.
    
    Signed-off-by: Harvey Harrison <harvey.harrison@gmail.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit b263295dbffd33b0fbff670720fa178c30e3392a
Author: Christoph Lameter <clameter@sgi.com>
Date:   Wed Jan 30 13:30:47 2008 +0100

    x86: 64-bit, make sparsemem vmemmap the only memory model
    
    Use sparsemem as the only memory model for UP, SMP and NUMA.  Measurements
    indicate that DISCONTIGMEM has a higher overhead than sparsemem.  And
    FLATMEMs benefits are minimal.  So I think its best to simply standardize
    on sparsemem.
    
    Results of page allocator tests (test can be had via git from slab git
    tree branch tests)
    
    Measurements in cycle counts. 1000 allocations were performed and then the
    average cycle count was calculated.
    
    Order	FlatMem	Discontig	SparseMem
    0	  639	  665		  641
    1	  567	  647		  593
    2	  679	  774		  692
    3	  763	  967		  781
    4	  961	 1501		  962
    5	 1356	 2344		 1392
    6	 2224	 3982		 2336
    7	 4869	 7225		 5074
    8	12500	14048		12732
    9	27926	28223		28165
    10	58578	58714		58682
    
    (Note that FlatMem is an SMP config and the rest NUMA configurations)
    
    Memory use:
    
    SMP Sparsemem
    -------------
    
    Kernel size:
    
       text    data     bss     dec     hex filename
    3849268  397739 1264856 5511863  541ab7 vmlinux
    
                 total       used       free     shared    buffers     cached
    Mem:       8242252      41164    8201088          0        352      11512
    -/+ buffers/cache:      29300    8212952
    Swap:      9775512          0    9775512
    
    SMP Flatmem
    -----------
    
    Kernel size:
    
       text    data     bss     dec     hex filename
    3844612  397739 1264536 5506887  540747 vmlinux
    
    So 4.5k growth in text size vs. FLATMEM.
    
                 total       used       free     shared    buffers     cached
    Mem:       8244052      40544    8203508          0        352      11484
    -/+ buffers/cache:      28708    8215344
    
    2k growth in overall memory use after boot.
    
    NUMA discontig:
    
       text    data     bss     dec     hex filename
    3888124  470659 1276504 5635287  55fcd7 vmlinux
    
                 total       used       free     shared    buffers     cached
    Mem:       8256256      56908    8199348          0        352      11496
    -/+ buffers/cache:      45060    8211196
    Swap:      9775512          0    9775512
    
    NUMA sparse:
    
       text    data     bss     dec     hex filename
    3896428  470659 1276824 5643911  561e87 vmlinux
    
    8k text growth. Given that we fully inline virt_to_page and friends now
    that is rather good.
    
                 total       used       free     shared    buffers     cached
    Mem:       8264720      57240    8207480          0        352      11516
    -/+ buffers/cache:      45372    8219348
    Swap:      9775512          0    9775512
    
    The total available memory is increased by 8k.
    
    This patch makes sparsemem the default and removes discontig and
    flatmem support from x86.
    
    [ akpm@linux-foundation.org: allnoconfig build fix ]
    
    Acked-by: Andi Kleen <ak@suse.de>
    Signed-off-by: Christoph Lameter <clameter@sgi.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit af65d64845a90c8f2fc90b97e2148ff74672e979
Author: Roland McGrath <roland@redhat.com>
Date:   Wed Jan 30 13:30:43 2008 +0100

    x86 vDSO: consolidate vdso32
    
    This makes x86_64's ia32 emulation support share the sources used in the
    32-bit kernel for the 32-bit vDSO and much of its setup code.
    
    The 32-bit vDSO mapping now behaves the same on x86_64 as on native 32-bit.
    The abi.syscall32 sysctl on x86_64 now takes the same values that
    vm.vdso_enabled takes on the 32-bit kernel.  That is, 1 means a randomized
    vDSO location, 2 means the fixed old address.  The CONFIG_COMPAT_VDSO
    option is now available to make this the default setting, the same meaning
    it has for the 32-bit kernel.  (This does not affect the 64-bit vDSO.)
    
    The argument vdso32=[012] can be used on both 32-bit and 64-bit kernels to
    set this paramter at boot time.  The vdso=[012] argument still does this
    same thing on the 32-bit kernel.
    
    Signed-off-by: Roland McGrath <roland@redhat.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 3743d33edf4e49376384822c57c4ee5cdf2d32f8
Author: Linus Torvalds <torvalds@woody.linux-foundation.org>
Date:   Thu Dec 6 09:41:12 2007 -0800

    Tiny clean-up of OPROFILE/KPROBES configuration
    
    Make the Kconfig.instrumentation file a bit easier on the eyes, and use
    the new ARCH_SUPPORTS_OPROFILE for x86[-64].
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit ee0011a798ba0e9134506830c58323f2bfcd2443
Author: Adrian Bunk <bunk@kernel.org>
Date:   Tue Dec 4 17:19:07 2007 +0100

    x86: revert CONFIG_X86_HT semantics change
    
    The recent Kconfig changes in x86 resulted in CONFIG_X86_HT no longer
    being set if (X86_32 && MK8).
    
    After grep'ing through the tree I think the problem is that different
    places have different assumptions about the semantics of CONFIG_X86_HT,
    either:
    
    - hyperthreading or
    - multicore
    
    This should be sorted out properly, but until then we should keep the
    2.6.23 status quo.
    
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 6840999b192b1b57d713ddee3761c457a2779036
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sat Nov 17 15:37:31 2007 +0100

    x86: simplify "make ARCH=x86" and fix kconfig all.config
    
    Simplify "make ARCH=x86" and fix kconfig so we again can set 64BIT in
    all.config.
    
    For a fix the diffstat is nice:
     6 files changed, 3 insertions(+), 36 deletions(-)
    
    The patch reverts these commits:
     - 0f855aa64b3f63d35a891510cf7db932a435c116 ("kconfig: add helper to set
       config symbol from environment variable")
     - 2a113281f5cd2febbab21a93c8943f8d3eece4d3 ("kconfig: use $K64BIT to
       set 64BIT with all*config targets")
    
    Roman Zippel pointed out that kconfig supported string compares so
    the additional complexity introduced by the above two patches were
    not needed.
    
    With this patch we have following behaviour:
    
      # make {allno,allyes,allmod,rand}config [ARCH=...]
      option \ host arch      | 32bit         | 64bit
      =====================================================
      ./.                     | 32bit         | 64bit
      ARCH=x86                | 32bit         | 32bit
      ARCH=i386               | 32bit         | 32bit
      ARCH=x86_64             | 64bit         | 64bit
    
    The general rule are that ARCH= and native architecture takes
    precedence over the configuration.
    
    So make ARCH=i386 [whatever] will always build a 32-bit kernel
    no matter what the configuration says.  The configuration will
    be updated to 32-bit if it was configured to 64-bit and the
    other way around.
    
    This behaviour is consistent with previous behaviour so no
    suprises here.
    
    make ARCH=x86 will per default result in a 32-bit kernel but as
    the only ARCH= value x86 allow the user to select between 32-bit
    and 64-bit using menuconfig.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: Roman Zippel <zippel@linux-m68k.org>
    Cc: Andreas Herrmann <aherrman@arcor.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit daa93fab824f2b8c35bd11670c7fab2f32b2de5f
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Mon Nov 12 20:54:30 2007 +0100

    x86: enable "make ARCH=x86"
    
    After unification of the Kconfig files and
    introducing K64BIT support in kconfig
    it required only trivial changes to enable
    "make ARCH=x86".
    
    With this patch you can build for x86_64 in several ways:
    1) make ARCH=x86_64
    2) make ARCH=x86 K64BIT=y
    3) make ARCH=x86 menuconfig
       => select 64-bit
    
    Likewise for i386 with the addition that
    i386 is default is you say ARCH=x86.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>

commit 506f1d07b310815d11527d3360b09d79d0bd59f1
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Fri Nov 9 21:56:54 2007 +0100

    x86: move the rest of the menu's to Kconfig
    
    With this patch we have all the Kconfig file shared
    between i386 and x86_64.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>

commit 8d5fffb928cd86a70823f66f8335fa41709ec109
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Tue Nov 6 23:30:30 2007 +0100

    x86: move all simple arch settings to Kconfig
    
    Most of the arch settings were equal so combine them
    in the first part of Kconfig.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>

commit bc0120fdb4798421a577630bf5cbd77fc2d6661d
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Tue Nov 6 23:10:39 2007 +0100

    x86: copy x86_64 specific Kconfig symbols to Kconfig.i386
    
    No functional changes.
    A prepatory step towards full unification.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>

commit 1032c0ba9da5c5b53173ad2dcf8b2a2da78f8b17
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Tue Nov 6 21:35:08 2007 +0100

    x86: arch/x86/Kconfig.cpu unification
    
    Move all CPU definitions to Kconfig.cpu
    Always define X86_MINIMUM_CPU_FAMILY and do the
    obvious code cleanup in boot/cpucheck.c
    
    Comments from: Adrian Bunk <bunk@kernel.org> incorporated.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: Adrian Bunk <bunk@kernel.org>
    Cc: Brian Gerst <bgerst@didntduck.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>

commit e279b6c1d329e50b766bce96aacc197eae8a053b
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Tue Nov 6 20:41:05 2007 +0100

    x86: start unification of arch/x86/Kconfig.*
    
    This step introduces the file arch/x86/Kconfig
    which contains all the menu's from "Power Management"
    and below.
    
    The main part of the new Kconfig file is shared
    and the remaining i386/x86_64 specific symbols
    are covered by dependencies.
    
    A x86_64 allmodconfig build did not show any differences.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
